[
{"url": "https://codeforces.com//problemset/problem/1995/E2", "name": "Let Me Teach You a Lesson (Hard Version)", "tags": ["2-sat", "bitmasks", "data structures", "dp", "graphs", "matrices", "two pointers"], "problem_rating": [null], "solved_by": "x77"},
{"url": "https://codeforces.com//problemset/problem/1995/E1", "name": "Let Me Teach You a Lesson (Easy Version)", "tags": ["2-sat", "data structures", "dp", "two pointers"], "problem_rating": [null], "solved_by": "x126"},
{"url": "https://codeforces.com//problemset/problem/1995/D", "name": "Cases", "tags": ["bitmasks", "dp", "strings"], "problem_rating": [null], "solved_by": "x921"},
{"url": "https://codeforces.com//problemset/problem/1995/C", "name": "Squaring", "tags": ["brute force", "constructive algorithms", "greedy", "implementation", "math", "number theory"], "problem_rating": [null], "solved_by": "x4472"},
{"url": "https://codeforces.com//problemset/problem/1995/B2", "name": "Bouquet (Hard Version)", "tags": ["binary search", "data structures", "greedy", "math", "sortings", "two pointers"], "problem_rating": [null], "solved_by": "x5445"},
{"url": "https://codeforces.com//problemset/problem/1995/B1", "name": "Bouquet (Easy Version)", "tags": ["binary search", "brute force", "greedy", "sortings", "two pointers"], "problem_rating": [null], "solved_by": "x12443"},
{"url": "https://codeforces.com//problemset/problem/1995/A", "name": "Diagonals", "tags": ["brute force", "greedy", "implementation", "math"], "problem_rating": [null], "solved_by": "x17499"},
{"url": "https://codeforces.com//problemset/problem/1994/H", "name": "Fortnite", "tags": ["combinatorics", "constructive algorithms", "games", "greedy", "hashing", "interactive", "math", "number theory", "strings"], "problem_rating": [null], "solved_by": "x87"},
{"url": "https://codeforces.com//problemset/problem/1994/G", "name": "Minecraft", "tags": ["bitmasks", "brute force", "dp", "math"], "problem_rating": [null], "solved_by": "x591"},
{"url": "https://codeforces.com//problemset/problem/1994/F", "name": "Stardew Valley", "tags": ["constructive algorithms", "dfs and similar", "graphs", "trees"], "problem_rating": [null], "solved_by": "x801"},
{"url": "https://codeforces.com//problemset/problem/1994/E", "name": "Wooden Game", "tags": ["bitmasks", "greedy", "math", "trees"], "problem_rating": [null], "solved_by": "x2967"},
{"url": "https://codeforces.com//problemset/problem/1994/D", "name": "Funny Game", "tags": ["constructive algorithms", "dsu", "graphs", "greedy", "math", "number theory", "trees"], "problem_rating": [null], "solved_by": "x3916"},
{"url": "https://codeforces.com//problemset/problem/1994/C", "name": "Hungry Games", "tags": ["binary search", "dp", "two pointers"], "problem_rating": [null], "solved_by": "x7753"},
{"url": "https://codeforces.com//problemset/problem/1994/B", "name": "Fun Game", "tags": ["bitmasks", "constructive algorithms", "greedy", "math"], "problem_rating": [null], "solved_by": "x12991"},
{"url": "https://codeforces.com//problemset/problem/1994/A", "name": "Diverse Game", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": [null], "solved_by": "x16545"},
{"url": "https://codeforces.com//problemset/problem/1992/G", "name": "Ultra-Meow", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2000", "solved_by": "x2170"},
{"url": "https://codeforces.com//problemset/problem/1992/F", "name": "Valuable Cards", "tags": ["brute force", "dp", "greedy", "number theory", "two pointers"], "problem_rating": "1900", "solved_by": "x4485"},
{"url": "https://codeforces.com//problemset/problem/1992/E", "name": "Novice's Mistake", "tags": ["brute force", "constructive algorithms", "implementation", "math", "strings"], "problem_rating": "1700", "solved_by": "x7499"},
{"url": "https://codeforces.com//problemset/problem/1992/D", "name": "Test of Love", "tags": ["dp", "greedy", "implementation"], "problem_rating": "1200", "solved_by": "x16935"},
{"url": "https://codeforces.com//problemset/problem/1992/C", "name": "Gorilla and Permutation", "tags": ["constructive algorithms", "math"], "problem_rating": "900", "solved_by": "x24855"},
{"url": "https://codeforces.com//problemset/problem/1992/B", "name": "Angry Monk", "tags": ["greedy", "math", "sortings"], "problem_rating": "800", "solved_by": "x29125"},
{"url": "https://codeforces.com//problemset/problem/1992/A", "name": "Only Pluses", "tags": ["brute force", "constructive algorithms", "greedy", "math", "sortings"], "problem_rating": "800", "solved_by": "x34287"},
{"url": "https://codeforces.com//problemset/problem/1990/F", "name": "Polygonal Segments", "tags": ["data structures", "divide and conquer", "greedy", "two pointers"], "problem_rating": [null], "solved_by": "x131"},
{"url": "https://codeforces.com//problemset/problem/1990/E2", "name": "Catch the Mole(Hard Version)", "tags": ["binary search", "data structures", "dfs and similar", "interactive", "trees"], "problem_rating": [null], "solved_by": "x562"},
{"url": "https://codeforces.com//problemset/problem/1990/E1", "name": "Catch the Mole(Easy Version)", "tags": ["binary search", "data structures", "dfs and similar", "interactive", "trees"], "problem_rating": [null], "solved_by": "x612"},
{"url": "https://codeforces.com//problemset/problem/1990/D", "name": "Grid Puzzle", "tags": ["bitmasks", "dp", "greedy", "implementation", "math"], "problem_rating": [null], "solved_by": "x4100"},
{"url": "https://codeforces.com//problemset/problem/1990/C", "name": "Mad MAD Sum", "tags": ["brute force", "greedy", "math"], "problem_rating": [null], "solved_by": "x8038"},
{"url": "https://codeforces.com//problemset/problem/1990/B", "name": "Array Craft", "tags": ["constructive algorithms", "greedy"], "problem_rating": [null], "solved_by": "x12346"},
{"url": "https://codeforces.com//problemset/problem/1990/A", "name": "Submission Bait", "tags": ["brute force", "games", "greedy", "sortings"], "problem_rating": [null], "solved_by": "x16929"},
{"url": "https://codeforces.com//problemset/problem/1989/F", "name": "Simultaneous Coloring", "tags": ["dfs and similar", "divide and conquer", "graphs"], "problem_rating": "3000", "solved_by": "x308"},
{"url": "https://codeforces.com//problemset/problem/1989/E", "name": "Distance to Different", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2300", "solved_by": "x1537"},
{"url": "https://codeforces.com//problemset/problem/1989/D", "name": "Smithing Skill", "tags": ["brute force", "data structures", "dp", "greedy", "math", "sortings", "two pointers"], "problem_rating": "1900", "solved_by": "x4932"},
{"url": "https://codeforces.com//problemset/problem/1989/C", "name": "Two Movies", "tags": ["greedy", "math"], "problem_rating": "1400", "solved_by": "x15468"},
{"url": "https://codeforces.com//problemset/problem/1989/B", "name": "Substring and Subsequence", "tags": ["brute force", "greedy", "strings"], "problem_rating": "1200", "solved_by": "x17403"},
{"url": "https://codeforces.com//problemset/problem/1989/A", "name": "Catch the Coin", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x23406"},
{"url": "https://codeforces.com//problemset/problem/1988/F", "name": "Heartbeat", "tags": ["combinatorics", "dp", "fft", "math"], "problem_rating": "3000", "solved_by": "x94"},
{"url": "https://codeforces.com//problemset/problem/1988/E", "name": "Range Minimum Sum", "tags": ["binary search", "brute force", "data structures", "divide and conquer", "implementation"], "problem_rating": "2300", "solved_by": "x1009"},
{"url": "https://codeforces.com//problemset/problem/1988/D", "name": "The Omnipotent Monster Killer", "tags": ["brute force", "dfs and similar", "dp", "trees"], "problem_rating": "2000", "solved_by": "x3820"},
{"url": "https://codeforces.com//problemset/problem/1988/C", "name": "Increasing Sequence with Fixed OR", "tags": ["bitmasks", "constructive algorithms", "greedy"], "problem_rating": "1300", "solved_by": "x13521"},
{"url": "https://codeforces.com//problemset/problem/1988/B", "name": "Make Majority", "tags": ["greedy", "implementation"], "problem_rating": "900", "solved_by": "x18832"},
{"url": "https://codeforces.com//problemset/problem/1988/A", "name": "Split the Multiset", "tags": ["brute force", "greedy", "implementation", "math"], "problem_rating": "900", "solved_by": "x19346"},
{"url": "https://codeforces.com//problemset/problem/1987/H", "name": "Fumo Temple", "tags": ["interactive"], "problem_rating": "3500", "solved_by": "x68"},
{"url": "https://codeforces.com//problemset/problem/1987/G2", "name": "Spinning Round (Hard Version)", "tags": ["divide and conquer", "dp", "trees"], "problem_rating": "3500", "solved_by": "x82"},
{"url": "https://codeforces.com//problemset/problem/1987/G1", "name": "Spinning Round (Easy Version)", "tags": ["divide and conquer", "dp", "trees"], "problem_rating": "2900", "solved_by": "x197"},
{"url": "https://codeforces.com//problemset/problem/1987/F2", "name": "Interesting Problem (Hard Version)", "tags": ["dp"], "problem_rating": "2600", "solved_by": "x826"},
{"url": "https://codeforces.com//problemset/problem/1987/F1", "name": "Interesting Problem (Easy Version)", "tags": ["dp"], "problem_rating": "2500", "solved_by": "x940"},
{"url": "https://codeforces.com//problemset/problem/1987/E", "name": "Wonderful Tree!", "tags": ["brute force", "data structures", "dfs and similar", "dsu", "greedy", "trees"], "problem_rating": "2000", "solved_by": "x2750"},
{"url": "https://codeforces.com//problemset/problem/1987/D", "name": "World is Mine", "tags": ["dp", "games"], "problem_rating": "1800", "solved_by": "x5959"},
{"url": "https://codeforces.com//problemset/problem/1987/C", "name": "Basil's Garden", "tags": ["dp", "greedy"], "problem_rating": "1200", "solved_by": "x15000"},
{"url": "https://codeforces.com//problemset/problem/1987/B", "name": "K-Sort", "tags": ["greedy"], "problem_rating": "1000", "solved_by": "x17714"},
{"url": "https://codeforces.com//problemset/problem/1987/A", "name": "Upload More RAM", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x22301"},
{"url": "https://codeforces.com//problemset/problem/1986/G2", "name": "Permutation Problem (Hard Version)", "tags": ["brute force", "data structures", "hashing", "math", "number theory"], "problem_rating": "2500", "solved_by": "x858"},
{"url": "https://codeforces.com//problemset/problem/1986/G1", "name": "Permutation Problem (Simple Version)", "tags": ["binary search", "brute force", "combinatorics", "data structures", "math", "number theory"], "problem_rating": "2200", "solved_by": "x1214"},
{"url": "https://codeforces.com//problemset/problem/1986/F", "name": "Non-academic Problem", "tags": ["dfs and similar", "graphs", "trees"], "problem_rating": "1900", "solved_by": "x3708"},
{"url": "https://codeforces.com//problemset/problem/1986/E", "name": "Beautiful Array", "tags": ["greedy", "math", "number theory", "sortings"], "problem_rating": "1700", "solved_by": "x7455"},
{"url": "https://codeforces.com//problemset/problem/1986/D", "name": "Mathematical Problem", "tags": ["brute force", "dp", "greedy", "implementation", "math", "two pointers"], "problem_rating": "1400", "solved_by": "x13352"},
{"url": "https://codeforces.com//problemset/problem/1986/C", "name": "Update Queries", "tags": ["data structures", "greedy", "sortings"], "problem_rating": "1100", "solved_by": "x20790"},
{"url": "https://codeforces.com//problemset/problem/1986/B", "name": "Matrix Stabilization", "tags": ["brute force", "data structures", "greedy", "sortings"], "problem_rating": "1000", "solved_by": "x24156"},
{"url": "https://codeforces.com//problemset/problem/1986/A", "name": "X Axis", "tags": ["brute force", "geometry", "math", "sortings"], "problem_rating": "800", "solved_by": "x36103"},
{"url": "https://codeforces.com//problemset/problem/1985/H2", "name": "Maximize the Largest Component (Hard Version)", "tags": ["data structures", "dfs and similar", "dp", "dsu", "implementation"], "problem_rating": "2200", "solved_by": "x1277"},
{"url": "https://codeforces.com//problemset/problem/1985/H1", "name": "Maximize the Largest Component (Easy Version)", "tags": ["brute force", "data structures", "dfs and similar", "dsu", "graphs", "implementation"], "problem_rating": "1700", "solved_by": "x4687"},
{"url": "https://codeforces.com//problemset/problem/1985/G", "name": "D-Function", "tags": ["combinatorics", "math", "number theory"], "problem_rating": "1600", "solved_by": "x7880"},
{"url": "https://codeforces.com//problemset/problem/1985/F", "name": "Final Boss", "tags": ["binary search", "data structures"], "problem_rating": "1500", "solved_by": "x12991"},
{"url": "https://codeforces.com//problemset/problem/1985/E", "name": "Secret Box", "tags": ["brute force", "combinatorics", "math"], "problem_rating": "1200", "solved_by": "x17646"},
{"url": "https://codeforces.com//problemset/problem/1985/D", "name": "Manhattan Circle", "tags": ["implementation", "math"], "problem_rating": "900", "solved_by": "x30719"},
{"url": "https://codeforces.com//problemset/problem/1985/C", "name": "Good Prefixes", "tags": ["greedy"], "problem_rating": "1000", "solved_by": "x28306"},
{"url": "https://codeforces.com//problemset/problem/1985/B", "name": "Maximum Multiple Sum", "tags": ["brute force", "math", "number theory"], "problem_rating": "800", "solved_by": "x40330"},
{"url": "https://codeforces.com//problemset/problem/1985/A", "name": "Creating Words", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x45116"},
{"url": "https://codeforces.com//problemset/problem/1984/H", "name": "Tower Capturing", "tags": ["combinatorics", "dp", "geometry"], "problem_rating": "3300", "solved_by": "x143"},
{"url": "https://codeforces.com//problemset/problem/1984/G", "name": "Magic Trick II", "tags": ["constructive algorithms", "implementation", "sortings"], "problem_rating": "3200", "solved_by": "x201"},
{"url": "https://codeforces.com//problemset/problem/1984/F", "name": "Reconstruction", "tags": ["brute force", "dp", "math"], "problem_rating": "2500", "solved_by": "x802"},
{"url": "https://codeforces.com//problemset/problem/1984/E", "name": "Shuffle", "tags": ["dp", "greedy", "trees"], "problem_rating": "2400", "solved_by": "x1224"},
{"url": "https://codeforces.com//problemset/problem/1984/D", "name": "''a'' String Problem", "tags": ["brute force", "hashing", "implementation", "math", "string suffix structures", "strings"], "problem_rating": "2000", "solved_by": "x2859"},
{"url": "https://codeforces.com//problemset/problem/1984/C2", "name": "Magnitude (Hard Version)", "tags": ["combinatorics", "dp", "greedy", "math"], "problem_rating": "1700", "solved_by": "x6496"},
{"url": "https://codeforces.com//problemset/problem/1984/C1", "name": "Magnitude (Easy Version)", "tags": ["dp", "greedy", "math"], "problem_rating": "1300", "solved_by": "x14576"},
{"url": "https://codeforces.com//problemset/problem/1984/B", "name": "Large Addition", "tags": ["implementation", "math"], "problem_rating": "1100", "solved_by": "x16609"},
{"url": "https://codeforces.com//problemset/problem/1984/A", "name": "Strange Splitting", "tags": ["constructive algorithms"], "problem_rating": "800", "solved_by": "x19580"},
{"url": "https://codeforces.com//problemset/problem/1983/G", "name": "Your Loss", "tags": ["bitmasks", "brute force", "dp", "trees"], "problem_rating": "3000", "solved_by": "x164"},
{"url": "https://codeforces.com//problemset/problem/1983/F", "name": "array-value", "tags": ["binary search", "bitmasks", "data structures", "greedy", "two pointers"], "problem_rating": "2500", "solved_by": "x947"},
{"url": "https://codeforces.com//problemset/problem/1983/E", "name": "I Love Balls", "tags": ["combinatorics", "math", "probabilities"], "problem_rating": "2300", "solved_by": "x1676"},
{"url": "https://codeforces.com//problemset/problem/1983/D", "name": "Swap Dilemma", "tags": ["constructive algorithms", "data structures", "divide and conquer", "greedy", "math", "sortings"], "problem_rating": "1700", "solved_by": "x7015"},
{"url": "https://codeforces.com//problemset/problem/1983/C", "name": "Have Your Cake and Eat It Too", "tags": ["binary search", "brute force", "greedy", "implementation"], "problem_rating": "1400", "solved_by": "x10807"},
{"url": "https://codeforces.com//problemset/problem/1983/B", "name": "Corner Twist", "tags": ["constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "1200", "solved_by": "x14351"},
{"url": "https://codeforces.com//problemset/problem/1983/A", "name": "Array Divisibility", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x23354"},
{"url": "https://codeforces.com//problemset/problem/1982/F", "name": "Sorting Problem Again", "tags": ["binary search", "data structures", "sortings"], "problem_rating": "2600", "solved_by": "x794"},
{"url": "https://codeforces.com//problemset/problem/1982/E", "name": "Number of k-good subarrays", "tags": ["bitmasks", "brute force", "combinatorics", "divide and conquer", "dp", "math", "meet-in-the-middle"], "problem_rating": "2300", "solved_by": "x1348"},
{"url": "https://codeforces.com//problemset/problem/1982/D", "name": "Beauty of the mountains", "tags": ["brute force", "data structures", "implementation", "math", "number theory"], "problem_rating": "1700", "solved_by": "x6157"},
{"url": "https://codeforces.com//problemset/problem/1982/C", "name": "Boring Day", "tags": ["binary search", "data structures", "dp", "greedy", "two pointers"], "problem_rating": "1200", "solved_by": "x15167"},
{"url": "https://codeforces.com//problemset/problem/1982/B", "name": "Collatz Conjecture", "tags": ["brute force", "implementation", "math", "number theory"], "problem_rating": "1200", "solved_by": "x15112"},
{"url": "https://codeforces.com//problemset/problem/1982/A", "name": "Soccer", "tags": ["greedy", "implementation", "math", "sortings"], "problem_rating": "800", "solved_by": "x22888"},
{"url": "https://codeforces.com//problemset/problem/1981/F", "name": "Turtle and Paths on a Tree", "tags": ["data structures", "dp", "trees"], "problem_rating": "3000", "solved_by": "x211"},
{"url": "https://codeforces.com//problemset/problem/1981/E", "name": "Turtle and Intersected Segments", "tags": ["data structures", "dsu", "graphs", "greedy"], "problem_rating": "2600", "solved_by": "x707"},
{"url": "https://codeforces.com//problemset/problem/1981/D", "name": "Turtle and Multiplication", "tags": ["constructive algorithms", "dfs and similar", "graphs", "number theory"], "problem_rating": "2400", "solved_by": "x1368"},
{"url": "https://codeforces.com//problemset/problem/1981/C", "name": "Turtle and an Incomplete Sequence", "tags": ["bitmasks", "brute force", "constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "1800", "solved_by": "x4588"},
{"url": "https://codeforces.com//problemset/problem/1981/B", "name": "Turtle and an Infinite Sequence", "tags": ["bitmasks", "math"], "problem_rating": "1300", "solved_by": "x12321"},
{"url": "https://codeforces.com//problemset/problem/1981/A", "name": "Turtle and Piggy Are Playing a Game", "tags": ["brute force", "greedy", "math"], "problem_rating": "800", "solved_by": "x20665"},
{"url": "https://codeforces.com//problemset/problem/1980/G", "name": "Yasya and the Mysterious Tree", "tags": ["bitmasks", "data structures", "dfs and similar", "graphs", "greedy", "strings", "trees"], "problem_rating": "2300", "solved_by": "x1027"},
{"url": "https://codeforces.com//problemset/problem/1980/F2", "name": "Field Division (hard version)", "tags": ["math", "sortings"], "problem_rating": "2400", "solved_by": "x854"},
{"url": "https://codeforces.com//problemset/problem/1980/F1", "name": "Field Division (easy version)", "tags": ["data structures", "math", "sortings"], "problem_rating": "1900", "solved_by": "x3326"},
{"url": "https://codeforces.com//problemset/problem/1980/E", "name": "Permutation of Rows and Columns", "tags": ["constructive algorithms", "data structures", "greedy", "hashing", "implementation", "math", "matrices", "sortings"], "problem_rating": "1600", "solved_by": "x9259"},
{"url": "https://codeforces.com//problemset/problem/1980/D", "name": "GCD-sequence", "tags": ["greedy", "implementation", "math", "number theory"], "problem_rating": "1400", "solved_by": "x12854"},
{"url": "https://codeforces.com//problemset/problem/1980/C", "name": "Sofia and the Lost Operations", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1300", "solved_by": "x16983"},
{"url": "https://codeforces.com//problemset/problem/1980/B", "name": "Choosing Cubes", "tags": ["sortings", "sortings"], "problem_rating": "800", "solved_by": "x32232"},
{"url": "https://codeforces.com//problemset/problem/1980/A", "name": "Problem Generator", "tags": ["math"], "problem_rating": "800", "solved_by": "x37348"},
{"url": "https://codeforces.com//problemset/problem/1979/F", "name": "Kostyanych's Theorem", "tags": ["brute force", "constructive algorithms", "graphs", "interactive"], "problem_rating": "2900", "solved_by": "x251"},
{"url": "https://codeforces.com//problemset/problem/1979/E", "name": "Manhattan Triangle", "tags": ["binary search", "constructive algorithms", "data structures", "geometry", "implementation", "two pointers"], "problem_rating": "2400", "solved_by": "x1239"},
{"url": "https://codeforces.com//problemset/problem/1979/D", "name": "Fixing a Binary String", "tags": ["bitmasks", "brute force", "constructive algorithms", "dp", "greedy", "hashing", "strings"], "problem_rating": "1800", "solved_by": "x5857"},
{"url": "https://codeforces.com//problemset/problem/1979/C", "name": "Earning on Bets", "tags": ["binary search", "combinatorics", "constructive algorithms", "number theory"], "problem_rating": "1200", "solved_by": "x17024"},
{"url": "https://codeforces.com//problemset/problem/1979/B", "name": "XOR Sequences", "tags": ["bitmasks", "greedy"], "problem_rating": "1000", "solved_by": "x20910"},
{"url": "https://codeforces.com//problemset/problem/1979/A", "name": "Guess the Maximum", "tags": ["brute force", "greedy", "implementation"], "problem_rating": "800", "solved_by": "x27238"},
{"url": "https://codeforces.com//problemset/problem/1978/F", "name": "Large Graph", "tags": ["data structures", "dfs and similar", "dsu", "graphs", "number theory", "two pointers"], "problem_rating": "2400", "solved_by": "x1132"},
{"url": "https://codeforces.com//problemset/problem/1978/E", "name": "Computing Machine", "tags": ["brute force", "data structures", "dp", "greedy", "implementation"], "problem_rating": "2000", "solved_by": "x3240"},
{"url": "https://codeforces.com//problemset/problem/1978/D", "name": "Elections", "tags": ["data structures", "greedy", "implementation", "math"], "problem_rating": "1600", "solved_by": "x9729"},
{"url": "https://codeforces.com//problemset/problem/1978/C", "name": "Manhattan Permutations", "tags": ["constructive algorithms", "data structures", "greedy", "implementation", "math"], "problem_rating": "1300", "solved_by": "x13194"},
{"url": "https://codeforces.com//problemset/problem/1978/B", "name": "New Bakery", "tags": ["binary search", "greedy", "math", "ternary search"], "problem_rating": "800", "solved_by": "x20451"},
{"url": "https://codeforces.com//problemset/problem/1978/A", "name": "Alice and Books", "tags": ["constructive algorithms", "greedy", "sortings"], "problem_rating": "800", "solved_by": "x23390"},
{"url": "https://codeforces.com//problemset/problem/1977/E", "name": "Tensor", "tags": ["constructive algorithms", "graphs", "interactive"], "problem_rating": "2600", "solved_by": "x577"},
{"url": "https://codeforces.com//problemset/problem/1977/D", "name": "XORificator", "tags": ["bitmasks", "brute force", "greedy", "hashing"], "problem_rating": "2300", "solved_by": "x1617"},
{"url": "https://codeforces.com//problemset/problem/1977/C", "name": "Nikita and LCM", "tags": ["brute force", "data structures", "dp", "greedy", "math", "number theory", "sortings"], "problem_rating": "1900", "solved_by": "x6015"},
{"url": "https://codeforces.com//problemset/problem/1977/B", "name": "Binary Colouring", "tags": ["bitmasks", "constructive algorithms", "greedy", "math"], "problem_rating": "1100", "solved_by": "x16445"},
{"url": "https://codeforces.com//problemset/problem/1977/A", "name": "Little Nikita", "tags": ["math"], "problem_rating": "800", "solved_by": "x28607"},
{"url": "https://codeforces.com//problemset/problem/1976/F", "name": "Remove Bridges", "tags": ["data structures", "dfs and similar", "dp", "greedy", "sortings", "trees"], "problem_rating": "2800", "solved_by": "x476"},
{"url": "https://codeforces.com//problemset/problem/1976/E", "name": "Splittable Permutations", "tags": ["combinatorics", "data structures", "dfs and similar", "greedy", "math", "trees"], "problem_rating": "2500", "solved_by": "x883"},
{"url": "https://codeforces.com//problemset/problem/1976/D", "name": "Invertible Bracket Sequences", "tags": ["binary search", "combinatorics", "data structures", "divide and conquer", "implementation", "two pointers"], "problem_rating": "2000", "solved_by": "x3670"},
{"url": "https://codeforces.com//problemset/problem/1976/C", "name": "Job Interview", "tags": ["binary search", "dp", "greedy", "implementation", "two pointers"], "problem_rating": "1600", "solved_by": "x9239"},
{"url": "https://codeforces.com//problemset/problem/1976/B", "name": "Increase/Decrease/Copy", "tags": ["greedy", "implementation"], "problem_rating": "1100", "solved_by": "x20524"},
{"url": "https://codeforces.com//problemset/problem/1976/A", "name": "Verify Password", "tags": ["implementation", "sortings", "strings"], "problem_rating": "800", "solved_by": "x26247"},
{"url": "https://codeforces.com//problemset/problem/1975/I", "name": "Mind Bloom", "tags": ["dp"], "problem_rating": "3500", "solved_by": "x67"},
{"url": "https://codeforces.com//problemset/problem/1975/H", "name": "378QAQ and Core", "tags": ["greedy", "strings"], "problem_rating": "3500", "solved_by": "x89"},
{"url": "https://codeforces.com//problemset/problem/1975/G", "name": "Zimpha Fan Club", "tags": ["fft", "greedy", "math", "strings"], "problem_rating": "3000", "solved_by": "x204"},
{"url": "https://codeforces.com//problemset/problem/1975/F", "name": "Set", "tags": ["bitmasks", "brute force", "combinatorics", "dfs and similar", "divide and conquer", "dp", "math"], "problem_rating": "2600", "solved_by": "x720"},
{"url": "https://codeforces.com//problemset/problem/1975/E", "name": "Chain Queries", "tags": ["binary search", "data structures", "dfs and similar", "implementation", "trees"], "problem_rating": "2100", "solved_by": "x2004"},
{"url": "https://codeforces.com//problemset/problem/1975/D", "name": "Paint the Tree", "tags": ["brute force", "dfs and similar", "dp", "greedy", "shortest paths", "trees"], "problem_rating": "1700", "solved_by": "x5312"},
{"url": "https://codeforces.com//problemset/problem/1975/C", "name": "Chamo and Mocha's Array", "tags": ["binary search", "brute force", "greedy"], "problem_rating": "1200", "solved_by": "x13190"},
{"url": "https://codeforces.com//problemset/problem/1975/B", "name": "378QAQ and Mocha's Array", "tags": ["brute force", "greedy", "math", "sortings"], "problem_rating": "1000", "solved_by": "x16282"},
{"url": "https://codeforces.com//problemset/problem/1975/A", "name": "Bazoka and Mocha's Array", "tags": ["brute force", "greedy", "implementation", "sortings"], "problem_rating": "800", "solved_by": "x17609"},
{"url": "https://codeforces.com//problemset/problem/1974/G", "name": "Money Buys Less Happiness Now", "tags": ["data structures", "greedy", "sortings"], "problem_rating": "2000", "solved_by": "x3770"},
{"url": "https://codeforces.com//problemset/problem/1974/F", "name": "Cutting Game", "tags": ["binary search", "brute force", "data structures", "implementation", "sortings", "two pointers"], "problem_rating": "1900", "solved_by": "x3207"},
{"url": "https://codeforces.com//problemset/problem/1974/E", "name": "Money Buys Happiness", "tags": ["dp"], "problem_rating": "1800", "solved_by": "x7039"},
{"url": "https://codeforces.com//problemset/problem/1974/D", "name": "Ingenuity-2", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "1400", "solved_by": "x13453"},
{"url": "https://codeforces.com//problemset/problem/1974/C", "name": "Beautiful Triple Pairs", "tags": ["combinatorics", "data structures"], "problem_rating": "1400", "solved_by": "x14426"},
{"url": "https://codeforces.com//problemset/problem/1974/B", "name": "Symmetric Encoding", "tags": ["implementation", "sortings", "strings"], "problem_rating": "800", "solved_by": "x28565"},
{"url": "https://codeforces.com//problemset/problem/1974/A", "name": "Phone Desktop", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x31264"},
{"url": "https://codeforces.com//problemset/problem/1973/F", "name": "Maximum GCD Sum Queries", "tags": ["bitmasks", "brute force", "dp", "implementation", "number theory"], "problem_rating": "3100", "solved_by": "x183"},
{"url": "https://codeforces.com//problemset/problem/1973/E", "name": "Cat, Fox and Swaps", "tags": ["graphs", "math", "sortings"], "problem_rating": "2500", "solved_by": "x718"},
{"url": "https://codeforces.com//problemset/problem/1973/D", "name": "Cat, Fox and Maximum Array Split", "tags": ["brute force", "interactive", "math"], "problem_rating": "2400", "solved_by": "x1744"},
{"url": "https://codeforces.com//problemset/problem/1973/C", "name": "Cat, Fox and Double Maximum", "tags": ["constructive algorithms", "greedy", "implementation", "math", "sortings"], "problem_rating": "1700", "solved_by": "x7572"},
{"url": "https://codeforces.com//problemset/problem/1973/B", "name": "Cat, Fox and the Lonely Array", "tags": ["binary search", "bitmasks", "data structures", "greedy", "math", "two pointers"], "problem_rating": "1300", "solved_by": "x12863"},
{"url": "https://codeforces.com//problemset/problem/1973/A", "name": "Chess For Three", "tags": ["brute force", "dp", "implementation", "math"], "problem_rating": "900", "solved_by": "x22604"},
{"url": "https://codeforces.com//problemset/problem/1972/B", "name": "Coin Games", "tags": ["games"], "problem_rating": "900", "solved_by": "x19795"},
{"url": "https://codeforces.com//problemset/problem/1972/A", "name": "Contest Proposal", "tags": ["brute force", "greedy", "two pointers"], "problem_rating": "800", "solved_by": "x21590"},
{"url": "https://codeforces.com//problemset/problem/1971/H", "name": "±1", "tags": ["2-sat", "dfs and similar", "graphs"], "problem_rating": "2100", "solved_by": "x1529"},
{"url": "https://codeforces.com//problemset/problem/1971/G", "name": "XOUR", "tags": ["data structures", "dsu", "sortings"], "problem_rating": "1700", "solved_by": "x8267"},
{"url": "https://codeforces.com//problemset/problem/1971/F", "name": "Circle Perimeter", "tags": ["binary search", "brute force", "dfs and similar", "geometry", "implementation", "math"], "problem_rating": "1600", "solved_by": "x8894"},
{"url": "https://codeforces.com//problemset/problem/1971/E", "name": "Find the Car", "tags": ["binary search", "math", "sortings"], "problem_rating": "1500", "solved_by": "x12686"},
{"url": "https://codeforces.com//problemset/problem/1971/D", "name": "Binary Cut", "tags": ["dp", "greedy", "implementation", "sortings", "strings"], "problem_rating": "1100", "solved_by": "x23741"},
{"url": "https://codeforces.com//problemset/problem/1971/C", "name": "Clock and Strings", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x29725"},
{"url": "https://codeforces.com//problemset/problem/1971/B", "name": "Different String", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x33499"},
{"url": "https://codeforces.com//problemset/problem/1971/A", "name": "My First Sorting Problem", "tags": ["implementation", "sortings"], "problem_rating": "800", "solved_by": "x40584"},
{"url": "https://codeforces.com//problemset/problem/1970/G3", "name": "Min-Fund Prison (Hard)", "tags": ["bitmasks", "dfs and similar", "dp", "graphs", "trees"], "problem_rating": "2400", "solved_by": "x275"},
{"url": "https://codeforces.com//problemset/problem/1970/G2", "name": "Min-Fund Prison (Medium)", "tags": ["brute force", "dfs and similar", "dp", "graphs", "trees"], "problem_rating": "2200", "solved_by": "x474"},
{"url": "https://codeforces.com//problemset/problem/1970/G1", "name": "Min-Fund Prison (Easy)", "tags": ["dfs and similar", "trees"], "problem_rating": "1900", "solved_by": "x1109"},
{"url": "https://codeforces.com//problemset/problem/1970/F3", "name": "Playing Quidditch (Hard)", "tags": ["implementation"], "problem_rating": "2300", "solved_by": "x313"},
{"url": "https://codeforces.com//problemset/problem/1970/F2", "name": "Playing Quidditch (Medium)", "tags": ["implementation"], "problem_rating": "2300", "solved_by": "x307"},
{"url": "https://codeforces.com//problemset/problem/1970/F1", "name": "Playing Quidditch (Easy)", "tags": ["implementation"], "problem_rating": "2300", "solved_by": "x381"},
{"url": "https://codeforces.com//problemset/problem/1970/E3", "name": "Trails (Hard)", "tags": ["dp", "matrices"], "problem_rating": "2200", "solved_by": "x571"},
{"url": "https://codeforces.com//problemset/problem/1970/E2", "name": "Trails (Medium)", "tags": ["dp", "matrices"], "problem_rating": "2000", "solved_by": "x1001"},
{"url": "https://codeforces.com//problemset/problem/1970/E1", "name": "Trails (Easy)", "tags": ["dp"], "problem_rating": "1800", "solved_by": "x1671"},
{"url": "https://codeforces.com//problemset/problem/1970/D3", "name": "Arithmancy (Hard)", "tags": ["interactive"], "problem_rating": "3100", "solved_by": "x90"},
{"url": "https://codeforces.com//problemset/problem/1970/D2", "name": "Arithmancy (Medium)", "tags": ["constructive algorithms", "interactive", "probabilities", "strings"], "problem_rating": "2600", "solved_by": "x169"},
{"url": "https://codeforces.com//problemset/problem/1970/D1", "name": "Arithmancy (Easy)", "tags": ["brute force", "constructive algorithms", "interactive", "strings"], "problem_rating": "2100", "solved_by": "x515"},
{"url": "https://codeforces.com//problemset/problem/1970/C3", "name": "Game on Tree (Hard)", "tags": ["dfs and similar", "dp", "games", "trees"], "problem_rating": "1900", "solved_by": "x1235"},
{"url": "https://codeforces.com//problemset/problem/1970/C2", "name": "Game on Tree (Medium)", "tags": ["dfs and similar", "dp", "games", "trees"], "problem_rating": "1700", "solved_by": "x2121"},
{"url": "https://codeforces.com//problemset/problem/1970/C1", "name": "Game on Tree (Easy)", "tags": ["games"], "problem_rating": "1400", "solved_by": "x2776"},
{"url": "https://codeforces.com//problemset/problem/1970/B3", "name": "Exact Neighbours (Hard)", "tags": ["constructive algorithms"], "problem_rating": "2300", "solved_by": "x400"},
{"url": "https://codeforces.com//problemset/problem/1970/B2", "name": "Exact Neighbours (Medium)", "tags": ["constructive algorithms"], "problem_rating": "2100", "solved_by": "x653"},
{"url": "https://codeforces.com//problemset/problem/1970/B1", "name": "Exact Neighbours (Easy)", "tags": ["constructive algorithms"], "problem_rating": "1900", "solved_by": "x926"},
{"url": "https://codeforces.com//problemset/problem/1970/A3", "name": "Balanced Unshuffle (Hard)", "tags": ["constructive algorithms", "trees"], "problem_rating": "2400", "solved_by": "x398"},
{"url": "https://codeforces.com//problemset/problem/1970/A2", "name": "Balanced Unshuffle (Medium)", "tags": ["brute force", "constructive algorithms", "trees"], "problem_rating": "2400", "solved_by": "x389"},
{"url": "https://codeforces.com//problemset/problem/1970/A1", "name": "Balanced Shuffle (Easy)", "tags": ["implementation", "sortings"], "problem_rating": "1000", "solved_by": "x3769"},
{"url": "https://codeforces.com//problemset/problem/1969/F", "name": "Card Pairing", "tags": ["dp", "greedy", "hashing", "implementation"], "problem_rating": "3000", "solved_by": "x217"},
{"url": "https://codeforces.com//problemset/problem/1969/E", "name": "Unique Array", "tags": ["binary search", "data structures", "divide and conquer", "dp", "greedy"], "problem_rating": "2400", "solved_by": "x1203"},
{"url": "https://codeforces.com//problemset/problem/1969/D", "name": "Shop Game", "tags": ["data structures", "greedy", "math", "sortings"], "problem_rating": "1900", "solved_by": "x4074"},
{"url": "https://codeforces.com//problemset/problem/1969/C", "name": "Minimizing the Sum", "tags": ["dp", "implementation"], "problem_rating": "1700", "solved_by": "x7707"},
{"url": "https://codeforces.com//problemset/problem/1969/B", "name": "Shifts and Sorting", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1000", "solved_by": "x17401"},
{"url": "https://codeforces.com//problemset/problem/1969/A", "name": "Two Friends", "tags": ["constructive algorithms", "implementation", "math"], "problem_rating": "800", "solved_by": "x18778"},
{"url": "https://codeforces.com//problemset/problem/1968/G2", "name": "Division + LCP (hard version)", "tags": ["binary search", "brute force", "data structures", "dp", "hashing", "math", "string suffix structures", "strings"], "problem_rating": "2200", "solved_by": "x1731"},
{"url": "https://codeforces.com//problemset/problem/1968/G1", "name": "Division + LCP (easy version)", "tags": ["binary search", "data structures", "dp", "hashing", "string suffix structures", "strings"], "problem_rating": "1900", "solved_by": "x3841"},
{"url": "https://codeforces.com//problemset/problem/1968/F", "name": "Equal XOR Segments", "tags": ["binary search", "data structures"], "problem_rating": "1800", "solved_by": "x4909"},
{"url": "https://codeforces.com//problemset/problem/1968/E", "name": "Cells Arrangement", "tags": ["constructive algorithms"], "problem_rating": "1600", "solved_by": "x9493"},
{"url": "https://codeforces.com//problemset/problem/1968/D", "name": "Permutation Game", "tags": ["brute force", "dfs and similar", "games", "graphs", "greedy", "math"], "problem_rating": "1300", "solved_by": "x13769"},
{"url": "https://codeforces.com//problemset/problem/1968/C", "name": "Assembly via Remainders", "tags": ["constructive algorithms", "number theory"], "problem_rating": "1000", "solved_by": "x23097"},
{"url": "https://codeforces.com//problemset/problem/1968/B", "name": "Prefiquence", "tags": ["greedy", "two pointers"], "problem_rating": "800", "solved_by": "x26392"},
{"url": "https://codeforces.com//problemset/problem/1968/A", "name": "Maximize?", "tags": ["brute force", "math", "number theory"], "problem_rating": "800", "solved_by": "x31487"},
{"url": "https://codeforces.com//problemset/problem/1967/F", "name": "Next and Prev", "tags": ["brute force", "data structures", "implementation"], "problem_rating": "3200", "solved_by": "x52"},
{"url": "https://codeforces.com//problemset/problem/1967/E2", "name": "Again Counting Arrays (Hard Version)", "tags": ["combinatorics", "dp", "math"], "problem_rating": "3500", "solved_by": "x87"},
{"url": "https://codeforces.com//problemset/problem/1967/E1", "name": "Again Counting Arrays (Easy Version)", "tags": ["combinatorics", "dp", "fft", "math"], "problem_rating": "3100", "solved_by": "x173"},
{"url": "https://codeforces.com//problemset/problem/1967/D", "name": "Long Way to be Non-decreasing", "tags": ["binary search", "dfs and similar", "graphs", "implementation", "shortest paths", "two pointers"], "problem_rating": "2800", "solved_by": "x561"},
{"url": "https://codeforces.com//problemset/problem/1967/C", "name": "Fenwick Tree", "tags": ["bitmasks", "brute force", "combinatorics", "data structures", "dp", "math", "trees"], "problem_rating": "2300", "solved_by": "x1526"},
{"url": "https://codeforces.com//problemset/problem/1967/B2", "name": "Reverse Card (Hard Version)", "tags": ["brute force", "math", "number theory"], "problem_rating": "2200", "solved_by": "x3593"},
{"url": "https://codeforces.com//problemset/problem/1967/B1", "name": "Reverse Card (Easy Version)", "tags": ["brute force", "math", "number theory"], "problem_rating": "1400", "solved_by": "x12101"},
{"url": "https://codeforces.com//problemset/problem/1967/A", "name": "Permutation Counting", "tags": ["binary search", "greedy", "implementation", "math", "sortings"], "problem_rating": "1400", "solved_by": "x11332"},
{"url": "https://codeforces.com//problemset/problem/1966/B", "name": "Rectangle Filling", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1100", "solved_by": "x13942"},
{"url": "https://codeforces.com//problemset/problem/1966/A", "name": "Card Exchange", "tags": ["constructive algorithms", "games", "greedy"], "problem_rating": "800", "solved_by": "x16825"},
{"url": "https://codeforces.com//problemset/problem/1965/F", "name": "Conference", "tags": ["data structures", "flows"], "problem_rating": "3300", "solved_by": "x138"},
{"url": "https://codeforces.com//problemset/problem/1965/E", "name": "Connected Cubes", "tags": ["constructive algorithms", "games"], "problem_rating": "3100", "solved_by": "x217"},
{"url": "https://codeforces.com//problemset/problem/1965/D", "name": "Missing Subarray Sum", "tags": ["constructive algorithms"], "problem_rating": "2900", "solved_by": "x336"},
{"url": "https://codeforces.com//problemset/problem/1965/C", "name": "Folding Strip", "tags": ["constructive algorithms", "greedy", "strings"], "problem_rating": "2300", "solved_by": "x1702"},
{"url": "https://codeforces.com//problemset/problem/1965/B", "name": "Missing Subsequence Sum", "tags": ["bitmasks", "constructive algorithms", "greedy", "number theory"], "problem_rating": "1800", "solved_by": "x6055"},
{"url": "https://codeforces.com//problemset/problem/1965/A", "name": "Everything Nim", "tags": ["games", "greedy", "math", "sortings"], "problem_rating": "1400", "solved_by": "x12383"},
{"url": "https://codeforces.com//problemset/problem/1958/J", "name": "Necromancer", "tags": ["*special problem"], "problem_rating": "3200", "solved_by": "x27"},
{"url": "https://codeforces.com//problemset/problem/1958/I", "name": "Equal Trees", "tags": ["*special problem", "graphs", "meet-in-the-middle"], "problem_rating": "3100", "solved_by": "x29"},
{"url": "https://codeforces.com//problemset/problem/1958/H", "name": "Composite Spells", "tags": ["*special problem", "dp"], "problem_rating": "2600", "solved_by": "x71"},
{"url": "https://codeforces.com//problemset/problem/1958/G", "name": "Observation Towers", "tags": ["*special problem"], "problem_rating": "2400", "solved_by": "x100"},
{"url": "https://codeforces.com//problemset/problem/1958/F", "name": "Narrow Paths", "tags": ["*special problem", "combinatorics"], "problem_rating": "2000", "solved_by": "x173"},
{"url": "https://codeforces.com//problemset/problem/1958/E", "name": "Yet Another Permutation Constructive", "tags": ["*special problem", "constructive algorithms"], "problem_rating": "1900", "solved_by": "x228"},
{"url": "https://codeforces.com//problemset/problem/1958/D", "name": "Staircase", "tags": ["*special problem"], "problem_rating": "1600", "solved_by": "x438"},
{"url": "https://codeforces.com//problemset/problem/1958/C", "name": "Firewood", "tags": ["*special problem"], "problem_rating": "1500", "solved_by": "x608"},
{"url": "https://codeforces.com//problemset/problem/1958/B", "name": "Clock in the Pool", "tags": ["*special problem", "math"], "problem_rating": "1400", "solved_by": "x770"},
{"url": "https://codeforces.com//problemset/problem/1958/A", "name": "1-3-5", "tags": ["*special problem", "dp"], "problem_rating": "1100", "solved_by": "x1460"},
{"url": "https://codeforces.com//problemset/problem/1957/F2", "name": "Frequency Mismatch (Hard Version)", "tags": ["binary search", "data structures", "dfs and similar", "hashing", "probabilities", "trees"], "problem_rating": "2700", "solved_by": "x362"},
{"url": "https://codeforces.com//problemset/problem/1957/F1", "name": "Frequency Mismatch (Easy Version)", "tags": ["binary search", "data structures", "divide and conquer", "hashing", "probabilities", "trees"], "problem_rating": "2600", "solved_by": "x416"},
{"url": "https://codeforces.com//problemset/problem/1957/E", "name": "Carousel of Combinations", "tags": ["brute force", "combinatorics", "dp", "math", "number theory"], "problem_rating": "2400", "solved_by": "x1144"},
{"url": "https://codeforces.com//problemset/problem/1957/D", "name": "A BIT of an Inequality", "tags": ["bitmasks", "brute force", "dp", "math"], "problem_rating": "1900", "solved_by": "x4141"},
{"url": "https://codeforces.com//problemset/problem/1957/C", "name": "How Does the Rook Move?", "tags": ["combinatorics", "dp", "math"], "problem_rating": "1600", "solved_by": "x8839"},
{"url": "https://codeforces.com//problemset/problem/1957/B", "name": "A BIT of a Construction", "tags": ["bitmasks", "constructive algorithms", "greedy", "implementation"], "problem_rating": "1100", "solved_by": "x16943"},
{"url": "https://codeforces.com//problemset/problem/1957/A", "name": "Stickogon", "tags": ["constructive algorithms", "greedy"], "problem_rating": "800", "solved_by": "x22136"},
{"url": "https://codeforces.com//problemset/problem/1956/F", "name": "Nene and the Passing Game", "tags": ["constructive algorithms", "data structures", "dsu", "graphs", "sortings"], "problem_rating": "3000", "solved_by": "x315"},
{"url": "https://codeforces.com//problemset/problem/1956/E2", "name": "Nene vs. Monsters (Hard Version)", "tags": ["brute force", "greedy", "implementation", "math"], "problem_rating": "2700", "solved_by": "x773"},
{"url": "https://codeforces.com//problemset/problem/1956/E1", "name": "Nene vs. Monsters (Easy Version)", "tags": ["brute force", "implementation", "math"], "problem_rating": "2500", "solved_by": "x1361"},
{"url": "https://codeforces.com//problemset/problem/1956/D", "name": "Nene and the Mex Operator", "tags": ["bitmasks", "brute force", "constructive algorithms", "divide and conquer", "dp", "greedy", "implementation", "math"], "problem_rating": "2000", "solved_by": "x3603"},
{"url": "https://codeforces.com//problemset/problem/1956/C", "name": "Nene's Magical Matrix", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1600", "solved_by": "x12051"},
{"url": "https://codeforces.com//problemset/problem/1956/B", "name": "Nene and the Card Game", "tags": ["games", "greedy"], "problem_rating": "800", "solved_by": "x20453"},
{"url": "https://codeforces.com//problemset/problem/1956/A", "name": "Nene's Game", "tags": ["binary search", "brute force", "data structures", "games", "greedy"], "problem_rating": "800", "solved_by": "x20671"},
{"url": "https://codeforces.com//problemset/problem/1955/H", "name": "The Most Reckless Defense", "tags": ["bitmasks", "brute force", "constructive algorithms", "dp", "flows", "graph matchings", "shortest paths"], "problem_rating": "2300", "solved_by": "x1159"},
{"url": "https://codeforces.com//problemset/problem/1955/G", "name": "GCD on a grid", "tags": ["brute force", "dfs and similar", "dp", "implementation", "math", "number theory"], "problem_rating": "1900", "solved_by": "x4100"},
{"url": "https://codeforces.com//problemset/problem/1955/F", "name": "Unfair Game", "tags": ["dp", "games", "greedy", "math", "schedules"], "problem_rating": "1800", "solved_by": "x6567"},
{"url": "https://codeforces.com//problemset/problem/1955/E", "name": "Long Inversions", "tags": ["brute force", "greedy", "implementation", "sortings"], "problem_rating": "1700", "solved_by": "x7997"},
{"url": "https://codeforces.com//problemset/problem/1955/D", "name": "Inaccurate Subsequence Search", "tags": ["data structures", "two pointers"], "problem_rating": "1400", "solved_by": "x14310"},
{"url": "https://codeforces.com//problemset/problem/1955/C", "name": "Inhabitant of the Deep Sea", "tags": ["greedy", "implementation", "math"], "problem_rating": "1300", "solved_by": "x19830"},
{"url": "https://codeforces.com//problemset/problem/1955/B", "name": "Progressive Square", "tags": ["constructive algorithms", "data structures", "implementation", "sortings"], "problem_rating": "1000", "solved_by": "x26199"},
{"url": "https://codeforces.com//problemset/problem/1955/A", "name": "Yogurt Sale", "tags": ["math"], "problem_rating": "800", "solved_by": "x40357"},
{"url": "https://codeforces.com//problemset/problem/1954/F", "name": "Unique Strings", "tags": ["combinatorics", "dp", "math"], "problem_rating": "3100", "solved_by": "x237"},
{"url": "https://codeforces.com//problemset/problem/1954/E", "name": "Chain Reaction", "tags": ["binary search", "data structures", "dsu", "greedy", "implementation", "math", "number theory"], "problem_rating": "2200", "solved_by": "x2039"},
{"url": "https://codeforces.com//problemset/problem/1954/D", "name": "Colored Balls", "tags": ["combinatorics", "dp", "math", "sortings"], "problem_rating": "1800", "solved_by": "x5575"},
{"url": "https://codeforces.com//problemset/problem/1954/C", "name": "Long Multiplication", "tags": ["greedy", "math", "number theory"], "problem_rating": "1200", "solved_by": "x18071"},
{"url": "https://codeforces.com//problemset/problem/1954/B", "name": "Make It Ugly", "tags": ["implementation", "math"], "problem_rating": "1200", "solved_by": "x17352"},
{"url": "https://codeforces.com//problemset/problem/1954/A", "name": "Painting the Ribbon", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "900", "solved_by": "x22639"},
{"url": "https://codeforces.com//problemset/problem/1953/A", "name": "Accuracy-Preserving Summation Algorithm", "tags": ["*special problem"], "problem_rating": [null], "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/1952/J", "name": "Help, what does it mean to be \"Based\"", "tags": ["brute force", "constructive algorithms", "expression parsing", "implementation", "sortings"], "problem_rating": [null], "solved_by": "x734"},
{"url": "https://codeforces.com//problemset/problem/1952/I", "name": "Dark Matter", "tags": ["bitmasks", "geometry"], "problem_rating": [null], "solved_by": "x413"},
{"url": "https://codeforces.com//problemset/problem/1952/H", "name": "Palindrome", "tags": ["implementation", "strings"], "problem_rating": [null], "solved_by": "x394"},
{"url": "https://codeforces.com//problemset/problem/1952/G", "name": "Mathematician Takeover", "tags": ["binary search", "dfs and similar", "math"], "problem_rating": [null], "solved_by": "x987"},
{"url": "https://codeforces.com//problemset/problem/1952/F", "name": "Grid", "tags": ["brute force"], "problem_rating": [null], "solved_by": "x1698"},
{"url": "https://codeforces.com//problemset/problem/1952/E", "name": "Sweep Line", "tags": ["combinatorics", "games", "math"], "problem_rating": [null], "solved_by": "x228"},
{"url": "https://codeforces.com//problemset/problem/1952/D", "name": "Are You a Procrastinator?", "tags": ["implementation"], "problem_rating": [null], "solved_by": "x4407"},
{"url": "https://codeforces.com//problemset/problem/1952/C", "name": "They Have Fooled", "tags": ["brute force", "schedules"], "problem_rating": [null], "solved_by": "x2819"},
{"url": "https://codeforces.com//problemset/problem/1952/B", "name": "Is it stated?", "tags": ["strings"], "problem_rating": [null], "solved_by": "x10647"},
{"url": "https://codeforces.com//problemset/problem/1952/A", "name": "Are You a Robot, Again?", "tags": ["strings"], "problem_rating": [null], "solved_by": "x11826"},
{"url": "https://codeforces.com//problemset/problem/1951/I", "name": "Growing Trees", "tags": ["binary search", "constructive algorithms", "flows", "graphs", "greedy"], "problem_rating": "3200", "solved_by": "x70"},
{"url": "https://codeforces.com//problemset/problem/1951/H", "name": "Thanos Snap", "tags": ["binary search", "dp", "games", "greedy", "trees"], "problem_rating": "3200", "solved_by": "x234"},
{"url": "https://codeforces.com//problemset/problem/1951/G", "name": "Clacking Balls", "tags": ["combinatorics", "math", "probabilities"], "problem_rating": "3100", "solved_by": "x307"},
{"url": "https://codeforces.com//problemset/problem/1951/F", "name": "Inversion Composition", "tags": ["constructive algorithms", "data structures", "greedy"], "problem_rating": "2500", "solved_by": "x720"},
{"url": "https://codeforces.com//problemset/problem/1951/E", "name": "No Palindromes", "tags": ["brute force", "constructive algorithms", "divide and conquer", "greedy", "hashing", "implementation", "math", "strings"], "problem_rating": "2000", "solved_by": "x3359"},
{"url": "https://codeforces.com//problemset/problem/1951/D", "name": "Buying Jewels", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "2000", "solved_by": "x5131"},
{"url": "https://codeforces.com//problemset/problem/1951/C", "name": "Ticket Hoarding", "tags": ["greedy", "math", "sortings"], "problem_rating": "1400", "solved_by": "x10841"},
{"url": "https://codeforces.com//problemset/problem/1951/B", "name": "Battle Cows", "tags": ["binary search", "data structures", "greedy"], "problem_rating": "1200", "solved_by": "x13672"},
{"url": "https://codeforces.com//problemset/problem/1951/A", "name": "Dual Trigger", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "900", "solved_by": "x18544"},
{"url": "https://codeforces.com//problemset/problem/1950/G", "name": "Shuffling Songs", "tags": ["bitmasks", "dfs and similar", "dp", "graphs", "hashing", "implementation", "strings"], "problem_rating": "1900", "solved_by": "x3993"},
{"url": "https://codeforces.com//problemset/problem/1950/F", "name": "0, 1, 2, Tree!", "tags": ["bitmasks", "brute force", "greedy", "implementation", "trees"], "problem_rating": "1700", "solved_by": "x8469"},
{"url": "https://codeforces.com//problemset/problem/1950/E", "name": "Nearly Shortest Repeating Substring", "tags": ["brute force", "implementation", "number theory", "strings"], "problem_rating": "1500", "solved_by": "x13376"},
{"url": "https://codeforces.com//problemset/problem/1950/D", "name": "Product of Binary Decimals", "tags": ["brute force", "dp", "implementation", "number theory"], "problem_rating": "1100", "solved_by": "x21977"},
{"url": "https://codeforces.com//problemset/problem/1950/C", "name": "Clock Conversion", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x37585"},
{"url": "https://codeforces.com//problemset/problem/1950/B", "name": "Upscaling", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x35930"},
{"url": "https://codeforces.com//problemset/problem/1950/A", "name": "Stair, Peak, or Neither?", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x48121"},
{"url": "https://codeforces.com//problemset/problem/1949/K", "name": "Make Triangle", "tags": ["constructive algorithms", "math"], "problem_rating": "2800", "solved_by": "x274"},
{"url": "https://codeforces.com//problemset/problem/1949/J", "name": "Amanda the Amoeba", "tags": ["graphs", "implementation", "trees", "two pointers"], "problem_rating": "2600", "solved_by": "x356"},
{"url": "https://codeforces.com//problemset/problem/1949/I", "name": "Disks", "tags": ["dfs and similar", "geometry", "graph matchings", "graphs"], "problem_rating": "1800", "solved_by": "x1514"},
{"url": "https://codeforces.com//problemset/problem/1949/H", "name": "Division Avoidance", "tags": ["greedy", "math"], "problem_rating": "3100", "solved_by": "x78"},
{"url": "https://codeforces.com//problemset/problem/1949/G", "name": "Scooter", "tags": ["graphs", "greedy"], "problem_rating": "2300", "solved_by": "x691"},
{"url": "https://codeforces.com//problemset/problem/1949/F", "name": "Dating", "tags": ["greedy", "sortings", "trees"], "problem_rating": "2200", "solved_by": "x853"},
{"url": "https://codeforces.com//problemset/problem/1949/E", "name": "Damage per Second", "tags": ["brute force", "math"], "problem_rating": "2900", "solved_by": "x92"},
{"url": "https://codeforces.com//problemset/problem/1949/D", "name": "Funny or Scary?", "tags": ["constructive algorithms"], "problem_rating": "2600", "solved_by": "x335"},
{"url": "https://codeforces.com//problemset/problem/1949/C", "name": "Annual Ants' Gathering", "tags": ["dfs and similar", "dp", "greedy", "trees"], "problem_rating": "1900", "solved_by": "x1489"},
{"url": "https://codeforces.com//problemset/problem/1949/B", "name": "Charming Meals", "tags": ["binary search", "brute force", "greedy", "sortings"], "problem_rating": "1500", "solved_by": "x2628"},
{"url": "https://codeforces.com//problemset/problem/1949/A", "name": "Grove", "tags": ["brute force", "dfs and similar", "dp", "geometry", "probabilities"], "problem_rating": "3300", "solved_by": "x98"},
{"url": "https://codeforces.com//problemset/problem/1948/G", "name": "MST with Matching", "tags": ["bitmasks", "brute force", "dsu", "graph matchings", "trees"], "problem_rating": "3100", "solved_by": "x662"},
{"url": "https://codeforces.com//problemset/problem/1948/F", "name": "Rare Coins", "tags": ["combinatorics", "math", "probabilities"], "problem_rating": "2500", "solved_by": "x1231"},
{"url": "https://codeforces.com//problemset/problem/1948/E", "name": "Clique Partition", "tags": ["brute force", "constructive algorithms", "graphs", "greedy", "implementation"], "problem_rating": "2100", "solved_by": "x2825"},
{"url": "https://codeforces.com//problemset/problem/1948/D", "name": "Tandem Repeats?", "tags": ["brute force", "strings", "two pointers"], "problem_rating": "1700", "solved_by": "x8803"},
{"url": "https://codeforces.com//problemset/problem/1948/C", "name": "Arrow Path", "tags": ["brute force", "constructive algorithms", "dfs and similar", "dp", "graphs", "shortest paths"], "problem_rating": "1300", "solved_by": "x15736"},
{"url": "https://codeforces.com//problemset/problem/1948/B", "name": "Array Fix", "tags": ["brute force", "dp", "greedy", "implementation"], "problem_rating": "1100", "solved_by": "x21869"},
{"url": "https://codeforces.com//problemset/problem/1948/A", "name": "Special Characters", "tags": ["brute force", "constructive algorithms"], "problem_rating": "800", "solved_by": "x27583"},
{"url": "https://codeforces.com//problemset/problem/1946/F", "name": "Nobody is needed", "tags": ["2-sat", "data structures", "dfs and similar", "dp"], "problem_rating": "2500", "solved_by": "x847"},
{"url": "https://codeforces.com//problemset/problem/1946/E", "name": "Girl Permutation", "tags": ["combinatorics", "dp", "math", "number theory"], "problem_rating": "2200", "solved_by": "x2286"},
{"url": "https://codeforces.com//problemset/problem/1946/D", "name": "Birthday Gift", "tags": ["bitmasks", "brute force", "constructive algorithms", "greedy", "implementation"], "problem_rating": "1900", "solved_by": "x4391"},
{"url": "https://codeforces.com//problemset/problem/1946/C", "name": "Tree Cutting", "tags": ["binary search", "dp", "greedy", "implementation", "trees"], "problem_rating": "1600", "solved_by": "x10001"},
{"url": "https://codeforces.com//problemset/problem/1946/B", "name": "Maximum Sum", "tags": ["dp", "greedy", "math"], "problem_rating": "1100", "solved_by": "x19375"},
{"url": "https://codeforces.com//problemset/problem/1946/A", "name": "Median of an Array", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "800", "solved_by": "x25140"},
{"url": "https://codeforces.com//problemset/problem/1945/H", "name": "GCD is Greater", "tags": ["brute force", "data structures", "math", "number theory"], "problem_rating": "2600", "solved_by": "x577"},
{"url": "https://codeforces.com//problemset/problem/1945/G", "name": "Cook and Porridge", "tags": ["binary search", "constructive algorithms", "data structures", "implementation"], "problem_rating": "2500", "solved_by": "x693"},
{"url": "https://codeforces.com//problemset/problem/1945/F", "name": "Kirill and Mushrooms", "tags": ["data structures", "sortings"], "problem_rating": "1900", "solved_by": "x3917"},
{"url": "https://codeforces.com//problemset/problem/1945/E", "name": "Binary Search", "tags": ["binary search", "constructive algorithms", "greedy"], "problem_rating": "1700", "solved_by": "x7598"},
{"url": "https://codeforces.com//problemset/problem/1945/D", "name": "Seraphim the Owl", "tags": ["dp", "greedy"], "problem_rating": "1300", "solved_by": "x13491"},
{"url": "https://codeforces.com//problemset/problem/1945/C", "name": "Left and Right Houses", "tags": ["brute force"], "problem_rating": "1200", "solved_by": "x14070"},
{"url": "https://codeforces.com//problemset/problem/1945/B", "name": "Fireworks", "tags": ["math", "number theory"], "problem_rating": "900", "solved_by": "x21437"},
{"url": "https://codeforces.com//problemset/problem/1945/A", "name": "Setting up Camp", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x26457"},
{"url": "https://codeforces.com//problemset/problem/1944/B", "name": "Equal XOR", "tags": ["bitmasks", "constructive algorithms"], "problem_rating": "1100", "solved_by": "x15449"},
{"url": "https://codeforces.com//problemset/problem/1944/A", "name": "Destroying Bridges", "tags": ["graphs", "greedy", "math"], "problem_rating": "800", "solved_by": "x22644"},
{"url": "https://codeforces.com//problemset/problem/1943/F", "name": "Minimum Hamming Distance", "tags": ["dp"], "problem_rating": "3500", "solved_by": "x97"},
{"url": "https://codeforces.com//problemset/problem/1943/E2", "name": "MEX Game 2 (Hard Version)", "tags": ["binary search", "greedy", "two pointers"], "problem_rating": "3300", "solved_by": "x274"},
{"url": "https://codeforces.com//problemset/problem/1943/E1", "name": "MEX Game 2 (Easy Version)", "tags": ["binary search", "brute force", "greedy"], "problem_rating": "2900", "solved_by": "x406"},
{"url": "https://codeforces.com//problemset/problem/1943/D2", "name": "Counting Is Fun (Hard Version)", "tags": ["combinatorics", "dp"], "problem_rating": "2800", "solved_by": "x671"},
{"url": "https://codeforces.com//problemset/problem/1943/D1", "name": "Counting Is Fun (Easy Version)", "tags": ["brute force", "combinatorics", "dp", "math"], "problem_rating": "2400", "solved_by": "x1357"},
{"url": "https://codeforces.com//problemset/problem/1943/C", "name": "Tree Compass", "tags": ["constructive algorithms", "dfs and similar", "greedy", "trees"], "problem_rating": "2300", "solved_by": "x1948"},
{"url": "https://codeforces.com//problemset/problem/1943/B", "name": "Non-Palindromic Substring", "tags": ["hashing", "implementation", "math", "strings"], "problem_rating": "2000", "solved_by": "x3586"},
{"url": "https://codeforces.com//problemset/problem/1943/A", "name": "MEX Game 1", "tags": ["games", "greedy"], "problem_rating": "1300", "solved_by": "x16744"},
{"url": "https://codeforces.com//problemset/problem/1942/H", "name": "Farmer John's Favorite Intern", "tags": ["data structures", "dp", "flows", "trees"], "problem_rating": "3500", "solved_by": "x82"},
{"url": "https://codeforces.com//problemset/problem/1942/G", "name": "Bessie and Cards", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2800", "solved_by": "x415"},
{"url": "https://codeforces.com//problemset/problem/1942/F", "name": "Farmer John's Favorite Function", "tags": ["brute force", "data structures", "implementation", "math"], "problem_rating": "2700", "solved_by": "x654"},
{"url": "https://codeforces.com//problemset/problem/1942/E", "name": "Farm Game", "tags": ["combinatorics", "games"], "problem_rating": "2300", "solved_by": "x1574"},
{"url": "https://codeforces.com//problemset/problem/1942/D", "name": "Learning to Paint", "tags": ["binary search", "data structures", "dfs and similar", "dp", "greedy", "implementation", "sortings"], "problem_rating": "2100", "solved_by": "x2642"},
{"url": "https://codeforces.com//problemset/problem/1942/C2", "name": "Bessie's Birthday Cake (Hard Version)", "tags": ["geometry", "greedy", "math"], "problem_rating": "1700", "solved_by": "x5864"},
{"url": "https://codeforces.com//problemset/problem/1942/C1", "name": "Bessie's Birthday Cake (Easy Version)", "tags": ["geometry", "greedy", "math"], "problem_rating": "1300", "solved_by": "x10356"},
{"url": "https://codeforces.com//problemset/problem/1942/B", "name": "Bessie and MEX", "tags": ["constructive algorithms", "math"], "problem_rating": "1100", "solved_by": "x13274"},
{"url": "https://codeforces.com//problemset/problem/1942/A", "name": "Farmer John's Challenge", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x16677"},
{"url": "https://codeforces.com//problemset/problem/1941/G", "name": "Rudolf and Subway", "tags": ["constructive algorithms", "dfs and similar", "graphs", "shortest paths"], "problem_rating": "2000", "solved_by": "x3266"},
{"url": "https://codeforces.com//problemset/problem/1941/F", "name": "Rudolf and Imbalance", "tags": ["binary search", "greedy", "sortings", "two pointers"], "problem_rating": "1800", "solved_by": "x5587"},
{"url": "https://codeforces.com//problemset/problem/1941/E", "name": "Rudolf and k Bridges", "tags": ["binary search", "data structures", "dp", "two pointers"], "problem_rating": "1600", "solved_by": "x8957"},
{"url": "https://codeforces.com//problemset/problem/1941/D", "name": "Rudolf and the Ball Game", "tags": ["dfs and similar", "dp", "implementation"], "problem_rating": "1200", "solved_by": "x17622"},
{"url": "https://codeforces.com//problemset/problem/1941/C", "name": "Rudolf and the Ugly String", "tags": ["dp", "greedy", "strings"], "problem_rating": "900", "solved_by": "x31722"},
{"url": "https://codeforces.com//problemset/problem/1941/B", "name": "Rudolf and 121", "tags": ["brute force", "dp", "greedy", "math"], "problem_rating": "1000", "solved_by": "x28271"},
{"url": "https://codeforces.com//problemset/problem/1941/A", "name": "Rudolf and the Ticket", "tags": ["brute force", "math"], "problem_rating": "800", "solved_by": "x40873"},
{"url": "https://codeforces.com//problemset/problem/1940/D", "name": "Almost Certainly", "tags": ["*special problem", "constructive algorithms", "data structures", "sortings"], "problem_rating": [null], "solved_by": "x127"},
{"url": "https://codeforces.com//problemset/problem/1940/C", "name": "Burenka and Pether", "tags": ["*special problem", "data structures", "dfs and similar", "divide and conquer", "dsu", "graphs", "sortings", "trees"], "problem_rating": [null], "solved_by": "x34"},
{"url": "https://codeforces.com//problemset/problem/1940/B", "name": "Three Arrays", "tags": ["*special problem", "constructive algorithms", "implementation", "sortings"], "problem_rating": [null], "solved_by": "x181"},
{"url": "https://codeforces.com//problemset/problem/1940/A", "name": "Parallel Universes", "tags": ["*special problem", "constructive algorithms", "dfs and similar", "dsu", "graphs"], "problem_rating": [null], "solved_by": "x82"},
{"url": "https://codeforces.com//problemset/problem/1939/D", "name": "Big Persimmon", "tags": ["*special problem", "dp", "games"], "problem_rating": [null], "solved_by": "x86"},
{"url": "https://codeforces.com//problemset/problem/1939/C", "name": "More Gifts", "tags": ["*special problem", "dfs and similar", "two pointers"], "problem_rating": [null], "solved_by": "x286"},
{"url": "https://codeforces.com//problemset/problem/1939/B", "name": "Evidence Board", "tags": ["*special problem", "constructive algorithms", "dfs and similar", "graphs", "trees"], "problem_rating": [null], "solved_by": "x214"},
{"url": "https://codeforces.com//problemset/problem/1939/A", "name": "Draw Polygon Lines", "tags": ["*special problem", "constructive algorithms", "dp", "geometry", "interactive"], "problem_rating": [null], "solved_by": "x21"},
{"url": "https://codeforces.com//problemset/problem/1938/M", "name": "Zig-zag", "tags": [], "problem_rating": "3500", "solved_by": "x50"},
{"url": "https://codeforces.com//problemset/problem/1938/L", "name": "XOR Operations", "tags": [], "problem_rating": "2800", "solved_by": "x259"},
{"url": "https://codeforces.com//problemset/problem/1938/K", "name": "Tree Quiz", "tags": [], "problem_rating": "2400", "solved_by": "x553"},
{"url": "https://codeforces.com//problemset/problem/1938/J", "name": "There and Back Again", "tags": [], "problem_rating": "2100", "solved_by": "x1156"},
{"url": "https://codeforces.com//problemset/problem/1938/I", "name": "Symmetric Boundary", "tags": [], "problem_rating": "2800", "solved_by": "x56"},
{"url": "https://codeforces.com//problemset/problem/1938/H", "name": "Pho Restaurant", "tags": [], "problem_rating": "1600", "solved_by": "x1961"},
{"url": "https://codeforces.com//problemset/problem/1938/G", "name": "Personality Test", "tags": [], "problem_rating": "2300", "solved_by": "x912"},
{"url": "https://codeforces.com//problemset/problem/1938/F", "name": "Forming Groups", "tags": [], "problem_rating": "2400", "solved_by": "x675"},
{"url": "https://codeforces.com//problemset/problem/1938/E", "name": "Duplicates", "tags": [], "problem_rating": "2200", "solved_by": "x898"},
{"url": "https://codeforces.com//problemset/problem/1938/D", "name": "Bánh Bò", "tags": [], "problem_rating": "3300", "solved_by": "x82"},
{"url": "https://codeforces.com//problemset/problem/1938/C", "name": "Bit Counting Sequence", "tags": [], "problem_rating": "1900", "solved_by": "x1327"},
{"url": "https://codeforces.com//problemset/problem/1938/B", "name": "Attraction Score", "tags": [], "problem_rating": "3000", "solved_by": "x172"},
{"url": "https://codeforces.com//problemset/problem/1938/A", "name": "Antiparticle Antiphysics", "tags": [], "problem_rating": "3500", "solved_by": "x47"},
{"url": "https://codeforces.com//problemset/problem/1937/B", "name": "Binary Path", "tags": ["dp", "greedy", "implementation"], "problem_rating": "1300", "solved_by": "x14147"},
{"url": "https://codeforces.com//problemset/problem/1937/A", "name": "Shuffle Party", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x22489"},
{"url": "https://codeforces.com//problemset/problem/1936/F", "name": "Grand Finale: Circles", "tags": ["binary search", "geometry"], "problem_rating": "3300", "solved_by": "x75"},
{"url": "https://codeforces.com//problemset/problem/1936/E", "name": "Yet Yet Another Permutation Problem", "tags": ["divide and conquer", "fft", "math"], "problem_rating": "3400", "solved_by": "x104"},
{"url": "https://codeforces.com//problemset/problem/1936/D", "name": "Bitwise Paradox", "tags": ["binary search", "bitmasks", "data structures", "greedy", "two pointers"], "problem_rating": "3100", "solved_by": "x465"},
{"url": "https://codeforces.com//problemset/problem/1936/C", "name": "Pokémon Arena", "tags": ["data structures", "graphs", "greedy", "implementation", "shortest paths", "sortings"], "problem_rating": "2400", "solved_by": "x1206"},
{"url": "https://codeforces.com//problemset/problem/1936/B", "name": "Pinball", "tags": ["binary search", "data structures", "implementation", "math", "two pointers"], "problem_rating": "2000", "solved_by": "x2650"},
{"url": "https://codeforces.com//problemset/problem/1936/A", "name": "Bitwise Operation Wizard", "tags": ["bitmasks", "constructive algorithms", "greedy", "interactive", "math"], "problem_rating": "1700", "solved_by": "x6999"},
{"url": "https://codeforces.com//problemset/problem/1935/F", "name": "Andrey's Tree", "tags": ["binary search", "constructive algorithms", "data structures", "dfs and similar", "dsu", "greedy", "implementation", "trees"], "problem_rating": "2800", "solved_by": "x424"},
{"url": "https://codeforces.com//problemset/problem/1935/E", "name": "Distance Learning Courses in MAC", "tags": ["bitmasks", "brute force", "data structures", "greedy", "math"], "problem_rating": "2400", "solved_by": "x1275"},
{"url": "https://codeforces.com//problemset/problem/1935/D", "name": "Exam in MAC", "tags": ["binary search", "combinatorics", "implementation", "math"], "problem_rating": "1800", "solved_by": "x7788"},
{"url": "https://codeforces.com//problemset/problem/1935/C", "name": "Messenger in MAC", "tags": ["binary search", "brute force", "constructive algorithms", "data structures", "dp", "greedy", "sortings"], "problem_rating": "1800", "solved_by": "x7706"},
{"url": "https://codeforces.com//problemset/problem/1935/B", "name": "Informatics in MAC", "tags": ["constructive algorithms"], "problem_rating": "1200", "solved_by": "x17622"},
{"url": "https://codeforces.com//problemset/problem/1935/A", "name": "Entertainment in MAC", "tags": ["constructive algorithms", "strings"], "problem_rating": "800", "solved_by": "x26859"},
{"url": "https://codeforces.com//problemset/problem/1934/E", "name": "Weird LCM Operations", "tags": ["brute force", "constructive algorithms", "number theory"], "problem_rating": "3000", "solved_by": "x206"},
{"url": "https://codeforces.com//problemset/problem/1934/D2", "name": "XOR Break --- Game Version", "tags": ["bitmasks", "games", "greedy", "interactive"], "problem_rating": "2400", "solved_by": "x1278"},
{"url": "https://codeforces.com//problemset/problem/1934/D1", "name": "XOR Break --- Solo Version", "tags": ["bitmasks", "constructive algorithms", "greedy"], "problem_rating": "2100", "solved_by": "x3268"},
{"url": "https://codeforces.com//problemset/problem/1934/C", "name": "Find a Mine", "tags": ["binary search", "constructive algorithms", "geometry", "greedy", "interactive", "math"], "problem_rating": "1700", "solved_by": "x6396"},
{"url": "https://codeforces.com//problemset/problem/1934/B", "name": "Yet Another Coin Problem", "tags": ["brute force", "dp", "greedy", "math"], "problem_rating": "1200", "solved_by": "x17867"},
{"url": "https://codeforces.com//problemset/problem/1934/A", "name": "Too Min Too Max", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x24529"},
{"url": "https://codeforces.com//problemset/problem/1933/G", "name": "Turtle Magic: Royal Turtle Shell Pattern", "tags": ["bitmasks", "brute force", "combinatorics", "constructive algorithms", "dfs and similar", "math"], "problem_rating": "2300", "solved_by": "x920"},
{"url": "https://codeforces.com//problemset/problem/1933/F", "name": "Turtle Mission: Robot and the Earthquake", "tags": ["dfs and similar", "dp", "graphs", "shortest paths"], "problem_rating": "2100", "solved_by": "x2349"},
{"url": "https://codeforces.com//problemset/problem/1933/E", "name": "Turtle vs. Rabbit Race: Optimal Trainings", "tags": ["binary search", "implementation", "math", "ternary search"], "problem_rating": "1500", "solved_by": "x10542"},
{"url": "https://codeforces.com//problemset/problem/1933/D", "name": "Turtle Tenacity: Continual Mods", "tags": ["constructive algorithms", "greedy", "math", "number theory", "sortings"], "problem_rating": "1200", "solved_by": "x19183"},
{"url": "https://codeforces.com//problemset/problem/1933/C", "name": "Turtle Fingers: Count the Values of k", "tags": ["brute force", "implementation", "math", "number theory"], "problem_rating": "1100", "solved_by": "x21756"},
{"url": "https://codeforces.com//problemset/problem/1933/B", "name": "Turtle Math: Fast Three Task", "tags": ["implementation", "math", "number theory"], "problem_rating": "800", "solved_by": "x31368"},
{"url": "https://codeforces.com//problemset/problem/1933/A", "name": "Turtle Puzzle: Rearrange and Negate", "tags": ["greedy", "math", "sortings"], "problem_rating": "800", "solved_by": "x36988"},
{"url": "https://codeforces.com//problemset/problem/1932/G", "name": "Moving Platforms", "tags": ["graphs", "math", "number theory", "shortest paths"], "problem_rating": "2300", "solved_by": "x985"},
{"url": "https://codeforces.com//problemset/problem/1932/F", "name": "Feed Cats", "tags": ["data structures", "dp", "sortings"], "problem_rating": "1900", "solved_by": "x3784"},
{"url": "https://codeforces.com//problemset/problem/1932/E", "name": "Final Countdown", "tags": ["implementation", "math", "number theory"], "problem_rating": "1600", "solved_by": "x7586"},
{"url": "https://codeforces.com//problemset/problem/1932/D", "name": "Card Game", "tags": ["greedy", "implementation"], "problem_rating": "1400", "solved_by": "x10791"},
{"url": "https://codeforces.com//problemset/problem/1932/C", "name": "LR-remainders", "tags": ["brute force", "data structures", "implementation", "math", "two pointers"], "problem_rating": "1400", "solved_by": "x14853"},
{"url": "https://codeforces.com//problemset/problem/1932/B", "name": "Chaya Calendar", "tags": ["number theory"], "problem_rating": "1100", "solved_by": "x19763"},
{"url": "https://codeforces.com//problemset/problem/1932/A", "name": "Thorns and Coins", "tags": ["dp", "greedy", "implementation"], "problem_rating": "800", "solved_by": "x28285"},
{"url": "https://codeforces.com//problemset/problem/1931/G", "name": "One-Dimensional Puzzle", "tags": ["combinatorics", "math", "number theory"], "problem_rating": "2000", "solved_by": "x2616"},
{"url": "https://codeforces.com//problemset/problem/1931/F", "name": "Chat Screenshots", "tags": ["combinatorics", "dfs and similar", "graphs"], "problem_rating": "1700", "solved_by": "x7506"},
{"url": "https://codeforces.com//problemset/problem/1931/E", "name": "Anna and the Valentine's Day Gift", "tags": ["games", "greedy", "math", "sortings"], "problem_rating": "1400", "solved_by": "x14587"},
{"url": "https://codeforces.com//problemset/problem/1931/D", "name": "Divisible Pairs", "tags": ["combinatorics", "math", "number theory"], "problem_rating": "1300", "solved_by": "x17388"},
{"url": "https://codeforces.com//problemset/problem/1931/C", "name": "Make Equal Again", "tags": ["brute force", "greedy", "math"], "problem_rating": "1000", "solved_by": "x27719"},
{"url": "https://codeforces.com//problemset/problem/1931/B", "name": "Make Equal", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x31269"},
{"url": "https://codeforces.com//problemset/problem/1931/A", "name": "Recovering a Small String", "tags": ["brute force", "strings"], "problem_rating": "800", "solved_by": "x34907"},
{"url": "https://codeforces.com//problemset/problem/1930/I", "name": "Counting Is Fun", "tags": ["combinatorics"], "problem_rating": "3500", "solved_by": "x64"},
{"url": "https://codeforces.com//problemset/problem/1930/H", "name": "Interactive Mex Tree", "tags": ["constructive algorithms", "dfs and similar", "interactive", "trees"], "problem_rating": "3300", "solved_by": "x147"},
{"url": "https://codeforces.com//problemset/problem/1930/G", "name": "Prefix Max Set Counting", "tags": ["data structures", "dp", "trees"], "problem_rating": "3100", "solved_by": "x323"},
{"url": "https://codeforces.com//problemset/problem/1930/F", "name": "Maximize the Difference", "tags": ["bitmasks", "brute force", "dfs and similar"], "problem_rating": "2700", "solved_by": "x666"},
{"url": "https://codeforces.com//problemset/problem/1930/E", "name": "2..3...4.... Wonderful! Wonderful!", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2400", "solved_by": "x1062"},
{"url": "https://codeforces.com//problemset/problem/1930/D2", "name": "Sum over all Substrings (Hard Version)", "tags": ["bitmasks", "divide and conquer", "dp", "dsu", "greedy", "implementation", "strings"], "problem_rating": "2100", "solved_by": "x2505"},
{"url": "https://codeforces.com//problemset/problem/1930/D1", "name": "Sum over all Substrings (Easy Version)", "tags": ["brute force", "dp", "greedy", "strings"], "problem_rating": "1800", "solved_by": "x3908"},
{"url": "https://codeforces.com//problemset/problem/1930/C", "name": "Lexicographically Largest", "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "sortings"], "problem_rating": "1700", "solved_by": "x6742"},
{"url": "https://codeforces.com//problemset/problem/1930/B", "name": "Permutation Printing", "tags": ["brute force", "constructive algorithms", "math"], "problem_rating": "1000", "solved_by": "x14511"},
{"url": "https://codeforces.com//problemset/problem/1930/A", "name": "Maximise The Score", "tags": ["greedy", "sortings"], "problem_rating": "800", "solved_by": "x17942"},
{"url": "https://codeforces.com//problemset/problem/1929/F", "name": "Sasha and the Wedding Binary Search Tree", "tags": ["brute force", "combinatorics", "data structures", "dfs and similar", "math", "trees"], "problem_rating": "2300", "solved_by": "x1710"},
{"url": "https://codeforces.com//problemset/problem/1929/E", "name": "Sasha and the Happy Tree Cutting", "tags": ["bitmasks", "brute force", "dfs and similar", "dp", "graphs", "greedy", "math", "trees"], "problem_rating": "2300", "solved_by": "x1601"},
{"url": "https://codeforces.com//problemset/problem/1929/D", "name": "Sasha and a Walk in the City", "tags": ["combinatorics", "dp", "math", "trees"], "problem_rating": "1900", "solved_by": "x4462"},
{"url": "https://codeforces.com//problemset/problem/1929/C", "name": "Sasha and the Casino", "tags": ["binary search", "brute force", "constructive algorithms", "games", "greedy", "math"], "problem_rating": "1400", "solved_by": "x14096"},
{"url": "https://codeforces.com//problemset/problem/1929/B", "name": "Sasha and the Drawing", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "800", "solved_by": "x24586"},
{"url": "https://codeforces.com//problemset/problem/1929/A", "name": "Sasha and the Beautiful Array", "tags": ["constructive algorithms", "greedy", "math", "sortings"], "problem_rating": "800", "solved_by": "x30370"},
{"url": "https://codeforces.com//problemset/problem/1928/F", "name": "Digital Patterns", "tags": ["combinatorics", "data structures", "implementation", "math"], "problem_rating": "2900", "solved_by": "x229"},
{"url": "https://codeforces.com//problemset/problem/1928/E", "name": "Modular Sequence", "tags": ["brute force", "constructive algorithms", "dp", "graphs", "greedy", "math", "number theory"], "problem_rating": "2300", "solved_by": "x1619"},
{"url": "https://codeforces.com//problemset/problem/1928/D", "name": "Lonely Mountain Dungeons", "tags": ["brute force", "data structures", "greedy", "math", "ternary search"], "problem_rating": "1900", "solved_by": "x4010"},
{"url": "https://codeforces.com//problemset/problem/1928/C", "name": "Physical Education Lesson", "tags": ["brute force", "math", "number theory"], "problem_rating": "1600", "solved_by": "x8057"},
{"url": "https://codeforces.com//problemset/problem/1928/B", "name": "Equalize", "tags": ["binary search", "greedy", "sortings", "two pointers"], "problem_rating": "1200", "solved_by": "x16409"},
{"url": "https://codeforces.com//problemset/problem/1928/A", "name": "Rectangle Cutting", "tags": ["geometry", "math"], "problem_rating": "800", "solved_by": "x21974"},
{"url": "https://codeforces.com//problemset/problem/1927/G", "name": "Paint Charges", "tags": ["data structures", "dp", "greedy", "math"], "problem_rating": "2300", "solved_by": "x1578"},
{"url": "https://codeforces.com//problemset/problem/1927/F", "name": "Microcycle", "tags": ["data structures", "dfs and similar", "dsu", "graphs", "greedy", "implementation", "sortings", "trees"], "problem_rating": "1900", "solved_by": "x4113"},
{"url": "https://codeforces.com//problemset/problem/1927/E", "name": "Klever Permutation", "tags": ["constructive algorithms", "math", "two pointers"], "problem_rating": "1400", "solved_by": "x13254"},
{"url": "https://codeforces.com//problemset/problem/1927/D", "name": "Find the Different Ones!", "tags": ["binary search", "brute force", "data structures", "dp", "dsu", "greedy", "two pointers"], "problem_rating": "1300", "solved_by": "x19859"},
{"url": "https://codeforces.com//problemset/problem/1927/C", "name": "Choose the Different Ones!", "tags": ["brute force", "greedy", "math"], "problem_rating": "1000", "solved_by": "x26810"},
{"url": "https://codeforces.com//problemset/problem/1927/B", "name": "Following the String", "tags": ["constructive algorithms", "greedy", "strings"], "problem_rating": "900", "solved_by": "x31833"},
{"url": "https://codeforces.com//problemset/problem/1927/A", "name": "Make it White", "tags": ["greedy", "strings"], "problem_rating": "800", "solved_by": "x41471"},
{"url": "https://codeforces.com//problemset/problem/1926/G", "name": "Vlad and Trouble at MIT", "tags": ["dfs and similar", "dp", "flows", "graphs", "greedy", "implementation", "trees"], "problem_rating": "1900", "solved_by": "x3297"},
{"url": "https://codeforces.com//problemset/problem/1926/F", "name": "Vlad and Avoiding X", "tags": ["bitmasks", "brute force", "dfs and similar", "dp", "implementation"], "problem_rating": "2200", "solved_by": "x1601"},
{"url": "https://codeforces.com//problemset/problem/1926/E", "name": "Vlad and an Odd Ordering", "tags": ["binary search", "bitmasks", "data structures", "dp", "implementation", "math", "number theory"], "problem_rating": "1500", "solved_by": "x11124"},
{"url": "https://codeforces.com//problemset/problem/1926/D", "name": "Vlad and Division", "tags": ["bitmasks", "greedy"], "problem_rating": "1300", "solved_by": "x14660"},
{"url": "https://codeforces.com//problemset/problem/1926/C", "name": "Vlad and a Sum of Sum of Digits", "tags": ["dp", "implementation"], "problem_rating": "1200", "solved_by": "x24983"},
{"url": "https://codeforces.com//problemset/problem/1926/B", "name": "Vlad and Shapes", "tags": ["geometry", "implementation"], "problem_rating": "800", "solved_by": "x31270"},
{"url": "https://codeforces.com//problemset/problem/1926/A", "name": "Vlad and the Best of Five", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x45069"},
{"url": "https://codeforces.com//problemset/problem/1925/D", "name": "Good Trip", "tags": ["combinatorics", "dp", "math", "probabilities"], "problem_rating": "1900", "solved_by": "x3424"},
{"url": "https://codeforces.com//problemset/problem/1925/B", "name": "A Balanced Problemset?", "tags": ["brute force", "greedy", "math", "number theory"], "problem_rating": "1200", "solved_by": "x19179"},
{"url": "https://codeforces.com//problemset/problem/1925/A", "name": "We Got Everything Covered!", "tags": ["constructive algorithms", "greedy", "strings"], "problem_rating": "800", "solved_by": "x28038"},
{"url": "https://codeforces.com//problemset/problem/1924/F", "name": "Anti-Proxy Attendance", "tags": ["constructive algorithms", "dp", "interactive", "ternary search"], "problem_rating": "3500", "solved_by": "x142"},
{"url": "https://codeforces.com//problemset/problem/1924/E", "name": "Paper Cutting Again", "tags": ["combinatorics", "probabilities"], "problem_rating": "3100", "solved_by": "x414"},
{"url": "https://codeforces.com//problemset/problem/1924/D", "name": "Balanced Subsequences", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2700", "solved_by": "x912"},
{"url": "https://codeforces.com//problemset/problem/1924/C", "name": "Fractal Origami", "tags": ["geometry", "math", "matrices"], "problem_rating": "2400", "solved_by": "x1095"},
{"url": "https://codeforces.com//problemset/problem/1924/B", "name": "Space Harbour", "tags": ["data structures", "implementation", "math", "sortings"], "problem_rating": "2100", "solved_by": "x2392"},
{"url": "https://codeforces.com//problemset/problem/1924/A", "name": "Did We Get Everything Covered?", "tags": ["constructive algorithms", "dp", "greedy", "shortest paths", "strings"], "problem_rating": "1500", "solved_by": "x13154"},
{"url": "https://codeforces.com//problemset/problem/1923/F", "name": "Shrink-Reverse", "tags": ["binary search", "brute force", "greedy", "hashing", "implementation", "string suffix structures", "strings"], "problem_rating": "2800", "solved_by": "x358"},
{"url": "https://codeforces.com//problemset/problem/1923/E", "name": "Count Paths", "tags": ["data structures", "dfs and similar", "dp", "dsu", "graphs", "trees"], "problem_rating": "2000", "solved_by": "x3491"},
{"url": "https://codeforces.com//problemset/problem/1923/D", "name": "Slimes", "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "two pointers"], "problem_rating": "1800", "solved_by": "x6345"},
{"url": "https://codeforces.com//problemset/problem/1923/C", "name": "Find B", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1400", "solved_by": "x14191"},
{"url": "https://codeforces.com//problemset/problem/1923/B", "name": "Monsters Attack!", "tags": ["dp", "greedy", "implementation"], "problem_rating": "1100", "solved_by": "x17021"},
{"url": "https://codeforces.com//problemset/problem/1923/A", "name": "Moving Chips", "tags": ["greedy", "implementation"], "problem_rating": "800", "solved_by": "x23992"},
{"url": "https://codeforces.com//problemset/problem/1922/F", "name": "Replace on Segment", "tags": ["dp", "graph matchings"], "problem_rating": "2500", "solved_by": "x1285"},
{"url": "https://codeforces.com//problemset/problem/1922/E", "name": "Increasing Subsequences", "tags": ["bitmasks", "constructive algorithms", "divide and conquer", "greedy", "math"], "problem_rating": "1800", "solved_by": "x7363"},
{"url": "https://codeforces.com//problemset/problem/1922/D", "name": "Berserk Monsters", "tags": ["brute force", "data structures", "dsu", "implementation", "math"], "problem_rating": "1900", "solved_by": "x5448"},
{"url": "https://codeforces.com//problemset/problem/1922/C", "name": "Closest Cities", "tags": ["greedy", "implementation", "math"], "problem_rating": "1300", "solved_by": "x17719"},
{"url": "https://codeforces.com//problemset/problem/1922/B", "name": "Forming Triangles", "tags": ["combinatorics", "constructive algorithms", "math", "sortings"], "problem_rating": "1200", "solved_by": "x19847"},
{"url": "https://codeforces.com//problemset/problem/1922/A", "name": "Tricky Template", "tags": ["constructive algorithms", "implementation", "strings"], "problem_rating": "800", "solved_by": "x26468"},
{"url": "https://codeforces.com//problemset/problem/1921/G", "name": "Mischievous Shooter", "tags": ["brute force", "data structures", "divide and conquer", "dp", "implementation"], "problem_rating": "2200", "solved_by": "x1184"},
{"url": "https://codeforces.com//problemset/problem/1921/F", "name": "Sum of Progression", "tags": ["brute force", "data structures", "dp", "implementation", "math"], "problem_rating": "1900", "solved_by": "x3645"},
{"url": "https://codeforces.com//problemset/problem/1921/E", "name": "Eat the Chip", "tags": ["brute force", "games", "greedy", "math"], "problem_rating": "1600", "solved_by": "x9361"},
{"url": "https://codeforces.com//problemset/problem/1921/D", "name": "Very Different Array", "tags": ["data structures", "greedy", "sortings", "two pointers"], "problem_rating": "1100", "solved_by": "x20871"},
{"url": "https://codeforces.com//problemset/problem/1921/C", "name": "Sending Messages", "tags": ["greedy", "math"], "problem_rating": "900", "solved_by": "x28402"},
{"url": "https://codeforces.com//problemset/problem/1921/B", "name": "Arranging Cats", "tags": ["greedy", "implementation"], "problem_rating": "800", "solved_by": "x32940"},
{"url": "https://codeforces.com//problemset/problem/1921/A", "name": "Square", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x41534"},
{"url": "https://codeforces.com//problemset/problem/1920/F2", "name": "Smooth Sailing (Hard Version)", "tags": ["binary search", "data structures", "dsu", "geometry", "graphs", "trees"], "problem_rating": "3000", "solved_by": "x434"},
{"url": "https://codeforces.com//problemset/problem/1920/F1", "name": "Smooth Sailing (Easy Version)", "tags": ["binary search", "brute force", "data structures", "dfs and similar", "dsu", "graphs", "shortest paths"], "problem_rating": "2500", "solved_by": "x917"},
{"url": "https://codeforces.com//problemset/problem/1920/E", "name": "Counting Binary Strings", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2100", "solved_by": "x2498"},
{"url": "https://codeforces.com//problemset/problem/1920/D", "name": "Array Repetition", "tags": ["binary search", "brute force", "dsu", "implementation", "math"], "problem_rating": "1900", "solved_by": "x5338"},
{"url": "https://codeforces.com//problemset/problem/1920/C", "name": "Partitioning the Array", "tags": ["brute force", "math", "number theory"], "problem_rating": "1600", "solved_by": "x12660"},
{"url": "https://codeforces.com//problemset/problem/1920/B", "name": "Summation Game", "tags": ["games", "greedy", "math", "sortings"], "problem_rating": "1100", "solved_by": "x20070"},
{"url": "https://codeforces.com//problemset/problem/1920/A", "name": "Satisfying Constraints", "tags": ["brute force", "greedy", "math"], "problem_rating": "800", "solved_by": "x27137"},
{"url": "https://codeforces.com//problemset/problem/1919/H", "name": "Tree Diameter", "tags": ["interactive", "trees"], "problem_rating": "2000", "solved_by": "x137"},
{"url": "https://codeforces.com//problemset/problem/1919/G", "name": "Tree LGM", "tags": ["constructive algorithms", "divide and conquer", "games", "trees"], "problem_rating": "3500", "solved_by": "x176"},
{"url": "https://codeforces.com//problemset/problem/1919/F2", "name": "Wine Factory (Hard Version)", "tags": ["data structures", "dp", "flows", "greedy", "matrices"], "problem_rating": "2800", "solved_by": "x785"},
{"url": "https://codeforces.com//problemset/problem/1919/F1", "name": "Wine Factory (Easy Version)", "tags": ["data structures", "greedy"], "problem_rating": "2300", "solved_by": "x2097"},
{"url": "https://codeforces.com//problemset/problem/1919/E", "name": "Counting Prefixes", "tags": ["combinatorics", "constructive algorithms", "dp", "implementation", "math"], "problem_rating": "2600", "solved_by": "x816"},
{"url": "https://codeforces.com//problemset/problem/1919/D", "name": "01 Tree", "tags": ["constructive algorithms", "data structures", "dsu", "greedy", "sortings", "trees"], "problem_rating": "2100", "solved_by": "x3713"},
{"url": "https://codeforces.com//problemset/problem/1919/C", "name": "Grouping Increases", "tags": ["data structures", "dp", "greedy"], "problem_rating": "1400", "solved_by": "x17860"},
{"url": "https://codeforces.com//problemset/problem/1919/B", "name": "Plus-Minus Split", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x29327"},
{"url": "https://codeforces.com//problemset/problem/1919/A", "name": "Wallet Exchange", "tags": ["games", "math"], "problem_rating": "800", "solved_by": "x32516"},
{"url": "https://codeforces.com//problemset/problem/1918/G", "name": "Permutation of Given", "tags": ["constructive algorithms", "math"], "problem_rating": "2700", "solved_by": "x440"},
{"url": "https://codeforces.com//problemset/problem/1918/F", "name": "Caterpillar on a Tree", "tags": ["dfs and similar", "graphs", "greedy", "implementation", "sortings", "trees"], "problem_rating": "2500", "solved_by": "x824"},
{"url": "https://codeforces.com//problemset/problem/1918/E", "name": "ace5 and Task Order", "tags": ["constructive algorithms", "divide and conquer", "implementation", "interactive", "probabilities", "sortings"], "problem_rating": "2200", "solved_by": "x1643"},
{"url": "https://codeforces.com//problemset/problem/1918/D", "name": "Blocking Elements", "tags": ["binary search", "data structures", "dp", "implementation", "two pointers"], "problem_rating": "1900", "solved_by": "x4516"},
{"url": "https://codeforces.com//problemset/problem/1918/C", "name": "XOR-distance", "tags": ["bitmasks", "greedy", "implementation", "math"], "problem_rating": "1400", "solved_by": "x13332"},
{"url": "https://codeforces.com//problemset/problem/1918/B", "name": "Minimize Inversions", "tags": ["constructive algorithms", "data structures", "greedy", "implementation", "sortings"], "problem_rating": "900", "solved_by": "x22989"},
{"url": "https://codeforces.com//problemset/problem/1918/A", "name": "Brick Wall", "tags": ["constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "800", "solved_by": "x29507"},
{"url": "https://codeforces.com//problemset/problem/1917/F", "name": "Construct Tree", "tags": ["bitmasks", "constructive algorithms", "dp", "trees"], "problem_rating": "2500", "solved_by": "x931"},
{"url": "https://codeforces.com//problemset/problem/1917/E", "name": "Construct Matrix", "tags": ["constructive algorithms", "math"], "problem_rating": "2500", "solved_by": "x1319"},
{"url": "https://codeforces.com//problemset/problem/1917/D", "name": "Yet Another Inversions Problem", "tags": ["combinatorics", "data structures", "dp", "implementation", "math", "number theory"], "problem_rating": "2300", "solved_by": "x1716"},
{"url": "https://codeforces.com//problemset/problem/1917/C", "name": "Watering an Array", "tags": ["brute force", "greedy", "implementation", "math"], "problem_rating": "1600", "solved_by": "x9894"},
{"url": "https://codeforces.com//problemset/problem/1917/B", "name": "Erase First or Second Letter", "tags": ["brute force", "combinatorics", "data structures", "dp", "strings"], "problem_rating": "1100", "solved_by": "x20772"},
{"url": "https://codeforces.com//problemset/problem/1917/A", "name": "Least Product", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x24855"},
{"url": "https://codeforces.com//problemset/problem/1916/H2", "name": "Matrix Rank (Hard Version)", "tags": ["combinatorics", "dp", "math", "matrices", "string suffix structures"], "problem_rating": "2700", "solved_by": "x519"},
{"url": "https://codeforces.com//problemset/problem/1916/H1", "name": "Matrix Rank (Easy Version)", "tags": ["brute force", "combinatorics", "dp", "math", "matrices"], "problem_rating": "2700", "solved_by": "x600"},
{"url": "https://codeforces.com//problemset/problem/1916/G", "name": "Optimizations From Chelsu", "tags": ["divide and conquer", "dp", "number theory", "trees"], "problem_rating": "3500", "solved_by": "x143"},
{"url": "https://codeforces.com//problemset/problem/1916/F", "name": "Group Division", "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy"], "problem_rating": "2900", "solved_by": "x439"},
{"url": "https://codeforces.com//problemset/problem/1916/E", "name": "Happy Life in University", "tags": ["data structures", "dfs and similar", "greedy", "trees"], "problem_rating": "2300", "solved_by": "x2157"},
{"url": "https://codeforces.com//problemset/problem/1916/D", "name": "Mathematical Problem", "tags": ["brute force", "constructive algorithms", "geometry", "math"], "problem_rating": "1700", "solved_by": "x8219"},
{"url": "https://codeforces.com//problemset/problem/1916/C", "name": "Training Before the Olympiad", "tags": ["constructive algorithms", "games", "greedy", "implementation", "math"], "problem_rating": "1200", "solved_by": "x17289"},
{"url": "https://codeforces.com//problemset/problem/1916/B", "name": "Two Divisors", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "1000", "solved_by": "x24753"},
{"url": "https://codeforces.com//problemset/problem/1916/A", "name": "2023", "tags": ["constructive algorithms", "implementation", "math", "number theory"], "problem_rating": "800", "solved_by": "x25170"},
{"url": "https://codeforces.com//problemset/problem/1915/G", "name": "Bicycles", "tags": ["graphs", "greedy", "implementation", "shortest paths", "sortings"], "problem_rating": "1800", "solved_by": "x5890"},
{"url": "https://codeforces.com//problemset/problem/1915/F", "name": "Greetings", "tags": ["data structures", "divide and conquer", "sortings"], "problem_rating": "1500", "solved_by": "x12655"},
{"url": "https://codeforces.com//problemset/problem/1915/E", "name": "Romantic Glasses", "tags": ["data structures", "greedy", "math"], "problem_rating": "1300", "solved_by": "x20035"},
{"url": "https://codeforces.com//problemset/problem/1915/D", "name": "Unnatural Language Processing", "tags": ["greedy", "implementation", "strings"], "problem_rating": "900", "solved_by": "x29077"},
{"url": "https://codeforces.com//problemset/problem/1915/C", "name": "Can I Square?", "tags": ["binary search", "implementation"], "problem_rating": "800", "solved_by": "x39981"},
{"url": "https://codeforces.com//problemset/problem/1915/B", "name": "Not Quite Latin Square", "tags": ["bitmasks", "brute force", "implementation"], "problem_rating": "800", "solved_by": "x40424"},
{"url": "https://codeforces.com//problemset/problem/1915/A", "name": "Odd One Out", "tags": ["bitmasks", "implementation"], "problem_rating": "800", "solved_by": "x53211"},
{"url": "https://codeforces.com//problemset/problem/1914/G2", "name": "Light Bulbs (Hard Version)", "tags": ["combinatorics", "data structures", "dfs and similar", "dp", "graphs", "hashing"], "problem_rating": "2300", "solved_by": "x1274"},
{"url": "https://codeforces.com//problemset/problem/1914/G1", "name": "Light Bulbs (Easy Version)", "tags": ["brute force", "combinatorics", "dfs and similar", "dp", "dsu", "graphs", "math", "trees"], "problem_rating": "2100", "solved_by": "x1751"},
{"url": "https://codeforces.com//problemset/problem/1914/F", "name": "Programming Competition", "tags": ["dfs and similar", "dp", "graph matchings", "greedy", "trees"], "problem_rating": "1900", "solved_by": "x3889"},
{"url": "https://codeforces.com//problemset/problem/1914/E2", "name": "Game with Marbles (Hard Version)", "tags": ["games", "greedy", "sortings"], "problem_rating": "1400", "solved_by": "x11795"},
{"url": "https://codeforces.com//problemset/problem/1914/E1", "name": "Game with Marbles (Easy Version)", "tags": ["brute force", "games", "greedy", "sortings"], "problem_rating": "1400", "solved_by": "x11690"},
{"url": "https://codeforces.com//problemset/problem/1914/D", "name": "Three Activities", "tags": ["brute force", "dp", "greedy", "implementation", "sortings"], "problem_rating": "1200", "solved_by": "x19894"},
{"url": "https://codeforces.com//problemset/problem/1914/C", "name": "Quests", "tags": ["greedy", "math"], "problem_rating": "1100", "solved_by": "x22379"},
{"url": "https://codeforces.com//problemset/problem/1914/B", "name": "Preparing for the Contest", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x29506"},
{"url": "https://codeforces.com//problemset/problem/1914/A", "name": "Problemsolving Log", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x30781"},
{"url": "https://codeforces.com//problemset/problem/1913/F", "name": "Palindromic Problem", "tags": ["binary search", "data structures", "hashing", "string suffix structures", "strings"], "problem_rating": "2800", "solved_by": "x304"},
{"url": "https://codeforces.com//problemset/problem/1913/E", "name": "Matrix Problem", "tags": ["flows", "graphs"], "problem_rating": "2400", "solved_by": "x956"},
{"url": "https://codeforces.com//problemset/problem/1913/D", "name": "Array Collapse", "tags": ["data structures", "divide and conquer", "dp", "trees"], "problem_rating": "2100", "solved_by": "x2925"},
{"url": "https://codeforces.com//problemset/problem/1913/C", "name": "Game with Multiset", "tags": ["binary search", "bitmasks", "brute force", "greedy"], "problem_rating": "1300", "solved_by": "x14362"},
{"url": "https://codeforces.com//problemset/problem/1913/B", "name": "Swap and Delete", "tags": ["strings"], "problem_rating": "1000", "solved_by": "x24132"},
{"url": "https://codeforces.com//problemset/problem/1913/A", "name": "Rating Increase", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x22968"},
{"url": "https://codeforces.com//problemset/problem/1912/L", "name": "LOL Lovers", "tags": ["strings"], "problem_rating": "800", "solved_by": "x6689"},
{"url": "https://codeforces.com//problemset/problem/1912/K", "name": "Kim's Quest", "tags": ["bitmasks", "combinatorics", "dp"], "problem_rating": "1800", "solved_by": "x2234"},
{"url": "https://codeforces.com//problemset/problem/1912/J", "name": "Joy of Pokémon Observation", "tags": [], "problem_rating": "2300", "solved_by": "x539"},
{"url": "https://codeforces.com//problemset/problem/1912/I", "name": "Innovative Washing Machine", "tags": ["geometry", "math", "two pointers"], "problem_rating": "3300", "solved_by": "x56"},
{"url": "https://codeforces.com//problemset/problem/1912/H", "name": "Hypercatapult Commute", "tags": ["graphs"], "problem_rating": "2400", "solved_by": "x396"},
{"url": "https://codeforces.com//problemset/problem/1912/G", "name": "Great City Saint Petersburg", "tags": ["data structures"], "problem_rating": "2400", "solved_by": "x438"},
{"url": "https://codeforces.com//problemset/problem/1912/F", "name": "Fugitive Frenzy", "tags": ["math", "probabilities"], "problem_rating": "3100", "solved_by": "x109"},
{"url": "https://codeforces.com//problemset/problem/1912/E", "name": "Evaluate It and Back Again", "tags": ["constructive algorithms", "implementation", "math"], "problem_rating": "2200", "solved_by": "x837"},
{"url": "https://codeforces.com//problemset/problem/1912/D", "name": "Divisibility Test", "tags": ["math"], "problem_rating": "1900", "solved_by": "x1388"},
{"url": "https://codeforces.com//problemset/problem/1912/C", "name": "Cactus Transformation", "tags": ["constructive algorithms"], "problem_rating": "3300", "solved_by": "x54"},
{"url": "https://codeforces.com//problemset/problem/1912/B", "name": "Blueprint for Seating", "tags": ["combinatorics", "divide and conquer", "math"], "problem_rating": "2100", "solved_by": "x972"},
{"url": "https://codeforces.com//problemset/problem/1912/A", "name": "Accumulator Apex", "tags": ["data structures", "implementation", "sortings"], "problem_rating": "1900", "solved_by": "x1965"},
{"url": "https://codeforces.com//problemset/problem/1910/J", "name": "Two Colors", "tags": ["*special problem"], "problem_rating": "2900", "solved_by": "x48"},
{"url": "https://codeforces.com//problemset/problem/1910/I", "name": "Inverse Problem", "tags": ["*special problem", "combinatorics", "dp"], "problem_rating": "2700", "solved_by": "x47"},
{"url": "https://codeforces.com//problemset/problem/1910/H", "name": "Sum of Digits of Sums", "tags": ["*special problem", "binary search", "data structures"], "problem_rating": "2400", "solved_by": "x84"},
{"url": "https://codeforces.com//problemset/problem/1910/G", "name": "Pool Records", "tags": ["*special problem", "greedy"], "problem_rating": "2700", "solved_by": "x58"},
{"url": "https://codeforces.com//problemset/problem/1910/F", "name": "Build Railway Stations", "tags": ["*special problem", "greedy", "trees"], "problem_rating": "2000", "solved_by": "x172"},
{"url": "https://codeforces.com//problemset/problem/1910/E", "name": "Maximum Sum Subarrays", "tags": ["*special problem", "dp"], "problem_rating": "2100", "solved_by": "x184"},
{"url": "https://codeforces.com//problemset/problem/1910/D", "name": "Remove and Add", "tags": ["*special problem", "greedy"], "problem_rating": "1800", "solved_by": "x341"},
{"url": "https://codeforces.com//problemset/problem/1910/C", "name": "Poisonous Swamp", "tags": ["*special problem", "*special problem", "implementation", "implementation"], "problem_rating": "1600", "solved_by": "x613"},
{"url": "https://codeforces.com//problemset/problem/1910/B", "name": "Security Guard", "tags": ["*special problem", "greedy"], "problem_rating": "1600", "solved_by": "x651"},
{"url": "https://codeforces.com//problemset/problem/1910/A", "name": "Username", "tags": ["*special problem", "implementation"], "problem_rating": "1100", "solved_by": "x1703"},
{"url": "https://codeforces.com//problemset/problem/1909/I", "name": "Short Permutation Problem", "tags": ["combinatorics", "dp", "fft", "math"], "problem_rating": "1900", "solved_by": "x116"},
{"url": "https://codeforces.com//problemset/problem/1909/H", "name": "Parallel Swaps Sort", "tags": ["constructive algorithms", "data structures"], "problem_rating": "3500", "solved_by": "x71"},
{"url": "https://codeforces.com//problemset/problem/1909/G", "name": "Pumping Lemma", "tags": ["hashing", "strings"], "problem_rating": "3000", "solved_by": "x371"},
{"url": "https://codeforces.com//problemset/problem/1909/F2", "name": "Small Permutation Problem (Hard Version)", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2500", "solved_by": "x875"},
{"url": "https://codeforces.com//problemset/problem/1909/F1", "name": "Small Permutation Problem (Easy Version)", "tags": ["brute force", "combinatorics", "dp", "math"], "problem_rating": "2200", "solved_by": "x1709"},
{"url": "https://codeforces.com//problemset/problem/1909/E", "name": "Multiple Lamps", "tags": ["bitmasks", "brute force", "constructive algorithms", "math", "number theory"], "problem_rating": "2400", "solved_by": "x1310"},
{"url": "https://codeforces.com//problemset/problem/1909/D", "name": "Split Plus K", "tags": ["greedy", "math", "number theory"], "problem_rating": "1900", "solved_by": "x4198"},
{"url": "https://codeforces.com//problemset/problem/1909/C", "name": "Heavy Intervals", "tags": ["constructive algorithms", "data structures", "dsu", "greedy", "math", "sortings"], "problem_rating": "1400", "solved_by": "x10568"},
{"url": "https://codeforces.com//problemset/problem/1909/B", "name": "Make Almost Equal With Mod", "tags": ["bitmasks", "constructive algorithms", "math", "number theory"], "problem_rating": "1200", "solved_by": "x15465"},
{"url": "https://codeforces.com//problemset/problem/1909/A", "name": "Distinct Buttons", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x16083"},
{"url": "https://codeforces.com//problemset/problem/1907/G", "name": "Lights", "tags": ["brute force", "constructive algorithms", "dfs and similar", "graphs", "greedy", "implementation"], "problem_rating": "2200", "solved_by": "x1838"},
{"url": "https://codeforces.com//problemset/problem/1907/F", "name": "Shift and Reverse", "tags": ["greedy", "sortings"], "problem_rating": "1800", "solved_by": "x4632"},
{"url": "https://codeforces.com//problemset/problem/1907/E", "name": "Good Triples", "tags": ["brute force", "combinatorics", "number theory"], "problem_rating": "1600", "solved_by": "x9554"},
{"url": "https://codeforces.com//problemset/problem/1907/D", "name": "Jumping Through Segments", "tags": ["binary search", "constructive algorithms"], "problem_rating": "1400", "solved_by": "x12994"},
{"url": "https://codeforces.com//problemset/problem/1907/C", "name": "Removal of Unattractive Pairs", "tags": ["constructive algorithms", "greedy", "math", "strings"], "problem_rating": "1200", "solved_by": "x19332"},
{"url": "https://codeforces.com//problemset/problem/1907/B", "name": "YetnotherrokenKeoard", "tags": ["data structures", "implementation", "strings"], "problem_rating": "1000", "solved_by": "x24440"},
{"url": "https://codeforces.com//problemset/problem/1907/A", "name": "Rook", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x35422"},
{"url": "https://codeforces.com//problemset/problem/1906/M", "name": "Triangle Construction", "tags": ["greedy", "math"], "problem_rating": "1700", "solved_by": "x2476"},
{"url": "https://codeforces.com//problemset/problem/1906/L", "name": "Palindromic Parentheses", "tags": ["constructive algorithms"], "problem_rating": "2500", "solved_by": "x458"},
{"url": "https://codeforces.com//problemset/problem/1906/K", "name": "Deck-Building Game", "tags": ["divide and conquer", "math"], "problem_rating": "2500", "solved_by": "x274"},
{"url": "https://codeforces.com//problemset/problem/1906/J", "name": "Count BFS Graph", "tags": ["combinatorics", "dp"], "problem_rating": "2100", "solved_by": "x701"},
{"url": "https://codeforces.com//problemset/problem/1906/I", "name": "Contingency Plan 2", "tags": ["graph matchings"], "problem_rating": "2900", "solved_by": "x132"},
{"url": "https://codeforces.com//problemset/problem/1906/H", "name": "Twin Friends", "tags": ["combinatorics", "dp"], "problem_rating": "2200", "solved_by": "x637"},
{"url": "https://codeforces.com//problemset/problem/1906/G", "name": "Grid Game 2", "tags": ["games", "number theory"], "problem_rating": "2900", "solved_by": "x159"},
{"url": "https://codeforces.com//problemset/problem/1906/F", "name": "Maximize The Value", "tags": ["data structures", "sortings"], "problem_rating": "2100", "solved_by": "x996"},
{"url": "https://codeforces.com//problemset/problem/1906/E", "name": "Merge Not Sort", "tags": ["constructive algorithms", "dp"], "problem_rating": "1900", "solved_by": "x1411"},
{"url": "https://codeforces.com//problemset/problem/1906/D", "name": "Spaceship Exploration", "tags": ["binary search", "geometry"], "problem_rating": "2800", "solved_by": "x101"},
{"url": "https://codeforces.com//problemset/problem/1906/C", "name": "Cursed Game", "tags": ["interactive"], "problem_rating": "3000", "solved_by": "x168"},
{"url": "https://codeforces.com//problemset/problem/1906/B", "name": "Button Pressing", "tags": ["bitmasks", "constructive algorithms", "hashing"], "problem_rating": "2600", "solved_by": "x476"},
{"url": "https://codeforces.com//problemset/problem/1906/A", "name": "Easy As ABC", "tags": ["brute force"], "problem_rating": "1000", "solved_by": "x3805"},
{"url": "https://codeforces.com//problemset/problem/1905/F", "name": "Field Should Not Be Empty", "tags": ["brute force", "data structures", "divide and conquer"], "problem_rating": "2600", "solved_by": "x506"},
{"url": "https://codeforces.com//problemset/problem/1905/E", "name": "One-X", "tags": ["combinatorics", "dfs and similar", "dp", "math", "trees"], "problem_rating": "2400", "solved_by": "x903"},
{"url": "https://codeforces.com//problemset/problem/1905/D", "name": "Cyclic MEX", "tags": ["data structures", "implementation", "math", "two pointers"], "problem_rating": "2000", "solved_by": "x3657"},
{"url": "https://codeforces.com//problemset/problem/1905/C", "name": "Largest Subsequence", "tags": ["greedy", "strings"], "problem_rating": "1400", "solved_by": "x11614"},
{"url": "https://codeforces.com//problemset/problem/1905/B", "name": "Begginer's Zelda", "tags": ["greedy", "trees"], "problem_rating": "1100", "solved_by": "x15841"},
{"url": "https://codeforces.com//problemset/problem/1905/A", "name": "Constructive Problems", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x22435"},
{"url": "https://codeforces.com//problemset/problem/1904/F", "name": "Beautiful Tree", "tags": ["data structures", "dfs and similar", "graphs", "implementation", "trees"], "problem_rating": "2800", "solved_by": "x339"},
{"url": "https://codeforces.com//problemset/problem/1904/E", "name": "Tree Queries", "tags": ["data structures", "dfs and similar", "graphs", "implementation", "trees"], "problem_rating": "2500", "solved_by": "x899"},
{"url": "https://codeforces.com//problemset/problem/1904/D2", "name": "Set To Max (Hard Version)", "tags": ["constructive algorithms", "data structures", "divide and conquer", "greedy", "implementation", "sortings"], "problem_rating": "1800", "solved_by": "x4115"},
{"url": "https://codeforces.com//problemset/problem/1904/D1", "name": "Set To Max (Easy Version)", "tags": ["brute force", "constructive algorithms", "greedy"], "problem_rating": "1600", "solved_by": "x6236"},
{"url": "https://codeforces.com//problemset/problem/1904/C", "name": "Array Game", "tags": ["binary search", "brute force", "data structures", "sortings", "two pointers"], "problem_rating": "1400", "solved_by": "x11775"},
{"url": "https://codeforces.com//problemset/problem/1904/B", "name": "Collecting Game", "tags": ["binary search", "dp", "greedy", "sortings", "two pointers"], "problem_rating": "1100", "solved_by": "x14108"},
{"url": "https://codeforces.com//problemset/problem/1904/A", "name": "Forked!", "tags": ["brute force", "implementation"], "problem_rating": "900", "solved_by": "x17857"},
{"url": "https://codeforces.com//problemset/problem/1903/F", "name": "Babysitting", "tags": ["2-sat", "binary search", "data structures", "graphs", "trees"], "problem_rating": "2500", "solved_by": "x597"},
{"url": "https://codeforces.com//problemset/problem/1903/E", "name": "Geo Game", "tags": ["greedy", "interactive", "math"], "problem_rating": "2000", "solved_by": "x1907"},
{"url": "https://codeforces.com//problemset/problem/1903/D2", "name": "Maximum And Queries (hard version)", "tags": ["bitmasks", "divide and conquer", "dp", "greedy"], "problem_rating": "2500", "solved_by": "x742"},
{"url": "https://codeforces.com//problemset/problem/1903/D1", "name": "Maximum And Queries (easy version)", "tags": ["binary search", "bitmasks", "brute force", "greedy"], "problem_rating": "1700", "solved_by": "x5383"},
{"url": "https://codeforces.com//problemset/problem/1903/C", "name": "Theofanis' Nightmare", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1400", "solved_by": "x11224"},
{"url": "https://codeforces.com//problemset/problem/1903/B", "name": "StORage room", "tags": ["bitmasks", "brute force", "constructive algorithms", "greedy"], "problem_rating": "1200", "solved_by": "x12117"},
{"url": "https://codeforces.com//problemset/problem/1903/A", "name": "Halloumi Boxes", "tags": ["brute force", "greedy", "sortings"], "problem_rating": "800", "solved_by": "x27845"},
{"url": "https://codeforces.com//problemset/problem/1902/F", "name": "Trees and XOR Queries Again", "tags": ["data structures", "dfs and similar", "divide and conquer", "graphs", "implementation", "math", "trees"], "problem_rating": "2400", "solved_by": "x954"},
{"url": "https://codeforces.com//problemset/problem/1902/E", "name": "Collapsing Strings", "tags": ["data structures", "strings", "trees"], "problem_rating": "1900", "solved_by": "x4092"},
{"url": "https://codeforces.com//problemset/problem/1902/D", "name": "Robot Queries", "tags": ["binary search", "data structures", "dp", "implementation"], "problem_rating": "1900", "solved_by": "x3898"},
{"url": "https://codeforces.com//problemset/problem/1902/C", "name": "Insert and Equalize", "tags": ["brute force", "constructive algorithms", "greedy", "math", "number theory"], "problem_rating": "1300", "solved_by": "x13036"},
{"url": "https://codeforces.com//problemset/problem/1902/B", "name": "Getting Points", "tags": ["binary search", "brute force", "greedy"], "problem_rating": "1100", "solved_by": "x13896"},
{"url": "https://codeforces.com//problemset/problem/1902/A", "name": "Binary Imbalance", "tags": ["constructive algorithms"], "problem_rating": "800", "solved_by": "x20431"},
{"url": "https://codeforces.com//problemset/problem/1901/F", "name": "Landscaping", "tags": ["binary search", "geometry", "two pointers"], "problem_rating": "2900", "solved_by": "x149"},
{"url": "https://codeforces.com//problemset/problem/1901/E", "name": "Compressed Tree", "tags": ["dfs and similar", "dp", "graphs", "greedy", "sortings", "trees"], "problem_rating": "2200", "solved_by": "x1449"},
{"url": "https://codeforces.com//problemset/problem/1901/D", "name": "Yet Another Monster Fight", "tags": ["binary search", "dp", "greedy", "implementation", "math"], "problem_rating": "1700", "solved_by": "x6542"},
{"url": "https://codeforces.com//problemset/problem/1901/C", "name": "Add, Divide and Floor", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1400", "solved_by": "x11364"},
{"url": "https://codeforces.com//problemset/problem/1901/B", "name": "Chip and Ribbon", "tags": ["greedy", "math"], "problem_rating": "1100", "solved_by": "x14505"},
{"url": "https://codeforces.com//problemset/problem/1901/A", "name": "Line Trip", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x28199"},
{"url": "https://codeforces.com//problemset/problem/1900/F", "name": "Local Deletions", "tags": ["binary search", "data structures", "implementation"], "problem_rating": "2800", "solved_by": "x275"},
{"url": "https://codeforces.com//problemset/problem/1900/E", "name": "Transitive Graph", "tags": ["dfs and similar", "dp", "dsu", "graphs", "implementation"], "problem_rating": "2100", "solved_by": "x1942"},
{"url": "https://codeforces.com//problemset/problem/1900/D", "name": "Small GCD", "tags": ["bitmasks", "brute force", "dp", "math", "number theory"], "problem_rating": "2000", "solved_by": "x3948"},
{"url": "https://codeforces.com//problemset/problem/1900/C", "name": "Anji's Binary Tree", "tags": ["dfs and similar", "dp", "trees"], "problem_rating": "1300", "solved_by": "x11014"},
{"url": "https://codeforces.com//problemset/problem/1900/B", "name": "Laura and Operations", "tags": ["dp", "math"], "problem_rating": "900", "solved_by": "x16803"},
{"url": "https://codeforces.com//problemset/problem/1900/A", "name": "Cover in Water", "tags": ["constructive algorithms", "greedy", "implementation", "strings"], "problem_rating": "800", "solved_by": "x24510"},
{"url": "https://codeforces.com//problemset/problem/1899/G", "name": "Unusual Entertainment", "tags": ["data structures", "dfs and similar", "dsu", "shortest paths", "sortings", "trees", "two pointers"], "problem_rating": "1900", "solved_by": "x3048"},
{"url": "https://codeforces.com//problemset/problem/1899/F", "name": "Alex's whims", "tags": ["constructive algorithms", "graphs", "greedy", "shortest paths", "trees"], "problem_rating": "1600", "solved_by": "x7143"},
{"url": "https://codeforces.com//problemset/problem/1899/E", "name": "Queue Sort", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "1300", "solved_by": "x14763"},
{"url": "https://codeforces.com//problemset/problem/1899/D", "name": "Yarik and Musical Notes", "tags": ["hashing", "math", "number theory"], "problem_rating": "1300", "solved_by": "x12957"},
{"url": "https://codeforces.com//problemset/problem/1899/C", "name": "Yarik and Array", "tags": ["dp", "greedy", "two pointers"], "problem_rating": "1100", "solved_by": "x19621"},
{"url": "https://codeforces.com//problemset/problem/1899/B", "name": "250 Thousand Tons of TNT", "tags": ["brute force", "implementation", "number theory"], "problem_rating": "1100", "solved_by": "x19408"},
{"url": "https://codeforces.com//problemset/problem/1899/A", "name": "Game with Integers", "tags": ["games", "math", "number theory"], "problem_rating": "800", "solved_by": "x41611"},
{"url": "https://codeforces.com//problemset/problem/1898/F", "name": "Vova Escapes the Matrix", "tags": ["brute force", "dfs and similar", "divide and conquer", "shortest paths"], "problem_rating": "2600", "solved_by": "x780"},
{"url": "https://codeforces.com//problemset/problem/1898/E", "name": "Sofia and Strings", "tags": ["data structures", "greedy", "sortings", "strings", "two pointers"], "problem_rating": "2200", "solved_by": "x2167"},
{"url": "https://codeforces.com//problemset/problem/1898/D", "name": "Absolute Beauty", "tags": ["greedy", "math"], "problem_rating": "1900", "solved_by": "x4999"},
{"url": "https://codeforces.com//problemset/problem/1898/C", "name": "Colorful Grid", "tags": ["constructive algorithms"], "problem_rating": "1700", "solved_by": "x5208"},
{"url": "https://codeforces.com//problemset/problem/1898/B", "name": "Milena and Admirer", "tags": ["greedy", "math"], "problem_rating": "1500", "solved_by": "x11210"},
{"url": "https://codeforces.com//problemset/problem/1898/A", "name": "Milica and String", "tags": ["brute force", "implementation", "strings"], "problem_rating": "800", "solved_by": "x15574"},
{"url": "https://codeforces.com//problemset/problem/1896/H2", "name": "Cyclic Hamming (Hard Version)", "tags": ["brute force", "dp", "fft", "math", "number theory"], "problem_rating": "3500", "solved_by": "x98"},
{"url": "https://codeforces.com//problemset/problem/1896/H1", "name": "Cyclic Hamming (Easy Version)", "tags": ["brute force", "divide and conquer", "dp", "fft", "math", "number theory"], "problem_rating": "3400", "solved_by": "x87"},
{"url": "https://codeforces.com//problemset/problem/1896/G", "name": "Pepe Racing", "tags": ["constructive algorithms", "implementation", "interactive", "sortings"], "problem_rating": "3200", "solved_by": "x325"},
{"url": "https://codeforces.com//problemset/problem/1896/F", "name": "Bracket Xoring", "tags": ["constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "2600", "solved_by": "x694"},
{"url": "https://codeforces.com//problemset/problem/1896/E", "name": "Permutation Sorting", "tags": ["data structures", "sortings"], "problem_rating": "2100", "solved_by": "x2134"},
{"url": "https://codeforces.com//problemset/problem/1896/D", "name": "Ones and Twos", "tags": ["binary search", "data structures", "divide and conquer", "math", "two pointers"], "problem_rating": "1700", "solved_by": "x5475"},
{"url": "https://codeforces.com//problemset/problem/1896/C", "name": "Matching Arrays", "tags": ["binary search", "constructive algorithms", "greedy", "sortings"], "problem_rating": "1400", "solved_by": "x9168"},
{"url": "https://codeforces.com//problemset/problem/1896/B", "name": "AB Flipping", "tags": ["greedy", "strings", "two pointers"], "problem_rating": "900", "solved_by": "x14149"},
{"url": "https://codeforces.com//problemset/problem/1896/A", "name": "Jagged Swaps", "tags": ["sortings"], "problem_rating": "800", "solved_by": "x21109"},
{"url": "https://codeforces.com//problemset/problem/1895/G", "name": "Two Characters, Two Colors", "tags": ["binary search", "data structures", "dp", "flows", "greedy"], "problem_rating": "3100", "solved_by": "x182"},
{"url": "https://codeforces.com//problemset/problem/1895/F", "name": "Fancy Arrays", "tags": ["combinatorics", "dp", "math", "matrices"], "problem_rating": "2600", "solved_by": "x706"},
{"url": "https://codeforces.com//problemset/problem/1895/E", "name": "Infinite Card Game", "tags": ["binary search", "brute force", "data structures", "dfs and similar", "dp", "dsu", "games", "graphs", "greedy", "sortings", "two pointers"], "problem_rating": "2300", "solved_by": "x1513"},
{"url": "https://codeforces.com//problemset/problem/1895/D", "name": "XOR Construction", "tags": ["bitmasks", "constructive algorithms", "data structures", "math", "string suffix structures", "trees"], "problem_rating": "1900", "solved_by": "x5807"},
{"url": "https://codeforces.com//problemset/problem/1895/C", "name": "Torn Lucky Ticket", "tags": ["brute force", "dp", "hashing", "implementation", "math"], "problem_rating": "1400", "solved_by": "x10588"},
{"url": "https://codeforces.com//problemset/problem/1895/B", "name": "Points and Minimum Distance", "tags": ["greedy", "math", "sortings"], "problem_rating": "800", "solved_by": "x20100"},
{"url": "https://codeforces.com//problemset/problem/1895/A", "name": "Treasure Chest", "tags": ["math"], "problem_rating": "800", "solved_by": "x23967"},
{"url": "https://codeforces.com//problemset/problem/1894/B", "name": "Two Out of Three", "tags": ["constructive algorithms"], "problem_rating": "1000", "solved_by": "x15330"},
{"url": "https://codeforces.com//problemset/problem/1894/A", "name": "Secret Sport", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x18568"},
{"url": "https://codeforces.com//problemset/problem/1893/E", "name": "Cacti Symphony", "tags": ["combinatorics", "dfs and similar", "dp", "graphs"], "problem_rating": "3500", "solved_by": "x188"},
{"url": "https://codeforces.com//problemset/problem/1893/D", "name": "Colorful Constructive", "tags": ["constructive algorithms", "data structures", "greedy"], "problem_rating": "2600", "solved_by": "x850"},
{"url": "https://codeforces.com//problemset/problem/1893/C", "name": "Freedom of Choice", "tags": ["brute force", "greedy", "implementation"], "problem_rating": "2000", "solved_by": "x2541"},
{"url": "https://codeforces.com//problemset/problem/1893/B", "name": "Neutral Tonality", "tags": ["constructive algorithms", "greedy", "sortings", "two pointers"], "problem_rating": "1700", "solved_by": "x8510"},
{"url": "https://codeforces.com//problemset/problem/1893/A", "name": "Anonymous Informant", "tags": ["brute force", "dfs and similar", "graphs", "implementation"], "problem_rating": "1400", "solved_by": "x11828"},
{"url": "https://codeforces.com//problemset/problem/1891/F", "name": "A Growing Tree", "tags": ["data structures", "dfs and similar", "trees"], "problem_rating": "2000", "solved_by": "x3537"},
{"url": "https://codeforces.com//problemset/problem/1891/E", "name": "Brukhovich and Exams", "tags": ["brute force", "greedy", "implementation", "math", "sortings"], "problem_rating": "2500", "solved_by": "x799"},
{"url": "https://codeforces.com//problemset/problem/1891/D", "name": "Suspicious logarithms", "tags": ["binary search", "brute force", "math"], "problem_rating": "1900", "solved_by": "x3843"},
{"url": "https://codeforces.com//problemset/problem/1891/C", "name": "Smilo and Monsters", "tags": ["binary search", "constructive algorithms", "greedy", "sortings", "two pointers"], "problem_rating": "1500", "solved_by": "x12334"},
{"url": "https://codeforces.com//problemset/problem/1891/B", "name": "Deja Vu", "tags": ["brute force", "math", "sortings"], "problem_rating": "1100", "solved_by": "x16921"},
{"url": "https://codeforces.com//problemset/problem/1891/A", "name": "Sorting with Twos", "tags": ["constructive algorithms", "sortings"], "problem_rating": "800", "solved_by": "x18881"},
{"url": "https://codeforces.com//problemset/problem/1890/B", "name": "Qingshan Loves Strings", "tags": ["constructive algorithms", "implementation"], "problem_rating": "800", "solved_by": "x17159"},
{"url": "https://codeforces.com//problemset/problem/1890/A", "name": "Doremy's Paint 3", "tags": ["constructive algorithms"], "problem_rating": "800", "solved_by": "x24123"},
{"url": "https://codeforces.com//problemset/problem/1889/F", "name": "Doremy's Average Tree", "tags": ["data structures", "dp", "greedy", "trees"], "problem_rating": "3500", "solved_by": "x73"},
{"url": "https://codeforces.com//problemset/problem/1889/E", "name": "Doremy's Swapping Trees", "tags": ["dfs and similar", "graphs", "trees"], "problem_rating": "3500", "solved_by": "x105"},
{"url": "https://codeforces.com//problemset/problem/1889/D", "name": "Game of Stacks", "tags": ["brute force", "dfs and similar", "graphs", "implementation", "trees"], "problem_rating": "3000", "solved_by": "x547"},
{"url": "https://codeforces.com//problemset/problem/1889/C2", "name": "Doremy's Drying Plan (Hard Version)", "tags": ["data structures", "dp"], "problem_rating": "2600", "solved_by": "x930"},
{"url": "https://codeforces.com//problemset/problem/1889/C1", "name": "Doremy's Drying Plan (Easy Version)", "tags": ["brute force", "data structures", "dp", "greedy", "sortings"], "problem_rating": "2000", "solved_by": "x3133"},
{"url": "https://codeforces.com//problemset/problem/1889/B", "name": "Doremy's Connecting Plan", "tags": ["constructive algorithms", "greedy", "math", "sortings"], "problem_rating": "1700", "solved_by": "x7065"},
{"url": "https://codeforces.com//problemset/problem/1889/A", "name": "Qingshan Loves Strings 2", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "1300", "solved_by": "x12623"},
{"url": "https://codeforces.com//problemset/problem/1887/F", "name": "Minimum Segments", "tags": ["constructive algorithms"], "problem_rating": "3400", "solved_by": "x124"},
{"url": "https://codeforces.com//problemset/problem/1887/E", "name": "Good Colorings", "tags": ["binary search", "constructive algorithms", "graphs", "interactive"], "problem_rating": "3100", "solved_by": "x342"},
{"url": "https://codeforces.com//problemset/problem/1887/D", "name": "Split", "tags": ["binary search", "data structures", "divide and conquer", "dsu", "math", "trees", "two pointers"], "problem_rating": "2700", "solved_by": "x848"},
{"url": "https://codeforces.com//problemset/problem/1887/C", "name": "Minimum Array", "tags": ["binary search", "brute force", "constructive algorithms", "data structures", "greedy", "hashing", "two pointers"], "problem_rating": "2400", "solved_by": "x1656"},
{"url": "https://codeforces.com//problemset/problem/1887/B", "name": "Time Travel", "tags": ["binary search", "graphs", "shortest paths"], "problem_rating": "1900", "solved_by": "x2832"},
{"url": "https://codeforces.com//problemset/problem/1886/F", "name": "Diamond Theft", "tags": ["data structures", "greedy"], "problem_rating": "3300", "solved_by": "x162"},
{"url": "https://codeforces.com//problemset/problem/1886/E", "name": "I Wanna be the Team Leader", "tags": ["bitmasks", "constructive algorithms", "dp", "greedy", "math", "sortings", "two pointers"], "problem_rating": "2400", "solved_by": "x1391"},
{"url": "https://codeforces.com//problemset/problem/1886/D", "name": "Monocarp and the Set", "tags": ["combinatorics", "data structures", "math"], "problem_rating": "2100", "solved_by": "x3452"},
{"url": "https://codeforces.com//problemset/problem/1886/C", "name": "Decreasing String", "tags": ["implementation", "strings"], "problem_rating": "1600", "solved_by": "x10921"},
{"url": "https://codeforces.com//problemset/problem/1886/B", "name": "Fear of the Dark", "tags": ["binary search", "geometry", "math"], "problem_rating": "1200", "solved_by": "x15710"},
{"url": "https://codeforces.com//problemset/problem/1886/A", "name": "Sum of Three", "tags": ["brute force", "constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x25279"},
{"url": "https://codeforces.com//problemset/problem/1885/A", "name": "Deterministic Scheduling for Extended Reality over 5G and Beyond", "tags": ["*special problem"], "problem_rating": [null], "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/1884/E", "name": "Hard Design", "tags": ["greedy", "implementation", "math"], "problem_rating": "2800", "solved_by": "x273"},
{"url": "https://codeforces.com//problemset/problem/1884/D", "name": "Counting Rhyme", "tags": ["dp", "math", "number theory"], "problem_rating": "2100", "solved_by": "x3038"},
{"url": "https://codeforces.com//problemset/problem/1884/C", "name": "Medium Design", "tags": ["brute force", "data structures", "dp", "greedy", "sortings"], "problem_rating": "1700", "solved_by": "x5822"},
{"url": "https://codeforces.com//problemset/problem/1884/B", "name": "Haunted House", "tags": ["binary search", "greedy", "math", "two pointers"], "problem_rating": "1100", "solved_by": "x12320"},
{"url": "https://codeforces.com//problemset/problem/1884/A", "name": "Simple Design", "tags": ["brute force", "greedy", "math"], "problem_rating": "800", "solved_by": "x17114"},
{"url": "https://codeforces.com//problemset/problem/1883/G2", "name": "Dances (Hard Version)", "tags": ["binary search", "greedy", "sortings", "two pointers"], "problem_rating": "1900", "solved_by": "x5146"},
{"url": "https://codeforces.com//problemset/problem/1883/G1", "name": "Dances (Easy version)", "tags": ["binary search", "greedy", "two pointers"], "problem_rating": "1400", "solved_by": "x10100"},
{"url": "https://codeforces.com//problemset/problem/1883/F", "name": "You Are So Beautiful", "tags": ["data structures"], "problem_rating": "1400", "solved_by": "x8952"},
{"url": "https://codeforces.com//problemset/problem/1883/E", "name": "Look Back", "tags": ["bitmasks", "greedy"], "problem_rating": "1700", "solved_by": "x7635"},
{"url": "https://codeforces.com//problemset/problem/1883/D", "name": "In Love", "tags": ["data structures", "greedy"], "problem_rating": "1500", "solved_by": "x10851"},
{"url": "https://codeforces.com//problemset/problem/1883/C", "name": "Raspberries", "tags": ["dp", "math"], "problem_rating": "1000", "solved_by": "x25080"},
{"url": "https://codeforces.com//problemset/problem/1883/B", "name": "Chemistry", "tags": ["strings"], "problem_rating": "900", "solved_by": "x29513"},
{"url": "https://codeforces.com//problemset/problem/1883/A", "name": "Morning", "tags": ["math"], "problem_rating": "800", "solved_by": "x24958"},
{"url": "https://codeforces.com//problemset/problem/1882/E2", "name": "Two Permutations (Hard Version)", "tags": ["constructive algorithms"], "problem_rating": "3100", "solved_by": "x289"},
{"url": "https://codeforces.com//problemset/problem/1882/E1", "name": "Two Permutations (Easy Version)", "tags": ["brute force", "constructive algorithms", "greedy", "number theory"], "problem_rating": "2400", "solved_by": "x988"},
{"url": "https://codeforces.com//problemset/problem/1882/D", "name": "Tree XOR", "tags": ["bitmasks", "dfs and similar", "dp", "greedy", "trees"], "problem_rating": "1900", "solved_by": "x5207"},
{"url": "https://codeforces.com//problemset/problem/1882/C", "name": "Card Game", "tags": ["brute force", "greedy"], "problem_rating": "1500", "solved_by": "x11868"},
{"url": "https://codeforces.com//problemset/problem/1882/B", "name": "Sets and Union", "tags": ["bitmasks", "brute force", "constructive algorithms", "greedy"], "problem_rating": "1300", "solved_by": "x14992"},
{"url": "https://codeforces.com//problemset/problem/1882/A", "name": "Increasing Sequence", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x24958"},
{"url": "https://codeforces.com//problemset/problem/1881/G", "name": "Anya and the Mysterious String", "tags": ["binary search", "data structures"], "problem_rating": "2000", "solved_by": "x2261"},
{"url": "https://codeforces.com//problemset/problem/1881/F", "name": "Minimum Maximum Distance", "tags": ["dfs and similar", "dp", "graphs", "shortest paths", "trees"], "problem_rating": "1700", "solved_by": "x6459"},
{"url": "https://codeforces.com//problemset/problem/1881/E", "name": "Block Sequence", "tags": ["dp"], "problem_rating": "1500", "solved_by": "x12917"},
{"url": "https://codeforces.com//problemset/problem/1881/D", "name": "Divide and Equalize", "tags": ["math", "number theory"], "problem_rating": "1300", "solved_by": "x15949"},
{"url": "https://codeforces.com//problemset/problem/1881/C", "name": "Perfect Square", "tags": ["brute force", "implementation"], "problem_rating": "1200", "solved_by": "x16578"},
{"url": "https://codeforces.com//problemset/problem/1881/B", "name": "Three Threadlets", "tags": ["math"], "problem_rating": "900", "solved_by": "x24703"},
{"url": "https://codeforces.com//problemset/problem/1881/A", "name": "Don't Try to Count", "tags": ["brute force", "strings"], "problem_rating": "800", "solved_by": "x29648"},
{"url": "https://codeforces.com//problemset/problem/1879/F", "name": "Last Man Standing", "tags": ["brute force", "data structures", "number theory"], "problem_rating": "2800", "solved_by": "x495"},
{"url": "https://codeforces.com//problemset/problem/1879/E", "name": "Interactive Game with Coloring", "tags": ["brute force", "constructive algorithms", "dfs and similar", "graphs", "implementation", "interactive", "trees"], "problem_rating": "2400", "solved_by": "x1224"},
{"url": "https://codeforces.com//problemset/problem/1879/D", "name": "Sum of XOR Functions", "tags": ["bitmasks", "combinatorics", "divide and conquer", "dp", "math"], "problem_rating": "1700", "solved_by": "x7036"},
{"url": "https://codeforces.com//problemset/problem/1879/C", "name": "Make it Alternating", "tags": ["combinatorics", "dp", "greedy"], "problem_rating": "1300", "solved_by": "x15998"},
{"url": "https://codeforces.com//problemset/problem/1879/B", "name": "Chips on the Board", "tags": ["constructive algorithms", "greedy"], "problem_rating": "900", "solved_by": "x21884"},
{"url": "https://codeforces.com//problemset/problem/1879/A", "name": "Rigged!", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x22811"},
{"url": "https://codeforces.com//problemset/problem/1878/G", "name": "wxhtzdy ORO Tree", "tags": ["binary search", "bitmasks", "brute force", "data structures", "dfs and similar", "implementation", "trees"], "problem_rating": "2300", "solved_by": "x1141"},
{"url": "https://codeforces.com//problemset/problem/1878/F", "name": "Vasilije Loves Number Theory", "tags": ["brute force", "math", "number theory"], "problem_rating": "1900", "solved_by": "x3968"},
{"url": "https://codeforces.com//problemset/problem/1878/E", "name": "Iva & Pav", "tags": ["binary search", "bitmasks", "data structures", "greedy"], "problem_rating": "1400", "solved_by": "x11974"},
{"url": "https://codeforces.com//problemset/problem/1878/D", "name": "Reverse Madness", "tags": ["data structures", "greedy"], "problem_rating": "1600", "solved_by": "x7982"},
{"url": "https://codeforces.com//problemset/problem/1878/C", "name": "Vasilije in Cacak", "tags": ["math"], "problem_rating": "900", "solved_by": "x30660"},
{"url": "https://codeforces.com//problemset/problem/1878/B", "name": "Aleksa and Stack", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x30810"},
{"url": "https://codeforces.com//problemset/problem/1878/A", "name": "How Much Does Daytona Cost?", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x41600"},
{"url": "https://codeforces.com//problemset/problem/1877/C", "name": "Joyboard", "tags": ["math", "number theory"], "problem_rating": "1200", "solved_by": "x10582"},
{"url": "https://codeforces.com//problemset/problem/1877/A", "name": "Goals of Victory", "tags": ["math"], "problem_rating": "800", "solved_by": "x21058"},
{"url": "https://codeforces.com//problemset/problem/1876/G", "name": "Clubstep", "tags": ["binary search", "brute force", "data structures", "greedy", "trees"], "problem_rating": "3500", "solved_by": "x119"},
{"url": "https://codeforces.com//problemset/problem/1876/F", "name": "Indefinite Clownfish", "tags": ["binary search", "graphs"], "problem_rating": "3500", "solved_by": "x127"},
{"url": "https://codeforces.com//problemset/problem/1876/E", "name": "Ball-Stackable", "tags": ["constructive algorithms", "data structures", "dp", "trees"], "problem_rating": "3300", "solved_by": "x261"},
{"url": "https://codeforces.com//problemset/problem/1876/D", "name": "Lexichromatography", "tags": ["combinatorics", "dfs and similar", "dsu", "graphs", "two pointers"], "problem_rating": "2500", "solved_by": "x840"},
{"url": "https://codeforces.com//problemset/problem/1876/C", "name": "Autosynthesis", "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy", "sortings"], "problem_rating": "2100", "solved_by": "x2206"},
{"url": "https://codeforces.com//problemset/problem/1876/B", "name": "Effects of Anti Pimples", "tags": ["combinatorics", "number theory", "sortings"], "problem_rating": "1500", "solved_by": "x7947"},
{"url": "https://codeforces.com//problemset/problem/1876/A", "name": "Helmets in Night Light", "tags": ["greedy", "sortings"], "problem_rating": "1000", "solved_by": "x16257"},
{"url": "https://codeforces.com//problemset/problem/1875/D", "name": "Jellyfish and Mex", "tags": ["dp"], "problem_rating": "1600", "solved_by": "x8171"},
{"url": "https://codeforces.com//problemset/problem/1875/C", "name": "Jellyfish and Green Apple", "tags": ["bitmasks", "greedy", "math", "number theory"], "problem_rating": "1400", "solved_by": "x11285"},
{"url": "https://codeforces.com//problemset/problem/1875/A", "name": "Jellyfish and Undertale", "tags": ["brute force", "greedy"], "problem_rating": "900", "solved_by": "x23607"},
{"url": "https://codeforces.com//problemset/problem/1874/G", "name": "Jellyfish and Inscryption", "tags": ["dp"], "problem_rating": "3500", "solved_by": "x80"},
{"url": "https://codeforces.com//problemset/problem/1874/F", "name": "Jellyfish and OEIS", "tags": ["dp"], "problem_rating": "3500", "solved_by": "x193"},
{"url": "https://codeforces.com//problemset/problem/1874/E", "name": "Jellyfish and Hack", "tags": ["dp", "math"], "problem_rating": "3000", "solved_by": "x294"},
{"url": "https://codeforces.com//problemset/problem/1874/D", "name": "Jellyfish and Miku", "tags": ["divide and conquer", "dp", "math", "probabilities"], "problem_rating": "2800", "solved_by": "x682"},
{"url": "https://codeforces.com//problemset/problem/1874/C", "name": "Jellyfish and EVA", "tags": ["dp", "graphs", "greedy", "math", "probabilities"], "problem_rating": "2300", "solved_by": "x1559"},
{"url": "https://codeforces.com//problemset/problem/1874/B", "name": "Jellyfish and Math", "tags": ["bitmasks", "brute force", "dfs and similar", "dp", "graphs", "shortest paths"], "problem_rating": "2400", "solved_by": "x1109"},
{"url": "https://codeforces.com//problemset/problem/1874/A", "name": "Jellyfish and Game", "tags": ["brute force", "games", "greedy", "implementation"], "problem_rating": "1200", "solved_by": "x16564"},
{"url": "https://codeforces.com//problemset/problem/1873/H", "name": "Mad City", "tags": ["dfs and similar", "dsu", "games", "graphs", "shortest paths", "trees"], "problem_rating": "1700", "solved_by": "x6996"},
{"url": "https://codeforces.com//problemset/problem/1873/G", "name": "ABBC or BACB", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1500", "solved_by": "x12592"},
{"url": "https://codeforces.com//problemset/problem/1873/F", "name": "Money Trees", "tags": ["binary search", "greedy", "math", "two pointers"], "problem_rating": "1300", "solved_by": "x14770"},
{"url": "https://codeforces.com//problemset/problem/1873/E", "name": "Building an Aquarium", "tags": ["binary search", "sortings"], "problem_rating": "1100", "solved_by": "x24889"},
{"url": "https://codeforces.com//problemset/problem/1873/D", "name": "1D Eraser", "tags": ["greedy", "implementation", "two pointers"], "problem_rating": "800", "solved_by": "x34069"},
{"url": "https://codeforces.com//problemset/problem/1873/C", "name": "Target Practice", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x37950"},
{"url": "https://codeforces.com//problemset/problem/1873/B", "name": "Good Kid", "tags": ["brute force", "greedy", "math"], "problem_rating": "800", "solved_by": "x46679"},
{"url": "https://codeforces.com//problemset/problem/1873/A", "name": "Short Sort", "tags": ["brute force", "implementation"], "problem_rating": "800", "solved_by": "x51555"},
{"url": "https://codeforces.com//problemset/problem/1872/G", "name": "Replace With Product", "tags": ["brute force", "greedy", "math"], "problem_rating": "2000", "solved_by": "x4122"},
{"url": "https://codeforces.com//problemset/problem/1872/F", "name": "Selling a Menagerie", "tags": ["dfs and similar", "dsu", "graphs", "implementation", "math"], "problem_rating": "1800", "solved_by": "x6072"},
{"url": "https://codeforces.com//problemset/problem/1872/E", "name": "Data Structures Fan", "tags": ["binary search", "bitmasks", "data structures", "dp"], "problem_rating": "1500", "solved_by": "x12837"},
{"url": "https://codeforces.com//problemset/problem/1872/D", "name": "Plus Minus Permutation", "tags": ["math"], "problem_rating": "1200", "solved_by": "x22465"},
{"url": "https://codeforces.com//problemset/problem/1872/C", "name": "Non-coprime Split", "tags": ["math", "number theory"], "problem_rating": "1100", "solved_by": "x22786"},
{"url": "https://codeforces.com//problemset/problem/1872/B", "name": "The Corridor or There and Back Again", "tags": ["greedy", "implementation"], "problem_rating": "900", "solved_by": "x27349"},
{"url": "https://codeforces.com//problemset/problem/1872/A", "name": "Two Vessels", "tags": ["brute force", "greedy", "math"], "problem_rating": "800", "solved_by": "x38326"},
{"url": "https://codeforces.com//problemset/problem/1870/H", "name": "Standard Graph Problem", "tags": ["data structures", "graphs", "greedy", "trees"], "problem_rating": "3500", "solved_by": "x81"},
{"url": "https://codeforces.com//problemset/problem/1870/G", "name": "MEXanization", "tags": ["data structures"], "problem_rating": "3300", "solved_by": "x209"},
{"url": "https://codeforces.com//problemset/problem/1870/F", "name": "Lazy Numbers", "tags": ["binary search", "math"], "problem_rating": "2900", "solved_by": "x478"},
{"url": "https://codeforces.com//problemset/problem/1870/E", "name": "Another MEX Problem", "tags": ["bitmasks", "brute force", "dp", "shortest paths"], "problem_rating": "2300", "solved_by": "x2280"},
{"url": "https://codeforces.com//problemset/problem/1870/D", "name": "Prefix Purchase", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "1800", "solved_by": "x6659"},
{"url": "https://codeforces.com//problemset/problem/1870/C", "name": "Colorful Table", "tags": ["binary search", "data structures", "dp", "implementation", "math", "two pointers"], "problem_rating": "1300", "solved_by": "x11159"},
{"url": "https://codeforces.com//problemset/problem/1870/B", "name": "Friendly Arrays", "tags": ["bitmasks", "greedy", "math"], "problem_rating": "1200", "solved_by": "x13854"},
{"url": "https://codeforces.com//problemset/problem/1870/A", "name": "MEXanized Array", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "800", "solved_by": "x18831"},
{"url": "https://codeforces.com//problemset/problem/1869/B", "name": "2D Traveling", "tags": ["geometry", "math", "shortest paths", "sortings"], "problem_rating": "1100", "solved_by": "x15356"},
{"url": "https://codeforces.com//problemset/problem/1869/A", "name": "Make It Zero", "tags": ["constructive algorithms"], "problem_rating": "900", "solved_by": "x20163"},
{"url": "https://codeforces.com//problemset/problem/1868/F", "name": "LIS?", "tags": ["data structures", "greedy", "implementation"], "problem_rating": "3500", "solved_by": "x72"},
{"url": "https://codeforces.com//problemset/problem/1868/E", "name": "Min-Sum-Max", "tags": ["constructive algorithms", "dp", "greedy"], "problem_rating": "3500", "solved_by": "x79"},
{"url": "https://codeforces.com//problemset/problem/1868/D", "name": "Flower-like Pseudotree", "tags": ["constructive algorithms", "graphs", "greedy", "implementation", "trees"], "problem_rating": "3000", "solved_by": "x258"},
{"url": "https://codeforces.com//problemset/problem/1868/C", "name": "Travel Plan", "tags": ["combinatorics", "dp", "implementation", "math", "trees"], "problem_rating": "2400", "solved_by": "x1115"},
{"url": "https://codeforces.com//problemset/problem/1868/B2", "name": "Candy Party (Hard Version)", "tags": ["bitmasks", "constructive algorithms", "dp", "greedy", "implementation", "math"], "problem_rating": "2100", "solved_by": "x2343"},
{"url": "https://codeforces.com//problemset/problem/1868/B1", "name": "Candy Party (Easy Version)", "tags": ["bitmasks", "constructive algorithms", "graphs", "greedy", "implementation", "math"], "problem_rating": "1700", "solved_by": "x6759"},
{"url": "https://codeforces.com//problemset/problem/1868/A", "name": "Fill in the Matrix", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1300", "solved_by": "x11658"},
{"url": "https://codeforces.com//problemset/problem/1867/F", "name": "Most Different Tree", "tags": ["brute force", "constructive algorithms", "dfs and similar", "greedy", "hashing"], "problem_rating": "2700", "solved_by": "x409"},
{"url": "https://codeforces.com//problemset/problem/1867/E2", "name": "Salyg1n and Array (hard version)", "tags": ["constructive algorithms", "interactive"], "problem_rating": "2200", "solved_by": "x3092"},
{"url": "https://codeforces.com//problemset/problem/1867/E1", "name": "Salyg1n and Array (simple version)", "tags": ["constructive algorithms", "interactive", "math"], "problem_rating": "2000", "solved_by": "x3647"},
{"url": "https://codeforces.com//problemset/problem/1867/D", "name": "Cyclic Operations", "tags": ["brute force", "constructive algorithms", "dfs and similar", "graphs", "greedy", "implementation"], "problem_rating": "1800", "solved_by": "x5583"},
{"url": "https://codeforces.com//problemset/problem/1867/C", "name": "Salyg1n and the MEX Game", "tags": ["constructive algorithms", "data structures", "games", "greedy", "interactive"], "problem_rating": "1300", "solved_by": "x10945"},
{"url": "https://codeforces.com//problemset/problem/1867/B", "name": "XOR Palindromes", "tags": ["bitmasks", "constructive algorithms", "strings"], "problem_rating": "1100", "solved_by": "x16416"},
{"url": "https://codeforces.com//problemset/problem/1867/A", "name": "green_gold_dog, array and permutation", "tags": ["constructive algorithms", "sortings"], "problem_rating": "800", "solved_by": "x19689"},
{"url": "https://codeforces.com//problemset/problem/1866/M", "name": "Mighty Rock Tower", "tags": ["brute force", "combinatorics", "dp", "math", "probabilities"], "problem_rating": "2400", "solved_by": "x711"},
{"url": "https://codeforces.com//problemset/problem/1866/L", "name": "Lihmuf Balling", "tags": ["binary search", "brute force", "math"], "problem_rating": "2400", "solved_by": "x665"},
{"url": "https://codeforces.com//problemset/problem/1866/K", "name": "Keen Tree Calculation", "tags": ["binary search", "data structures", "dp", "geometry", "graphs", "implementation", "trees"], "problem_rating": "2500", "solved_by": "x425"},
{"url": "https://codeforces.com//problemset/problem/1866/J", "name": "Jackets and Packets", "tags": ["dp"], "problem_rating": "2800", "solved_by": "x273"},
{"url": "https://codeforces.com//problemset/problem/1866/I", "name": "Imagination Castle", "tags": ["dp", "games", "two pointers"], "problem_rating": "2300", "solved_by": "x690"},
{"url": "https://codeforces.com//problemset/problem/1866/H", "name": "Happy Sets", "tags": ["combinatorics"], "problem_rating": "2100", "solved_by": "x1568"},
{"url": "https://codeforces.com//problemset/problem/1866/G", "name": "Grouped Carriages", "tags": ["binary search", "data structures", "dp", "flows", "greedy"], "problem_rating": "2100", "solved_by": "x1575"},
{"url": "https://codeforces.com//problemset/problem/1866/F", "name": "Freak Joker Process", "tags": ["binary search", "data structures", "sortings"], "problem_rating": "3100", "solved_by": "x130"},
{"url": "https://codeforces.com//problemset/problem/1866/E", "name": "Elevators of Tamem", "tags": ["dp"], "problem_rating": "2700", "solved_by": "x283"},
{"url": "https://codeforces.com//problemset/problem/1866/D", "name": "Digital Wallet", "tags": ["dp", "greedy"], "problem_rating": "2300", "solved_by": "x1234"},
{"url": "https://codeforces.com//problemset/problem/1866/C", "name": "Completely Searching for Inversions", "tags": ["dfs and similar", "dp", "graphs"], "problem_rating": "1900", "solved_by": "x2941"},
{"url": "https://codeforces.com//problemset/problem/1866/B", "name": "Battling with Numbers", "tags": ["combinatorics", "math", "number theory"], "problem_rating": "1400", "solved_by": "x7474"},
{"url": "https://codeforces.com//problemset/problem/1866/A", "name": "Ambitious Kid", "tags": ["math"], "problem_rating": "800", "solved_by": "x19932"},
{"url": "https://codeforces.com//problemset/problem/1864/I", "name": "Future Dominators", "tags": ["graphs", "greedy"], "problem_rating": "3500", "solved_by": "x86"},
{"url": "https://codeforces.com//problemset/problem/1864/H", "name": "Asterism Stream", "tags": ["dp", "math", "matrices"], "problem_rating": "3200", "solved_by": "x277"},
{"url": "https://codeforces.com//problemset/problem/1864/G", "name": "Magic Square", "tags": ["combinatorics", "constructive algorithms", "implementation"], "problem_rating": "3100", "solved_by": "x256"},
{"url": "https://codeforces.com//problemset/problem/1864/F", "name": "Exotic Queries", "tags": ["data structures", "implementation", "sortings"], "problem_rating": "2300", "solved_by": "x1359"},
{"url": "https://codeforces.com//problemset/problem/1864/E", "name": "Guess Game", "tags": ["bitmasks", "data structures", "games", "math", "probabilities", "sortings", "strings", "trees"], "problem_rating": "2100", "solved_by": "x2523"},
{"url": "https://codeforces.com//problemset/problem/1864/D", "name": "Matrix Cascade", "tags": ["brute force", "constructive algorithms", "data structures", "dp", "greedy", "math"], "problem_rating": "1700", "solved_by": "x6551"},
{"url": "https://codeforces.com//problemset/problem/1864/C", "name": "Divisor Chain", "tags": ["bitmasks", "constructive algorithms", "math", "number theory"], "problem_rating": "1300", "solved_by": "x13096"},
{"url": "https://codeforces.com//problemset/problem/1864/B", "name": "Swap and Reverse", "tags": ["constructive algorithms", "greedy", "sortings", "strings"], "problem_rating": "1100", "solved_by": "x15100"},
{"url": "https://codeforces.com//problemset/problem/1864/A", "name": "Increasing and Decreasing", "tags": ["constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "800", "solved_by": "x20075"},
{"url": "https://codeforces.com//problemset/problem/1863/I", "name": "Redundant Routes", "tags": ["constructive algorithms", "dp", "trees"], "problem_rating": "3500", "solved_by": "x74"},
{"url": "https://codeforces.com//problemset/problem/1863/H", "name": "Goldberg Machine 3", "tags": ["dp", "trees"], "problem_rating": "3500", "solved_by": "x74"},
{"url": "https://codeforces.com//problemset/problem/1863/G", "name": "Swaps", "tags": ["combinatorics", "dp", "graphs", "math"], "problem_rating": "2800", "solved_by": "x589"},
{"url": "https://codeforces.com//problemset/problem/1863/F", "name": "Divide, XOR, and Conquer", "tags": ["bitmasks", "dp", "math"], "problem_rating": "2600", "solved_by": "x1073"},
{"url": "https://codeforces.com//problemset/problem/1863/E", "name": "Speedrun", "tags": ["brute force", "dfs and similar", "dp", "graphs", "greedy", "math", "sortings", "two pointers"], "problem_rating": "2100", "solved_by": "x2675"},
{"url": "https://codeforces.com//problemset/problem/1863/D", "name": "Two-Colored Dominoes", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1400", "solved_by": "x9246"},
{"url": "https://codeforces.com//problemset/problem/1863/C", "name": "MEX Repetition", "tags": ["implementation", "math"], "problem_rating": "1100", "solved_by": "x13721"},
{"url": "https://codeforces.com//problemset/problem/1863/B", "name": "Split Sort", "tags": ["greedy", "math", "sortings"], "problem_rating": "1100", "solved_by": "x14908"},
{"url": "https://codeforces.com//problemset/problem/1863/A", "name": "Channel", "tags": ["greedy", "implementation"], "problem_rating": "800", "solved_by": "x17719"},
{"url": "https://codeforces.com//problemset/problem/1862/G", "name": "The Great Equalizer", "tags": ["binary search", "data structures", "math", "sortings"], "problem_rating": "2000", "solved_by": "x2765"},
{"url": "https://codeforces.com//problemset/problem/1862/F", "name": "Magic Will Save the World", "tags": ["binary search", "bitmasks", "brute force", "dp"], "problem_rating": "1800", "solved_by": "x6000"},
{"url": "https://codeforces.com//problemset/problem/1862/E", "name": "Kolya and Movie Theatre", "tags": ["constructive algorithms", "data structures", "greedy"], "problem_rating": "1600", "solved_by": "x10285"},
{"url": "https://codeforces.com//problemset/problem/1862/D", "name": "Ice Cream Balls", "tags": ["binary search", "combinatorics", "constructive algorithms", "math"], "problem_rating": "1300", "solved_by": "x16677"},
{"url": "https://codeforces.com//problemset/problem/1862/C", "name": "Flower City Fence", "tags": ["binary search", "data structures", "implementation", "sortings"], "problem_rating": "1100", "solved_by": "x20251"},
{"url": "https://codeforces.com//problemset/problem/1862/B", "name": "Sequence Game", "tags": ["constructive algorithms"], "problem_rating": "800", "solved_by": "x30423"},
{"url": "https://codeforces.com//problemset/problem/1862/A", "name": "Gift Carpet", "tags": ["dp", "greedy", "implementation", "strings"], "problem_rating": "800", "solved_by": "x31742"},
{"url": "https://codeforces.com//problemset/problem/1861/F", "name": "Four Suits", "tags": ["binary search", "bitmasks", "flows", "greedy"], "problem_rating": "3200", "solved_by": "x190"},
{"url": "https://codeforces.com//problemset/problem/1861/E", "name": "Non-Intersecting Subpermutations", "tags": ["combinatorics", "dp", "implementation", "math"], "problem_rating": "2300", "solved_by": "x1662"},
{"url": "https://codeforces.com//problemset/problem/1861/D", "name": "Sorting By Multiplication", "tags": ["dp", "greedy"], "problem_rating": "1800", "solved_by": "x6520"},
{"url": "https://codeforces.com//problemset/problem/1861/C", "name": "Queries for the Array", "tags": ["data structures", "dfs and similar", "implementation", "strings", "trees"], "problem_rating": "1600", "solved_by": "x9810"},
{"url": "https://codeforces.com//problemset/problem/1861/B", "name": "Two Binary Strings", "tags": ["constructive algorithms", "dp", "greedy"], "problem_rating": "1000", "solved_by": "x20873"},
{"url": "https://codeforces.com//problemset/problem/1861/A", "name": "Prime Deletion", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x23579"},
{"url": "https://codeforces.com//problemset/problem/1860/F", "name": "Evaluate RBS", "tags": ["data structures", "geometry", "implementation", "math", "sortings"], "problem_rating": "2900", "solved_by": "x268"},
{"url": "https://codeforces.com//problemset/problem/1860/E", "name": "Fast Travel Text Editor", "tags": ["data structures", "dfs and similar", "graphs", "shortest paths"], "problem_rating": "2400", "solved_by": "x1348"},
{"url": "https://codeforces.com//problemset/problem/1860/D", "name": "Balanced String", "tags": ["dp"], "problem_rating": "2200", "solved_by": "x2875"},
{"url": "https://codeforces.com//problemset/problem/1860/C", "name": "Game on Permutation", "tags": ["data structures", "dp", "games", "greedy"], "problem_rating": "1400", "solved_by": "x12917"},
{"url": "https://codeforces.com//problemset/problem/1860/B", "name": "Fancy Coins", "tags": ["binary search", "brute force", "greedy", "math"], "problem_rating": "1200", "solved_by": "x16525"},
{"url": "https://codeforces.com//problemset/problem/1860/A", "name": "Not a Substring", "tags": ["constructive algorithms", "strings"], "problem_rating": "900", "solved_by": "x21313"},
{"url": "https://codeforces.com//problemset/problem/1859/F", "name": "Teleportation in Byteland", "tags": ["data structures", "dfs and similar", "divide and conquer", "graphs", "shortest paths", "trees"], "problem_rating": "3200", "solved_by": "x386"},
{"url": "https://codeforces.com//problemset/problem/1859/E", "name": "Maximum Monogonosity", "tags": ["brute force", "dp", "math"], "problem_rating": "2500", "solved_by": "x1736"},
{"url": "https://codeforces.com//problemset/problem/1859/D", "name": "Andrey and Escape from Capygrad", "tags": ["binary search", "data structures", "dp", "dsu", "greedy", "sortings"], "problem_rating": "1800", "solved_by": "x6796"},
{"url": "https://codeforces.com//problemset/problem/1859/C", "name": "Another Permutation Problem", "tags": ["brute force", "dp", "greedy", "math"], "problem_rating": "1200", "solved_by": "x16681"},
{"url": "https://codeforces.com//problemset/problem/1859/B", "name": "Olya and Game with Arrays", "tags": ["constructive algorithms", "greedy", "math", "sortings"], "problem_rating": "1000", "solved_by": "x25741"},
{"url": "https://codeforces.com//problemset/problem/1859/A", "name": "United We Stand", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "800", "solved_by": "x30816"},
{"url": "https://codeforces.com//problemset/problem/1858/E2", "name": "Rollbacks (Hard Version)", "tags": ["data structures", "interactive", "trees"], "problem_rating": "2600", "solved_by": "x1027"},
{"url": "https://codeforces.com//problemset/problem/1858/E1", "name": "Rollbacks (Easy Version)", "tags": ["brute force", "data structures", "dfs and similar", "trees"], "problem_rating": "2500", "solved_by": "x1274"},
{"url": "https://codeforces.com//problemset/problem/1858/D", "name": "Trees and Segments", "tags": ["brute force", "data structures", "dp", "greedy", "two pointers"], "problem_rating": "2200", "solved_by": "x2757"},
{"url": "https://codeforces.com//problemset/problem/1858/C", "name": "Yet Another Permutation Problem", "tags": ["constructive algorithms", "greedy", "math", "number theory"], "problem_rating": "1000", "solved_by": "x22578"},
{"url": "https://codeforces.com//problemset/problem/1858/B", "name": "The Walkway", "tags": ["brute force", "dp", "greedy", "math", "number theory"], "problem_rating": "1500", "solved_by": "x11037"},
{"url": "https://codeforces.com//problemset/problem/1858/A", "name": "Buttons", "tags": ["games", "greedy", "math"], "problem_rating": "800", "solved_by": "x36325"},
{"url": "https://codeforces.com//problemset/problem/1857/G", "name": "Counting Graphs", "tags": ["combinatorics", "divide and conquer", "dsu", "graphs", "greedy", "sortings", "trees"], "problem_rating": "2000", "solved_by": "x4267"},
{"url": "https://codeforces.com//problemset/problem/1857/F", "name": "Sum and Product", "tags": ["binary search", "data structures", "math"], "problem_rating": "1600", "solved_by": "x10977"},
{"url": "https://codeforces.com//problemset/problem/1857/E", "name": "Power of Points", "tags": ["math", "sortings"], "problem_rating": "1500", "solved_by": "x12001"},
{"url": "https://codeforces.com//problemset/problem/1857/D", "name": "Strong Vertices", "tags": ["math", "sortings", "trees"], "problem_rating": "1300", "solved_by": "x18653"},
{"url": "https://codeforces.com//problemset/problem/1857/C", "name": "Assembly via Minimums", "tags": ["greedy", "sortings"], "problem_rating": "1200", "solved_by": "x24465"},
{"url": "https://codeforces.com//problemset/problem/1857/B", "name": "Maximum Rounding", "tags": ["greedy", "implementation", "math"], "problem_rating": "1100", "solved_by": "x22595"},
{"url": "https://codeforces.com//problemset/problem/1857/A", "name": "Array Coloring", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x45777"},
{"url": "https://codeforces.com//problemset/problem/1856/E2", "name": "PermuTree (hard version)", "tags": ["bitmasks", "dfs and similar", "dp", "fft", "greedy", "implementation", "math", "trees"], "problem_rating": "2700", "solved_by": "x1350"},
{"url": "https://codeforces.com//problemset/problem/1856/E1", "name": "PermuTree (easy version)", "tags": ["dfs and similar", "dp", "trees"], "problem_rating": "1800", "solved_by": "x5126"},
{"url": "https://codeforces.com//problemset/problem/1856/D", "name": "More Wrong", "tags": ["divide and conquer", "interactive"], "problem_rating": "2100", "solved_by": "x3178"},
{"url": "https://codeforces.com//problemset/problem/1856/C", "name": "To Become Max", "tags": ["binary search", "brute force", "data structures", "dp"], "problem_rating": "1600", "solved_by": "x11754"},
{"url": "https://codeforces.com//problemset/problem/1856/B", "name": "Good Arrays", "tags": ["implementation", "math"], "problem_rating": "900", "solved_by": "x23754"},
{"url": "https://codeforces.com//problemset/problem/1856/A", "name": "Tales of a Sort", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x26171"},
{"url": "https://codeforces.com//problemset/problem/1855/B", "name": "Longest Divisors Interval", "tags": ["brute force", "combinatorics", "greedy", "math", "number theory"], "problem_rating": "900", "solved_by": "x25214"},
{"url": "https://codeforces.com//problemset/problem/1855/A", "name": "Dalton the Teacher", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x27621"},
{"url": "https://codeforces.com//problemset/problem/1854/F", "name": "Mark and Spaceship", "tags": ["brute force", "dp"], "problem_rating": "3500", "solved_by": "x116"},
{"url": "https://codeforces.com//problemset/problem/1854/E", "name": "Game Bundles", "tags": ["brute force", "constructive algorithms", "dp", "greedy", "math"], "problem_rating": "3000", "solved_by": "x390"},
{"url": "https://codeforces.com//problemset/problem/1854/D", "name": "Michael and Hotel", "tags": ["binary search", "interactive", "trees"], "problem_rating": "3000", "solved_by": "x530"},
{"url": "https://codeforces.com//problemset/problem/1854/C", "name": "Expected Destruction", "tags": ["combinatorics", "dp", "math", "probabilities"], "problem_rating": "2500", "solved_by": "x1431"},
{"url": "https://codeforces.com//problemset/problem/1854/B", "name": "Earn or Unlock", "tags": ["bitmasks", "brute force", "dp"], "problem_rating": "2200", "solved_by": "x3437"},
{"url": "https://codeforces.com//problemset/problem/1854/A2", "name": "Dual (Hard Version)", "tags": ["constructive algorithms", "math"], "problem_rating": "1900", "solved_by": "x6843"},
{"url": "https://codeforces.com//problemset/problem/1854/A1", "name": "Dual (Easy Version)", "tags": ["constructive algorithms", "math"], "problem_rating": "1400", "solved_by": "x13753"},
{"url": "https://codeforces.com//problemset/problem/1853/B", "name": "Fibonaccharsis", "tags": ["binary search", "brute force", "math"], "problem_rating": "1200", "solved_by": "x17015"},
{"url": "https://codeforces.com//problemset/problem/1853/A", "name": "Desorting", "tags": ["brute force", "greedy", "math"], "problem_rating": "800", "solved_by": "x30076"},
{"url": "https://codeforces.com//problemset/problem/1852/F", "name": "Panda Meetups", "tags": ["data structures", "dp", "flows"], "problem_rating": "3500", "solved_by": "x104"},
{"url": "https://codeforces.com//problemset/problem/1852/E", "name": "Rivalries", "tags": ["constructive algorithms", "data structures", "greedy"], "problem_rating": "3400", "solved_by": "x162"},
{"url": "https://codeforces.com//problemset/problem/1852/D", "name": "Miriany and Matchstick", "tags": ["constructive algorithms", "dp", "greedy"], "problem_rating": "2800", "solved_by": "x434"},
{"url": "https://codeforces.com//problemset/problem/1852/C", "name": "Ina of the Mountain", "tags": ["data structures", "dp", "greedy", "math"], "problem_rating": "2400", "solved_by": "x1489"},
{"url": "https://codeforces.com//problemset/problem/1852/B", "name": "Imbalanced Arrays", "tags": ["constructive algorithms", "graphs", "greedy", "math", "sortings", "two pointers"], "problem_rating": "1800", "solved_by": "x4308"},
{"url": "https://codeforces.com//problemset/problem/1852/A", "name": "Ntarsis' Set", "tags": ["binary search", "math", "number theory"], "problem_rating": "1800", "solved_by": "x7817"},
{"url": "https://codeforces.com//problemset/problem/1851/G", "name": "Vlad and the Mountains", "tags": ["binary search", "data structures", "dsu", "graphs", "implementation", "sortings", "trees", "two pointers"], "problem_rating": "2000", "solved_by": "x3103"},
{"url": "https://codeforces.com//problemset/problem/1851/F", "name": "Lisa and the Martians", "tags": ["bitmasks", "greedy", "math", "strings", "trees"], "problem_rating": "1800", "solved_by": "x5595"},
{"url": "https://codeforces.com//problemset/problem/1851/E", "name": "Nastya and Potions", "tags": ["dfs and similar", "dp", "graphs", "sortings"], "problem_rating": "1500", "solved_by": "x9905"},
{"url": "https://codeforces.com//problemset/problem/1851/D", "name": "Prefix Permutation Sums", "tags": ["implementation", "math"], "problem_rating": "1300", "solved_by": "x14826"},
{"url": "https://codeforces.com//problemset/problem/1851/C", "name": "Tiles Comeback", "tags": ["greedy"], "problem_rating": "1000", "solved_by": "x22895"},
{"url": "https://codeforces.com//problemset/problem/1851/B", "name": "Parity Sort", "tags": ["greedy", "sortings", "two pointers"], "problem_rating": "800", "solved_by": "x28799"},
{"url": "https://codeforces.com//problemset/problem/1851/A", "name": "Escalator Conversations", "tags": ["brute force", "constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x29169"},
{"url": "https://codeforces.com//problemset/problem/1850/H", "name": "The Third Letter", "tags": ["dfs and similar", "dsu", "graphs", "greedy", "implementation"], "problem_rating": "1700", "solved_by": "x7880"},
{"url": "https://codeforces.com//problemset/problem/1850/G", "name": "The Morning Star", "tags": ["combinatorics", "data structures", "geometry", "implementation", "math", "sortings"], "problem_rating": "1500", "solved_by": "x11838"},
{"url": "https://codeforces.com//problemset/problem/1850/F", "name": "We Were Both Children", "tags": ["brute force", "implementation", "math", "number theory"], "problem_rating": "1300", "solved_by": "x18205"},
{"url": "https://codeforces.com//problemset/problem/1850/E", "name": "Cardboard for Pictures", "tags": ["binary search", "geometry", "implementation", "math"], "problem_rating": "1100", "solved_by": "x22029"},
{"url": "https://codeforces.com//problemset/problem/1850/D", "name": "Balanced Round", "tags": ["brute force", "greedy", "implementation", "sortings"], "problem_rating": "900", "solved_by": "x34599"},
{"url": "https://codeforces.com//problemset/problem/1850/C", "name": "Word on the Paper", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x42812"},
{"url": "https://codeforces.com//problemset/problem/1850/B", "name": "Ten Words of Wisdom", "tags": ["implementation", "sortings"], "problem_rating": "800", "solved_by": "x41802"},
{"url": "https://codeforces.com//problemset/problem/1850/A", "name": "To My Critics", "tags": ["implementation", "sortings"], "problem_rating": "800", "solved_by": "x53639"},
{"url": "https://codeforces.com//problemset/problem/1849/F", "name": "XOR Partition", "tags": ["binary search", "bitmasks", "data structures", "divide and conquer", "greedy", "trees"], "problem_rating": "2700", "solved_by": "x691"},
{"url": "https://codeforces.com//problemset/problem/1849/E", "name": "Max to the Right of Min", "tags": ["binary search", "data structures", "divide and conquer", "dp", "dsu", "two pointers"], "problem_rating": "2300", "solved_by": "x1576"},
{"url": "https://codeforces.com//problemset/problem/1849/D", "name": "Array Painting", "tags": ["constructive algorithms", "greedy", "two pointers"], "problem_rating": "1700", "solved_by": "x8185"},
{"url": "https://codeforces.com//problemset/problem/1849/C", "name": "Binary String Copying", "tags": ["binary search", "brute force", "data structures", "hashing", "strings"], "problem_rating": "1600", "solved_by": "x10208"},
{"url": "https://codeforces.com//problemset/problem/1849/B", "name": "Monsters", "tags": ["greedy", "math", "sortings"], "problem_rating": "1000", "solved_by": "x24206"},
{"url": "https://codeforces.com//problemset/problem/1849/A", "name": "Morning Sandwich", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x27510"},
{"url": "https://codeforces.com//problemset/problem/1848/F", "name": "Vika and Wiki", "tags": ["binary search", "bitmasks", "combinatorics", "divide and conquer", "dp", "math"], "problem_rating": "2400", "solved_by": "x1500"},
{"url": "https://codeforces.com//problemset/problem/1848/E", "name": "Vika and Stone Skipping", "tags": ["brute force", "implementation", "math", "number theory"], "problem_rating": "2600", "solved_by": "x763"},
{"url": "https://codeforces.com//problemset/problem/1848/D", "name": "Vika and Bonuses", "tags": ["binary search", "brute force", "math", "ternary search"], "problem_rating": "2200", "solved_by": "x2565"},
{"url": "https://codeforces.com//problemset/problem/1848/C", "name": "Vika and Price Tags", "tags": ["math", "number theory"], "problem_rating": "1800", "solved_by": "x6152"},
{"url": "https://codeforces.com//problemset/problem/1848/B", "name": "Vika and the Bridge", "tags": ["binary search", "data structures", "greedy", "implementation", "math", "sortings"], "problem_rating": "1200", "solved_by": "x14186"},
{"url": "https://codeforces.com//problemset/problem/1848/A", "name": "Vika and Her Friends", "tags": ["games", "math"], "problem_rating": "900", "solved_by": "x16557"},
{"url": "https://codeforces.com//problemset/problem/1847/F", "name": "The Boss's Identity", "tags": ["binary search", "bitmasks", "data structures", "dfs and similar", "greedy", "math", "sortings"], "problem_rating": "2500", "solved_by": "x872"},
{"url": "https://codeforces.com//problemset/problem/1847/E", "name": "Triangle Platinum?", "tags": ["brute force", "combinatorics", "implementation", "interactive", "math", "probabilities"], "problem_rating": "2900", "solved_by": "x322"},
{"url": "https://codeforces.com//problemset/problem/1847/D", "name": "Professor Higashikata", "tags": ["data structures", "dsu", "greedy", "implementation", "strings"], "problem_rating": "1900", "solved_by": "x3679"},
{"url": "https://codeforces.com//problemset/problem/1847/C", "name": "Vampiric Powers, anyone?", "tags": ["bitmasks", "brute force", "dp", "greedy"], "problem_rating": "1400", "solved_by": "x12568"},
{"url": "https://codeforces.com//problemset/problem/1847/B", "name": "Hamon Odyssey", "tags": ["bitmasks", "greedy", "two pointers"], "problem_rating": "1000", "solved_by": "x19633"},
{"url": "https://codeforces.com//problemset/problem/1847/A", "name": "The Man who became a God", "tags": ["greedy", "sortings"], "problem_rating": "800", "solved_by": "x21875"},
{"url": "https://codeforces.com//problemset/problem/1846/G", "name": "Rudolf and CodeVid-23", "tags": ["bitmasks", "dp", "graphs", "greedy", "shortest paths"], "problem_rating": "1900", "solved_by": "x4235"},
{"url": "https://codeforces.com//problemset/problem/1846/F", "name": "Rudolph and Mimic", "tags": ["constructive algorithms", "implementation", "interactive"], "problem_rating": "1800", "solved_by": "x3002"},
{"url": "https://codeforces.com//problemset/problem/1846/E2", "name": "Rudolf and Snowflakes (hard version)", "tags": ["binary search", "brute force", "implementation", "math"], "problem_rating": "1800", "solved_by": "x6825"},
{"url": "https://codeforces.com//problemset/problem/1846/E1", "name": "Rudolf and Snowflakes (simple version)", "tags": ["brute force", "implementation", "math"], "problem_rating": "1300", "solved_by": "x16148"},
{"url": "https://codeforces.com//problemset/problem/1846/D", "name": "Rudolph and Christmas Tree", "tags": ["constructive algorithms", "geometry", "math"], "problem_rating": "1200", "solved_by": "x18915"},
{"url": "https://codeforces.com//problemset/problem/1846/C", "name": "Rudolf and the Another Competition", "tags": ["constructive algorithms", "data structures", "dp", "greedy", "sortings"], "problem_rating": "1200", "solved_by": "x18509"},
{"url": "https://codeforces.com//problemset/problem/1846/B", "name": "Rudolph and Tic-Tac-Toe", "tags": ["brute force", "implementation", "strings"], "problem_rating": "800", "solved_by": "x26562"},
{"url": "https://codeforces.com//problemset/problem/1846/A", "name": "Rudolph and Cut the Rope", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x32091"},
{"url": "https://codeforces.com//problemset/problem/1845/F", "name": "Swimmers in the Pool", "tags": ["dp", "fft", "math", "number theory"], "problem_rating": "2800", "solved_by": "x364"},
{"url": "https://codeforces.com//problemset/problem/1845/E", "name": "Boxes and Balls", "tags": ["dp", "implementation", "math"], "problem_rating": "2500", "solved_by": "x1298"},
{"url": "https://codeforces.com//problemset/problem/1845/D", "name": "Rating System", "tags": ["binary search", "brute force", "data structures", "dp", "dsu", "greedy", "math", "two pointers"], "problem_rating": "1800", "solved_by": "x7589"},
{"url": "https://codeforces.com//problemset/problem/1845/C", "name": "Strong Password", "tags": ["binary search", "dp", "greedy", "strings"], "problem_rating": "1400", "solved_by": "x13833"},
{"url": "https://codeforces.com//problemset/problem/1845/B", "name": "Come Together", "tags": ["geometry", "implementation", "math"], "problem_rating": "900", "solved_by": "x21273"},
{"url": "https://codeforces.com//problemset/problem/1845/A", "name": "Forbidden Integer", "tags": ["constructive algorithms", "implementation", "math", "number theory"], "problem_rating": "800", "solved_by": "x25961"},
{"url": "https://codeforces.com//problemset/problem/1844/H", "name": "Multiple of Three Cycles", "tags": ["combinatorics", "data structures", "dp", "dsu", "math"], "problem_rating": "3400", "solved_by": "x134"},
{"url": "https://codeforces.com//problemset/problem/1844/G", "name": "Tree Weights", "tags": ["bitmasks", "constructive algorithms", "data structures", "dfs and similar", "implementation", "math", "matrices", "number theory", "trees"], "problem_rating": "3000", "solved_by": "x686"},
{"url": "https://codeforces.com//problemset/problem/1844/F2", "name": "Min Cost Permutation (Hard Version)", "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "math", "sortings"], "problem_rating": "2800", "solved_by": "x392"},
{"url": "https://codeforces.com//problemset/problem/1844/F1", "name": "Min Cost Permutation (Easy Version)", "tags": ["brute force", "constructive algorithms", "greedy", "math"], "problem_rating": "2600", "solved_by": "x765"},
{"url": "https://codeforces.com//problemset/problem/1844/E", "name": "Great Grids", "tags": ["2-sat", "constructive algorithms", "dfs and similar", "dsu", "graphs"], "problem_rating": "2400", "solved_by": "x1823"},
{"url": "https://codeforces.com//problemset/problem/1844/D", "name": "Row Major", "tags": ["constructive algorithms", "greedy", "math", "number theory", "strings"], "problem_rating": "1400", "solved_by": "x12039"},
{"url": "https://codeforces.com//problemset/problem/1844/C", "name": "Particles", "tags": ["dp", "greedy", "implementation", "math"], "problem_rating": "1300", "solved_by": "x15282"},
{"url": "https://codeforces.com//problemset/problem/1844/B", "name": "Permutations & Primes", "tags": ["constructive algorithms", "math"], "problem_rating": "1000", "solved_by": "x17837"},
{"url": "https://codeforces.com//problemset/problem/1844/A", "name": "Subtraction Game", "tags": ["constructive algorithms", "games"], "problem_rating": "800", "solved_by": "x24262"},
{"url": "https://codeforces.com//problemset/problem/1843/F2", "name": "Omsk Metro (hard version)", "tags": ["data structures", "dfs and similar", "divide and conquer", "dp", "math", "trees"], "problem_rating": "2300", "solved_by": "x1535"},
{"url": "https://codeforces.com//problemset/problem/1843/F1", "name": "Omsk Metro (simple version)", "tags": ["data structures", "dfs and similar", "dp", "graphs", "greedy", "math", "trees"], "problem_rating": "1800", "solved_by": "x5158"},
{"url": "https://codeforces.com//problemset/problem/1843/E", "name": "Tracking Segments", "tags": ["binary search", "brute force", "data structures", "two pointers"], "problem_rating": "1600", "solved_by": "x11672"},
{"url": "https://codeforces.com//problemset/problem/1843/D", "name": "Apple Tree", "tags": ["combinatorics", "dfs and similar", "dp", "math", "trees"], "problem_rating": "1200", "solved_by": "x17584"},
{"url": "https://codeforces.com//problemset/problem/1843/C", "name": "Sum in Binary Tree", "tags": ["bitmasks", "combinatorics", "math", "trees"], "problem_rating": "800", "solved_by": "x32180"},
{"url": "https://codeforces.com//problemset/problem/1843/B", "name": "Long Long", "tags": ["greedy", "math", "two pointers"], "problem_rating": "800", "solved_by": "x28583"},
{"url": "https://codeforces.com//problemset/problem/1843/A", "name": "Sasha and Array Coloring", "tags": ["greedy", "sortings", "two pointers"], "problem_rating": "800", "solved_by": "x33699"},
{"url": "https://codeforces.com//problemset/problem/1842/I", "name": "Tenzing and Necklace", "tags": ["divide and conquer", "dp", "greedy"], "problem_rating": "3500", "solved_by": "x116"},
{"url": "https://codeforces.com//problemset/problem/1842/H", "name": "Tenzing and Random Real Numbers", "tags": ["bitmasks", "dp", "graphs", "math", "probabilities"], "problem_rating": "3000", "solved_by": "x589"},
{"url": "https://codeforces.com//problemset/problem/1842/G", "name": "Tenzing and Random Operations", "tags": ["combinatorics", "dp", "math", "probabilities"], "problem_rating": "2800", "solved_by": "x976"},
{"url": "https://codeforces.com//problemset/problem/1842/F", "name": "Tenzing and Tree", "tags": ["dfs and similar", "greedy", "shortest paths", "sortings", "trees"], "problem_rating": "2500", "solved_by": "x1272"},
{"url": "https://codeforces.com//problemset/problem/1842/E", "name": "Tenzing and Triangle", "tags": ["data structures", "dp", "geometry", "greedy", "math"], "problem_rating": "2300", "solved_by": "x1571"},
{"url": "https://codeforces.com//problemset/problem/1842/D", "name": "Tenzing and His Animal Friends", "tags": ["constructive algorithms", "graphs", "greedy"], "problem_rating": "1900", "solved_by": "x4013"},
{"url": "https://codeforces.com//problemset/problem/1842/C", "name": "Tenzing and Balls", "tags": ["dp"], "problem_rating": "1500", "solved_by": "x12253"},
{"url": "https://codeforces.com//problemset/problem/1842/B", "name": "Tenzing and Books", "tags": ["bitmasks", "greedy", "math"], "problem_rating": "1100", "solved_by": "x16434"},
{"url": "https://codeforces.com//problemset/problem/1842/A", "name": "Tenzing and Tsondu", "tags": ["games", "math"], "problem_rating": "800", "solved_by": "x19655"},
{"url": "https://codeforces.com//problemset/problem/1841/F", "name": "Monocarp and a Strategic Game", "tags": ["geometry", "sortings", "two pointers"], "problem_rating": "2700", "solved_by": "x480"},
{"url": "https://codeforces.com//problemset/problem/1841/E", "name": "Fill the Matrix", "tags": ["data structures", "greedy", "math"], "problem_rating": "2200", "solved_by": "x1943"},
{"url": "https://codeforces.com//problemset/problem/1841/D", "name": "Pairs of Segments", "tags": ["data structures", "greedy", "sortings", "two pointers"], "problem_rating": "2000", "solved_by": "x4270"},
{"url": "https://codeforces.com//problemset/problem/1841/C", "name": "Ranom Numbers", "tags": ["brute force", "dp", "greedy", "math", "strings"], "problem_rating": "1800", "solved_by": "x7621"},
{"url": "https://codeforces.com//problemset/problem/1841/B", "name": "Keep it Beautiful", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x21103"},
{"url": "https://codeforces.com//problemset/problem/1841/A", "name": "Game with Board", "tags": ["constructive algorithms", "games"], "problem_rating": "800", "solved_by": "x24499"},
{"url": "https://codeforces.com//problemset/problem/1840/G2", "name": "In Search of Truth (Hard Version)", "tags": ["constructive algorithms", "interactive", "math", "meet-in-the-middle", "probabilities"], "problem_rating": "2500", "solved_by": "x921"},
{"url": "https://codeforces.com//problemset/problem/1840/G1", "name": "In Search of Truth (Easy Version)", "tags": ["constructive algorithms", "interactive", "math", "meet-in-the-middle", "probabilities"], "problem_rating": "2200", "solved_by": "x2287"},
{"url": "https://codeforces.com//problemset/problem/1840/F", "name": "Railguns", "tags": ["brute force", "dfs and similar", "dp", "graphs"], "problem_rating": "2200", "solved_by": "x1741"},
{"url": "https://codeforces.com//problemset/problem/1840/E", "name": "Character Blocking", "tags": ["data structures", "hashing", "implementation"], "problem_rating": "1600", "solved_by": "x7815"},
{"url": "https://codeforces.com//problemset/problem/1840/D", "name": "Wooden Toy Festival", "tags": ["binary search", "greedy", "sortings"], "problem_rating": "1400", "solved_by": "x13385"},
{"url": "https://codeforces.com//problemset/problem/1840/C", "name": "Ski Resort", "tags": ["combinatorics", "math", "two pointers"], "problem_rating": "1000", "solved_by": "x26192"},
{"url": "https://codeforces.com//problemset/problem/1840/B", "name": "Binary Cafe", "tags": ["bitmasks", "combinatorics", "math"], "problem_rating": "1100", "solved_by": "x22067"},
{"url": "https://codeforces.com//problemset/problem/1840/A", "name": "Cipher Shifer", "tags": ["implementation", "strings", "two pointers"], "problem_rating": "800", "solved_by": "x33473"},
{"url": "https://codeforces.com//problemset/problem/1839/E", "name": "Decreasing Game", "tags": ["constructive algorithms", "dfs and similar", "dp", "greedy", "interactive"], "problem_rating": "2400", "solved_by": "x1193"},
{"url": "https://codeforces.com//problemset/problem/1839/D", "name": "Ball Sorting", "tags": ["data structures", "dp", "sortings"], "problem_rating": "2100", "solved_by": "x2251"},
{"url": "https://codeforces.com//problemset/problem/1839/C", "name": "Insert Zero and Invert Prefix", "tags": ["constructive algorithms"], "problem_rating": "1300", "solved_by": "x11690"},
{"url": "https://codeforces.com//problemset/problem/1839/B", "name": "Lamps", "tags": ["greedy", "sortings"], "problem_rating": "1100", "solved_by": "x14832"},
{"url": "https://codeforces.com//problemset/problem/1839/A", "name": "The Good Array", "tags": ["greedy", "implementation", "math"], "problem_rating": "800", "solved_by": "x17288"},
{"url": "https://codeforces.com//problemset/problem/1838/F", "name": "Stuck Conveyor", "tags": ["binary search", "constructive algorithms", "interactive"], "problem_rating": "3000", "solved_by": "x309"},
{"url": "https://codeforces.com//problemset/problem/1838/E", "name": "Count Supersequences", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2500", "solved_by": "x1431"},
{"url": "https://codeforces.com//problemset/problem/1838/D", "name": "Bracket Walk", "tags": ["data structures", "greedy", "strings"], "problem_rating": "2100", "solved_by": "x3165"},
{"url": "https://codeforces.com//problemset/problem/1838/C", "name": "No Prime Differences", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "1400", "solved_by": "x14013"},
{"url": "https://codeforces.com//problemset/problem/1838/B", "name": "Minimize Permutation Subarrays", "tags": ["constructive algorithms", "math"], "problem_rating": "1100", "solved_by": "x16116"},
{"url": "https://codeforces.com//problemset/problem/1838/A", "name": "Blackboard List", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x21320"},
{"url": "https://codeforces.com//problemset/problem/1837/F", "name": "Editorial for Two", "tags": ["binary search", "data structures", "greedy", "implementation"], "problem_rating": "2400", "solved_by": "x2132"},
{"url": "https://codeforces.com//problemset/problem/1837/E", "name": "Playoff Fixing", "tags": ["combinatorics", "trees"], "problem_rating": "2200", "solved_by": "x2138"},
{"url": "https://codeforces.com//problemset/problem/1837/D", "name": "Bracket Coloring", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1400", "solved_by": "x14123"},
{"url": "https://codeforces.com//problemset/problem/1837/C", "name": "Best Binary String", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1000", "solved_by": "x21596"},
{"url": "https://codeforces.com//problemset/problem/1837/B", "name": "Comparison String", "tags": ["greedy"], "problem_rating": "900", "solved_by": "x28079"},
{"url": "https://codeforces.com//problemset/problem/1837/A", "name": "Grasshopper on a Line", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x30787"},
{"url": "https://codeforces.com//problemset/problem/1836/B", "name": "Astrophysicists", "tags": ["greedy", "math"], "problem_rating": "1100", "solved_by": "x12469"},
{"url": "https://codeforces.com//problemset/problem/1836/A", "name": "Destroyer", "tags": ["implementation", "sortings"], "problem_rating": "800", "solved_by": "x20085"},
{"url": "https://codeforces.com//problemset/problem/1835/F", "name": "Good Graph", "tags": ["bitmasks", "dfs and similar", "graph matchings", "graphs", "implementation"], "problem_rating": "3500", "solved_by": "x158"},
{"url": "https://codeforces.com//problemset/problem/1835/E", "name": "Old Mobile", "tags": ["combinatorics", "dp", "probabilities"], "problem_rating": "3500", "solved_by": "x220"},
{"url": "https://codeforces.com//problemset/problem/1835/D", "name": "Doctor's Brown Hypothesis", "tags": ["dfs and similar", "graphs", "math", "number theory"], "problem_rating": "2900", "solved_by": "x468"},
{"url": "https://codeforces.com//problemset/problem/1835/C", "name": "Twin Clusters", "tags": ["bitmasks", "brute force", "constructive algorithms", "math", "probabilities"], "problem_rating": "2600", "solved_by": "x959"},
{"url": "https://codeforces.com//problemset/problem/1835/B", "name": "Lottery", "tags": ["binary search", "brute force", "greedy", "math", "two pointers"], "problem_rating": "2500", "solved_by": "x926"},
{"url": "https://codeforces.com//problemset/problem/1835/A", "name": "k-th equality", "tags": ["brute force", "implementation", "math"], "problem_rating": "1700", "solved_by": "x7641"},
{"url": "https://codeforces.com//problemset/problem/1834/F", "name": "Typewriter", "tags": ["brute force", "math"], "problem_rating": "2500", "solved_by": "x502"},
{"url": "https://codeforces.com//problemset/problem/1834/E", "name": "MEX of LCM", "tags": ["binary search", "data structures", "implementation", "math", "number theory"], "problem_rating": "2300", "solved_by": "x2138"},
{"url": "https://codeforces.com//problemset/problem/1834/D", "name": "Survey in Class", "tags": ["brute force", "data structures", "greedy", "implementation", "sortings"], "problem_rating": "1900", "solved_by": "x4511"},
{"url": "https://codeforces.com//problemset/problem/1834/C", "name": "Game with Reversing", "tags": ["games", "greedy", "math", "strings"], "problem_rating": "1200", "solved_by": "x13004"},
{"url": "https://codeforces.com//problemset/problem/1834/B", "name": "Maximum Strength", "tags": ["greedy", "math"], "problem_rating": "1000", "solved_by": "x14900"},
{"url": "https://codeforces.com//problemset/problem/1834/A", "name": "Unit Array", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x22920"},
{"url": "https://codeforces.com//problemset/problem/1833/G", "name": "Ksyusha and Chinchilla", "tags": ["constructive algorithms", "dfs and similar", "dp", "dsu", "greedy", "implementation", "trees"], "problem_rating": "1800", "solved_by": "x5181"},
{"url": "https://codeforces.com//problemset/problem/1833/F", "name": "Ira and Flamenco", "tags": ["combinatorics", "constructive algorithms", "data structures", "implementation", "math", "sortings", "two pointers"], "problem_rating": "1700", "solved_by": "x7070"},
{"url": "https://codeforces.com//problemset/problem/1833/E", "name": "Round Dance", "tags": ["dfs and similar", "dsu", "graphs", "shortest paths"], "problem_rating": "1600", "solved_by": "x11184"},
{"url": "https://codeforces.com//problemset/problem/1833/D", "name": "Flipper", "tags": ["brute force", "constructive algorithms", "greedy"], "problem_rating": "1400", "solved_by": "x13056"},
{"url": "https://codeforces.com//problemset/problem/1833/C", "name": "Vlad Building Beautiful Array", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x25837"},
{"url": "https://codeforces.com//problemset/problem/1833/B", "name": "Restore the Weather", "tags": ["greedy", "sortings"], "problem_rating": "900", "solved_by": "x25972"},
{"url": "https://codeforces.com//problemset/problem/1833/A", "name": "Musical Puzzle", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x32160"},
{"url": "https://codeforces.com//problemset/problem/1832/F", "name": "Zombies", "tags": ["binary search", "dp"], "problem_rating": "3200", "solved_by": "x260"},
{"url": "https://codeforces.com//problemset/problem/1832/E", "name": "Combinatorics Problem", "tags": ["brute force", "combinatorics", "dp"], "problem_rating": "2200", "solved_by": "x2113"},
{"url": "https://codeforces.com//problemset/problem/1832/D2", "name": "Red-Blue Operations (Hard Version)", "tags": ["binary search", "constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "2400", "solved_by": "x1849"},
{"url": "https://codeforces.com//problemset/problem/1832/D1", "name": "Red-Blue Operations (Easy Version)", "tags": ["binary search", "greedy", "implementation", "math"], "problem_rating": "2100", "solved_by": "x2861"},
{"url": "https://codeforces.com//problemset/problem/1832/C", "name": "Contrast Value", "tags": ["greedy", "implementation"], "problem_rating": "1200", "solved_by": "x19489"},
{"url": "https://codeforces.com//problemset/problem/1832/B", "name": "Maximum Sum", "tags": ["brute force", "sortings", "two pointers"], "problem_rating": "1100", "solved_by": "x20807"},
{"url": "https://codeforces.com//problemset/problem/1832/A", "name": "New Palindrome", "tags": ["strings"], "problem_rating": "800", "solved_by": "x25243"},
{"url": "https://codeforces.com//problemset/problem/1831/B", "name": "Array merging", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1000", "solved_by": "x19653"},
{"url": "https://codeforces.com//problemset/problem/1831/A", "name": "Twin Permutations", "tags": ["constructive algorithms"], "problem_rating": "800", "solved_by": "x25515"},
{"url": "https://codeforces.com//problemset/problem/1830/F", "name": "The Third Grace", "tags": ["data structures", "dp"], "problem_rating": "3200", "solved_by": "x241"},
{"url": "https://codeforces.com//problemset/problem/1830/E", "name": "Bully Sort", "tags": ["data structures", "math"], "problem_rating": "3500", "solved_by": "x236"},
{"url": "https://codeforces.com//problemset/problem/1830/D", "name": "Mex Tree", "tags": ["brute force", "dp", "trees"], "problem_rating": "2800", "solved_by": "x633"},
{"url": "https://codeforces.com//problemset/problem/1830/C", "name": "Hyperregular Bracket Strings", "tags": ["combinatorics", "greedy", "hashing", "math", "number theory", "sortings"], "problem_rating": "2400", "solved_by": "x1582"},
{"url": "https://codeforces.com//problemset/problem/1830/B", "name": "The BOSS Can Count Pairs", "tags": ["brute force", "math"], "problem_rating": "2000", "solved_by": "x4747"},
{"url": "https://codeforces.com//problemset/problem/1830/A", "name": "Copil Copac Draws Trees", "tags": ["dfs and similar", "dp", "graphs", "trees"], "problem_rating": "1400", "solved_by": "x13022"},
{"url": "https://codeforces.com//problemset/problem/1829/H", "name": "Don't Blame Me", "tags": ["bitmasks", "combinatorics", "dp", "math"], "problem_rating": "1700", "solved_by": "x7453"},
{"url": "https://codeforces.com//problemset/problem/1829/G", "name": "Hits Different", "tags": ["data structures", "dp", "implementation", "math"], "problem_rating": "1600", "solved_by": "x9954"},
{"url": "https://codeforces.com//problemset/problem/1829/F", "name": "Forever Winter", "tags": ["dfs and similar", "graphs", "math"], "problem_rating": "1300", "solved_by": "x16913"},
{"url": "https://codeforces.com//problemset/problem/1829/E", "name": "The Lakes", "tags": ["dfs and similar", "dsu", "graphs", "implementation"], "problem_rating": "1100", "solved_by": "x19221"},
{"url": "https://codeforces.com//problemset/problem/1829/D", "name": "Gold Rush", "tags": ["brute force", "dfs and similar", "dp", "implementation"], "problem_rating": "1000", "solved_by": "x25352"},
{"url": "https://codeforces.com//problemset/problem/1829/C", "name": "Mr. Perfectly Fine", "tags": ["bitmasks", "greedy", "implementation"], "problem_rating": "800", "solved_by": "x27893"},
{"url": "https://codeforces.com//problemset/problem/1829/B", "name": "Blank Space", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x43274"},
{"url": "https://codeforces.com//problemset/problem/1829/A", "name": "Love Story", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x48482"},
{"url": "https://codeforces.com//problemset/problem/1828/B", "name": "Permutation Swap", "tags": ["math", "number theory"], "problem_rating": "900", "solved_by": "x21867"},
{"url": "https://codeforces.com//problemset/problem/1828/A", "name": "Divisible Array", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x23385"},
{"url": "https://codeforces.com//problemset/problem/1827/F", "name": "Copium Permutation", "tags": ["constructive algorithms", "data structures", "greedy"], "problem_rating": "3500", "solved_by": "x114"},
{"url": "https://codeforces.com//problemset/problem/1827/E", "name": "Bus Routes", "tags": ["binary search", "constructive algorithms", "dfs and similar", "greedy", "trees"], "problem_rating": "3400", "solved_by": "x372"},
{"url": "https://codeforces.com//problemset/problem/1827/D", "name": "Two Centroids", "tags": ["data structures", "dfs and similar", "greedy", "trees"], "problem_rating": "2800", "solved_by": "x739"},
{"url": "https://codeforces.com//problemset/problem/1827/C", "name": "Palindrome Partition", "tags": ["binary search", "brute force", "data structures", "dp", "hashing", "strings"], "problem_rating": "2600", "solved_by": "x1168"},
{"url": "https://codeforces.com//problemset/problem/1827/B2", "name": "Range Sorting (Hard Version)", "tags": ["binary search", "data structures", "dp", "greedy"], "problem_rating": "2400", "solved_by": "x1818"},
{"url": "https://codeforces.com//problemset/problem/1827/B1", "name": "Range Sorting (Easy Version)", "tags": ["binary search", "dp", "dsu", "greedy", "trees", "two pointers"], "problem_rating": "2000", "solved_by": "x3784"},
{"url": "https://codeforces.com//problemset/problem/1827/A", "name": "Counting Orders", "tags": ["combinatorics", "math", "sortings", "two pointers"], "problem_rating": "1100", "solved_by": "x18279"},
{"url": "https://codeforces.com//problemset/problem/1826/F", "name": "Fading into Fog", "tags": ["geometry", "interactive", "math", "probabilities"], "problem_rating": "2800", "solved_by": "x346"},
{"url": "https://codeforces.com//problemset/problem/1826/E", "name": "Walk the Runway", "tags": ["bitmasks", "brute force", "data structures", "dp", "graphs", "implementation", "sortings"], "problem_rating": "2400", "solved_by": "x1556"},
{"url": "https://codeforces.com//problemset/problem/1826/D", "name": "Running Miles", "tags": ["brute force", "dp", "greedy"], "problem_rating": "1700", "solved_by": "x9180"},
{"url": "https://codeforces.com//problemset/problem/1826/C", "name": "Dreaming of Freedom", "tags": ["greedy", "math", "number theory"], "problem_rating": "1300", "solved_by": "x13215"},
{"url": "https://codeforces.com//problemset/problem/1826/B", "name": "Lunatic Never Content", "tags": ["math", "number theory"], "problem_rating": "1100", "solved_by": "x16718"},
{"url": "https://codeforces.com//problemset/problem/1826/A", "name": "Trust Nobody", "tags": ["brute force", "greedy", "implementation", "sortings"], "problem_rating": "1200", "solved_by": "x14858"},
{"url": "https://codeforces.com//problemset/problem/1825/B", "name": "LuoTianyi and the Table", "tags": ["greedy", "math"], "problem_rating": "1000", "solved_by": "x14437"},
{"url": "https://codeforces.com//problemset/problem/1825/A", "name": "LuoTianyi and the Palindrome String", "tags": ["greedy", "strings"], "problem_rating": "800", "solved_by": "x19486"},
{"url": "https://codeforces.com//problemset/problem/1824/E", "name": "LuoTianyi and Cartridge", "tags": ["data structures", "trees"], "problem_rating": "3500", "solved_by": "x127"},
{"url": "https://codeforces.com//problemset/problem/1824/D", "name": "LuoTianyi and the Function", "tags": ["data structures"], "problem_rating": "3000", "solved_by": "x472"},
{"url": "https://codeforces.com//problemset/problem/1824/C", "name": "LuoTianyi and XOR-Tree", "tags": ["data structures", "dfs and similar", "dp", "dsu", "greedy", "trees"], "problem_rating": "2500", "solved_by": "x1343"},
{"url": "https://codeforces.com//problemset/problem/1824/B2", "name": "LuoTianyi and the Floating Islands (Hard Version)", "tags": ["combinatorics", "dfs and similar", "math", "probabilities", "trees"], "problem_rating": "2300", "solved_by": "x2545"},
{"url": "https://codeforces.com//problemset/problem/1824/B1", "name": "LuoTianyi and the Floating Islands (Easy Version)", "tags": ["combinatorics", "math", "probabilities", "trees"], "problem_rating": "1800", "solved_by": "x4449"},
{"url": "https://codeforces.com//problemset/problem/1824/A", "name": "LuoTianyi and the Show", "tags": ["greedy", "implementation"], "problem_rating": "1400", "solved_by": "x11069"},
{"url": "https://codeforces.com//problemset/problem/1823/F", "name": "Random Walk", "tags": ["dp", "graphs", "math", "probabilities", "trees"], "problem_rating": "2600", "solved_by": "x836"},
{"url": "https://codeforces.com//problemset/problem/1823/E", "name": "Removing Graph", "tags": ["brute force", "dp", "games", "graphs", "math"], "problem_rating": "2500", "solved_by": "x1210"},
{"url": "https://codeforces.com//problemset/problem/1823/D", "name": "Unique Palindromes", "tags": ["constructive algorithms", "math", "strings"], "problem_rating": "1900", "solved_by": "x3751"},
{"url": "https://codeforces.com//problemset/problem/1823/C", "name": "Strongly Composite", "tags": ["greedy", "math", "number theory"], "problem_rating": "1300", "solved_by": "x12017"},
{"url": "https://codeforces.com//problemset/problem/1823/B", "name": "Sort with Step", "tags": ["brute force", "math", "sortings"], "problem_rating": "900", "solved_by": "x15748"},
{"url": "https://codeforces.com//problemset/problem/1823/A", "name": "A-characteristic", "tags": ["combinatorics", "constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x15984"},
{"url": "https://codeforces.com//problemset/problem/1822/G2", "name": "Magic Triples (Hard Version)", "tags": ["brute force", "data structures", "math", "number theory"], "problem_rating": "2200", "solved_by": "x2365"},
{"url": "https://codeforces.com//problemset/problem/1822/G1", "name": "Magic Triples (Easy Version)", "tags": ["brute force", "data structures", "math", "number theory"], "problem_rating": "1700", "solved_by": "x6840"},
{"url": "https://codeforces.com//problemset/problem/1822/F", "name": "Gardening Friends", "tags": ["brute force", "dfs and similar", "dp", "graphs", "trees"], "problem_rating": "1700", "solved_by": "x5860"},
{"url": "https://codeforces.com//problemset/problem/1822/E", "name": "Making Anti-Palindromes", "tags": ["greedy", "math", "strings"], "problem_rating": "1600", "solved_by": "x10161"},
{"url": "https://codeforces.com//problemset/problem/1822/D", "name": "Super-Permutation", "tags": ["constructive algorithms", "math"], "problem_rating": "1200", "solved_by": "x16344"},
{"url": "https://codeforces.com//problemset/problem/1822/C", "name": "Bun Lover", "tags": ["math"], "problem_rating": "800", "solved_by": "x22662"},
{"url": "https://codeforces.com//problemset/problem/1822/B", "name": "Karina and Array", "tags": ["greedy", "math", "sortings"], "problem_rating": "800", "solved_by": "x24469"},
{"url": "https://codeforces.com//problemset/problem/1822/A", "name": "TubeTube Feed", "tags": ["brute force", "implementation"], "problem_rating": "800", "solved_by": "x23989"},
{"url": "https://codeforces.com//problemset/problem/1821/F", "name": "Timber", "tags": ["combinatorics", "dp", "fft", "math"], "problem_rating": "2600", "solved_by": "x728"},
{"url": "https://codeforces.com//problemset/problem/1821/E", "name": "Rearrange Brackets", "tags": ["brute force", "dp", "greedy", "sortings", "strings"], "problem_rating": "2100", "solved_by": "x2326"},
{"url": "https://codeforces.com//problemset/problem/1821/D", "name": "Black Cells", "tags": ["binary search", "brute force", "greedy", "math"], "problem_rating": "1900", "solved_by": "x4878"},
{"url": "https://codeforces.com//problemset/problem/1821/C", "name": "Tear It Apart", "tags": ["brute force", "implementation", "math", "strings"], "problem_rating": "1300", "solved_by": "x13987"},
{"url": "https://codeforces.com//problemset/problem/1821/B", "name": "Sort the Subarray", "tags": ["brute force", "greedy"], "problem_rating": "1100", "solved_by": "x17821"},
{"url": "https://codeforces.com//problemset/problem/1821/A", "name": "Matching", "tags": ["combinatorics", "math"], "problem_rating": "800", "solved_by": "x19618"},
{"url": "https://codeforces.com//problemset/problem/1820/B", "name": "JoJo's Incredible Adventures", "tags": ["math", "strings", "two pointers"], "problem_rating": "1100", "solved_by": "x14063"},
{"url": "https://codeforces.com//problemset/problem/1820/A", "name": "Yura's New Name", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x16529"},
{"url": "https://codeforces.com//problemset/problem/1819/F", "name": "Willy-nilly, Crack, Into Release!", "tags": ["data structures", "dp"], "problem_rating": "3500", "solved_by": "x129"},
{"url": "https://codeforces.com//problemset/problem/1819/E", "name": "Roads in E City", "tags": ["interactive", "math", "probabilities", "trees"], "problem_rating": "3200", "solved_by": "x275"},
{"url": "https://codeforces.com//problemset/problem/1819/D", "name": "Misha and Apples", "tags": ["brute force", "data structures", "dp", "two pointers"], "problem_rating": "2800", "solved_by": "x611"},
{"url": "https://codeforces.com//problemset/problem/1819/C", "name": "The Fox and the Complete Tree Traversal", "tags": ["constructive algorithms", "dp", "implementation", "math", "trees"], "problem_rating": "2400", "solved_by": "x1434"},
{"url": "https://codeforces.com//problemset/problem/1819/B", "name": "The Butcher", "tags": ["geometry", "greedy", "implementation", "sortings", "two pointers"], "problem_rating": "1900", "solved_by": "x3507"},
{"url": "https://codeforces.com//problemset/problem/1819/A", "name": "Constructive Problem", "tags": ["brute force", "greedy"], "problem_rating": "1300", "solved_by": "x12393"},
{"url": "https://codeforces.com//problemset/problem/1818/B", "name": "Indivisible", "tags": ["constructive algorithms"], "problem_rating": "900", "solved_by": "x14543"},
{"url": "https://codeforces.com//problemset/problem/1818/A", "name": "Politics", "tags": ["greedy", "implementation"], "problem_rating": "800", "solved_by": "x12817"},
{"url": "https://codeforces.com//problemset/problem/1817/F", "name": "Entangled Substrings", "tags": ["string suffix structures", "strings"], "problem_rating": "3500", "solved_by": "x186"},
{"url": "https://codeforces.com//problemset/problem/1817/E", "name": "Half-sum", "tags": ["brute force", "divide and conquer", "greedy"], "problem_rating": "3400", "solved_by": "x257"},
{"url": "https://codeforces.com//problemset/problem/1817/D", "name": "Toy Machine", "tags": ["constructive algorithms", "games", "implementation"], "problem_rating": "2700", "solved_by": "x723"},
{"url": "https://codeforces.com//problemset/problem/1817/C", "name": "Similar Polynomials", "tags": ["combinatorics", "math"], "problem_rating": "2400", "solved_by": "x945"},
{"url": "https://codeforces.com//problemset/problem/1817/B", "name": "Fish Graph", "tags": ["brute force", "constructive algorithms", "dfs and similar", "graphs"], "problem_rating": "1900", "solved_by": "x4008"},
{"url": "https://codeforces.com//problemset/problem/1817/A", "name": "Almost Increasing Subsequence", "tags": ["binary search", "data structures", "greedy"], "problem_rating": "1500", "solved_by": "x10734"},
{"url": "https://codeforces.com//problemset/problem/1816/B", "name": "Grid Reconstruction", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1000", "solved_by": "x15022"},
{"url": "https://codeforces.com//problemset/problem/1816/A", "name": "Ian Visits Mary", "tags": ["constructive algorithms", "geometry", "number theory"], "problem_rating": "800", "solved_by": "x17130"},
{"url": "https://codeforces.com//problemset/problem/1815/F", "name": "OH NO1 (-2-3-4)", "tags": ["constructive algorithms", "graphs", "math"], "problem_rating": "3500", "solved_by": "x218"},
{"url": "https://codeforces.com//problemset/problem/1815/E", "name": "Bosco and Particle", "tags": ["dp", "math", "number theory", "strings"], "problem_rating": "3100", "solved_by": "x334"},
{"url": "https://codeforces.com//problemset/problem/1815/D", "name": "XOR Counting", "tags": ["bitmasks", "combinatorics", "dp", "math"], "problem_rating": "2600", "solved_by": "x1085"},
{"url": "https://codeforces.com//problemset/problem/1815/C", "name": "Between", "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy"], "problem_rating": "2200", "solved_by": "x1926"},
{"url": "https://codeforces.com//problemset/problem/1815/B", "name": "Sum Graph", "tags": ["brute force", "constructive algorithms", "graphs", "implementation", "interactive", "shortest paths", "trees"], "problem_rating": "2000", "solved_by": "x2960"},
{"url": "https://codeforces.com//problemset/problem/1815/A", "name": "Ian and Array Sorting", "tags": ["greedy", "math"], "problem_rating": "1300", "solved_by": "x13792"},
{"url": "https://codeforces.com//problemset/problem/1814/F", "name": "Communication Towers", "tags": ["brute force", "divide and conquer", "dsu"], "problem_rating": "2700", "solved_by": "x574"},
{"url": "https://codeforces.com//problemset/problem/1814/E", "name": "Chain Chips", "tags": ["data structures", "dp", "matrices"], "problem_rating": "2300", "solved_by": "x1295"},
{"url": "https://codeforces.com//problemset/problem/1814/D", "name": "Balancing Weapons", "tags": ["binary search", "brute force", "data structures", "math", "two pointers"], "problem_rating": "2500", "solved_by": "x848"},
{"url": "https://codeforces.com//problemset/problem/1814/C", "name": "Search in Parallel", "tags": ["constructive algorithms", "greedy", "sortings"], "problem_rating": "1500", "solved_by": "x10542"},
{"url": "https://codeforces.com//problemset/problem/1814/B", "name": "Long Legs", "tags": ["brute force", "math"], "problem_rating": "1700", "solved_by": "x9794"},
{"url": "https://codeforces.com//problemset/problem/1814/A", "name": "Coins", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x27097"},
{"url": "https://codeforces.com//problemset/problem/1812/J", "name": "Unmysterious Language", "tags": ["*special problem", "constructive algorithms", "strings"], "problem_rating": [null], "solved_by": "x5848"},
{"url": "https://codeforces.com//problemset/problem/1812/I", "name": "Mountain Climber", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x259"},
{"url": "https://codeforces.com//problemset/problem/1812/H", "name": "Expected Twist", "tags": ["*special problem", "interactive"], "problem_rating": [null], "solved_by": "x139"},
{"url": "https://codeforces.com//problemset/problem/1812/G", "name": "Colour Vision", "tags": ["*special problem", "implementation"], "problem_rating": [null], "solved_by": "x538"},
{"url": "https://codeforces.com//problemset/problem/1812/F", "name": "Factorization", "tags": ["*special problem", "number theory"], "problem_rating": [null], "solved_by": "x971"},
{"url": "https://codeforces.com//problemset/problem/1812/E", "name": "Not a Geometry Problem", "tags": ["*special problem", "*special problem", "constructive algorithms", "geometry", "math"], "problem_rating": [null], "solved_by": "x3975"},
{"url": "https://codeforces.com//problemset/problem/1812/D", "name": "Trivial Conjecture", "tags": ["*special problem", "constructive algorithms", "math", "number theory"], "problem_rating": [null], "solved_by": "x4365"},
{"url": "https://codeforces.com//problemset/problem/1812/C", "name": "Digits", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x1248"},
{"url": "https://codeforces.com//problemset/problem/1812/B", "name": "Was it Rated?", "tags": ["*special problem", "*special problem", "*special problem", "brute force", "implementation"], "problem_rating": [null], "solved_by": "x5642"},
{"url": "https://codeforces.com//problemset/problem/1812/A", "name": "Are You a Robot?", "tags": ["*special problem", "*special problem", "*special problem", "expression parsing", "strings"], "problem_rating": [null], "solved_by": "x13169"},
{"url": "https://codeforces.com//problemset/problem/1811/G2", "name": "Vlad and the Nice Paths (hard version)", "tags": ["binary search", "combinatorics", "data structures", "dp", "math", "two pointers"], "problem_rating": "2200", "solved_by": "x1695"},
{"url": "https://codeforces.com//problemset/problem/1811/G1", "name": "Vlad and the Nice Paths (easy version)", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2100", "solved_by": "x2003"},
{"url": "https://codeforces.com//problemset/problem/1811/F", "name": "Is It Flower?", "tags": ["dfs and similar", "graphs", "implementation"], "problem_rating": "2100", "solved_by": "x1783"},
{"url": "https://codeforces.com//problemset/problem/1811/E", "name": "Living Sequence", "tags": ["binary search", "dp", "math", "number theory"], "problem_rating": "1500", "solved_by": "x11964"},
{"url": "https://codeforces.com//problemset/problem/1811/D", "name": "Umka and a Long Flight", "tags": ["constructive algorithms", "implementation", "math"], "problem_rating": "1600", "solved_by": "x7273"},
{"url": "https://codeforces.com//problemset/problem/1811/C", "name": "Restore the Array", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1100", "solved_by": "x19357"},
{"url": "https://codeforces.com//problemset/problem/1811/B", "name": "Conveyor Belts", "tags": ["implementation", "math"], "problem_rating": "1000", "solved_by": "x20038"},
{"url": "https://codeforces.com//problemset/problem/1811/A", "name": "Insert Digit", "tags": ["greedy", "math", "strings"], "problem_rating": "800", "solved_by": "x30593"},
{"url": "https://codeforces.com//problemset/problem/1810/H", "name": "Last Number", "tags": ["combinatorics", "math"], "problem_rating": "2900", "solved_by": "x133"},
{"url": "https://codeforces.com//problemset/problem/1810/G", "name": "The Maximum Prefix", "tags": ["dp"], "problem_rating": "3200", "solved_by": "x664"},
{"url": "https://codeforces.com//problemset/problem/1810/F", "name": "M-tree", "tags": ["data structures", "math", "sortings", "trees"], "problem_rating": "2800", "solved_by": "x559"},
{"url": "https://codeforces.com//problemset/problem/1810/E", "name": "Monsters", "tags": ["brute force", "data structures", "dfs and similar", "dsu", "graphs", "greedy"], "problem_rating": "2100", "solved_by": "x3094"},
{"url": "https://codeforces.com//problemset/problem/1810/D", "name": "Climbing the Tree", "tags": ["binary search", "math"], "problem_rating": "1700", "solved_by": "x7301"},
{"url": "https://codeforces.com//problemset/problem/1810/C", "name": "Make It Permutation", "tags": ["brute force", "greedy", "sortings"], "problem_rating": "1300", "solved_by": "x14217"},
{"url": "https://codeforces.com//problemset/problem/1810/B", "name": "Candies", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "800", "solved_by": "x17325"},
{"url": "https://codeforces.com//problemset/problem/1810/A", "name": "Beautiful Sequence", "tags": ["brute force", "greedy"], "problem_rating": "800", "solved_by": "x20570"},
{"url": "https://codeforces.com//problemset/problem/1809/G", "name": "Prediction", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2800", "solved_by": "x430"},
{"url": "https://codeforces.com//problemset/problem/1809/F", "name": "Traveling in Berland", "tags": ["binary search", "data structures", "graphs", "greedy", "implementation"], "problem_rating": "2500", "solved_by": "x739"},
{"url": "https://codeforces.com//problemset/problem/1809/E", "name": "Two Tanks", "tags": ["binary search", "dp", "implementation", "math"], "problem_rating": "2400", "solved_by": "x813"},
{"url": "https://codeforces.com//problemset/problem/1809/D", "name": "Binary String Sorting", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1800", "solved_by": "x6129"},
{"url": "https://codeforces.com//problemset/problem/1809/C", "name": "Sum on Subarrays", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1500", "solved_by": "x12404"},
{"url": "https://codeforces.com//problemset/problem/1809/B", "name": "Points on Plane", "tags": ["binary search", "greedy", "math"], "problem_rating": "1000", "solved_by": "x19424"},
{"url": "https://codeforces.com//problemset/problem/1809/A", "name": "Garland", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x23689"},
{"url": "https://codeforces.com//problemset/problem/1808/E3", "name": "Minibuses on Venus (hard version)", "tags": ["brute force", "combinatorics", "dp", "math"], "problem_rating": "2800", "solved_by": "x430"},
{"url": "https://codeforces.com//problemset/problem/1808/E2", "name": "Minibuses on Venus (medium version)", "tags": ["combinatorics", "divide and conquer", "dp", "matrices"], "problem_rating": "2500", "solved_by": "x670"},
{"url": "https://codeforces.com//problemset/problem/1808/E1", "name": "Minibuses on Venus (easy version)", "tags": ["combinatorics", "divide and conquer", "dp"], "problem_rating": "2200", "solved_by": "x1297"},
{"url": "https://codeforces.com//problemset/problem/1808/D", "name": "Petya, Petya, Petr, and Palindromes", "tags": ["binary search", "brute force", "data structures", "two pointers"], "problem_rating": "2100", "solved_by": "x2258"},
{"url": "https://codeforces.com//problemset/problem/1808/C", "name": "Unlucky Numbers", "tags": ["brute force", "dp", "greedy", "implementation"], "problem_rating": "1900", "solved_by": "x3698"},
{"url": "https://codeforces.com//problemset/problem/1808/B", "name": "Playing in a Casino", "tags": ["math", "sortings"], "problem_rating": "1200", "solved_by": "x15817"},
{"url": "https://codeforces.com//problemset/problem/1808/A", "name": "Lucky Numbers", "tags": ["brute force", "implementation"], "problem_rating": "900", "solved_by": "x17802"},
{"url": "https://codeforces.com//problemset/problem/1807/G2", "name": "Subsequence Addition (Hard Version)", "tags": ["bitmasks", "dp", "greedy", "implementation", "sortings"], "problem_rating": "1100", "solved_by": "x18499"},
{"url": "https://codeforces.com//problemset/problem/1807/G1", "name": "Subsequence Addition (Easy Version)", "tags": ["brute force", "data structures", "dp", "greedy", "implementation", "sortings"], "problem_rating": "1100", "solved_by": "x18377"},
{"url": "https://codeforces.com//problemset/problem/1807/F", "name": "Bouncy Ball", "tags": ["brute force", "dfs and similar", "implementation"], "problem_rating": "1700", "solved_by": "x6077"},
{"url": "https://codeforces.com//problemset/problem/1807/E", "name": "Interview", "tags": ["binary search", "implementation", "interactive"], "problem_rating": "1300", "solved_by": "x12319"},
{"url": "https://codeforces.com//problemset/problem/1807/D", "name": "Odd Queries", "tags": ["data structures", "implementation"], "problem_rating": "900", "solved_by": "x30553"},
{"url": "https://codeforces.com//problemset/problem/1807/C", "name": "Find and Replace", "tags": ["greedy", "implementation", "strings"], "problem_rating": "800", "solved_by": "x29832"},
{"url": "https://codeforces.com//problemset/problem/1807/B", "name": "Grab the Candies", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x40864"},
{"url": "https://codeforces.com//problemset/problem/1807/A", "name": "Plus or Minus", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x58808"},
{"url": "https://codeforces.com//problemset/problem/1806/F2", "name": "GCD Master (hard version)", "tags": ["greedy", "math", "sortings"], "problem_rating": "2900", "solved_by": "x285"},
{"url": "https://codeforces.com//problemset/problem/1806/F1", "name": "GCD Master (easy version)", "tags": ["greedy", "math", "number theory", "sortings"], "problem_rating": "2900", "solved_by": "x345"},
{"url": "https://codeforces.com//problemset/problem/1806/E", "name": "Tree Master", "tags": ["brute force", "data structures", "dfs and similar", "trees"], "problem_rating": "2200", "solved_by": "x2749"},
{"url": "https://codeforces.com//problemset/problem/1806/D", "name": "DSU Master", "tags": ["combinatorics", "dp", "dsu", "math"], "problem_rating": "2500", "solved_by": "x869"},
{"url": "https://codeforces.com//problemset/problem/1806/C", "name": "Sequence Master", "tags": ["brute force", "constructive algorithms", "math"], "problem_rating": "1600", "solved_by": "x7439"},
{"url": "https://codeforces.com//problemset/problem/1806/B", "name": "Mex Master", "tags": ["constructive algorithms", "greedy"], "problem_rating": "900", "solved_by": "x17405"},
{"url": "https://codeforces.com//problemset/problem/1806/A", "name": "Walking Master", "tags": ["geometry", "greedy", "math"], "problem_rating": "800", "solved_by": "x23459"},
{"url": "https://codeforces.com//problemset/problem/1805/F2", "name": "Survival of the Weakest (hard version)", "tags": ["greedy", "math", "sortings", "two pointers"], "problem_rating": "3100", "solved_by": "x337"},
{"url": "https://codeforces.com//problemset/problem/1805/F1", "name": "Survival of the Weakest (easy version)", "tags": ["binary search", "brute force", "implementation", "math", "sortings"], "problem_rating": "2600", "solved_by": "x862"},
{"url": "https://codeforces.com//problemset/problem/1805/E", "name": "There Should Be a Lot of Maximums", "tags": ["brute force", "data structures", "dfs and similar", "dp", "trees", "two pointers"], "problem_rating": "2300", "solved_by": "x1564"},
{"url": "https://codeforces.com//problemset/problem/1805/D", "name": "A Wide, Wide Graph", "tags": ["dfs and similar", "dp", "graphs", "greedy", "trees"], "problem_rating": "1800", "solved_by": "x6325"},
{"url": "https://codeforces.com//problemset/problem/1805/C", "name": "Place for a Selfie", "tags": ["binary search", "data structures", "geometry", "math"], "problem_rating": "1400", "solved_by": "x12294"},
{"url": "https://codeforces.com//problemset/problem/1805/B", "name": "The String Has a Target", "tags": ["greedy", "strings"], "problem_rating": "800", "solved_by": "x18388"},
{"url": "https://codeforces.com//problemset/problem/1805/A", "name": "We Need the Zero", "tags": ["bitmasks", "brute force"], "problem_rating": "800", "solved_by": "x22209"},
{"url": "https://codeforces.com//problemset/problem/1804/H", "name": "Code Lock", "tags": ["bitmasks", "dp"], "problem_rating": "3300", "solved_by": "x174"},
{"url": "https://codeforces.com//problemset/problem/1804/G", "name": "Flow Control", "tags": ["data structures", "dsu", "implementation"], "problem_rating": "3500", "solved_by": "x198"},
{"url": "https://codeforces.com//problemset/problem/1804/F", "name": "Approximate Diameter", "tags": ["binary search", "divide and conquer", "graphs", "shortest paths"], "problem_rating": "2700", "solved_by": "x889"},
{"url": "https://codeforces.com//problemset/problem/1804/E", "name": "Routing", "tags": ["bitmasks", "brute force", "dfs and similar", "dp", "graphs"], "problem_rating": "2400", "solved_by": "x1398"},
{"url": "https://codeforces.com//problemset/problem/1804/D", "name": "Accommodation", "tags": ["brute force", "dp", "greedy", "implementation"], "problem_rating": "2000", "solved_by": "x4527"},
{"url": "https://codeforces.com//problemset/problem/1804/C", "name": "Pull Your Luck", "tags": ["brute force", "greedy", "math", "number theory"], "problem_rating": "1500", "solved_by": "x11837"},
{"url": "https://codeforces.com//problemset/problem/1804/B", "name": "Vaccination", "tags": ["greedy", "implementation"], "problem_rating": "1000", "solved_by": "x14014"},
{"url": "https://codeforces.com//problemset/problem/1804/A", "name": "Lame King", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x17806"},
{"url": "https://codeforces.com//problemset/problem/1802/B", "name": "Settlement of Guinea Pigs", "tags": ["greedy", "implementation", "math"], "problem_rating": "1000", "solved_by": "x13126"},
{"url": "https://codeforces.com//problemset/problem/1802/A", "name": "Likes", "tags": ["greedy", "implementation"], "problem_rating": "800", "solved_by": "x15649"},
{"url": "https://codeforces.com//problemset/problem/1801/G", "name": "A task for substrings", "tags": ["data structures", "string suffix structures", "strings"], "problem_rating": "3400", "solved_by": "x357"},
{"url": "https://codeforces.com//problemset/problem/1801/F", "name": "Another n-dimensional chocolate bar", "tags": ["dp", "math", "meet-in-the-middle", "number theory"], "problem_rating": "2700", "solved_by": "x558"},
{"url": "https://codeforces.com//problemset/problem/1801/E", "name": "Gasoline prices", "tags": ["data structures", "divide and conquer", "dsu", "hashing", "trees"], "problem_rating": "3000", "solved_by": "x440"},
{"url": "https://codeforces.com//problemset/problem/1801/D", "name": "The way home", "tags": ["binary search", "data structures", "dp", "graphs", "greedy", "shortest paths", "sortings"], "problem_rating": "2100", "solved_by": "x2124"},
{"url": "https://codeforces.com//problemset/problem/1801/C", "name": "Music Festival", "tags": ["binary search", "data structures", "dp", "greedy", "sortings"], "problem_rating": "1900", "solved_by": "x3339"},
{"url": "https://codeforces.com//problemset/problem/1801/B", "name": "Buying gifts", "tags": ["data structures", "greedy", "sortings"], "problem_rating": "1800", "solved_by": "x6042"},
{"url": "https://codeforces.com//problemset/problem/1801/A", "name": "The Very Beautiful Blanket", "tags": ["bitmasks", "constructive algorithms"], "problem_rating": "1600", "solved_by": "x8375"},
{"url": "https://codeforces.com//problemset/problem/1800/G", "name": "Symmetree", "tags": ["dfs and similar", "hashing", "implementation", "trees"], "problem_rating": "2200", "solved_by": "x1983"},
{"url": "https://codeforces.com//problemset/problem/1800/F", "name": "Dasha and Nightmares", "tags": ["bitmasks", "hashing", "meet-in-the-middle", "strings"], "problem_rating": "1900", "solved_by": "x3795"},
{"url": "https://codeforces.com//problemset/problem/1800/E2", "name": "Unforgivable Curse (hard version)", "tags": ["brute force", "constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy", "strings"], "problem_rating": "1500", "solved_by": "x12442"},
{"url": "https://codeforces.com//problemset/problem/1800/E1", "name": "Unforgivable Curse (easy version)", "tags": ["brute force", "constructive algorithms", "dsu", "graphs", "greedy", "strings"], "problem_rating": "1400", "solved_by": "x12487"},
{"url": "https://codeforces.com//problemset/problem/1800/D", "name": "Remove Two Letters", "tags": ["data structures", "greedy", "hashing", "strings"], "problem_rating": "1200", "solved_by": "x22543"},
{"url": "https://codeforces.com//problemset/problem/1800/C2", "name": "Powering the Hero (hard version)", "tags": ["data structures", "greedy"], "problem_rating": "1100", "solved_by": "x21937"},
{"url": "https://codeforces.com//problemset/problem/1800/C1", "name": "Powering the Hero (easy version)", "tags": ["data structures", "greedy"], "problem_rating": "1000", "solved_by": "x22939"},
{"url": "https://codeforces.com//problemset/problem/1800/B", "name": "Count the Number of Pairs", "tags": ["greedy", "strings"], "problem_rating": "1000", "solved_by": "x24555"},
{"url": "https://codeforces.com//problemset/problem/1800/A", "name": "Is It a Cat?", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x30762"},
{"url": "https://codeforces.com//problemset/problem/1799/H", "name": "Tree Cutting", "tags": ["bitmasks", "dfs and similar", "dp"], "problem_rating": "3200", "solved_by": "x275"},
{"url": "https://codeforces.com//problemset/problem/1799/G", "name": "Count Voting", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2600", "solved_by": "x727"},
{"url": "https://codeforces.com//problemset/problem/1799/F", "name": "Halve or Subtract", "tags": ["binary search", "brute force", "dp", "greedy", "sortings"], "problem_rating": "2700", "solved_by": "x786"},
{"url": "https://codeforces.com//problemset/problem/1799/E", "name": "City Union", "tags": ["constructive algorithms", "dfs and similar", "dsu", "geometry", "greedy", "implementation", "math"], "problem_rating": "2300", "solved_by": "x1175"},
{"url": "https://codeforces.com//problemset/problem/1799/D2", "name": "Hot Start Up (hard version)", "tags": ["data structures", "dp"], "problem_rating": "2100", "solved_by": "x2386"},
{"url": "https://codeforces.com//problemset/problem/1799/D1", "name": "Hot Start Up (easy version)", "tags": ["dp"], "problem_rating": "1900", "solved_by": "x4292"},
{"url": "https://codeforces.com//problemset/problem/1799/C", "name": "Double Lexicographically Minimum", "tags": ["greedy", "strings"], "problem_rating": "1700", "solved_by": "x5684"},
{"url": "https://codeforces.com//problemset/problem/1799/B", "name": "Equalize by Divide", "tags": ["brute force", "constructive algorithms", "greedy", "math"], "problem_rating": "1200", "solved_by": "x11072"},
{"url": "https://codeforces.com//problemset/problem/1799/A", "name": "Recent Actions", "tags": ["data structures", "greedy", "implementation", "math"], "problem_rating": "800", "solved_by": "x11479"},
{"url": "https://codeforces.com//problemset/problem/1798/F", "name": "Gifts from Grandfather Ahmed", "tags": ["dp", "math", "number theory"], "problem_rating": "2500", "solved_by": "x481"},
{"url": "https://codeforces.com//problemset/problem/1798/E", "name": "Multitest Generator", "tags": ["brute force", "dp"], "problem_rating": "2300", "solved_by": "x1554"},
{"url": "https://codeforces.com//problemset/problem/1798/D", "name": "Shocking Arrangement", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1600", "solved_by": "x9516"},
{"url": "https://codeforces.com//problemset/problem/1798/C", "name": "Candy Store", "tags": ["greedy", "math", "number theory"], "problem_rating": "1700", "solved_by": "x8005"},
{"url": "https://codeforces.com//problemset/problem/1798/B", "name": "Three Sevens", "tags": ["brute force", "data structures", "greedy", "implementation"], "problem_rating": "1000", "solved_by": "x16270"},
{"url": "https://codeforces.com//problemset/problem/1798/A", "name": "Showstopper", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "800", "solved_by": "x19524"},
{"url": "https://codeforces.com//problemset/problem/1797/F", "name": "Li Hua and Path", "tags": ["data structures", "dfs and similar", "divide and conquer", "dsu", "trees"], "problem_rating": "3000", "solved_by": "x342"},
{"url": "https://codeforces.com//problemset/problem/1797/E", "name": "Li Hua and Array", "tags": ["brute force", "data structures", "dsu", "math", "number theory", "two pointers"], "problem_rating": "2300", "solved_by": "x1233"},
{"url": "https://codeforces.com//problemset/problem/1797/D", "name": "Li Hua and Tree", "tags": ["brute force", "data structures", "dfs and similar", "dp", "implementation", "trees"], "problem_rating": "1900", "solved_by": "x3847"},
{"url": "https://codeforces.com//problemset/problem/1797/C", "name": "Li Hua and Chess", "tags": ["constructive algorithms", "greedy", "interactive"], "problem_rating": "1600", "solved_by": "x7436"},
{"url": "https://codeforces.com//problemset/problem/1797/B", "name": "Li Hua and Pattern", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1100", "solved_by": "x15346"},
{"url": "https://codeforces.com//problemset/problem/1797/A", "name": "Li Hua and Maze", "tags": ["constructive algorithms", "flows", "graphs", "greedy", "implementation"], "problem_rating": "800", "solved_by": "x17195"},
{"url": "https://codeforces.com//problemset/problem/1796/F", "name": "Strange Triples", "tags": ["brute force", "math", "number theory"], "problem_rating": "2900", "solved_by": "x170"},
{"url": "https://codeforces.com//problemset/problem/1796/E", "name": "Colored Subgraphs", "tags": ["dfs and similar", "dp", "games", "greedy", "trees"], "problem_rating": "2500", "solved_by": "x731"},
{"url": "https://codeforces.com//problemset/problem/1796/D", "name": "Maximum Subarray", "tags": ["data structures", "dp", "greedy", "two pointers"], "problem_rating": "2000", "solved_by": "x4143"},
{"url": "https://codeforces.com//problemset/problem/1796/C", "name": "Maximum Set", "tags": ["binary search", "math"], "problem_rating": "1600", "solved_by": "x10125"},
{"url": "https://codeforces.com//problemset/problem/1796/B", "name": "Asterisk-Minor Template", "tags": ["implementation", "strings"], "problem_rating": "1000", "solved_by": "x16315"},
{"url": "https://codeforces.com//problemset/problem/1796/A", "name": "Typical Interview Problem", "tags": ["brute force", "implementation", "strings"], "problem_rating": "800", "solved_by": "x18701"},
{"url": "https://codeforces.com//problemset/problem/1795/G", "name": "Removal Sequences", "tags": ["bitmasks", "dfs and similar", "graphs"], "problem_rating": "2700", "solved_by": "x665"},
{"url": "https://codeforces.com//problemset/problem/1795/F", "name": "Blocking Chips", "tags": ["binary search", "constructive algorithms", "dfs and similar", "greedy", "trees"], "problem_rating": "2400", "solved_by": "x1086"},
{"url": "https://codeforces.com//problemset/problem/1795/E", "name": "Explosions?", "tags": ["binary search", "data structures", "dp", "greedy", "math"], "problem_rating": "2200", "solved_by": "x1973"},
{"url": "https://codeforces.com//problemset/problem/1795/D", "name": "Triangle Coloring", "tags": ["combinatorics", "math"], "problem_rating": "1600", "solved_by": "x8847"},
{"url": "https://codeforces.com//problemset/problem/1795/C", "name": "Tea Tasting", "tags": ["binary search", "data structures", "implementation"], "problem_rating": "1500", "solved_by": "x11958"},
{"url": "https://codeforces.com//problemset/problem/1795/B", "name": "Ideal Point", "tags": ["brute force", "geometry", "greedy"], "problem_rating": "900", "solved_by": "x21719"},
{"url": "https://codeforces.com//problemset/problem/1795/A", "name": "Two Towers", "tags": ["brute force", "implementation", "strings"], "problem_rating": "800", "solved_by": "x23444"},
{"url": "https://codeforces.com//problemset/problem/1794/E", "name": "Labeling the Tree with Distances", "tags": ["data structures", "dp", "greedy", "hashing", "implementation", "trees"], "problem_rating": "2400", "solved_by": "x1047"},
{"url": "https://codeforces.com//problemset/problem/1794/D", "name": "Counting Factorizations", "tags": ["combinatorics", "divide and conquer", "dp", "math", "number theory"], "problem_rating": "1900", "solved_by": "x3476"},
{"url": "https://codeforces.com//problemset/problem/1794/C", "name": "Scoring Subsequences", "tags": ["binary search", "greedy", "math", "two pointers"], "problem_rating": "1300", "solved_by": "x13163"},
{"url": "https://codeforces.com//problemset/problem/1794/B", "name": "Not Dividing", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "900", "solved_by": "x20985"},
{"url": "https://codeforces.com//problemset/problem/1794/A", "name": "Prefix and Suffix Array", "tags": ["strings"], "problem_rating": "800", "solved_by": "x16933"},
{"url": "https://codeforces.com//problemset/problem/1793/F", "name": "Rebrending", "tags": ["brute force", "data structures", "divide and conquer", "implementation"], "problem_rating": "2600", "solved_by": "x1336"},
{"url": "https://codeforces.com//problemset/problem/1793/E", "name": "Velepin and Marketing", "tags": ["binary search", "data structures", "dp", "greedy", "sortings", "two pointers"], "problem_rating": "2600", "solved_by": "x959"},
{"url": "https://codeforces.com//problemset/problem/1793/D", "name": "Moscow Gorillas", "tags": ["binary search", "dp", "greedy", "implementation", "math", "two pointers"], "problem_rating": "1800", "solved_by": "x5956"},
{"url": "https://codeforces.com//problemset/problem/1793/C", "name": "Dora and Search", "tags": ["constructive algorithms", "data structures", "two pointers"], "problem_rating": "1200", "solved_by": "x19219"},
{"url": "https://codeforces.com//problemset/problem/1793/B", "name": "Fedya and Array", "tags": ["constructive algorithms", "math"], "problem_rating": "1100", "solved_by": "x15568"},
{"url": "https://codeforces.com//problemset/problem/1793/A", "name": "Yet Another Promotion", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x17876"},
{"url": "https://codeforces.com//problemset/problem/1792/F2", "name": "Graph Coloring (hard version)", "tags": ["brute force", "combinatorics", "divide and conquer", "dp", "fft", "graphs"], "problem_rating": "2900", "solved_by": "x376"},
{"url": "https://codeforces.com//problemset/problem/1792/F1", "name": "Graph Coloring (easy version)", "tags": ["combinatorics", "dp", "graphs"], "problem_rating": "2700", "solved_by": "x691"},
{"url": "https://codeforces.com//problemset/problem/1792/E", "name": "Divisors and Table", "tags": ["brute force", "dfs and similar", "dp", "number theory"], "problem_rating": "2400", "solved_by": "x1345"},
{"url": "https://codeforces.com//problemset/problem/1792/D", "name": "Fixed Prefix Permutations", "tags": ["binary search", "bitmasks", "data structures", "hashing", "math", "sortings"], "problem_rating": "1700", "solved_by": "x6075"},
{"url": "https://codeforces.com//problemset/problem/1792/C", "name": "Min Max Sort", "tags": ["binary search", "brute force", "greedy", "math", "two pointers"], "problem_rating": "1500", "solved_by": "x13741"},
{"url": "https://codeforces.com//problemset/problem/1792/B", "name": "Stand-up Comedian", "tags": ["greedy", "math"], "problem_rating": "1200", "solved_by": "x20819"},
{"url": "https://codeforces.com//problemset/problem/1792/A", "name": "GamingForces", "tags": ["greedy", "sortings"], "problem_rating": "800", "solved_by": "x27705"},
{"url": "https://codeforces.com//problemset/problem/1791/G2", "name": "Teleporters (Hard Version)", "tags": ["binary search", "greedy", "sortings"], "problem_rating": "1900", "solved_by": "x4646"},
{"url": "https://codeforces.com//problemset/problem/1791/G1", "name": "Teleporters (Easy Version)", "tags": ["greedy", "sortings"], "problem_rating": "1100", "solved_by": "x21631"},
{"url": "https://codeforces.com//problemset/problem/1791/F", "name": "Range Update Point Query", "tags": ["binary search", "brute force", "data structures"], "problem_rating": "1500", "solved_by": "x11981"},
{"url": "https://codeforces.com//problemset/problem/1791/E", "name": "Negatives and Positives", "tags": ["dp", "greedy", "sortings"], "problem_rating": "1100", "solved_by": "x26991"},
{"url": "https://codeforces.com//problemset/problem/1791/D", "name": "Distinct Split", "tags": ["brute force", "greedy", "strings"], "problem_rating": "1000", "solved_by": "x28541"},
{"url": "https://codeforces.com//problemset/problem/1791/C", "name": "Prepend and Append", "tags": ["implementation", "two pointers"], "problem_rating": "800", "solved_by": "x42842"},
{"url": "https://codeforces.com//problemset/problem/1791/B", "name": "Following Directions", "tags": ["geometry", "implementation"], "problem_rating": "800", "solved_by": "x43055"},
{"url": "https://codeforces.com//problemset/problem/1791/A", "name": "Codeforces Checking", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x57792"},
{"url": "https://codeforces.com//problemset/problem/1790/G", "name": "Tokens on Graph", "tags": ["constructive algorithms", "dfs and similar", "graphs", "shortest paths"], "problem_rating": "2300", "solved_by": "x1093"},
{"url": "https://codeforces.com//problemset/problem/1790/F", "name": "Timofey and Black-White Tree", "tags": ["brute force", "dfs and similar", "divide and conquer", "graphs", "greedy", "math", "shortest paths", "trees"], "problem_rating": "2100", "solved_by": "x3229"},
{"url": "https://codeforces.com//problemset/problem/1790/E", "name": "Vlad and a Pair of Numbers", "tags": ["bitmasks", "constructive algorithms"], "problem_rating": "1400", "solved_by": "x14699"},
{"url": "https://codeforces.com//problemset/problem/1790/D", "name": "Matryoshkas", "tags": ["data structures", "greedy", "sortings"], "problem_rating": "1200", "solved_by": "x19182"},
{"url": "https://codeforces.com//problemset/problem/1790/C", "name": "Premutation", "tags": ["brute force", "implementation", "math"], "problem_rating": "1000", "solved_by": "x23449"},
{"url": "https://codeforces.com//problemset/problem/1790/B", "name": "Taisia and Dice", "tags": ["greedy", "greedy", "math"], "problem_rating": "800", "solved_by": "x27042"},
{"url": "https://codeforces.com//problemset/problem/1790/A", "name": "Polycarp and the Day of Pi", "tags": ["implementation", "math", "strings"], "problem_rating": "800", "solved_by": "x36403"},
{"url": "https://codeforces.com//problemset/problem/1789/F", "name": "Serval and Brain Power", "tags": ["bitmasks", "brute force", "dp", "greedy", "implementation", "strings"], "problem_rating": "2700", "solved_by": "x648"},
{"url": "https://codeforces.com//problemset/problem/1789/E", "name": "Serval and Music Game", "tags": ["brute force", "dp", "implementation", "math", "number theory"], "problem_rating": "2500", "solved_by": "x793"},
{"url": "https://codeforces.com//problemset/problem/1789/D", "name": "Serval and Shift-Shift-Shift", "tags": ["bitmasks", "brute force", "constructive algorithms", "implementation"], "problem_rating": "2200", "solved_by": "x1631"},
{"url": "https://codeforces.com//problemset/problem/1789/C", "name": "Serval and Toxel's Arrays", "tags": ["combinatorics", "dp", "implementation", "math"], "problem_rating": "1500", "solved_by": "x8332"},
{"url": "https://codeforces.com//problemset/problem/1789/B", "name": "Serval and Inversion Magic", "tags": ["brute force", "implementation", "strings", "two pointers"], "problem_rating": "800", "solved_by": "x16005"},
{"url": "https://codeforces.com//problemset/problem/1789/A", "name": "Serval and Mocha's Array", "tags": ["brute force", "math", "number theory"], "problem_rating": "800", "solved_by": "x17911"},
{"url": "https://codeforces.com//problemset/problem/1788/F", "name": "XOR, Tree, and Queries", "tags": ["bitmasks", "constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy", "implementation", "trees"], "problem_rating": "2500", "solved_by": "x813"},
{"url": "https://codeforces.com//problemset/problem/1788/E", "name": "Sum Over Zero", "tags": ["data structures", "dfs and similar", "dp"], "problem_rating": "2200", "solved_by": "x2579"},
{"url": "https://codeforces.com//problemset/problem/1788/D", "name": "Moving Dots", "tags": ["binary search", "brute force", "combinatorics", "math", "two pointers"], "problem_rating": "2000", "solved_by": "x3816"},
{"url": "https://codeforces.com//problemset/problem/1788/C", "name": "Matching Numbers", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1300", "solved_by": "x16830"},
{"url": "https://codeforces.com//problemset/problem/1788/B", "name": "Sum of Two Numbers", "tags": ["constructive algorithms", "greedy", "implementation", "math", "probabilities"], "problem_rating": "1100", "solved_by": "x19668"},
{"url": "https://codeforces.com//problemset/problem/1788/A", "name": "One and Two", "tags": ["brute force", "implementation", "math"], "problem_rating": "800", "solved_by": "x28966"},
{"url": "https://codeforces.com//problemset/problem/1787/I", "name": "Treasure Hunt", "tags": ["data structures", "divide and conquer", "two pointers"], "problem_rating": "3400", "solved_by": "x151"},
{"url": "https://codeforces.com//problemset/problem/1787/H", "name": "Codeforces Scoreboard", "tags": ["binary search", "data structures", "dp", "geometry"], "problem_rating": "3300", "solved_by": "x209"},
{"url": "https://codeforces.com//problemset/problem/1787/G", "name": "Colorful Tree Again", "tags": ["brute force", "data structures", "trees"], "problem_rating": "3000", "solved_by": "x423"},
{"url": "https://codeforces.com//problemset/problem/1787/F", "name": "Inverse Transformation", "tags": ["constructive algorithms", "implementation", "math"], "problem_rating": "2500", "solved_by": "x665"},
{"url": "https://codeforces.com//problemset/problem/1787/E", "name": "The Harmonization of XOR", "tags": ["bitmasks", "constructive algorithms", "greedy", "math"], "problem_rating": "2100", "solved_by": "x2266"},
{"url": "https://codeforces.com//problemset/problem/1787/D", "name": "Game on Axis", "tags": ["combinatorics", "dfs and similar", "dsu", "graphs", "implementation"], "problem_rating": "1900", "solved_by": "x3342"},
{"url": "https://codeforces.com//problemset/problem/1787/C", "name": "Remove the Bracket", "tags": ["dp", "greedy", "math"], "problem_rating": "1600", "solved_by": "x6906"},
{"url": "https://codeforces.com//problemset/problem/1787/B", "name": "Number Factorization", "tags": ["greedy", "math", "number theory"], "problem_rating": "1100", "solved_by": "x13004"},
{"url": "https://codeforces.com//problemset/problem/1787/A", "name": "Exponential Equation", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x18960"},
{"url": "https://codeforces.com//problemset/problem/1786/B", "name": "Cake Assembly Line", "tags": ["brute force", "sortings"], "problem_rating": "1300", "solved_by": "x8818"},
{"url": "https://codeforces.com//problemset/problem/1786/A2", "name": "Alternating Deck (hard version)", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x11313"},
{"url": "https://codeforces.com//problemset/problem/1786/A1", "name": "Non-alternating Deck (easy version)", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x13704"},
{"url": "https://codeforces.com//problemset/problem/1784/F", "name": "Minimums or Medians", "tags": [], "problem_rating": "3400", "solved_by": "x174"},
{"url": "https://codeforces.com//problemset/problem/1784/E", "name": "Infinite Game", "tags": ["brute force", "combinatorics", "dp", "games", "probabilities"], "problem_rating": "3100", "solved_by": "x313"},
{"url": "https://codeforces.com//problemset/problem/1784/D", "name": "Wooden Spoon", "tags": ["combinatorics", "dp"], "problem_rating": "2400", "solved_by": "x978"},
{"url": "https://codeforces.com//problemset/problem/1784/C", "name": "Monsters (hard version)", "tags": ["data structures", "greedy"], "problem_rating": "2200", "solved_by": "x1612"},
{"url": "https://codeforces.com//problemset/problem/1784/B", "name": "Letter Exchange", "tags": ["constructive algorithms"], "problem_rating": "1900", "solved_by": "x3274"},
{"url": "https://codeforces.com//problemset/problem/1784/A", "name": "Monsters (easy version)", "tags": ["brute force", "greedy"], "problem_rating": "1000", "solved_by": "x14811"},
{"url": "https://codeforces.com//problemset/problem/1783/G", "name": "Weighed Tree Radius", "tags": ["data structures", "divide and conquer", "implementation", "trees"], "problem_rating": "2800", "solved_by": "x443"},
{"url": "https://codeforces.com//problemset/problem/1783/F", "name": "Double Sort II", "tags": ["dfs and similar", "flows", "graph matchings", "graphs"], "problem_rating": "2500", "solved_by": "x993"},
{"url": "https://codeforces.com//problemset/problem/1783/E", "name": "Game of the Year", "tags": ["brute force", "data structures", "math", "number theory"], "problem_rating": "2300", "solved_by": "x2064"},
{"url": "https://codeforces.com//problemset/problem/1783/D", "name": "Different Arrays", "tags": ["brute force", "dp", "implementation"], "problem_rating": "2000", "solved_by": "x4304"},
{"url": "https://codeforces.com//problemset/problem/1783/C", "name": "Yet Another Tournament", "tags": ["binary search", "greedy", "sortings"], "problem_rating": "1700", "solved_by": "x9080"},
{"url": "https://codeforces.com//problemset/problem/1783/B", "name": "Matrix of Differences", "tags": ["constructive algorithms", "math"], "problem_rating": "1100", "solved_by": "x17544"},
{"url": "https://codeforces.com//problemset/problem/1783/A", "name": "Make it Beautiful", "tags": ["constructive algorithms", "math", "sortings"], "problem_rating": "800", "solved_by": "x28714"},
{"url": "https://codeforces.com//problemset/problem/1781/H2", "name": "Window Signals (hard version)", "tags": [], "problem_rating": "3500", "solved_by": "x89"},
{"url": "https://codeforces.com//problemset/problem/1781/H1", "name": "Window Signals (easy version)", "tags": [], "problem_rating": "3200", "solved_by": "x115"},
{"url": "https://codeforces.com//problemset/problem/1781/G", "name": "Diverse Coloring", "tags": ["constructive algorithms", "trees"], "problem_rating": "3200", "solved_by": "x219"},
{"url": "https://codeforces.com//problemset/problem/1781/F", "name": "Bracket Insertion", "tags": ["combinatorics", "dp", "math", "trees"], "problem_rating": "2700", "solved_by": "x810"},
{"url": "https://codeforces.com//problemset/problem/1781/E", "name": "Rectangle Shrinking", "tags": ["binary search", "brute force", "data structures", "greedy", "implementation", "two pointers"], "problem_rating": "2300", "solved_by": "x1288"},
{"url": "https://codeforces.com//problemset/problem/1781/D", "name": "Many Perfect Squares", "tags": ["brute force", "math", "number theory"], "problem_rating": "1800", "solved_by": "x5395"},
{"url": "https://codeforces.com//problemset/problem/1781/C", "name": "Equal Frequencies", "tags": ["brute force", "constructive algorithms", "greedy", "implementation", "sortings", "strings"], "problem_rating": "1600", "solved_by": "x7374"},
{"url": "https://codeforces.com//problemset/problem/1781/B", "name": "Going to the Cinema", "tags": ["brute force", "greedy", "sortings"], "problem_rating": "1000", "solved_by": "x13400"},
{"url": "https://codeforces.com//problemset/problem/1781/A", "name": "Parallel Projection", "tags": ["geometry", "math"], "problem_rating": "800", "solved_by": "x14990"},
{"url": "https://codeforces.com//problemset/problem/1780/G", "name": "Delicious Dessert", "tags": ["binary search", "dsu", "hashing", "math", "number theory", "string suffix structures"], "problem_rating": "2400", "solved_by": "x683"},
{"url": "https://codeforces.com//problemset/problem/1780/F", "name": "Three Chairs", "tags": ["bitmasks", "brute force", "combinatorics", "data structures", "dp", "number theory", "sortings"], "problem_rating": "2300", "solved_by": "x1414"},
{"url": "https://codeforces.com//problemset/problem/1780/E", "name": "Josuke and Complete Graph", "tags": ["binary search", "brute force", "data structures", "math", "number theory"], "problem_rating": "2400", "solved_by": "x1346"},
{"url": "https://codeforces.com//problemset/problem/1780/D", "name": "Bit Guessing Game", "tags": ["binary search", "bitmasks", "constructive algorithms", "interactive"], "problem_rating": "1800", "solved_by": "x4793"},
{"url": "https://codeforces.com//problemset/problem/1780/B", "name": "GCD Partition", "tags": ["brute force", "greedy", "math", "number theory"], "problem_rating": "1100", "solved_by": "x17358"},
{"url": "https://codeforces.com//problemset/problem/1780/A", "name": "Hayato and School", "tags": ["constructive algorithms", "greedy"], "problem_rating": "800", "solved_by": "x21305"},
{"url": "https://codeforces.com//problemset/problem/1779/H", "name": "Olympic Team Building", "tags": ["brute force", "meet-in-the-middle"], "problem_rating": "3500", "solved_by": "x137"},
{"url": "https://codeforces.com//problemset/problem/1779/G", "name": "The Game of the Century", "tags": ["constructive algorithms", "graphs", "shortest paths"], "problem_rating": "3000", "solved_by": "x309"},
{"url": "https://codeforces.com//problemset/problem/1779/F", "name": "Xorcerer's Stones", "tags": ["bitmasks", "constructive algorithms", "dp", "trees"], "problem_rating": "2500", "solved_by": "x1239"},
{"url": "https://codeforces.com//problemset/problem/1779/E", "name": "Anya's Simultaneous Exhibition", "tags": ["constructive algorithms", "graphs", "greedy", "interactive", "sortings"], "problem_rating": "2400", "solved_by": "x1725"},
{"url": "https://codeforces.com//problemset/problem/1779/D", "name": "Boris and His Amazing Haircut", "tags": ["constructive algorithms", "data structures", "dp", "dsu", "greedy", "sortings"], "problem_rating": "1700", "solved_by": "x7715"},
{"url": "https://codeforces.com//problemset/problem/1779/C", "name": "Least Prefix Sum", "tags": ["data structures", "greedy"], "problem_rating": "1600", "solved_by": "x12156"},
{"url": "https://codeforces.com//problemset/problem/1779/B", "name": "MKnez's ConstructiveForces Task", "tags": ["constructive algorithms", "math"], "problem_rating": "900", "solved_by": "x23294"},
{"url": "https://codeforces.com//problemset/problem/1779/A", "name": "Hall of Fame", "tags": ["constructive algorithms", "greedy", "strings"], "problem_rating": "800", "solved_by": "x23026"},
{"url": "https://codeforces.com//problemset/problem/1778/F", "name": "Maximizing Root", "tags": ["dfs and similar", "dp", "graphs", "math", "number theory", "trees"], "problem_rating": "2600", "solved_by": "x632"},
{"url": "https://codeforces.com//problemset/problem/1778/E", "name": "The Tree Has Fallen!", "tags": ["bitmasks", "dfs and similar", "math", "trees"], "problem_rating": "2500", "solved_by": "x845"},
{"url": "https://codeforces.com//problemset/problem/1778/D", "name": "Flexible String Revisit", "tags": ["combinatorics", "dp", "math", "probabilities"], "problem_rating": "2100", "solved_by": "x2654"},
{"url": "https://codeforces.com//problemset/problem/1778/C", "name": "Flexible String", "tags": ["bitmasks", "brute force", "strings"], "problem_rating": "1600", "solved_by": "x7969"},
{"url": "https://codeforces.com//problemset/problem/1778/B", "name": "The Forbidden Permutation", "tags": ["greedy", "math"], "problem_rating": "1300", "solved_by": "x13102"},
{"url": "https://codeforces.com//problemset/problem/1778/A", "name": "Flip Flop Sum", "tags": ["greedy", "implementation"], "problem_rating": "800", "solved_by": "x23975"},
{"url": "https://codeforces.com//problemset/problem/1777/F", "name": "Comfortably Numb", "tags": ["bitmasks", "data structures", "divide and conquer", "strings", "trees"], "problem_rating": "2400", "solved_by": "x864"},
{"url": "https://codeforces.com//problemset/problem/1777/E", "name": "Edge Reverse", "tags": ["binary search", "dfs and similar", "graphs", "trees"], "problem_rating": "2200", "solved_by": "x1763"},
{"url": "https://codeforces.com//problemset/problem/1777/D", "name": "Score of a Tree", "tags": ["bitmasks", "combinatorics", "dfs and similar", "dp", "math", "probabilities", "trees"], "problem_rating": "1900", "solved_by": "x3379"},
{"url": "https://codeforces.com//problemset/problem/1777/C", "name": "Quiz Master", "tags": ["binary search", "math", "number theory", "sortings", "two pointers"], "problem_rating": "1700", "solved_by": "x8247"},
{"url": "https://codeforces.com//problemset/problem/1777/B", "name": "Emordnilap", "tags": ["combinatorics", "greedy", "math"], "problem_rating": "900", "solved_by": "x17224"},
{"url": "https://codeforces.com//problemset/problem/1777/A", "name": "Everybody Likes Good Arrays!", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x23001"},
{"url": "https://codeforces.com//problemset/problem/1776/N", "name": "Count Permutations", "tags": ["math"], "problem_rating": "3500", "solved_by": "x79"},
{"url": "https://codeforces.com//problemset/problem/1776/M", "name": "Parmigiana With Seafood", "tags": ["binary search", "dp", "greedy", "trees"], "problem_rating": "3000", "solved_by": "x363"},
{"url": "https://codeforces.com//problemset/problem/1776/L", "name": "Controllers", "tags": ["binary search", "math"], "problem_rating": "1500", "solved_by": "x5611"},
{"url": "https://codeforces.com//problemset/problem/1776/K", "name": "Uniform Chemistry", "tags": ["dp", "math"], "problem_rating": "3200", "solved_by": "x65"},
{"url": "https://codeforces.com//problemset/problem/1776/J", "name": "Italian Data Centers", "tags": ["graphs", "shortest paths"], "problem_rating": "2500", "solved_by": "x622"},
{"url": "https://codeforces.com//problemset/problem/1776/I", "name": "Spinach Pizza", "tags": ["games", "geometry", "greedy", "interactive"], "problem_rating": "2500", "solved_by": "x652"},
{"url": "https://codeforces.com//problemset/problem/1776/H", "name": "Beppa and SwerChat", "tags": ["two pointers"], "problem_rating": "1300", "solved_by": "x6213"},
{"url": "https://codeforces.com//problemset/problem/1776/G", "name": "Another Wine Tasting Event", "tags": ["combinatorics", "constructive algorithms", "math", "strings"], "problem_rating": "2100", "solved_by": "x1983"},
{"url": "https://codeforces.com//problemset/problem/1776/F", "name": "Train Splitting", "tags": ["constructive algorithms", "graphs", "greedy"], "problem_rating": "1700", "solved_by": "x3340"},
{"url": "https://codeforces.com//problemset/problem/1776/E", "name": "Crossing the Railways", "tags": ["data structures", "dp"], "problem_rating": "3500", "solved_by": "x67"},
{"url": "https://codeforces.com//problemset/problem/1776/D", "name": "Teamwork", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "2800", "solved_by": "x350"},
{"url": "https://codeforces.com//problemset/problem/1776/C", "name": "Library game", "tags": ["games", "greedy", "interactive", "sortings"], "problem_rating": "2500", "solved_by": "x771"},
{"url": "https://codeforces.com//problemset/problem/1776/B", "name": "Vittorio Plays with LEGO Bricks", "tags": ["dp", "geometry"], "problem_rating": "2200", "solved_by": "x1286"},
{"url": "https://codeforces.com//problemset/problem/1776/A", "name": "Walking Boy", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x6863"},
{"url": "https://codeforces.com//problemset/problem/1775/F", "name": "Laboratory on Pluto", "tags": ["constructive algorithms", "dp", "greedy", "math"], "problem_rating": "2500", "solved_by": "x754"},
{"url": "https://codeforces.com//problemset/problem/1775/E", "name": "The Human Equation", "tags": ["greedy", "implementation"], "problem_rating": "2100", "solved_by": "x3118"},
{"url": "https://codeforces.com//problemset/problem/1775/D", "name": "Friendly Spiders", "tags": ["dfs and similar", "graphs", "math", "number theory", "shortest paths"], "problem_rating": "1800", "solved_by": "x6030"},
{"url": "https://codeforces.com//problemset/problem/1775/C", "name": "Interesting Sequence", "tags": ["bitmasks", "math"], "problem_rating": "1600", "solved_by": "x10110"},
{"url": "https://codeforces.com//problemset/problem/1775/B", "name": "Gardener and the Array", "tags": ["bitmasks", "constructive algorithms"], "problem_rating": "1300", "solved_by": "x13306"},
{"url": "https://codeforces.com//problemset/problem/1775/A2", "name": "Gardener and the Capybaras (hard version)", "tags": ["constructive algorithms", "greedy"], "problem_rating": "900", "solved_by": "x18511"},
{"url": "https://codeforces.com//problemset/problem/1775/A1", "name": "Gardener and the Capybaras (easy version)", "tags": ["brute force", "constructive algorithms", "implementation"], "problem_rating": "800", "solved_by": "x19495"},
{"url": "https://codeforces.com//problemset/problem/1774/H", "name": "Maximum Permutation", "tags": ["constructive algorithms"], "problem_rating": "3500", "solved_by": "x131"},
{"url": "https://codeforces.com//problemset/problem/1774/G", "name": "Segment Covering", "tags": ["brute force", "combinatorics", "constructive algorithms", "data structures", "dp", "trees"], "problem_rating": "3200", "solved_by": "x429"},
{"url": "https://codeforces.com//problemset/problem/1774/F2", "name": "Magician and Pigs (Hard Version)", "tags": ["binary search", "brute force", "data structures", "implementation"], "problem_rating": "2700", "solved_by": "x659"},
{"url": "https://codeforces.com//problemset/problem/1774/F1", "name": "Magician and Pigs (Easy Version)", "tags": ["brute force", "data structures", "implementation"], "problem_rating": "2400", "solved_by": "x1047"},
{"url": "https://codeforces.com//problemset/problem/1774/E", "name": "Two Chess Pieces", "tags": ["dfs and similar", "dp", "greedy", "trees"], "problem_rating": "1900", "solved_by": "x3422"},
{"url": "https://codeforces.com//problemset/problem/1774/D", "name": "Same Count One", "tags": ["brute force", "constructive algorithms", "greedy", "implementation", "two pointers"], "problem_rating": "1600", "solved_by": "x7675"},
{"url": "https://codeforces.com//problemset/problem/1774/C", "name": "Ice and Fire", "tags": ["constructive algorithms", "dp", "greedy"], "problem_rating": "1300", "solved_by": "x11834"},
{"url": "https://codeforces.com//problemset/problem/1774/B", "name": "Coloring", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1500", "solved_by": "x11966"},
{"url": "https://codeforces.com//problemset/problem/1774/A", "name": "Add Plus Minus Sign", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x22246"},
{"url": "https://codeforces.com//problemset/problem/1773/L", "name": "Lisa's Sequences", "tags": ["dp"], "problem_rating": "3500", "solved_by": "x31"},
{"url": "https://codeforces.com//problemset/problem/1773/K", "name": "King's Puzzle", "tags": ["constructive algorithms"], "problem_rating": "1900", "solved_by": "x1397"},
{"url": "https://codeforces.com//problemset/problem/1773/J", "name": "Jumbled Trees", "tags": ["constructive algorithms", "math"], "problem_rating": "2900", "solved_by": "x104"},
{"url": "https://codeforces.com//problemset/problem/1773/I", "name": "Interactive Factorial Guessing", "tags": ["brute force", "games", "implementation", "interactive"], "problem_rating": "2500", "solved_by": "x465"},
{"url": "https://codeforces.com//problemset/problem/1773/H", "name": "Hot and Cold", "tags": ["binary search", "interactive"], "problem_rating": "2600", "solved_by": "x352"},
{"url": "https://codeforces.com//problemset/problem/1773/G", "name": "Game of Questions", "tags": ["bitmasks", "combinatorics", "dp", "fft", "math", "probabilities"], "problem_rating": "2800", "solved_by": "x348"},
{"url": "https://codeforces.com//problemset/problem/1773/F", "name": "Football", "tags": ["constructive algorithms"], "problem_rating": "800", "solved_by": "x4026"},
{"url": "https://codeforces.com//problemset/problem/1773/E", "name": "Easy Assembly", "tags": ["greedy", "sortings"], "problem_rating": "1400", "solved_by": "x4764"},
{"url": "https://codeforces.com//problemset/problem/1773/D", "name": "Dominoes", "tags": ["combinatorics", "flows", "graph matchings", "greedy"], "problem_rating": "2600", "solved_by": "x443"},
{"url": "https://codeforces.com//problemset/problem/1773/C", "name": "Cactus Meets Torus", "tags": [], "problem_rating": "3500", "solved_by": "x30"},
{"url": "https://codeforces.com//problemset/problem/1773/B", "name": "BinCoin", "tags": ["binary search", "divide and conquer", "hashing", "implementation", "probabilities", "trees"], "problem_rating": "2200", "solved_by": "x745"},
{"url": "https://codeforces.com//problemset/problem/1773/A", "name": "Amazing Trick", "tags": ["constructive algorithms", "graph matchings", "math", "probabilities"], "problem_rating": "1900", "solved_by": "x1505"},
{"url": "https://codeforces.com//problemset/problem/1772/G", "name": "Gaining Rating", "tags": ["binary search", "greedy", "implementation", "math", "sortings", "two pointers"], "problem_rating": "2200", "solved_by": "x1312"},
{"url": "https://codeforces.com//problemset/problem/1772/F", "name": "Copy of a Copy of a Copy", "tags": ["constructive algorithms", "dfs and similar", "graphs", "implementation", "sortings"], "problem_rating": "2000", "solved_by": "x2309"},
{"url": "https://codeforces.com//problemset/problem/1772/E", "name": "Permutation Game", "tags": ["games"], "problem_rating": "1700", "solved_by": "x6625"},
{"url": "https://codeforces.com//problemset/problem/1772/D", "name": "Absolute Sorting", "tags": ["constructive algorithms", "math"], "problem_rating": "1400", "solved_by": "x15477"},
{"url": "https://codeforces.com//problemset/problem/1772/C", "name": "Different Differences", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1000", "solved_by": "x23225"},
{"url": "https://codeforces.com//problemset/problem/1772/B", "name": "Matrix Rotation", "tags": ["brute force", "implementation"], "problem_rating": "800", "solved_by": "x28742"},
{"url": "https://codeforces.com//problemset/problem/1772/A", "name": "A+B?", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x45853"},
{"url": "https://codeforces.com//problemset/problem/1771/F", "name": "Hossam and Range Minimum Query", "tags": ["binary search", "bitmasks", "data structures", "hashing", "probabilities", "strings", "trees"], "problem_rating": "2500", "solved_by": "x1041"},
{"url": "https://codeforces.com//problemset/problem/1771/E", "name": "Hossam and a Letter", "tags": ["brute force", "dp", "implementation", "two pointers"], "problem_rating": "2500", "solved_by": "x677"},
{"url": "https://codeforces.com//problemset/problem/1771/D", "name": "Hossam and (sub-)palindromic tree", "tags": ["brute force", "data structures", "dfs and similar", "dp", "strings", "trees"], "problem_rating": "2100", "solved_by": "x2671"},
{"url": "https://codeforces.com//problemset/problem/1771/C", "name": "Hossam and Trainees", "tags": ["greedy", "math", "number theory"], "problem_rating": "1600", "solved_by": "x9405"},
{"url": "https://codeforces.com//problemset/problem/1771/B", "name": "Hossam and Friends", "tags": ["binary search", "constructive algorithms", "dp", "two pointers"], "problem_rating": "1400", "solved_by": "x13692"},
{"url": "https://codeforces.com//problemset/problem/1771/A", "name": "Hossam and Combinatorics", "tags": ["combinatorics", "math", "sortings"], "problem_rating": "900", "solved_by": "x22532"},
{"url": "https://codeforces.com//problemset/problem/1770/H", "name": "Koxia, Mahiru and Winter Festival", "tags": ["constructive algorithms"], "problem_rating": "3500", "solved_by": "x101"},
{"url": "https://codeforces.com//problemset/problem/1770/G", "name": "Koxia and Bracket", "tags": ["divide and conquer", "fft", "math"], "problem_rating": "3400", "solved_by": "x158"},
{"url": "https://codeforces.com//problemset/problem/1770/F", "name": "Koxia and Sequence", "tags": ["bitmasks", "combinatorics", "dp", "math", "number theory"], "problem_rating": "3100", "solved_by": "x639"},
{"url": "https://codeforces.com//problemset/problem/1770/E", "name": "Koxia and Tree", "tags": ["combinatorics", "dfs and similar", "dp", "dsu", "math", "probabilities", "trees"], "problem_rating": "2400", "solved_by": "x1324"},
{"url": "https://codeforces.com//problemset/problem/1770/D", "name": "Koxia and Game", "tags": ["constructive algorithms", "data structures", "dfs and similar", "dsu", "flows", "games", "graph matchings", "graphs", "implementation"], "problem_rating": "2000", "solved_by": "x3756"},
{"url": "https://codeforces.com//problemset/problem/1770/C", "name": "Koxia and Number Theory", "tags": ["brute force", "chinese remainder theorem", "math", "number theory"], "problem_rating": "1700", "solved_by": "x8425"},
{"url": "https://codeforces.com//problemset/problem/1770/B", "name": "Koxia and Permutation", "tags": ["constructive algorithms"], "problem_rating": "1000", "solved_by": "x19232"},
{"url": "https://codeforces.com//problemset/problem/1770/A", "name": "Koxia and Whiteboards", "tags": ["brute force", "greedy"], "problem_rating": "1000", "solved_by": "x23205"},
{"url": "https://codeforces.com//problemset/problem/1769/D3", "name": "Игра в Девятку III", "tags": ["*special problem", "brute force"], "problem_rating": "2300", "solved_by": "x119"},
{"url": "https://codeforces.com//problemset/problem/1769/D2", "name": "Игра в Девятку II", "tags": ["*special problem", "brute force"], "problem_rating": "2200", "solved_by": "x190"},
{"url": "https://codeforces.com//problemset/problem/1769/D1", "name": "Игра в Девятку I", "tags": ["*special problem", "brute force", "dp"], "problem_rating": "1800", "solved_by": "x375"},
{"url": "https://codeforces.com//problemset/problem/1769/C2", "name": "Подкрутка II", "tags": ["*special problem", "dp"], "problem_rating": "1300", "solved_by": "x943"},
{"url": "https://codeforces.com//problemset/problem/1769/C1", "name": "Подкрутка I", "tags": ["*special problem", "brute force", "dp", "greedy"], "problem_rating": "1200", "solved_by": "x946"},
{"url": "https://codeforces.com//problemset/problem/1769/B2", "name": "Копирование файлов II", "tags": ["*special problem", "binary search", "brute force", "math"], "problem_rating": "1400", "solved_by": "x865"},
{"url": "https://codeforces.com//problemset/problem/1769/B1", "name": "Копирование файлов I", "tags": ["*special problem", "brute force", "implementation", "math"], "problem_rating": "1000", "solved_by": "x1330"},
{"url": "https://codeforces.com//problemset/problem/1769/A", "name": "Узкая дорога", "tags": ["*special problem", "math"], "problem_rating": "800", "solved_by": "x1926"},
{"url": "https://codeforces.com//problemset/problem/1768/F", "name": "Wonderful Jump", "tags": ["dp", "greedy"], "problem_rating": "2900", "solved_by": "x804"},
{"url": "https://codeforces.com//problemset/problem/1768/E", "name": "Partial Sorting", "tags": ["combinatorics", "math", "number theory"], "problem_rating": "2300", "solved_by": "x1817"},
{"url": "https://codeforces.com//problemset/problem/1768/D", "name": "Lucky Permutation", "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy"], "problem_rating": "1800", "solved_by": "x6917"},
{"url": "https://codeforces.com//problemset/problem/1768/C", "name": "Elemental Decompress", "tags": ["constructive algorithms", "greedy", "implementation", "sortings"], "problem_rating": "1300", "solved_by": "x13880"},
{"url": "https://codeforces.com//problemset/problem/1768/B", "name": "Quick Sort", "tags": ["greedy", "math"], "problem_rating": "900", "solved_by": "x22630"},
{"url": "https://codeforces.com//problemset/problem/1768/A", "name": "Greatest Convex", "tags": ["greedy", "math", "number theory"], "problem_rating": "800", "solved_by": "x28486"},
{"url": "https://codeforces.com//problemset/problem/1767/F", "name": "Two Subtrees", "tags": ["data structures", "trees"], "problem_rating": "3100", "solved_by": "x263"},
{"url": "https://codeforces.com//problemset/problem/1767/E", "name": "Algebra Flash", "tags": ["bitmasks", "brute force", "dp", "graphs", "math", "meet-in-the-middle", "trees"], "problem_rating": "2500", "solved_by": "x876"},
{"url": "https://codeforces.com//problemset/problem/1767/D", "name": "Playoff", "tags": ["combinatorics", "constructive algorithms", "dp", "greedy", "math"], "problem_rating": "1500", "solved_by": "x9682"},
{"url": "https://codeforces.com//problemset/problem/1767/C", "name": "Count Binary Strings", "tags": ["data structures", "dp"], "problem_rating": "2100", "solved_by": "x2587"},
{"url": "https://codeforces.com//problemset/problem/1767/B", "name": "Block Towers", "tags": ["data structures", "greedy", "sortings"], "problem_rating": "800", "solved_by": "x20094"},
{"url": "https://codeforces.com//problemset/problem/1767/A", "name": "Cut the Triangle", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x20339"},
{"url": "https://codeforces.com//problemset/problem/1766/F", "name": "MCF", "tags": ["flows"], "problem_rating": "2800", "solved_by": "x266"},
{"url": "https://codeforces.com//problemset/problem/1766/E", "name": "Decomposition", "tags": ["binary search", "brute force", "data structures", "divide and conquer", "dp", "two pointers"], "problem_rating": "2300", "solved_by": "x1159"},
{"url": "https://codeforces.com//problemset/problem/1766/D", "name": "Lucky Chains", "tags": ["math", "number theory"], "problem_rating": "1600", "solved_by": "x8700"},
{"url": "https://codeforces.com//problemset/problem/1766/C", "name": "Hamiltonian Wall", "tags": ["dp", "implementation"], "problem_rating": "1300", "solved_by": "x13389"},
{"url": "https://codeforces.com//problemset/problem/1766/B", "name": "Notepad#", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x20701"},
{"url": "https://codeforces.com//problemset/problem/1766/A", "name": "Extremely Round", "tags": ["brute force", "implementation"], "problem_rating": "800", "solved_by": "x25193"},
{"url": "https://codeforces.com//problemset/problem/1765/N", "name": "Number Reduction", "tags": ["greedy"], "problem_rating": "1500", "solved_by": "x4626"},
{"url": "https://codeforces.com//problemset/problem/1765/M", "name": "Minimum LCM", "tags": ["math", "number theory"], "problem_rating": "1000", "solved_by": "x13974"},
{"url": "https://codeforces.com//problemset/problem/1765/L", "name": "Project Manager", "tags": ["brute force", "data structures", "implementation"], "problem_rating": "2400", "solved_by": "x575"},
{"url": "https://codeforces.com//problemset/problem/1765/K", "name": "Torus Path", "tags": ["greedy", "math"], "problem_rating": "1500", "solved_by": "x5577"},
{"url": "https://codeforces.com//problemset/problem/1765/J", "name": "Hero to Zero", "tags": ["graph matchings", "math"], "problem_rating": "2900", "solved_by": "x189"},
{"url": "https://codeforces.com//problemset/problem/1765/I", "name": "Infinite Chess", "tags": ["implementation", "shortest paths"], "problem_rating": "2800", "solved_by": "x187"},
{"url": "https://codeforces.com//problemset/problem/1765/H", "name": "Hospital Queue", "tags": ["binary search", "graphs", "greedy", "implementation"], "problem_rating": "2200", "solved_by": "x1223"},
{"url": "https://codeforces.com//problemset/problem/1765/G", "name": "Guess the String", "tags": ["constructive algorithms", "interactive", "probabilities"], "problem_rating": "2600", "solved_by": "x377"},
{"url": "https://codeforces.com//problemset/problem/1765/F", "name": "Chemistry Lab", "tags": ["dp", "geometry", "probabilities"], "problem_rating": "2200", "solved_by": "x590"},
{"url": "https://codeforces.com//problemset/problem/1765/E", "name": "Exchange", "tags": ["brute force", "math"], "problem_rating": "1000", "solved_by": "x9835"},
{"url": "https://codeforces.com//problemset/problem/1765/D", "name": "Watch the Videos", "tags": ["binary search", "constructive algorithms", "two pointers"], "problem_rating": "1700", "solved_by": "x4044"},
{"url": "https://codeforces.com//problemset/problem/1765/C", "name": "Card Guessing", "tags": ["combinatorics", "dp", "probabilities"], "problem_rating": "2600", "solved_by": "x375"},
{"url": "https://codeforces.com//problemset/problem/1765/B", "name": "Broken Keyboard", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x8854"},
{"url": "https://codeforces.com//problemset/problem/1765/A", "name": "Access Levels", "tags": ["bitmasks", "dsu", "flows", "graph matchings"], "problem_rating": "2400", "solved_by": "x676"},
{"url": "https://codeforces.com//problemset/problem/1764/H", "name": "Doremy's Paint 2", "tags": ["data structures"], "problem_rating": "3400", "solved_by": "x176"},
{"url": "https://codeforces.com//problemset/problem/1764/G3", "name": "Doremy's Perfect DS Class (Hard Version)", "tags": ["binary search", "interactive"], "problem_rating": "3300", "solved_by": "x442"},
{"url": "https://codeforces.com//problemset/problem/1764/G2", "name": "Doremy's Perfect DS Class (Medium Version)", "tags": ["binary search", "interactive"], "problem_rating": "3000", "solved_by": "x509"},
{"url": "https://codeforces.com//problemset/problem/1764/G1", "name": "Doremy's Perfect DS Class (Easy Version)", "tags": ["binary search", "interactive"], "problem_rating": "2900", "solved_by": "x562"},
{"url": "https://codeforces.com//problemset/problem/1764/F", "name": "Doremy's Experimental Tree", "tags": ["brute force", "constructive algorithms", "dfs and similar", "dsu", "sortings", "trees"], "problem_rating": "2500", "solved_by": "x941"},
{"url": "https://codeforces.com//problemset/problem/1764/E", "name": "Doremy's Number Line", "tags": ["dp", "greedy", "sortings"], "problem_rating": "2400", "solved_by": "x1204"},
{"url": "https://codeforces.com//problemset/problem/1764/D", "name": "Doremy's Pegging Game", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2000", "solved_by": "x2706"},
{"url": "https://codeforces.com//problemset/problem/1764/C", "name": "Doremy's City Construction", "tags": ["graphs", "greedy"], "problem_rating": "1400", "solved_by": "x9260"},
{"url": "https://codeforces.com//problemset/problem/1764/B", "name": "Doremy's Perfect Math Class", "tags": ["math", "number theory"], "problem_rating": "900", "solved_by": "x15673"},
{"url": "https://codeforces.com//problemset/problem/1764/A", "name": "Doremy's Paint", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x16491"},
{"url": "https://codeforces.com//problemset/problem/1763/F", "name": "Edge Queries", "tags": ["data structures", "dfs and similar", "dp", "dsu", "graphs", "trees"], "problem_rating": "3000", "solved_by": "x442"},
{"url": "https://codeforces.com//problemset/problem/1763/E", "name": "Node Pairs", "tags": ["dp", "graphs", "math", "number theory"], "problem_rating": "2200", "solved_by": "x1749"},
{"url": "https://codeforces.com//problemset/problem/1763/D", "name": "Valid Bitonic Permutations", "tags": ["combinatorics", "dp", "implementation", "math", "number theory"], "problem_rating": "2200", "solved_by": "x1994"},
{"url": "https://codeforces.com//problemset/problem/1763/C", "name": "Another Array Problem", "tags": ["brute force", "constructive algorithms", "greedy"], "problem_rating": "2000", "solved_by": "x6422"},
{"url": "https://codeforces.com//problemset/problem/1763/B", "name": "Incinerate", "tags": ["binary search", "brute force", "data structures", "implementation", "math", "sortings"], "problem_rating": "1200", "solved_by": "x14375"},
{"url": "https://codeforces.com//problemset/problem/1763/A", "name": "Absolute Maximization", "tags": ["bitmasks", "constructive algorithms", "greedy", "math"], "problem_rating": "800", "solved_by": "x15545"},
{"url": "https://codeforces.com//problemset/problem/1762/G", "name": "Unequal Adjacent Elements", "tags": ["constructive algorithms", "sortings"], "problem_rating": "3100", "solved_by": "x101"},
{"url": "https://codeforces.com//problemset/problem/1762/F", "name": "Good Pairs", "tags": ["binary search", "data structures", "dp"], "problem_rating": "2600", "solved_by": "x580"},
{"url": "https://codeforces.com//problemset/problem/1762/E", "name": "Tree Sum", "tags": ["combinatorics", "math", "trees"], "problem_rating": "2600", "solved_by": "x622"},
{"url": "https://codeforces.com//problemset/problem/1762/D", "name": "GCD Queries", "tags": ["constructive algorithms", "interactive", "number theory"], "problem_rating": "2100", "solved_by": "x3376"},
{"url": "https://codeforces.com//problemset/problem/1762/C", "name": "Binary Strings are Fun", "tags": ["combinatorics", "math"], "problem_rating": "1400", "solved_by": "x9032"},
{"url": "https://codeforces.com//problemset/problem/1762/B", "name": "Make Array Good", "tags": ["constructive algorithms", "implementation", "number theory", "sortings"], "problem_rating": "1100", "solved_by": "x16698"},
{"url": "https://codeforces.com//problemset/problem/1762/A", "name": "Divide and Conquer", "tags": ["greedy", "math", "number theory"], "problem_rating": "800", "solved_by": "x18843"},
{"url": "https://codeforces.com//problemset/problem/1761/G", "name": "Centroid Guess", "tags": ["interactive", "probabilities", "trees"], "problem_rating": "3500", "solved_by": "x104"},
{"url": "https://codeforces.com//problemset/problem/1761/F2", "name": "Anti-median (Hard Version)", "tags": ["combinatorics", "dp", "math"], "problem_rating": "3500", "solved_by": "x79"},
{"url": "https://codeforces.com//problemset/problem/1761/F1", "name": "Anti-median (Easy Version)", "tags": ["dp", "math"], "problem_rating": "3100", "solved_by": "x205"},
{"url": "https://codeforces.com//problemset/problem/1761/E", "name": "Make It Connected", "tags": ["binary search", "brute force", "constructive algorithms", "dsu", "graphs", "greedy", "matrices", "trees", "two pointers"], "problem_rating": "2400", "solved_by": "x1771"},
{"url": "https://codeforces.com//problemset/problem/1761/D", "name": "Carry Bit", "tags": ["combinatorics", "math"], "problem_rating": "2100", "solved_by": "x2392"},
{"url": "https://codeforces.com//problemset/problem/1761/C", "name": "Set Construction", "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy"], "problem_rating": "1400", "solved_by": "x9374"},
{"url": "https://codeforces.com//problemset/problem/1761/B", "name": "Elimination of a Ring", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "1000", "solved_by": "x13210"},
{"url": "https://codeforces.com//problemset/problem/1761/A", "name": "Two Permutations", "tags": ["brute force", "constructive algorithms"], "problem_rating": "800", "solved_by": "x18396"},
{"url": "https://codeforces.com//problemset/problem/1760/G", "name": "SlavicG's Favorite Problem", "tags": ["bitmasks", "dfs and similar", "graphs"], "problem_rating": "1700", "solved_by": "x7156"},
{"url": "https://codeforces.com//problemset/problem/1760/F", "name": "Quests", "tags": ["binary search", "greedy", "sortings"], "problem_rating": "1500", "solved_by": "x11831"},
{"url": "https://codeforces.com//problemset/problem/1760/E", "name": "Binary Inversions", "tags": ["data structures", "greedy", "math"], "problem_rating": "1100", "solved_by": "x19797"},
{"url": "https://codeforces.com//problemset/problem/1760/D", "name": "Challenging Valleys", "tags": ["implementation", "two pointers"], "problem_rating": "1000", "solved_by": "x23104"},
{"url": "https://codeforces.com//problemset/problem/1760/C", "name": "Advantage", "tags": ["data structures", "implementation", "sortings"], "problem_rating": "800", "solved_by": "x36136"},
{"url": "https://codeforces.com//problemset/problem/1760/B", "name": "Atilla's Favorite Problem", "tags": ["greedy", "implementation", "strings"], "problem_rating": "800", "solved_by": "x43192"},
{"url": "https://codeforces.com//problemset/problem/1760/A", "name": "Medium Number", "tags": ["implementation", "sortings"], "problem_rating": "800", "solved_by": "x56514"},
{"url": "https://codeforces.com//problemset/problem/1759/G", "name": "Restore the Permutation", "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "math"], "problem_rating": "1900", "solved_by": "x4367"},
{"url": "https://codeforces.com//problemset/problem/1759/F", "name": "All Possible Digits", "tags": ["binary search", "data structures", "greedy", "math", "number theory"], "problem_rating": "1800", "solved_by": "x3831"},
{"url": "https://codeforces.com//problemset/problem/1759/E", "name": "The Humanoid", "tags": ["brute force", "dp", "sortings"], "problem_rating": "1500", "solved_by": "x10500"},
{"url": "https://codeforces.com//problemset/problem/1759/D", "name": "Make It Round", "tags": ["brute force", "number theory"], "problem_rating": "1400", "solved_by": "x12977"},
{"url": "https://codeforces.com//problemset/problem/1759/C", "name": "Thermostat", "tags": ["greedy", "math", "shortest paths"], "problem_rating": "1100", "solved_by": "x17358"},
{"url": "https://codeforces.com//problemset/problem/1759/B", "name": "Lost Permutation", "tags": ["math"], "problem_rating": "800", "solved_by": "x22011"},
{"url": "https://codeforces.com//problemset/problem/1759/A", "name": "Yes-Yes?", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x29477"},
{"url": "https://codeforces.com//problemset/problem/1758/F", "name": "Decent Division", "tags": ["constructive algorithms", "data structures"], "problem_rating": "3000", "solved_by": "x162"},
{"url": "https://codeforces.com//problemset/problem/1758/E", "name": "Tick, Tock", "tags": ["combinatorics", "dfs and similar", "dsu", "graphs"], "problem_rating": "2500", "solved_by": "x823"},
{"url": "https://codeforces.com//problemset/problem/1758/D", "name": "Range = √Sum", "tags": ["binary search", "brute force", "constructive algorithms", "math", "two pointers"], "problem_rating": "1800", "solved_by": "x7115"},
{"url": "https://codeforces.com//problemset/problem/1758/C", "name": "Almost All Multiples", "tags": ["greedy", "number theory"], "problem_rating": "1400", "solved_by": "x13340"},
{"url": "https://codeforces.com//problemset/problem/1758/B", "name": "XOR = Average", "tags": ["constructive algorithms"], "problem_rating": "900", "solved_by": "x20900"},
{"url": "https://codeforces.com//problemset/problem/1758/A", "name": "SSeeeeiinngg DDoouubbllee", "tags": ["constructive algorithms", "strings"], "problem_rating": "800", "solved_by": "x24938"},
{"url": "https://codeforces.com//problemset/problem/1754/B", "name": "Kevin and Permutation", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "800", "solved_by": "x18785"},
{"url": "https://codeforces.com//problemset/problem/1754/A", "name": "Technical Support", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x22953"},
{"url": "https://codeforces.com//problemset/problem/1753/F", "name": "Minecraft Series", "tags": ["brute force", "two pointers"], "problem_rating": "3500", "solved_by": "x195"},
{"url": "https://codeforces.com//problemset/problem/1753/E", "name": "N Machines", "tags": ["binary search", "brute force", "greedy"], "problem_rating": "3300", "solved_by": "x316"},
{"url": "https://codeforces.com//problemset/problem/1753/D", "name": "The Beach", "tags": ["constructive algorithms", "dfs and similar", "graphs", "shortest paths"], "problem_rating": "2400", "solved_by": "x1709"},
{"url": "https://codeforces.com//problemset/problem/1753/C", "name": "Wish I Knew How to Sort", "tags": ["dp", "math", "probabilities"], "problem_rating": "2000", "solved_by": "x4278"},
{"url": "https://codeforces.com//problemset/problem/1753/B", "name": "Factorial Divisibility", "tags": ["math", "number theory"], "problem_rating": "1600", "solved_by": "x12465"},
{"url": "https://codeforces.com//problemset/problem/1753/A2", "name": "Make Nonzero Sum (hard version)", "tags": ["constructive algorithms", "dp", "greedy"], "problem_rating": "1500", "solved_by": "x10079"},
{"url": "https://codeforces.com//problemset/problem/1753/A1", "name": "Make Nonzero Sum (easy version)", "tags": ["constructive algorithms", "dp", "greedy"], "problem_rating": "1300", "solved_by": "x14647"},
{"url": "https://codeforces.com//problemset/problem/1750/H", "name": "BinaryStringForces", "tags": ["constructive algorithms", "data structures", "dp"], "problem_rating": "3500", "solved_by": "x78"},
{"url": "https://codeforces.com//problemset/problem/1750/G", "name": "Doping", "tags": ["combinatorics", "dp", "math"], "problem_rating": "3300", "solved_by": "x232"},
{"url": "https://codeforces.com//problemset/problem/1750/F", "name": "Majority", "tags": ["combinatorics", "dp", "math", "strings"], "problem_rating": "2700", "solved_by": "x884"},
{"url": "https://codeforces.com//problemset/problem/1750/E", "name": "Bracket Cost", "tags": ["binary search", "data structures", "divide and conquer", "dp", "greedy", "strings"], "problem_rating": "2400", "solved_by": "x1383"},
{"url": "https://codeforces.com//problemset/problem/1750/D", "name": "Count GCD", "tags": ["combinatorics", "math", "number theory"], "problem_rating": "1800", "solved_by": "x5739"},
{"url": "https://codeforces.com//problemset/problem/1750/C", "name": "Complementary XOR", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1400", "solved_by": "x9424"},
{"url": "https://codeforces.com//problemset/problem/1750/B", "name": "Maximum Substring", "tags": ["brute force", "greedy", "implementation"], "problem_rating": "800", "solved_by": "x16134"},
{"url": "https://codeforces.com//problemset/problem/1750/A", "name": "Indirect Sort", "tags": ["constructive algorithms", "implementation", "math"], "problem_rating": "800", "solved_by": "x16955"},
{"url": "https://codeforces.com//problemset/problem/1749/F", "name": "Distance to the Path", "tags": ["data structures", "dfs and similar", "trees"], "problem_rating": "2800", "solved_by": "x491"},
{"url": "https://codeforces.com//problemset/problem/1749/E", "name": "Cactus Wall", "tags": ["constructive algorithms", "dfs and similar", "graphs", "shortest paths"], "problem_rating": "2400", "solved_by": "x1661"},
{"url": "https://codeforces.com//problemset/problem/1749/D", "name": "Counting Arrays", "tags": ["combinatorics", "dp", "math", "number theory"], "problem_rating": "1900", "solved_by": "x5457"},
{"url": "https://codeforces.com//problemset/problem/1749/C", "name": "Number Game", "tags": ["binary search", "data structures", "games", "greedy", "implementation"], "problem_rating": "1400", "solved_by": "x13706"},
{"url": "https://codeforces.com//problemset/problem/1749/B", "name": "Death's Blessing", "tags": ["greedy"], "problem_rating": "900", "solved_by": "x20818"},
{"url": "https://codeforces.com//problemset/problem/1749/A", "name": "Cowardly Rooks", "tags": ["greedy", "implementation"], "problem_rating": "800", "solved_by": "x22200"},
{"url": "https://codeforces.com//problemset/problem/1748/F", "name": "Circular Xor Reversal", "tags": ["bitmasks", "constructive algorithms"], "problem_rating": "3000", "solved_by": "x328"},
{"url": "https://codeforces.com//problemset/problem/1748/E", "name": "Yet Another Array Counting Problem", "tags": ["binary search", "data structures", "divide and conquer", "dp", "flows", "math", "trees"], "problem_rating": "2300", "solved_by": "x1805"},
{"url": "https://codeforces.com//problemset/problem/1748/D", "name": "ConstructOR", "tags": ["bitmasks", "chinese remainder theorem", "combinatorics", "constructive algorithms", "math", "number theory"], "problem_rating": "2100", "solved_by": "x2738"},
{"url": "https://codeforces.com//problemset/problem/1748/C", "name": "Zero-Sum Prefixes", "tags": ["brute force", "data structures", "dp", "greedy", "implementation"], "problem_rating": "1600", "solved_by": "x10849"},
{"url": "https://codeforces.com//problemset/problem/1748/B", "name": "Diverse Substrings", "tags": ["brute force", "implementation", "strings"], "problem_rating": "1400", "solved_by": "x14797"},
{"url": "https://codeforces.com//problemset/problem/1748/A", "name": "The Ultimate Square", "tags": ["math"], "problem_rating": "800", "solved_by": "x23842"},
{"url": "https://codeforces.com//problemset/problem/1747/E", "name": "List Generation", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2900", "solved_by": "x491"},
{"url": "https://codeforces.com//problemset/problem/1747/D", "name": "Yet Another Problem", "tags": ["binary search", "bitmasks", "constructive algorithms", "data structures"], "problem_rating": "1900", "solved_by": "x4576"},
{"url": "https://codeforces.com//problemset/problem/1747/C", "name": "Swap Game", "tags": ["games"], "problem_rating": "1200", "solved_by": "x20846"},
{"url": "https://codeforces.com//problemset/problem/1747/B", "name": "BAN BAN", "tags": ["constructive algorithms"], "problem_rating": "900", "solved_by": "x22528"},
{"url": "https://codeforces.com//problemset/problem/1747/A", "name": "Two Groups", "tags": ["constructive algorithms", "greedy"], "problem_rating": "800", "solved_by": "x24668"},
{"url": "https://codeforces.com//problemset/problem/1746/G", "name": "Olympiad Training", "tags": ["binary search", "data structures", "dp", "flows", "geometry", "implementation", "sortings"], "problem_rating": "3500", "solved_by": "x92"},
{"url": "https://codeforces.com//problemset/problem/1746/F", "name": "Kazaee", "tags": ["data structures", "hashing", "probabilities"], "problem_rating": "2800", "solved_by": "x1628"},
{"url": "https://codeforces.com//problemset/problem/1746/E2", "name": "Joking (Hard Version)", "tags": ["dp", "interactive"], "problem_rating": "3200", "solved_by": "x383"},
{"url": "https://codeforces.com//problemset/problem/1746/E1", "name": "Joking (Easy Version)", "tags": ["binary search", "constructive algorithms", "interactive", "ternary search"], "problem_rating": "2500", "solved_by": "x1407"},
{"url": "https://codeforces.com//problemset/problem/1746/D", "name": "Paths on the Tree", "tags": ["dfs and similar", "dp", "greedy", "sortings", "trees"], "problem_rating": "1900", "solved_by": "x4525"},
{"url": "https://codeforces.com//problemset/problem/1746/C", "name": "Permutation Operations", "tags": ["constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "1300", "solved_by": "x12622"},
{"url": "https://codeforces.com//problemset/problem/1746/B", "name": "Rebellion", "tags": ["constructive algorithms", "greedy", "two pointers"], "problem_rating": "800", "solved_by": "x17008"},
{"url": "https://codeforces.com//problemset/problem/1746/A", "name": "Maxmina", "tags": ["constructive algorithms", "greedy"], "problem_rating": "800", "solved_by": "x19716"},
{"url": "https://codeforces.com//problemset/problem/1744/F", "name": "MEX vs MED", "tags": ["math", "two pointers"], "problem_rating": "2000", "solved_by": "x2994"},
{"url": "https://codeforces.com//problemset/problem/1744/E2", "name": "Divisible Numbers (hard version)", "tags": ["brute force", "math", "number theory"], "problem_rating": "1900", "solved_by": "x5469"},
{"url": "https://codeforces.com//problemset/problem/1744/E1", "name": "Divisible Numbers (easy version)", "tags": ["brute force", "math", "number theory"], "problem_rating": "1500", "solved_by": "x10609"},
{"url": "https://codeforces.com//problemset/problem/1744/D", "name": "Divisibility by 2^n", "tags": ["greedy", "math", "sortings"], "problem_rating": "1200", "solved_by": "x20958"},
{"url": "https://codeforces.com//problemset/problem/1744/C", "name": "Traffic Light", "tags": ["binary search", "implementation", "two pointers"], "problem_rating": "1000", "solved_by": "x25808"},
{"url": "https://codeforces.com//problemset/problem/1744/B", "name": "Even-Odd Increments", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x23237"},
{"url": "https://codeforces.com//problemset/problem/1744/A", "name": "Number Replacement", "tags": ["greedy", "implementation"], "problem_rating": "800", "solved_by": "x26843"},
{"url": "https://codeforces.com//problemset/problem/1743/G", "name": "Antifibonacci Cut", "tags": ["bitmasks", "combinatorics", "constructive algorithms", "data structures", "dp", "hashing", "math"], "problem_rating": "3000", "solved_by": "x250"},
{"url": "https://codeforces.com//problemset/problem/1743/F", "name": "Intersection and Union", "tags": ["data structures", "dp", "matrices", "probabilities"], "problem_rating": "2300", "solved_by": "x1453"},
{"url": "https://codeforces.com//problemset/problem/1743/E", "name": "FTL", "tags": ["binary search", "dp"], "problem_rating": "2400", "solved_by": "x1516"},
{"url": "https://codeforces.com//problemset/problem/1743/D", "name": "Problem with Random Tests", "tags": ["brute force", "dp", "greedy", "probabilities"], "problem_rating": "1700", "solved_by": "x7494"},
{"url": "https://codeforces.com//problemset/problem/1743/C", "name": "Save the Magazines", "tags": ["constructive algorithms", "dp", "greedy"], "problem_rating": "1100", "solved_by": "x18921"},
{"url": "https://codeforces.com//problemset/problem/1743/B", "name": "Permutation Value", "tags": ["constructive algorithms", "greedy"], "problem_rating": "800", "solved_by": "x22074"},
{"url": "https://codeforces.com//problemset/problem/1743/A", "name": "Password", "tags": ["brute force", "combinatorics", "implementation", "math"], "problem_rating": "800", "solved_by": "x26490"},
{"url": "https://codeforces.com//problemset/problem/1742/G", "name": "Orray", "tags": ["bitmasks", "brute force", "greedy", "math", "sortings"], "problem_rating": "1500", "solved_by": "x10354"},
{"url": "https://codeforces.com//problemset/problem/1742/F", "name": "Smaller", "tags": ["constructive algorithms", "greedy", "strings"], "problem_rating": "1500", "solved_by": "x11294"},
{"url": "https://codeforces.com//problemset/problem/1742/E", "name": "Scuza", "tags": ["binary search", "greedy", "math"], "problem_rating": "1200", "solved_by": "x23389"},
{"url": "https://codeforces.com//problemset/problem/1742/D", "name": "Coprime", "tags": ["brute force", "greedy", "number theory"], "problem_rating": "1100", "solved_by": "x22770"},
{"url": "https://codeforces.com//problemset/problem/1742/C", "name": "Stripes", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x32072"},
{"url": "https://codeforces.com//problemset/problem/1742/B", "name": "Increasing", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "800", "solved_by": "x46156"},
{"url": "https://codeforces.com//problemset/problem/1742/A", "name": "Sum", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x68075"},
{"url": "https://codeforces.com//problemset/problem/1741/G", "name": "Kirill and Company", "tags": ["bitmasks", "brute force", "dfs and similar", "dp", "flows", "graphs", "shortest paths"], "problem_rating": "2200", "solved_by": "x1459"},
{"url": "https://codeforces.com//problemset/problem/1741/F", "name": "Multi-Colored Segments", "tags": ["binary search", "data structures", "math", "sortings"], "problem_rating": "2000", "solved_by": "x2310"},
{"url": "https://codeforces.com//problemset/problem/1741/E", "name": "Sending a Sequence Over the Network", "tags": ["dp"], "problem_rating": "1600", "solved_by": "x11463"},
{"url": "https://codeforces.com//problemset/problem/1741/D", "name": "Masha and a Beautiful Tree", "tags": ["dfs and similar", "divide and conquer", "graphs", "sortings", "trees"], "problem_rating": "1300", "solved_by": "x14877"},
{"url": "https://codeforces.com//problemset/problem/1741/C", "name": "Minimize the Thickness", "tags": ["brute force", "greedy", "math", "two pointers"], "problem_rating": "1100", "solved_by": "x17496"},
{"url": "https://codeforces.com//problemset/problem/1741/B", "name": "Funny Permutation", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x25129"},
{"url": "https://codeforces.com//problemset/problem/1741/A", "name": "Compare T-Shirt Sizes", "tags": ["implementation", "implementation", "strings"], "problem_rating": "800", "solved_by": "x30394"},
{"url": "https://codeforces.com//problemset/problem/1740/I", "name": "Arranging Crystal Balls", "tags": ["data structures", "divide and conquer", "divide and conquer", "dp", "geometry", "graphs", "number theory"], "problem_rating": "3500", "solved_by": "x110"},
{"url": "https://codeforces.com//problemset/problem/1740/H", "name": "MEX Tree Manipulation", "tags": ["data structures", "trees"], "problem_rating": "3300", "solved_by": "x209"},
{"url": "https://codeforces.com//problemset/problem/1740/G", "name": "Dangerous Laser Power", "tags": ["constructive algorithms", "dsu", "sortings"], "problem_rating": "3100", "solved_by": "x184"},
{"url": "https://codeforces.com//problemset/problem/1740/F", "name": "Conditional Mix", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2600", "solved_by": "x778"},
{"url": "https://codeforces.com//problemset/problem/1740/E", "name": "Hanging Hearts", "tags": ["constructive algorithms", "data structures", "dfs and similar", "dp", "greedy", "trees"], "problem_rating": "1800", "solved_by": "x4230"},
{"url": "https://codeforces.com//problemset/problem/1740/D", "name": "Knowledge Cards", "tags": ["constructive algorithms", "data structures"], "problem_rating": "1500", "solved_by": "x7936"},
{"url": "https://codeforces.com//problemset/problem/1740/C", "name": "Bricks and Bags", "tags": ["constructive algorithms", "games", "greedy", "sortings"], "problem_rating": "1400", "solved_by": "x10841"},
{"url": "https://codeforces.com//problemset/problem/1740/B", "name": "Jumbo Extra Cheese 2", "tags": ["geometry", "greedy", "sortings"], "problem_rating": "800", "solved_by": "x13677"},
{"url": "https://codeforces.com//problemset/problem/1740/A", "name": "Factorise N+M", "tags": ["constructive algorithms", "number theory"], "problem_rating": "800", "solved_by": "x19918"},
{"url": "https://codeforces.com//problemset/problem/1739/F", "name": "Keyboard Design", "tags": ["bitmasks", "data structures", "dp", "string suffix structures", "strings"], "problem_rating": "2600", "solved_by": "x518"},
{"url": "https://codeforces.com//problemset/problem/1739/E", "name": "Cleaning Robot", "tags": ["bitmasks", "dp"], "problem_rating": "2400", "solved_by": "x1201"},
{"url": "https://codeforces.com//problemset/problem/1739/D", "name": "Reset K Edges", "tags": ["binary search", "data structures", "dfs and similar", "graphs", "greedy", "trees"], "problem_rating": "1900", "solved_by": "x5016"},
{"url": "https://codeforces.com//problemset/problem/1739/C", "name": "Card Game", "tags": ["combinatorics", "constructive algorithms", "dp", "games"], "problem_rating": "1500", "solved_by": "x8908"},
{"url": "https://codeforces.com//problemset/problem/1739/B", "name": "Array Recovery", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1100", "solved_by": "x21995"},
{"url": "https://codeforces.com//problemset/problem/1739/A", "name": "Immobile Knight", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x22485"},
{"url": "https://codeforces.com//problemset/problem/1738/H", "name": "Palindrome Addicts", "tags": ["data structures", "strings"], "problem_rating": "3300", "solved_by": "x232"},
{"url": "https://codeforces.com//problemset/problem/1738/G", "name": "Anti-Increasing Addicts", "tags": ["constructive algorithms", "dp", "greedy", "math"], "problem_rating": "2900", "solved_by": "x418"},
{"url": "https://codeforces.com//problemset/problem/1738/F", "name": "Connectivity Addicts", "tags": ["constructive algorithms", "dsu", "graphs", "greedy", "interactive", "shortest paths", "trees"], "problem_rating": "2400", "solved_by": "x1202"},
{"url": "https://codeforces.com//problemset/problem/1738/E", "name": "Balance Addicts", "tags": ["combinatorics", "dp", "math", "two pointers"], "problem_rating": "2300", "solved_by": "x1498"},
{"url": "https://codeforces.com//problemset/problem/1738/D", "name": "Permutation Addicts", "tags": ["constructive algorithms", "data structures", "dfs and similar", "dsu", "graphs", "trees"], "problem_rating": "1900", "solved_by": "x3390"},
{"url": "https://codeforces.com//problemset/problem/1738/C", "name": "Even Number Addicts", "tags": ["dp", "games", "greedy", "math"], "problem_rating": "1500", "solved_by": "x10935"},
{"url": "https://codeforces.com//problemset/problem/1738/B", "name": "Prefix Sum Addicts", "tags": ["constructive algorithms", "greedy", "math", "sortings"], "problem_rating": "1200", "solved_by": "x15253"},
{"url": "https://codeforces.com//problemset/problem/1738/A", "name": "Glory Addicts", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "800", "solved_by": "x13454"},
{"url": "https://codeforces.com//problemset/problem/1737/G", "name": "Ela Takes Dancing Class", "tags": ["binary search", "data structures"], "problem_rating": "3500", "solved_by": "x113"},
{"url": "https://codeforces.com//problemset/problem/1737/F", "name": "Ela and Prime GCD", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "3300", "solved_by": "x122"},
{"url": "https://codeforces.com//problemset/problem/1737/E", "name": "Ela Goes Hiking", "tags": ["combinatorics", "dp", "math", "probabilities"], "problem_rating": "2500", "solved_by": "x910"},
{"url": "https://codeforces.com//problemset/problem/1737/D", "name": "Ela and the Wiring Wizard", "tags": ["brute force", "dp", "graphs", "greedy", "implementation", "shortest paths"], "problem_rating": "2200", "solved_by": "x1826"},
{"url": "https://codeforces.com//problemset/problem/1737/C", "name": "Ela and Crickets", "tags": ["constructive algorithms", "games", "implementation", "math"], "problem_rating": "1500", "solved_by": "x5664"},
{"url": "https://codeforces.com//problemset/problem/1737/B", "name": "Ela's Fitness and the Luxury Number", "tags": ["binary search", "implementation", "math"], "problem_rating": "1300", "solved_by": "x9299"},
{"url": "https://codeforces.com//problemset/problem/1737/A", "name": "Ela Sorting Books", "tags": ["greedy", "implementation", "strings"], "problem_rating": "900", "solved_by": "x10041"},
{"url": "https://codeforces.com//problemset/problem/1736/E", "name": "Swap and Take", "tags": ["dp", "greedy"], "problem_rating": "2600", "solved_by": "x675"},
{"url": "https://codeforces.com//problemset/problem/1736/D", "name": "Equal Binary Subsequences", "tags": ["constructive algorithms", "geometry", "greedy", "implementation", "strings"], "problem_rating": "2200", "solved_by": "x2443"},
{"url": "https://codeforces.com//problemset/problem/1736/C2", "name": "Good Subarrays (Hard Version)", "tags": ["binary search", "data structures", "dp", "two pointers"], "problem_rating": "2400", "solved_by": "x1263"},
{"url": "https://codeforces.com//problemset/problem/1736/C1", "name": "Good Subarrays (Easy Version)", "tags": ["binary search", "data structures", "schedules", "two pointers"], "problem_rating": "1300", "solved_by": "x14787"},
{"url": "https://codeforces.com//problemset/problem/1736/B", "name": "Playing with GCD", "tags": ["math", "number theory"], "problem_rating": "1200", "solved_by": "x17637"},
{"url": "https://codeforces.com//problemset/problem/1736/A", "name": "Make A Equal to B", "tags": ["brute force", "greedy", "sortings"], "problem_rating": "800", "solved_by": "x22607"},
{"url": "https://codeforces.com//problemset/problem/1735/F", "name": "Pebbles and Beads", "tags": ["data structures", "geometry"], "problem_rating": "2900", "solved_by": "x219"},
{"url": "https://codeforces.com//problemset/problem/1735/E", "name": "House Planning", "tags": ["constructive algorithms", "data structures", "graph matchings", "greedy"], "problem_rating": "2400", "solved_by": "x1032"},
{"url": "https://codeforces.com//problemset/problem/1735/D", "name": "Meta-set", "tags": ["brute force", "combinatorics", "data structures", "hashing", "math"], "problem_rating": "1700", "solved_by": "x5407"},
{"url": "https://codeforces.com//problemset/problem/1735/C", "name": "Phase Shift", "tags": ["dfs and similar", "dsu", "graphs", "greedy", "implementation", "strings"], "problem_rating": "1400", "solved_by": "x9746"},
{"url": "https://codeforces.com//problemset/problem/1735/B", "name": "Tea with Tangerines", "tags": ["greedy", "math"], "problem_rating": "900", "solved_by": "x17973"},
{"url": "https://codeforces.com//problemset/problem/1735/A", "name": "Working Week", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "800", "solved_by": "x20064"},
{"url": "https://codeforces.com//problemset/problem/1734/F", "name": "Zeros and Ones", "tags": ["bitmasks", "divide and conquer", "dp", "math"], "problem_rating": "2500", "solved_by": "x780"},
{"url": "https://codeforces.com//problemset/problem/1734/E", "name": "Rectangular Congruence", "tags": ["constructive algorithms", "number theory"], "problem_rating": "2100", "solved_by": "x2836"},
{"url": "https://codeforces.com//problemset/problem/1734/D", "name": "Slime Escape", "tags": ["data structures", "dp", "greedy", "two pointers"], "problem_rating": "1800", "solved_by": "x6172"},
{"url": "https://codeforces.com//problemset/problem/1734/C", "name": "Removing Smallest Multiples", "tags": ["greedy", "math"], "problem_rating": "1200", "solved_by": "x17778"},
{"url": "https://codeforces.com//problemset/problem/1734/B", "name": "Bright, Nice, Brilliant", "tags": ["constructive algorithms"], "problem_rating": "800", "solved_by": "x15680"},
{"url": "https://codeforces.com//problemset/problem/1734/A", "name": "Select Three Sticks", "tags": ["brute force", "greedy", "sortings"], "problem_rating": "800", "solved_by": "x20957"},
{"url": "https://codeforces.com//problemset/problem/1733/E", "name": "Conveyor", "tags": ["constructive algorithms", "dp", "math"], "problem_rating": "2700", "solved_by": "x1120"},
{"url": "https://codeforces.com//problemset/problem/1733/D2", "name": "Zero-One (Hard Version)", "tags": ["dp", "greedy"], "problem_rating": "2000", "solved_by": "x4090"},
{"url": "https://codeforces.com//problemset/problem/1733/D1", "name": "Zero-One (Easy Version)", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1400", "solved_by": "x13197"},
{"url": "https://codeforces.com//problemset/problem/1733/C", "name": "Parity Shuffle Sorting", "tags": ["constructive algorithms", "sortings"], "problem_rating": "1300", "solved_by": "x15378"},
{"url": "https://codeforces.com//problemset/problem/1733/B", "name": "Rule of League", "tags": ["constructive algorithms", "math"], "problem_rating": "900", "solved_by": "x19498"},
{"url": "https://codeforces.com//problemset/problem/1733/A", "name": "Consecutive Sum", "tags": ["greedy", "sortings"], "problem_rating": "800", "solved_by": "x20792"},
{"url": "https://codeforces.com//problemset/problem/1732/E", "name": "Location", "tags": ["data structures", "dp", "math", "number theory"], "problem_rating": "2800", "solved_by": "x421"},
{"url": "https://codeforces.com//problemset/problem/1732/D2", "name": "Balance (Hard version)", "tags": ["brute force", "data structures", "number theory"], "problem_rating": "2400", "solved_by": "x1382"},
{"url": "https://codeforces.com//problemset/problem/1732/D1", "name": "Balance (Easy version)", "tags": ["brute force", "data structures", "implementation", "number theory"], "problem_rating": "1500", "solved_by": "x8504"},
{"url": "https://codeforces.com//problemset/problem/1732/C2", "name": "Sheikh (Hard Version)", "tags": ["binary search", "bitmasks", "brute force", "greedy", "implementation", "two pointers"], "problem_rating": "2100", "solved_by": "x2506"},
{"url": "https://codeforces.com//problemset/problem/1732/C1", "name": "Sheikh (Easy version)", "tags": ["binary search", "bitmasks", "greedy", "two pointers"], "problem_rating": "1800", "solved_by": "x5739"},
{"url": "https://codeforces.com//problemset/problem/1732/B", "name": "Ugu", "tags": ["brute force", "dp", "greedy", "implementation"], "problem_rating": "900", "solved_by": "x14697"},
{"url": "https://codeforces.com//problemset/problem/1732/A", "name": "Bestie", "tags": ["brute force", "combinatorics", "constructive algorithms", "implementation", "math", "number theory"], "problem_rating": "1000", "solved_by": "x14714"},
{"url": "https://codeforces.com//problemset/problem/1731/F", "name": "Function Sum", "tags": ["brute force", "combinatorics", "dp", "fft", "math"], "problem_rating": "2500", "solved_by": "x676"},
{"url": "https://codeforces.com//problemset/problem/1731/E", "name": "Graph Cost", "tags": ["dp", "greedy", "math", "number theory"], "problem_rating": "2000", "solved_by": "x2739"},
{"url": "https://codeforces.com//problemset/problem/1731/D", "name": "Valiant's New Map", "tags": ["binary search", "brute force", "data structures", "dp", "two pointers"], "problem_rating": "1700", "solved_by": "x6962"},
{"url": "https://codeforces.com//problemset/problem/1731/C", "name": "Even Subarrays", "tags": ["bitmasks", "brute force", "hashing", "math", "number theory"], "problem_rating": "1700", "solved_by": "x9272"},
{"url": "https://codeforces.com//problemset/problem/1731/B", "name": "Kill Demodogs", "tags": ["greedy", "math"], "problem_rating": "1100", "solved_by": "x17590"},
{"url": "https://codeforces.com//problemset/problem/1731/A", "name": "Joey Takes Money", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x22337"},
{"url": "https://codeforces.com//problemset/problem/1730/F", "name": "Almost Sorted", "tags": ["bitmasks", "data structures", "dp"], "problem_rating": "2700", "solved_by": "x513"},
{"url": "https://codeforces.com//problemset/problem/1730/E", "name": "Maximums and Minimums", "tags": ["combinatorics", "data structures", "divide and conquer", "number theory"], "problem_rating": "2700", "solved_by": "x628"},
{"url": "https://codeforces.com//problemset/problem/1730/D", "name": "Prefixes and Suffixes", "tags": ["constructive algorithms", "strings", "two pointers"], "problem_rating": "2200", "solved_by": "x2627"},
{"url": "https://codeforces.com//problemset/problem/1730/C", "name": "Minimum Notation", "tags": ["data structures", "greedy", "math", "sortings"], "problem_rating": "1200", "solved_by": "x16289"},
{"url": "https://codeforces.com//problemset/problem/1730/B", "name": "Meeting on the Line", "tags": ["binary search", "geometry", "greedy", "implementation", "math", "ternary search"], "problem_rating": "1600", "solved_by": "x12318"},
{"url": "https://codeforces.com//problemset/problem/1730/A", "name": "Planets", "tags": ["data structures", "greedy", "sortings"], "problem_rating": "800", "solved_by": "x22757"},
{"url": "https://codeforces.com//problemset/problem/1729/G", "name": "Cut Substrings", "tags": ["combinatorics", "dp", "hashing", "strings", "two pointers"], "problem_rating": "2100", "solved_by": "x2118"},
{"url": "https://codeforces.com//problemset/problem/1729/F", "name": "Kirei and the Linear Function", "tags": ["hashing", "math"], "problem_rating": "1900", "solved_by": "x4086"},
{"url": "https://codeforces.com//problemset/problem/1729/E", "name": "Guess the Cycle Size", "tags": ["interactive", "probabilities"], "problem_rating": "1800", "solved_by": "x6885"},
{"url": "https://codeforces.com//problemset/problem/1729/D", "name": "Friends and the Restaurant", "tags": ["greedy", "sortings", "two pointers"], "problem_rating": "1200", "solved_by": "x19864"},
{"url": "https://codeforces.com//problemset/problem/1729/C", "name": "Jumping on Tiles", "tags": ["constructive algorithms", "strings"], "problem_rating": "1100", "solved_by": "x19711"},
{"url": "https://codeforces.com//problemset/problem/1729/B", "name": "Decode String", "tags": ["greedy", "strings"], "problem_rating": "800", "solved_by": "x29790"},
{"url": "https://codeforces.com//problemset/problem/1729/A", "name": "Two Elevators", "tags": ["math"], "problem_rating": "800", "solved_by": "x39718"},
{"url": "https://codeforces.com//problemset/problem/1728/G", "name": "Illumination", "tags": ["binary search", "bitmasks", "brute force", "combinatorics", "dp", "math", "two pointers"], "problem_rating": "2700", "solved_by": "x440"},
{"url": "https://codeforces.com//problemset/problem/1728/F", "name": "Fishermen", "tags": ["flows", "graph matchings", "greedy"], "problem_rating": "3100", "solved_by": "x419"},
{"url": "https://codeforces.com//problemset/problem/1728/E", "name": "Red-Black Pepper", "tags": ["brute force", "data structures", "greedy", "math", "number theory"], "problem_rating": "2300", "solved_by": "x1691"},
{"url": "https://codeforces.com//problemset/problem/1728/D", "name": "Letter Picking", "tags": ["constructive algorithms", "dp", "games", "two pointers"], "problem_rating": "1800", "solved_by": "x7057"},
{"url": "https://codeforces.com//problemset/problem/1728/C", "name": "Digital Logarithm", "tags": ["data structures", "greedy", "sortings"], "problem_rating": "1400", "solved_by": "x15622"},
{"url": "https://codeforces.com//problemset/problem/1728/B", "name": "Best Permutation", "tags": ["constructive algorithms", "greedy"], "problem_rating": "800", "solved_by": "x20028"},
{"url": "https://codeforces.com//problemset/problem/1728/A", "name": "Colored Balls: Revisited", "tags": ["brute force", "greedy", "implementation", "sortings"], "problem_rating": "800", "solved_by": "x24491"},
{"url": "https://codeforces.com//problemset/problem/1726/H", "name": "Mainak and the Bleeding Polygon", "tags": ["binary search", "geometry", "implementation", "math"], "problem_rating": "3500", "solved_by": "x83"},
{"url": "https://codeforces.com//problemset/problem/1726/G", "name": "A Certain Magical Party", "tags": ["combinatorics", "data structures", "greedy", "sortings"], "problem_rating": "3300", "solved_by": "x288"},
{"url": "https://codeforces.com//problemset/problem/1726/F", "name": "Late For Work (submissions are not allowed)", "tags": ["data structures", "greedy", "schedules", "shortest paths"], "problem_rating": "2900", "solved_by": "x131"},
{"url": "https://codeforces.com//problemset/problem/1726/E", "name": "Almost Perfect", "tags": ["combinatorics", "fft", "math"], "problem_rating": "2400", "solved_by": "x1382"},
{"url": "https://codeforces.com//problemset/problem/1726/D", "name": "Edge Split", "tags": ["brute force", "constructive algorithms", "dfs and similar", "dsu", "graphs", "probabilities", "trees"], "problem_rating": "2000", "solved_by": "x3618"},
{"url": "https://codeforces.com//problemset/problem/1726/C", "name": "Jatayu's Balanced Bracket Sequence", "tags": ["data structures", "dsu", "graphs", "greedy"], "problem_rating": "1300", "solved_by": "x12194"},
{"url": "https://codeforces.com//problemset/problem/1726/B", "name": "Mainak and Interesting Sequence", "tags": ["bitmasks", "constructive algorithms", "math"], "problem_rating": "1100", "solved_by": "x14920"},
{"url": "https://codeforces.com//problemset/problem/1726/A", "name": "Mainak and Array", "tags": ["greedy", "math"], "problem_rating": "900", "solved_by": "x20835"},
{"url": "https://codeforces.com//problemset/problem/1725/M", "name": "Moving Both Hands", "tags": ["dp", "graphs", "shortest paths"], "problem_rating": "1800", "solved_by": "x3020"},
{"url": "https://codeforces.com//problemset/problem/1725/L", "name": "Lemper Cooking Competition", "tags": ["data structures"], "problem_rating": "2400", "solved_by": "x893"},
{"url": "https://codeforces.com//problemset/problem/1725/K", "name": "Kingdom of Criticism", "tags": ["data structures", "dsu"], "problem_rating": "2500", "solved_by": "x650"},
{"url": "https://codeforces.com//problemset/problem/1725/J", "name": "Journey", "tags": ["dp", "trees"], "problem_rating": "2500", "solved_by": "x370"},
{"url": "https://codeforces.com//problemset/problem/1725/I", "name": "Imitating the Key Tree", "tags": ["combinatorics", "dsu", "trees"], "problem_rating": "2800", "solved_by": "x193"},
{"url": "https://codeforces.com//problemset/problem/1725/H", "name": "Hot Black Hot White", "tags": ["constructive algorithms", "math"], "problem_rating": "1800", "solved_by": "x2549"},
{"url": "https://codeforces.com//problemset/problem/1725/G", "name": "Garage", "tags": ["binary search", "geometry", "math"], "problem_rating": "1500", "solved_by": "x5742"},
{"url": "https://codeforces.com//problemset/problem/1725/F", "name": "Field Photography", "tags": ["bitmasks", "data structures", "sortings"], "problem_rating": "2100", "solved_by": "x956"},
{"url": "https://codeforces.com//problemset/problem/1725/E", "name": "Electrical Efficiency", "tags": ["combinatorics", "data structures", "dp", "math", "number theory", "trees"], "problem_rating": "2500", "solved_by": "x453"},
{"url": "https://codeforces.com//problemset/problem/1725/D", "name": "Deducing Sortability", "tags": ["binary search", "bitmasks", "math"], "problem_rating": "2900", "solved_by": "x119"},
{"url": "https://codeforces.com//problemset/problem/1725/C", "name": "Circular Mirror", "tags": ["binary search", "combinatorics", "geometry", "math", "two pointers"], "problem_rating": "2000", "solved_by": "x1583"},
{"url": "https://codeforces.com//problemset/problem/1725/B", "name": "Basketball Together", "tags": ["binary search", "greedy", "sortings"], "problem_rating": "1000", "solved_by": "x12738"},
{"url": "https://codeforces.com//problemset/problem/1725/A", "name": "Accumulation of Dominoes", "tags": ["math"], "problem_rating": "800", "solved_by": "x9166"},
{"url": "https://codeforces.com//problemset/problem/1722/G", "name": "Even-Odd XOR", "tags": ["bitmasks", "constructive algorithms", "greedy"], "problem_rating": "1500", "solved_by": "x10886"},
{"url": "https://codeforces.com//problemset/problem/1722/F", "name": "L-shapes", "tags": ["dfs and similar", "implementation"], "problem_rating": "1700", "solved_by": "x6733"},
{"url": "https://codeforces.com//problemset/problem/1722/E", "name": "Counting Rectangles", "tags": ["brute force", "data structures", "dp", "implementation"], "problem_rating": "1600", "solved_by": "x10468"},
{"url": "https://codeforces.com//problemset/problem/1722/D", "name": "Line", "tags": ["greedy", "sortings"], "problem_rating": "1100", "solved_by": "x22768"},
{"url": "https://codeforces.com//problemset/problem/1722/C", "name": "Word Game", "tags": ["data structures", "implementation"], "problem_rating": "800", "solved_by": "x30241"},
{"url": "https://codeforces.com//problemset/problem/1722/B", "name": "Colourblindness", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x44567"},
{"url": "https://codeforces.com//problemset/problem/1722/A", "name": "Spell Check", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x48786"},
{"url": "https://codeforces.com//problemset/problem/1721/F", "name": "Matching Reduction", "tags": ["brute force", "constructive algorithms", "dfs and similar", "flows", "graph matchings", "graphs", "interactive"], "problem_rating": "2800", "solved_by": "x383"},
{"url": "https://codeforces.com//problemset/problem/1721/E", "name": "Prefix Function Queries", "tags": ["dfs and similar", "dp", "hashing", "string suffix structures", "strings", "trees"], "problem_rating": "2200", "solved_by": "x1915"},
{"url": "https://codeforces.com//problemset/problem/1721/D", "name": "Maximum AND", "tags": ["bitmasks", "dfs and similar", "divide and conquer", "greedy", "sortings"], "problem_rating": "1800", "solved_by": "x6494"},
{"url": "https://codeforces.com//problemset/problem/1721/C", "name": "Min-Max Array Transformation", "tags": ["binary search", "greedy", "two pointers"], "problem_rating": "1400", "solved_by": "x13153"},
{"url": "https://codeforces.com//problemset/problem/1721/B", "name": "Deadly Laser", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x21808"},
{"url": "https://codeforces.com//problemset/problem/1721/A", "name": "Image", "tags": ["greedy", "implementation"], "problem_rating": "800", "solved_by": "x26818"},
{"url": "https://codeforces.com//problemset/problem/1720/E", "name": "Misha and Paintings", "tags": ["constructive algorithms", "data structures", "greedy", "implementation", "math"], "problem_rating": "2700", "solved_by": "x753"},
{"url": "https://codeforces.com//problemset/problem/1720/D2", "name": "Xor-Subsequence (hard version)", "tags": ["bitmasks", "data structures", "dp", "strings", "trees"], "problem_rating": "2400", "solved_by": "x1783"},
{"url": "https://codeforces.com//problemset/problem/1720/D1", "name": "Xor-Subsequence (easy version)", "tags": ["bitmasks", "brute force", "dp", "strings", "trees", "two pointers"], "problem_rating": "1800", "solved_by": "x5852"},
{"url": "https://codeforces.com//problemset/problem/1720/C", "name": "Corners", "tags": ["greedy", "implementation"], "problem_rating": "1200", "solved_by": "x16547"},
{"url": "https://codeforces.com//problemset/problem/1720/B", "name": "Interesting Sum", "tags": ["brute force", "data structures", "greedy", "math", "sortings"], "problem_rating": "800", "solved_by": "x20938"},
{"url": "https://codeforces.com//problemset/problem/1720/A", "name": "Burenka Plays with Fractions", "tags": ["math", "number theory"], "problem_rating": "900", "solved_by": "x22072"},
{"url": "https://codeforces.com//problemset/problem/1719/C", "name": "Fighting Tournament", "tags": ["binary search", "data structures", "implementation", "two pointers"], "problem_rating": "1400", "solved_by": "x13040"},
{"url": "https://codeforces.com//problemset/problem/1719/B", "name": "Mathematical Circus", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x18400"},
{"url": "https://codeforces.com//problemset/problem/1719/A", "name": "Chip Game", "tags": ["games", "math"], "problem_rating": "800", "solved_by": "x25188"},
{"url": "https://codeforces.com//problemset/problem/1718/F", "name": "Burenka, an Array and Queries", "tags": ["data structures", "math", "number theory"], "problem_rating": "3300", "solved_by": "x152"},
{"url": "https://codeforces.com//problemset/problem/1718/E", "name": "Impressionism", "tags": ["constructive algorithms", "graphs", "implementation", "math"], "problem_rating": "3500", "solved_by": "x105"},
{"url": "https://codeforces.com//problemset/problem/1718/D", "name": "Permutation for Burenka", "tags": ["data structures", "graph matchings", "greedy", "math", "trees"], "problem_rating": "3300", "solved_by": "x298"},
{"url": "https://codeforces.com//problemset/problem/1718/C", "name": "Tonya and Burenka-179", "tags": ["data structures", "greedy", "math", "number theory"], "problem_rating": "2400", "solved_by": "x1554"},
{"url": "https://codeforces.com//problemset/problem/1718/B", "name": "Fibonacci Strings", "tags": ["greedy", "implementation", "math", "number theory"], "problem_rating": "2000", "solved_by": "x2936"},
{"url": "https://codeforces.com//problemset/problem/1718/A2", "name": "Burenka and Traditions (hard version)", "tags": ["data structures", "dp", "greedy"], "problem_rating": "1900", "solved_by": "x5114"},
{"url": "https://codeforces.com//problemset/problem/1718/A1", "name": "Burenka and Traditions (easy version)", "tags": ["dp", "greedy"], "problem_rating": "1800", "solved_by": "x5627"},
{"url": "https://codeforces.com//problemset/problem/1717/F", "name": "Madoka and The First Session", "tags": ["constructive algorithms", "flows", "graph matchings", "graphs", "implementation"], "problem_rating": "2500", "solved_by": "x525"},
{"url": "https://codeforces.com//problemset/problem/1717/E", "name": "Madoka and The Best University", "tags": ["math", "number theory"], "problem_rating": "2200", "solved_by": "x2614"},
{"url": "https://codeforces.com//problemset/problem/1717/D", "name": "Madoka and The Corruption Scheme", "tags": ["combinatorics", "constructive algorithms", "greedy", "math"], "problem_rating": "1900", "solved_by": "x4334"},
{"url": "https://codeforces.com//problemset/problem/1717/C", "name": "Madoka and Formal Statement", "tags": ["greedy"], "problem_rating": "1300", "solved_by": "x14478"},
{"url": "https://codeforces.com//problemset/problem/1717/B", "name": "Madoka and Underground Competitions", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1100", "solved_by": "x14608"},
{"url": "https://codeforces.com//problemset/problem/1717/A", "name": "Madoka and Strange Thoughts", "tags": ["math", "number theory"], "problem_rating": "800", "solved_by": "x19309"},
{"url": "https://codeforces.com//problemset/problem/1716/F", "name": "Bags with Balls", "tags": ["combinatorics", "dp", "math", "number theory"], "problem_rating": "2500", "solved_by": "x1018"},
{"url": "https://codeforces.com//problemset/problem/1716/E", "name": "Swap and Maximum Block", "tags": ["bitmasks", "data structures", "dfs and similar", "divide and conquer", "dp"], "problem_rating": "2500", "solved_by": "x1046"},
{"url": "https://codeforces.com//problemset/problem/1716/D", "name": "Chip Move", "tags": ["brute force", "dp", "math"], "problem_rating": "2000", "solved_by": "x5107"},
{"url": "https://codeforces.com//problemset/problem/1716/C", "name": "Robot in a Hallway", "tags": ["data structures", "dp", "greedy", "implementation", "ternary search"], "problem_rating": "2000", "solved_by": "x4099"},
{"url": "https://codeforces.com//problemset/problem/1716/B", "name": "Permutation Chain", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x21316"},
{"url": "https://codeforces.com//problemset/problem/1716/A", "name": "2-3 Moves", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x32350"},
{"url": "https://codeforces.com//problemset/problem/1715/F", "name": "Crop Squares", "tags": ["constructive algorithms", "geometry", "interactive", "math"], "problem_rating": "2700", "solved_by": "x511"},
{"url": "https://codeforces.com//problemset/problem/1715/E", "name": "Long Way Home", "tags": ["data structures", "divide and conquer", "dp", "geometry", "graphs", "greedy", "shortest paths"], "problem_rating": "2400", "solved_by": "x1655"},
{"url": "https://codeforces.com//problemset/problem/1715/D", "name": "2+ doors", "tags": ["2-sat", "bitmasks", "graphs", "greedy"], "problem_rating": "1900", "solved_by": "x5035"},
{"url": "https://codeforces.com//problemset/problem/1715/C", "name": "Monoblock", "tags": ["combinatorics", "data structures", "implementation", "math"], "problem_rating": "1700", "solved_by": "x8498"},
{"url": "https://codeforces.com//problemset/problem/1715/B", "name": "Beautiful Array", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1000", "solved_by": "x20960"},
{"url": "https://codeforces.com//problemset/problem/1715/A", "name": "Crossmarket", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "800", "solved_by": "x23353"},
{"url": "https://codeforces.com//problemset/problem/1714/G", "name": "Path Prefixes", "tags": ["binary search", "data structures", "dfs and similar", "trees"], "problem_rating": "1700", "solved_by": "x7367"},
{"url": "https://codeforces.com//problemset/problem/1714/F", "name": "Build a Tree and That Is It", "tags": ["constructive algorithms", "implementation", "trees"], "problem_rating": "1900", "solved_by": "x3151"},
{"url": "https://codeforces.com//problemset/problem/1714/E", "name": "Add Modulo 10", "tags": ["brute force", "math", "number theory"], "problem_rating": "1400", "solved_by": "x15963"},
{"url": "https://codeforces.com//problemset/problem/1714/D", "name": "Color with Occurrences", "tags": ["brute force", "data structures", "dp", "greedy", "strings"], "problem_rating": "1600", "solved_by": "x8914"},
{"url": "https://codeforces.com//problemset/problem/1714/C", "name": "Minimum  Varied Number", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x30656"},
{"url": "https://codeforces.com//problemset/problem/1714/B", "name": "Remove Prefix", "tags": ["data structures", "greedy", "implementation"], "problem_rating": "800", "solved_by": "x29859"},
{"url": "https://codeforces.com//problemset/problem/1714/A", "name": "Everyone Loves to Sleep", "tags": ["implementation", "math"], "problem_rating": "900", "solved_by": "x29161"},
{"url": "https://codeforces.com//problemset/problem/1713/F", "name": "Lost Array", "tags": ["bitmasks", "combinatorics", "constructive algorithms", "dp", "math"], "problem_rating": "2900", "solved_by": "x524"},
{"url": "https://codeforces.com//problemset/problem/1713/E", "name": "Cross Swapping", "tags": ["2-sat", "data structures", "dsu", "greedy", "matrices"], "problem_rating": "2400", "solved_by": "x1547"},
{"url": "https://codeforces.com//problemset/problem/1713/D", "name": "Tournament Countdown", "tags": ["constructive algorithms", "greedy", "interactive", "number theory", "probabilities"], "problem_rating": "1800", "solved_by": "x5565"},
{"url": "https://codeforces.com//problemset/problem/1713/C", "name": "Build Permutation", "tags": ["constructive algorithms", "dp", "math"], "problem_rating": "1200", "solved_by": "x17073"},
{"url": "https://codeforces.com//problemset/problem/1713/B", "name": "Optimal Reduction", "tags": ["constructive algorithms", "sortings"], "problem_rating": "1000", "solved_by": "x20980"},
{"url": "https://codeforces.com//problemset/problem/1713/A", "name": "Traveling Salesman Problem", "tags": ["geometry", "greedy", "implementation"], "problem_rating": "800", "solved_by": "x21789"},
{"url": "https://codeforces.com//problemset/problem/1712/F", "name": "Triameter", "tags": ["binary search", "data structures", "dfs and similar", "trees"], "problem_rating": "3200", "solved_by": "x309"},
{"url": "https://codeforces.com//problemset/problem/1712/E2", "name": "LCM Sum (hard version)", "tags": ["brute force", "data structures", "math", "number theory", "two pointers"], "problem_rating": "2500", "solved_by": "x1238"},
{"url": "https://codeforces.com//problemset/problem/1712/E1", "name": "LCM Sum (easy version)", "tags": ["binary search", "brute force", "combinatorics", "math", "number theory", "two pointers"], "problem_rating": "2300", "solved_by": "x2101"},
{"url": "https://codeforces.com//problemset/problem/1712/D", "name": "Empty Graph", "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "shortest paths"], "problem_rating": "2000", "solved_by": "x4386"},
{"url": "https://codeforces.com//problemset/problem/1712/C", "name": "Sort Zero", "tags": ["greedy", "sortings"], "problem_rating": "1100", "solved_by": "x19502"},
{"url": "https://codeforces.com//problemset/problem/1712/B", "name": "Woeful Permutation", "tags": ["constructive algorithms", "greedy", "number theory"], "problem_rating": "800", "solved_by": "x21416"},
{"url": "https://codeforces.com//problemset/problem/1712/A", "name": "Wonderful Permutation", "tags": ["greedy", "implementation"], "problem_rating": "800", "solved_by": "x23887"},
{"url": "https://codeforces.com//problemset/problem/1711/B", "name": "Party", "tags": ["brute force", "graphs"], "problem_rating": "1300", "solved_by": "x13248"},
{"url": "https://codeforces.com//problemset/problem/1711/A", "name": "Perfect Permutation", "tags": ["constructive algorithms"], "problem_rating": "800", "solved_by": "x24977"},
{"url": "https://codeforces.com//problemset/problem/1710/E", "name": "Two Arrays", "tags": ["binary search", "games", "graph matchings"], "problem_rating": "2400", "solved_by": "x489"},
{"url": "https://codeforces.com//problemset/problem/1710/D", "name": "Recover the Tree", "tags": ["constructive algorithms", "trees"], "problem_rating": "3400", "solved_by": "x415"},
{"url": "https://codeforces.com//problemset/problem/1710/C", "name": "XOR Triangle", "tags": ["bitmasks", "brute force", "constructive algorithms", "dp", "greedy", "math"], "problem_rating": "2500", "solved_by": "x1312"},
{"url": "https://codeforces.com//problemset/problem/1710/B", "name": "Rain", "tags": ["binary search", "brute force", "data structures", "geometry", "greedy", "implementation", "math"], "problem_rating": "2100", "solved_by": "x2408"},
{"url": "https://codeforces.com//problemset/problem/1710/A", "name": "Color the Picture", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1500", "solved_by": "x10754"},
{"url": "https://codeforces.com//problemset/problem/1709/F", "name": "Multiset of Strings", "tags": ["bitmasks", "brute force", "dp", "fft", "flows", "graphs", "math", "meet-in-the-middle", "trees"], "problem_rating": "2500", "solved_by": "x539"},
{"url": "https://codeforces.com//problemset/problem/1709/E", "name": "XOR Tree", "tags": ["bitmasks", "data structures", "dfs and similar", "dsu", "greedy", "trees"], "problem_rating": "2400", "solved_by": "x2562"},
{"url": "https://codeforces.com//problemset/problem/1709/D", "name": "Rorororobot", "tags": ["binary search", "data structures", "greedy", "math"], "problem_rating": "1700", "solved_by": "x8252"},
{"url": "https://codeforces.com//problemset/problem/1709/C", "name": "Recover an RBS", "tags": ["constructive algorithms", "greedy", "implementation", "strings"], "problem_rating": "1800", "solved_by": "x8681"},
{"url": "https://codeforces.com//problemset/problem/1709/B", "name": "Also Try Minecraft", "tags": ["data structures", "dp", "implementation"], "problem_rating": "900", "solved_by": "x22347"},
{"url": "https://codeforces.com//problemset/problem/1709/A", "name": "Three Doors", "tags": ["brute force", "greedy", "implementation", "math"], "problem_rating": "800", "solved_by": "x29335"},
{"url": "https://codeforces.com//problemset/problem/1708/B", "name": "Difference of GCDs", "tags": ["constructive algorithms", "math"], "problem_rating": "1100", "solved_by": "x20138"},
{"url": "https://codeforces.com//problemset/problem/1708/A", "name": "Difference Operations", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x21599"},
{"url": "https://codeforces.com//problemset/problem/1707/F", "name": "Bugaboo", "tags": ["bitmasks", "constructive algorithms", "dp", "number theory"], "problem_rating": "3500", "solved_by": "x147"},
{"url": "https://codeforces.com//problemset/problem/1707/E", "name": "Replace", "tags": ["binary search", "data structures"], "problem_rating": "3500", "solved_by": "x578"},
{"url": "https://codeforces.com//problemset/problem/1707/D", "name": "Partial Virtual Trees", "tags": ["combinatorics", "dfs and similar", "dp", "math", "trees"], "problem_rating": "3000", "solved_by": "x598"},
{"url": "https://codeforces.com//problemset/problem/1707/C", "name": "DFS Trees", "tags": ["dfs and similar", "dsu", "graphs", "greedy", "sortings", "trees"], "problem_rating": "2400", "solved_by": "x1459"},
{"url": "https://codeforces.com//problemset/problem/1707/B", "name": "Difference Array", "tags": ["brute force", "data structures", "implementation", "sortings"], "problem_rating": "1900", "solved_by": "x5637"},
{"url": "https://codeforces.com//problemset/problem/1707/A", "name": "Doremy's IQ", "tags": ["binary search", "constructive algorithms", "greedy", "implementation"], "problem_rating": "1600", "solved_by": "x13253"},
{"url": "https://codeforces.com//problemset/problem/1706/E", "name": "Qpwoeirut and Vertices", "tags": ["binary search", "data structures", "dfs and similar", "divide and conquer", "dsu", "greedy", "trees"], "problem_rating": "2300", "solved_by": "x2500"},
{"url": "https://codeforces.com//problemset/problem/1706/D2", "name": "Chopping Carrots (Hard Version)", "tags": ["brute force", "constructive algorithms", "data structures", "dp", "greedy", "math", "number theory", "two pointers"], "problem_rating": "2400", "solved_by": "x1675"},
{"url": "https://codeforces.com//problemset/problem/1706/D1", "name": "Chopping Carrots (Easy Version)", "tags": ["binary search", "brute force", "constructive algorithms", "greedy", "number theory"], "problem_rating": "1700", "solved_by": "x6806"},
{"url": "https://codeforces.com//problemset/problem/1706/C", "name": "Qpwoeirut And The City", "tags": ["dp", "flows", "greedy", "implementation"], "problem_rating": "1400", "solved_by": "x14640"},
{"url": "https://codeforces.com//problemset/problem/1706/B", "name": "Making Towers", "tags": ["dp", "greedy", "math"], "problem_rating": "1100", "solved_by": "x16353"},
{"url": "https://codeforces.com//problemset/problem/1706/A", "name": "Another String Minimization Problem", "tags": ["2-sat", "constructive algorithms", "greedy", "string suffix structures", "strings"], "problem_rating": "800", "solved_by": "x22720"},
{"url": "https://codeforces.com//problemset/problem/1705/F", "name": "Mark and the Online Exam", "tags": ["bitmasks", "constructive algorithms", "interactive", "probabilities"], "problem_rating": "2900", "solved_by": "x589"},
{"url": "https://codeforces.com//problemset/problem/1705/E", "name": "Mark and Professor Koro", "tags": ["binary search", "bitmasks", "brute force", "combinatorics", "data structures", "greedy"], "problem_rating": "2300", "solved_by": "x2033"},
{"url": "https://codeforces.com//problemset/problem/1705/D", "name": "Mark and Lightbulbs", "tags": ["combinatorics", "constructive algorithms", "greedy", "math", "sortings"], "problem_rating": "1800", "solved_by": "x6220"},
{"url": "https://codeforces.com//problemset/problem/1705/C", "name": "Mark and His Unfinished Essay", "tags": ["brute force", "implementation"], "problem_rating": "1400", "solved_by": "x13172"},
{"url": "https://codeforces.com//problemset/problem/1705/B", "name": "Mark the Dust Sweeper", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "900", "solved_by": "x22587"},
{"url": "https://codeforces.com//problemset/problem/1705/A", "name": "Mark the Photographer", "tags": ["greedy", "sortings"], "problem_rating": "800", "solved_by": "x24984"},
{"url": "https://codeforces.com//problemset/problem/1704/H2", "name": "Game of AI (hard version)", "tags": ["combinatorics", "fft", "math"], "problem_rating": "3500", "solved_by": "x80"},
{"url": "https://codeforces.com//problemset/problem/1704/H1", "name": "Game of AI (easy version)", "tags": ["combinatorics", "constructive algorithms", "dp", "fft", "math"], "problem_rating": "3200", "solved_by": "x177"},
{"url": "https://codeforces.com//problemset/problem/1704/G", "name": "Mio and Lucky Array", "tags": ["constructive algorithms", "fft", "math", "strings"], "problem_rating": "3500", "solved_by": "x103"},
{"url": "https://codeforces.com//problemset/problem/1704/F", "name": "Colouring Game", "tags": ["constructive algorithms", "dp", "games"], "problem_rating": "2600", "solved_by": "x949"},
{"url": "https://codeforces.com//problemset/problem/1704/E", "name": "Count Seconds", "tags": ["brute force", "constructive algorithms", "dp", "graphs", "implementation", "math"], "problem_rating": "2200", "solved_by": "x2260"},
{"url": "https://codeforces.com//problemset/problem/1704/D", "name": "Magical Array", "tags": ["constructive algorithms", "hashing", "implementation", "math"], "problem_rating": "1900", "solved_by": "x4954"},
{"url": "https://codeforces.com//problemset/problem/1704/C", "name": "Virus", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "1200", "solved_by": "x15152"},
{"url": "https://codeforces.com//problemset/problem/1704/B", "name": "Luke is a Foodie", "tags": ["brute force", "greedy", "implementation"], "problem_rating": "1000", "solved_by": "x17197"},
{"url": "https://codeforces.com//problemset/problem/1704/A", "name": "Two 0-1 Sequences", "tags": ["constructive algorithms", "greedy"], "problem_rating": "800", "solved_by": "x15899"},
{"url": "https://codeforces.com//problemset/problem/1703/G", "name": "Good Key, Bad Key", "tags": ["bitmasks", "brute force", "dp", "greedy", "math"], "problem_rating": "1600", "solved_by": "x10369"},
{"url": "https://codeforces.com//problemset/problem/1703/F", "name": "Yet Another Problem About Pairs Satisfying an Inequality", "tags": ["binary search", "data structures", "dp", "greedy", "sortings"], "problem_rating": "1300", "solved_by": "x19131"},
{"url": "https://codeforces.com//problemset/problem/1703/E", "name": "Mirror Grid", "tags": ["implementation"], "problem_rating": "1200", "solved_by": "x17652"},
{"url": "https://codeforces.com//problemset/problem/1703/D", "name": "Double Strings", "tags": ["brute force", "data structures", "strings"], "problem_rating": "1100", "solved_by": "x25001"},
{"url": "https://codeforces.com//problemset/problem/1703/C", "name": "Cypher", "tags": ["brute force", "implementation", "strings"], "problem_rating": "800", "solved_by": "x34879"},
{"url": "https://codeforces.com//problemset/problem/1703/B", "name": "ICPC Balloons", "tags": ["data structures", "implementation"], "problem_rating": "800", "solved_by": "x47330"},
{"url": "https://codeforces.com//problemset/problem/1703/A", "name": "YES or YES?", "tags": ["brute force", "implementation", "strings"], "problem_rating": "800", "solved_by": "x65940"},
{"url": "https://codeforces.com//problemset/problem/1702/G2", "name": "Passable Paths (hard version)", "tags": ["data structures", "dfs and similar", "trees"], "problem_rating": "2000", "solved_by": "x4487"},
{"url": "https://codeforces.com//problemset/problem/1702/G1", "name": "Passable Paths (easy version)", "tags": ["dfs and similar", "trees"], "problem_rating": "1900", "solved_by": "x5285"},
{"url": "https://codeforces.com//problemset/problem/1702/F", "name": "Equate Multisets", "tags": ["constructive algorithms", "data structures", "greedy", "math", "number theory"], "problem_rating": "1700", "solved_by": "x8197"},
{"url": "https://codeforces.com//problemset/problem/1702/E", "name": "Split Into Two Sets", "tags": ["dfs and similar", "dsu", "graphs"], "problem_rating": "1600", "solved_by": "x12860"},
{"url": "https://codeforces.com//problemset/problem/1702/D", "name": "Not a Cheap String", "tags": ["greedy"], "problem_rating": "1000", "solved_by": "x23372"},
{"url": "https://codeforces.com//problemset/problem/1702/C", "name": "Train and Queries", "tags": ["data structures", "greedy"], "problem_rating": "1100", "solved_by": "x21907"},
{"url": "https://codeforces.com//problemset/problem/1702/B", "name": "Polycarp Writes a String from Memory", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x27315"},
{"url": "https://codeforces.com//problemset/problem/1702/A", "name": "Round Down the Price", "tags": ["constructive algorithms"], "problem_rating": "800", "solved_by": "x34171"},
{"url": "https://codeforces.com//problemset/problem/1701/F", "name": "Points", "tags": ["combinatorics", "data structures", "implementation", "math", "matrices"], "problem_rating": "2500", "solved_by": "x909"},
{"url": "https://codeforces.com//problemset/problem/1701/E", "name": "Text Editor", "tags": ["brute force", "dp", "greedy", "strings"], "problem_rating": "2500", "solved_by": "x1092"},
{"url": "https://codeforces.com//problemset/problem/1701/D", "name": "Permutation Restoration", "tags": ["binary search", "data structures", "greedy", "math", "sortings", "two pointers"], "problem_rating": "1900", "solved_by": "x5593"},
{"url": "https://codeforces.com//problemset/problem/1701/C", "name": "Schedule Management", "tags": ["binary search", "greedy", "implementation", "two pointers"], "problem_rating": "1400", "solved_by": "x16376"},
{"url": "https://codeforces.com//problemset/problem/1701/B", "name": "Permutation", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x20088"},
{"url": "https://codeforces.com//problemset/problem/1701/A", "name": "Grass Field", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x26034"},
{"url": "https://codeforces.com//problemset/problem/1700/F", "name": "Puzzle", "tags": ["constructive algorithms", "dp", "greedy"], "problem_rating": "2600", "solved_by": "x872"},
{"url": "https://codeforces.com//problemset/problem/1700/E", "name": "Serega the Pirate", "tags": ["brute force", "constructive algorithms"], "problem_rating": "2600", "solved_by": "x840"},
{"url": "https://codeforces.com//problemset/problem/1700/D", "name": "River Locks", "tags": ["binary search", "dp", "greedy", "math"], "problem_rating": "1900", "solved_by": "x5957"},
{"url": "https://codeforces.com//problemset/problem/1700/C", "name": "Helping the Nature", "tags": ["constructive algorithms", "data structures", "greedy"], "problem_rating": "1700", "solved_by": "x10724"},
{"url": "https://codeforces.com//problemset/problem/1700/B", "name": "Palindromic Numbers", "tags": ["constructive algorithms", "implementation", "math"], "problem_rating": "1100", "solved_by": "x18539"},
{"url": "https://codeforces.com//problemset/problem/1700/A", "name": "Optimal Path", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "800", "solved_by": "x22722"},
{"url": "https://codeforces.com//problemset/problem/1699/E", "name": "Three Days Grace", "tags": ["data structures", "dp", "greedy", "math", "number theory", "two pointers"], "problem_rating": "2600", "solved_by": "x1117"},
{"url": "https://codeforces.com//problemset/problem/1699/D", "name": "Almost Triple Deletions", "tags": ["data structures", "dp", "greedy"], "problem_rating": "2300", "solved_by": "x3074"},
{"url": "https://codeforces.com//problemset/problem/1699/C", "name": "The Third Problem", "tags": ["combinatorics", "constructive algorithms", "math"], "problem_rating": "1700", "solved_by": "x9598"},
{"url": "https://codeforces.com//problemset/problem/1699/B", "name": "Almost Ternary Matrix", "tags": ["bitmasks", "constructive algorithms", "matrices"], "problem_rating": "900", "solved_by": "x19444"},
{"url": "https://codeforces.com//problemset/problem/1699/A", "name": "The Third Three Number Problem", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x23818"},
{"url": "https://codeforces.com//problemset/problem/1698/G", "name": "Long Binary String", "tags": ["bitmasks", "math", "matrices", "meet-in-the-middle", "number theory"], "problem_rating": "2900", "solved_by": "x308"},
{"url": "https://codeforces.com//problemset/problem/1698/F", "name": "Equal Reversal", "tags": ["constructive algorithms", "graphs", "implementation", "math"], "problem_rating": "2800", "solved_by": "x608"},
{"url": "https://codeforces.com//problemset/problem/1698/E", "name": "PermutationForces II", "tags": ["brute force", "combinatorics", "greedy", "sortings", "trees", "two pointers"], "problem_rating": "2300", "solved_by": "x1608"},
{"url": "https://codeforces.com//problemset/problem/1698/D", "name": "Fixed Point Guessing", "tags": ["binary search", "constructive algorithms", "interactive"], "problem_rating": "1600", "solved_by": "x8974"},
{"url": "https://codeforces.com//problemset/problem/1698/C", "name": "3SUM Closure", "tags": ["brute force", "data structures"], "problem_rating": "1300", "solved_by": "x18269"},
{"url": "https://codeforces.com//problemset/problem/1698/B", "name": "Rising Sand", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "800", "solved_by": "x20823"},
{"url": "https://codeforces.com//problemset/problem/1698/A", "name": "XOR Mixup", "tags": ["bitmasks", "brute force"], "problem_rating": "800", "solved_by": "x28537"},
{"url": "https://codeforces.com//problemset/problem/1697/F", "name": "Too Many Constraints", "tags": ["2-sat", "constructive algorithms", "graphs", "implementation"], "problem_rating": "2800", "solved_by": "x547"},
{"url": "https://codeforces.com//problemset/problem/1697/E", "name": "Coloring", "tags": ["brute force", "combinatorics", "constructive algorithms", "dp", "geometry", "graphs", "greedy", "implementation", "math"], "problem_rating": "2400", "solved_by": "x1160"},
{"url": "https://codeforces.com//problemset/problem/1697/D", "name": "Guess The String", "tags": ["binary search", "constructive algorithms", "interactive"], "problem_rating": "1900", "solved_by": "x4354"},
{"url": "https://codeforces.com//problemset/problem/1697/C", "name": "awoo's Favorite Problem", "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "implementation", "strings", "two pointers"], "problem_rating": "1400", "solved_by": "x14153"},
{"url": "https://codeforces.com//problemset/problem/1697/B", "name": "Promo", "tags": ["greedy", "sortings"], "problem_rating": "900", "solved_by": "x26065"},
{"url": "https://codeforces.com//problemset/problem/1697/A", "name": "Parkway Walk", "tags": ["greedy", "implementation"], "problem_rating": "800", "solved_by": "x25573"},
{"url": "https://codeforces.com//problemset/problem/1696/H", "name": "Maximum Product?", "tags": ["brute force", "combinatorics", "dp", "greedy", "implementation", "math", "two pointers"], "problem_rating": "3500", "solved_by": "x158"},
{"url": "https://codeforces.com//problemset/problem/1696/G", "name": "Fishingprince Plays With Array Again", "tags": ["brute force", "data structures", "geometry", "math"], "problem_rating": "3300", "solved_by": "x269"},
{"url": "https://codeforces.com//problemset/problem/1696/F", "name": "Tree Recovery", "tags": ["brute force", "constructive algorithms", "dfs and similar", "dsu", "graphs", "trees"], "problem_rating": "2600", "solved_by": "x864"},
{"url": "https://codeforces.com//problemset/problem/1696/E", "name": "Placing Jinas", "tags": ["combinatorics", "math"], "problem_rating": "2000", "solved_by": "x3960"},
{"url": "https://codeforces.com//problemset/problem/1696/D", "name": "Permutation Graph", "tags": ["binary search", "constructive algorithms", "data structures", "divide and conquer", "greedy", "shortest paths"], "problem_rating": "1900", "solved_by": "x5349"},
{"url": "https://codeforces.com//problemset/problem/1696/C", "name": "Fishingprince Plays With Array", "tags": ["constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "1400", "solved_by": "x11471"},
{"url": "https://codeforces.com//problemset/problem/1696/B", "name": "NIT Destroys the Universe", "tags": ["greedy"], "problem_rating": "900", "solved_by": "x20347"},
{"url": "https://codeforces.com//problemset/problem/1696/A", "name": "NIT orz!", "tags": ["bitmasks", "greedy"], "problem_rating": "800", "solved_by": "x18598"},
{"url": "https://codeforces.com//problemset/problem/1695/E", "name": "Ambiguous Dominoes", "tags": ["constructive algorithms", "dfs and similar", "graphs"], "problem_rating": "2700", "solved_by": "x439"},
{"url": "https://codeforces.com//problemset/problem/1695/D2", "name": "Tree Queries (Hard Version)", "tags": ["constructive algorithms", "dfs and similar", "dp", "greedy", "trees"], "problem_rating": "2300", "solved_by": "x1950"},
{"url": "https://codeforces.com//problemset/problem/1695/D1", "name": "Tree Queries (Easy Version)", "tags": ["brute force", "constructive algorithms", "dfs and similar", "dp", "greedy", "trees"], "problem_rating": "2200", "solved_by": "x2129"},
{"url": "https://codeforces.com//problemset/problem/1695/C", "name": "Zero Path", "tags": ["brute force", "data structures", "dp", "graphs", "greedy", "shortest paths"], "problem_rating": "1700", "solved_by": "x10692"},
{"url": "https://codeforces.com//problemset/problem/1695/B", "name": "Circle Game", "tags": ["games", "greedy"], "problem_rating": "1000", "solved_by": "x18261"},
{"url": "https://codeforces.com//problemset/problem/1695/A", "name": "Subrectangle Guess", "tags": ["games"], "problem_rating": "800", "solved_by": "x16235"},
{"url": "https://codeforces.com//problemset/problem/1694/B", "name": "Paranoid String", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1200", "solved_by": "x18843"},
{"url": "https://codeforces.com//problemset/problem/1694/A", "name": "Creep", "tags": ["greedy", "implementation"], "problem_rating": "800", "solved_by": "x22334"},
{"url": "https://codeforces.com//problemset/problem/1693/F", "name": "I Might Be Wrong", "tags": ["binary search", "greedy", "two pointers"], "problem_rating": "3400", "solved_by": "x389"},
{"url": "https://codeforces.com//problemset/problem/1693/E", "name": "Outermost Maximums", "tags": ["data structures", "greedy"], "problem_rating": "3400", "solved_by": "x411"},
{"url": "https://codeforces.com//problemset/problem/1693/D", "name": "Decinc Dividing", "tags": ["brute force", "data structures", "divide and conquer", "dp", "greedy"], "problem_rating": "2800", "solved_by": "x798"},
{"url": "https://codeforces.com//problemset/problem/1693/C", "name": "Keshi in Search of AmShZ", "tags": ["graphs", "greedy", "shortest paths"], "problem_rating": "2300", "solved_by": "x2507"},
{"url": "https://codeforces.com//problemset/problem/1693/B", "name": "Fake Plastic Trees", "tags": ["dfs and similar", "dp", "greedy", "trees"], "problem_rating": "1700", "solved_by": "x8277"},
{"url": "https://codeforces.com//problemset/problem/1693/A", "name": "Directional Increase", "tags": ["greedy"], "problem_rating": "1300", "solved_by": "x15918"},
{"url": "https://codeforces.com//problemset/problem/1692/H", "name": "Gambling", "tags": ["data structures", "dp", "greedy", "math"], "problem_rating": "1700", "solved_by": "x7272"},
{"url": "https://codeforces.com//problemset/problem/1692/G", "name": "2^Sort", "tags": ["data structures", "dp", "sortings", "two pointers"], "problem_rating": "1400", "solved_by": "x16865"},
{"url": "https://codeforces.com//problemset/problem/1692/F", "name": "3SUM", "tags": ["brute force", "math"], "problem_rating": "1300", "solved_by": "x22086"},
{"url": "https://codeforces.com//problemset/problem/1692/E", "name": "Binary Deque", "tags": ["binary search", "implementation", "two pointers"], "problem_rating": "1200", "solved_by": "x20992"},
{"url": "https://codeforces.com//problemset/problem/1692/D", "name": "The Clock", "tags": ["brute force", "implementation"], "problem_rating": "1100", "solved_by": "x19091"},
{"url": "https://codeforces.com//problemset/problem/1692/C", "name": "Where's the Bishop?", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x33232"},
{"url": "https://codeforces.com//problemset/problem/1692/B", "name": "All Distinct", "tags": ["greedy", "sortings"], "problem_rating": "800", "solved_by": "x33493"},
{"url": "https://codeforces.com//problemset/problem/1692/A", "name": "Marathon", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x62451"},
{"url": "https://codeforces.com//problemset/problem/1691/F", "name": "K-Set Tree", "tags": ["combinatorics", "dfs and similar", "dp", "math", "trees"], "problem_rating": "2500", "solved_by": "x940"},
{"url": "https://codeforces.com//problemset/problem/1691/E", "name": "Number of Groups", "tags": ["data structures", "dfs and similar", "dsu", "graphs", "greedy", "sortings"], "problem_rating": "2300", "solved_by": "x1780"},
{"url": "https://codeforces.com//problemset/problem/1691/D", "name": "Max GEQ Sum", "tags": ["binary search", "constructive algorithms", "data structures", "divide and conquer", "implementation", "two pointers"], "problem_rating": "1800", "solved_by": "x5670"},
{"url": "https://codeforces.com//problemset/problem/1691/C", "name": "Sum of Substrings", "tags": ["brute force", "constructive algorithms", "greedy", "math", "strings"], "problem_rating": "1400", "solved_by": "x15356"},
{"url": "https://codeforces.com//problemset/problem/1691/B", "name": "Shoe Shuffling", "tags": ["constructive algorithms", "greedy", "implementation", "two pointers"], "problem_rating": "1000", "solved_by": "x22157"},
{"url": "https://codeforces.com//problemset/problem/1691/A", "name": "Beat The Odds", "tags": ["brute force", "greedy", "math"], "problem_rating": "800", "solved_by": "x30206"},
{"url": "https://codeforces.com//problemset/problem/1690/G", "name": "Count the Trains", "tags": ["binary search", "data structures", "greedy", "sortings"], "problem_rating": "2000", "solved_by": "x3323"},
{"url": "https://codeforces.com//problemset/problem/1690/F", "name": "Shifting String", "tags": ["graphs", "math", "number theory", "strings"], "problem_rating": "1700", "solved_by": "x6979"},
{"url": "https://codeforces.com//problemset/problem/1690/E", "name": "Price Maximization", "tags": ["binary search", "greedy", "math", "two pointers"], "problem_rating": "1500", "solved_by": "x14881"},
{"url": "https://codeforces.com//problemset/problem/1690/D", "name": "Black and White Stripe", "tags": ["implementation", "two pointers"], "problem_rating": "1000", "solved_by": "x28172"},
{"url": "https://codeforces.com//problemset/problem/1690/C", "name": "Restoring the Duration of Tasks", "tags": ["data structures", "greedy", "implementation"], "problem_rating": "800", "solved_by": "x25765"},
{"url": "https://codeforces.com//problemset/problem/1690/B", "name": "Array Decrements", "tags": ["greedy", "implementation"], "problem_rating": "800", "solved_by": "x25027"},
{"url": "https://codeforces.com//problemset/problem/1690/A", "name": "Print a Pedestal (Codeforces logo?)", "tags": ["constructive algorithms", "greedy"], "problem_rating": "800", "solved_by": "x32996"},
{"url": "https://codeforces.com//problemset/problem/1689/E", "name": "ANDfinity", "tags": ["bitmasks", "brute force", "constructive algorithms", "dfs and similar", "dsu", "graphs"], "problem_rating": "2500", "solved_by": "x1183"},
{"url": "https://codeforces.com//problemset/problem/1689/D", "name": "Lena and Matrix", "tags": ["data structures", "dp", "geometry", "shortest paths"], "problem_rating": "1900", "solved_by": "x4113"},
{"url": "https://codeforces.com//problemset/problem/1689/C", "name": "Infected Tree", "tags": ["dfs and similar", "dp", "trees"], "problem_rating": "1600", "solved_by": "x10949"},
{"url": "https://codeforces.com//problemset/problem/1689/B", "name": "Mystic Permutation", "tags": ["data structures", "greedy"], "problem_rating": "900", "solved_by": "x17327"},
{"url": "https://codeforces.com//problemset/problem/1689/A", "name": "Lex String", "tags": ["brute force", "greedy", "implementation", "sortings", "two pointers"], "problem_rating": "800", "solved_by": "x16499"},
{"url": "https://codeforces.com//problemset/problem/1688/C", "name": "Manipulating History", "tags": ["constructive algorithms", "greedy", "strings"], "problem_rating": "1700", "solved_by": "x8040"},
{"url": "https://codeforces.com//problemset/problem/1688/B", "name": "Patchouli's Magical Talisman", "tags": ["bitmasks", "constructive algorithms", "greedy", "sortings"], "problem_rating": "800", "solved_by": "x18066"},
{"url": "https://codeforces.com//problemset/problem/1688/A", "name": "Cirno's Perfect Bitmasks Classroom", "tags": ["bitmasks", "brute force"], "problem_rating": "800", "solved_by": "x21272"},
{"url": "https://codeforces.com//problemset/problem/1687/F", "name": "Koishi's Unconscious Permutation", "tags": ["fft", "math"], "problem_rating": "3500", "solved_by": "x81"},
{"url": "https://codeforces.com//problemset/problem/1687/E", "name": "Become Big For Me", "tags": ["combinatorics", "constructive algorithms", "greedy", "math", "number theory"], "problem_rating": "3500", "solved_by": "x222"},
{"url": "https://codeforces.com//problemset/problem/1687/D", "name": "Cute number", "tags": ["binary search", "brute force", "data structures", "dsu", "implementation", "math"], "problem_rating": "2900", "solved_by": "x567"},
{"url": "https://codeforces.com//problemset/problem/1687/C", "name": "Sanae and Giant Robot", "tags": ["binary search", "brute force", "data structures", "dsu", "greedy", "sortings"], "problem_rating": "2500", "solved_by": "x1355"},
{"url": "https://codeforces.com//problemset/problem/1687/B", "name": "Railway System", "tags": ["constructive algorithms", "graphs", "greedy", "interactive", "sortings"], "problem_rating": "1700", "solved_by": "x3548"},
{"url": "https://codeforces.com//problemset/problem/1687/A", "name": "The Enchanted Forest", "tags": ["brute force", "greedy"], "problem_rating": "1600", "solved_by": "x10197"},
{"url": "https://codeforces.com//problemset/problem/1686/B", "name": "Odd Subarrays", "tags": ["dp", "greedy"], "problem_rating": "800", "solved_by": "x18100"},
{"url": "https://codeforces.com//problemset/problem/1686/A", "name": "Everything Everywhere All But One", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x20316"},
{"url": "https://codeforces.com//problemset/problem/1685/E", "name": "The Ultimate LIS Problem", "tags": ["data structures", "greedy"], "problem_rating": "3500", "solved_by": "x144"},
{"url": "https://codeforces.com//problemset/problem/1685/D2", "name": "Permutation Weight (Hard Version)", "tags": ["constructive algorithms", "greedy"], "problem_rating": "3500", "solved_by": "x105"},
{"url": "https://codeforces.com//problemset/problem/1685/D1", "name": "Permutation Weight (Easy Version)", "tags": ["constructive algorithms", "dfs and similar", "dsu"], "problem_rating": "2800", "solved_by": "x436"},
{"url": "https://codeforces.com//problemset/problem/1685/C", "name": "Bring Balance", "tags": ["brute force", "constructive algorithms", "greedy"], "problem_rating": "2600", "solved_by": "x955"},
{"url": "https://codeforces.com//problemset/problem/1685/B", "name": "Linguistics", "tags": ["greedy", "implementation", "sortings", "strings"], "problem_rating": "2000", "solved_by": "x3218"},
{"url": "https://codeforces.com//problemset/problem/1685/A", "name": "Circular Local MiniMax", "tags": ["constructive algorithms", "greedy", "sortings"], "problem_rating": "1100", "solved_by": "x16774"},
{"url": "https://codeforces.com//problemset/problem/1684/H", "name": "Hard Cut", "tags": ["constructive algorithms", "dfs and similar", "divide and conquer", "math"], "problem_rating": "3400", "solved_by": "x236"},
{"url": "https://codeforces.com//problemset/problem/1684/G", "name": "Euclid Guess", "tags": ["constructive algorithms", "flows", "graph matchings", "math", "number theory"], "problem_rating": "2800", "solved_by": "x601"},
{"url": "https://codeforces.com//problemset/problem/1684/F", "name": "Diverse Segments", "tags": ["data structures", "two pointers"], "problem_rating": "2600", "solved_by": "x883"},
{"url": "https://codeforces.com//problemset/problem/1684/E", "name": "MEX vs DIFF", "tags": ["binary search", "brute force", "constructive algorithms", "data structures", "greedy", "two pointers"], "problem_rating": "2100", "solved_by": "x3100"},
{"url": "https://codeforces.com//problemset/problem/1684/D", "name": "Traps", "tags": ["constructive algorithms", "greedy", "sortings"], "problem_rating": "1700", "solved_by": "x9495"},
{"url": "https://codeforces.com//problemset/problem/1684/C", "name": "Column Swapping", "tags": ["brute force", "constructive algorithms", "greedy", "implementation", "sortings"], "problem_rating": "1400", "solved_by": "x12178"},
{"url": "https://codeforces.com//problemset/problem/1684/B", "name": "Z mod X = C", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x20837"},
{"url": "https://codeforces.com//problemset/problem/1684/A", "name": "Digit Minimization", "tags": ["constructive algorithms", "games", "math", "strings"], "problem_rating": "800", "solved_by": "x23692"},
{"url": "https://codeforces.com//problemset/problem/1682/F", "name": "MCMF?", "tags": ["data structures", "flows", "graphs", "greedy", "sortings", "two pointers"], "problem_rating": "2700", "solved_by": "x303"},
{"url": "https://codeforces.com//problemset/problem/1682/E", "name": "Unordered Swaps", "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy", "math", "sortings", "trees"], "problem_rating": "2700", "solved_by": "x576"},
{"url": "https://codeforces.com//problemset/problem/1682/D", "name": "Circular Spanning Tree", "tags": ["constructive algorithms", "implementation", "trees"], "problem_rating": "2000", "solved_by": "x3240"},
{"url": "https://codeforces.com//problemset/problem/1682/C", "name": "LIS or Reverse LIS?", "tags": ["constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "1400", "solved_by": "x14461"},
{"url": "https://codeforces.com//problemset/problem/1682/B", "name": "AND Sorting", "tags": ["bitmasks", "constructive algorithms", "sortings"], "problem_rating": "1100", "solved_by": "x17957"},
{"url": "https://codeforces.com//problemset/problem/1682/A", "name": "Palindromic Indices", "tags": ["greedy", "strings"], "problem_rating": "800", "solved_by": "x19164"},
{"url": "https://codeforces.com//problemset/problem/1681/F", "name": "Unique Occurrences", "tags": ["data structures", "dfs and similar", "divide and conquer", "dp", "dsu", "trees"], "problem_rating": "2300", "solved_by": "x1682"},
{"url": "https://codeforces.com//problemset/problem/1681/E", "name": "Labyrinth Adventures", "tags": ["data structures", "dp", "matrices", "shortest paths"], "problem_rating": "2600", "solved_by": "x773"},
{"url": "https://codeforces.com//problemset/problem/1681/D", "name": "Required Length", "tags": ["brute force", "dfs and similar", "dp", "hashing", "shortest paths"], "problem_rating": "1700", "solved_by": "x9466"},
{"url": "https://codeforces.com//problemset/problem/1681/C", "name": "Double Sort", "tags": ["implementation", "sortings"], "problem_rating": "1200", "solved_by": "x17179"},
{"url": "https://codeforces.com//problemset/problem/1681/B", "name": "Card Trick", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x19968"},
{"url": "https://codeforces.com//problemset/problem/1681/A", "name": "Game with Cards", "tags": ["games", "greedy"], "problem_rating": "800", "solved_by": "x20865"},
{"url": "https://codeforces.com//problemset/problem/1680/F", "name": "Lenient Vertex Cover", "tags": ["dfs and similar", "divide and conquer", "dsu", "graphs", "trees"], "problem_rating": "2600", "solved_by": "x646"},
{"url": "https://codeforces.com//problemset/problem/1680/E", "name": "Moving Chips", "tags": ["bitmasks", "dp", "greedy"], "problem_rating": "2000", "solved_by": "x3693"},
{"url": "https://codeforces.com//problemset/problem/1680/D", "name": "Dog Walking", "tags": ["brute force", "greedy", "math"], "problem_rating": "2400", "solved_by": "x1139"},
{"url": "https://codeforces.com//problemset/problem/1680/C", "name": "Binary String", "tags": ["binary search", "greedy", "strings", "two pointers"], "problem_rating": "1600", "solved_by": "x9744"},
{"url": "https://codeforces.com//problemset/problem/1680/B", "name": "Robots", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x18169"},
{"url": "https://codeforces.com//problemset/problem/1680/A", "name": "Minimums and Maximums", "tags": ["brute force", "math"], "problem_rating": "800", "solved_by": "x21409"},
{"url": "https://codeforces.com//problemset/problem/1679/F", "name": "Formalism for Formalism", "tags": ["bitmasks", "dp", "math"], "problem_rating": "2600", "solved_by": "x516"},
{"url": "https://codeforces.com//problemset/problem/1679/E", "name": "Typical Party in Dorm", "tags": ["bitmasks", "combinatorics", "dp", "strings"], "problem_rating": "2400", "solved_by": "x1127"},
{"url": "https://codeforces.com//problemset/problem/1679/D", "name": "Toss a Coin to Your Graph...", "tags": ["binary search", "dfs and similar", "dp", "graphs"], "problem_rating": "1900", "solved_by": "x4691"},
{"url": "https://codeforces.com//problemset/problem/1679/C", "name": "Rooks Defenders", "tags": ["data structures", "implementation"], "problem_rating": "1400", "solved_by": "x10111"},
{"url": "https://codeforces.com//problemset/problem/1679/B", "name": "Stone Age Problem", "tags": ["data structures", "implementation"], "problem_rating": "1200", "solved_by": "x17759"},
{"url": "https://codeforces.com//problemset/problem/1679/A", "name": "AvtoBus", "tags": ["brute force", "greedy", "math", "number theory"], "problem_rating": "900", "solved_by": "x23021"},
{"url": "https://codeforces.com//problemset/problem/1678/B2", "name": "Tokitsukaze and Good 01-String (hard version)", "tags": ["dp", "greedy", "implementation"], "problem_rating": "1800", "solved_by": "x6501"},
{"url": "https://codeforces.com//problemset/problem/1678/B1", "name": "Tokitsukaze and Good 01-String (easy version)", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x15817"},
{"url": "https://codeforces.com//problemset/problem/1678/A", "name": "Tokitsukaze and All Zero Sequence", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x18041"},
{"url": "https://codeforces.com//problemset/problem/1677/F", "name": "Tokitsukaze and Gems", "tags": ["dp", "math"], "problem_rating": "3500", "solved_by": "x90"},
{"url": "https://codeforces.com//problemset/problem/1677/E", "name": "Tokitsukaze and Beautiful Subsegments", "tags": ["data structures"], "problem_rating": "2900", "solved_by": "x524"},
{"url": "https://codeforces.com//problemset/problem/1677/D", "name": "Tokitsukaze and Permutations", "tags": ["dp", "math"], "problem_rating": "2500", "solved_by": "x1229"},
{"url": "https://codeforces.com//problemset/problem/1677/C", "name": "Tokitsukaze and Two Colorful Tapes", "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy"], "problem_rating": "1900", "solved_by": "x3499"},
{"url": "https://codeforces.com//problemset/problem/1677/B", "name": "Tokitsukaze and Meeting", "tags": ["data structures", "implementation", "math"], "problem_rating": "1700", "solved_by": "x4102"},
{"url": "https://codeforces.com//problemset/problem/1677/A", "name": "Tokitsukaze and Strange Inequality", "tags": ["brute force", "data structures", "dp"], "problem_rating": "1600", "solved_by": "x8297"},
{"url": "https://codeforces.com//problemset/problem/1676/H2", "name": "Maximum Crossings (Hard Version)", "tags": ["data structures", "divide and conquer", "sortings"], "problem_rating": "1500", "solved_by": "x10438"},
{"url": "https://codeforces.com//problemset/problem/1676/H1", "name": "Maximum Crossings (Easy Version)", "tags": ["brute force"], "problem_rating": "1400", "solved_by": "x13690"},
{"url": "https://codeforces.com//problemset/problem/1676/G", "name": "White-Black Balanced Subtrees", "tags": ["dfs and similar", "dp", "graphs", "trees"], "problem_rating": "1300", "solved_by": "x14946"},
{"url": "https://codeforces.com//problemset/problem/1676/F", "name": "Longest Strike", "tags": ["data structures", "greedy", "implementation", "sortings", "two pointers"], "problem_rating": "1300", "solved_by": "x16314"},
{"url": "https://codeforces.com//problemset/problem/1676/E", "name": "Eating Queries", "tags": ["binary search", "greedy", "sortings"], "problem_rating": "1100", "solved_by": "x25514"},
{"url": "https://codeforces.com//problemset/problem/1676/D", "name": "X-Sum", "tags": ["brute force", "greedy", "implementation"], "problem_rating": "1000", "solved_by": "x24655"},
{"url": "https://codeforces.com//problemset/problem/1676/C", "name": "Most Similar Words", "tags": ["brute force", "greedy", "implementation", "implementation", "math", "strings"], "problem_rating": "800", "solved_by": "x29493"},
{"url": "https://codeforces.com//problemset/problem/1676/B", "name": "Equal Candies", "tags": ["greedy", "math", "sortings"], "problem_rating": "800", "solved_by": "x46734"},
{"url": "https://codeforces.com//problemset/problem/1676/A", "name": "Lucky?", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x61042"},
{"url": "https://codeforces.com//problemset/problem/1675/G", "name": "Sorting Pancakes", "tags": ["dp"], "problem_rating": "2300", "solved_by": "x1637"},
{"url": "https://codeforces.com//problemset/problem/1675/F", "name": "Vlad and Unfinished Business", "tags": ["dfs and similar", "dp", "greedy", "trees"], "problem_rating": "1800", "solved_by": "x5176"},
{"url": "https://codeforces.com//problemset/problem/1675/E", "name": "Replace With the Previous, Minimize", "tags": ["dsu", "greedy", "strings"], "problem_rating": "1500", "solved_by": "x10427"},
{"url": "https://codeforces.com//problemset/problem/1675/D", "name": "Vertical Paths", "tags": ["graphs", "implementation", "trees"], "problem_rating": "1300", "solved_by": "x12821"},
{"url": "https://codeforces.com//problemset/problem/1675/C", "name": "Detective Task", "tags": ["implementation"], "problem_rating": "1100", "solved_by": "x18038"},
{"url": "https://codeforces.com//problemset/problem/1675/B", "name": "Make It Increasing", "tags": ["greedy", "implementation"], "problem_rating": "900", "solved_by": "x25930"},
{"url": "https://codeforces.com//problemset/problem/1675/A", "name": "Food for Animals", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x32424"},
{"url": "https://codeforces.com//problemset/problem/1674/G", "name": "Remove Directed Edges", "tags": ["dfs and similar", "dp", "graphs"], "problem_rating": "2000", "solved_by": "x2431"},
{"url": "https://codeforces.com//problemset/problem/1674/F", "name": "Desktop Rearrangement", "tags": ["data structures", "greedy", "implementation"], "problem_rating": "1800", "solved_by": "x4959"},
{"url": "https://codeforces.com//problemset/problem/1674/E", "name": "Breaking the Wall", "tags": ["binary search", "brute force", "constructive algorithms", "greedy", "math"], "problem_rating": "2000", "solved_by": "x6273"},
{"url": "https://codeforces.com//problemset/problem/1674/D", "name": "A-B-C Sort", "tags": ["constructive algorithms", "implementation", "sortings"], "problem_rating": "1200", "solved_by": "x16057"},
{"url": "https://codeforces.com//problemset/problem/1674/C", "name": "Infinite Replacement", "tags": ["combinatorics", "implementation", "strings"], "problem_rating": "1000", "solved_by": "x23262"},
{"url": "https://codeforces.com//problemset/problem/1674/B", "name": "Dictionary", "tags": ["combinatorics", "math"], "problem_rating": "800", "solved_by": "x25992"},
{"url": "https://codeforces.com//problemset/problem/1674/A", "name": "Number Transformation", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x26009"},
{"url": "https://codeforces.com//problemset/problem/1673/F", "name": "Anti-Theft Road Planning", "tags": ["bitmasks", "constructive algorithms", "divide and conquer", "greedy", "interactive", "math"], "problem_rating": "2400", "solved_by": "x790"},
{"url": "https://codeforces.com//problemset/problem/1673/E", "name": "Power or XOR?", "tags": ["bitmasks", "combinatorics", "math", "number theory"], "problem_rating": "2500", "solved_by": "x693"},
{"url": "https://codeforces.com//problemset/problem/1673/D", "name": "Lost Arithmetic Progression", "tags": ["combinatorics", "math", "number theory"], "problem_rating": "1900", "solved_by": "x3257"},
{"url": "https://codeforces.com//problemset/problem/1673/C", "name": "Palindrome Basis", "tags": ["brute force", "dp", "math", "number theory"], "problem_rating": "1500", "solved_by": "x12325"},
{"url": "https://codeforces.com//problemset/problem/1673/B", "name": "A Perfectly Balanced String?", "tags": ["brute force", "greedy", "strings"], "problem_rating": "1100", "solved_by": "x14777"},
{"url": "https://codeforces.com//problemset/problem/1673/A", "name": "Subtle Substring Subtraction", "tags": ["games", "greedy", "strings"], "problem_rating": "800", "solved_by": "x18354"},
{"url": "https://codeforces.com//problemset/problem/1672/I", "name": "PermutationForces", "tags": ["data structures", "greedy"], "problem_rating": "3000", "solved_by": "x172"},
{"url": "https://codeforces.com//problemset/problem/1672/H", "name": "Zigu Zagu", "tags": ["constructive algorithms", "data structures", "greedy"], "problem_rating": "2700", "solved_by": "x937"},
{"url": "https://codeforces.com//problemset/problem/1672/G", "name": "Cross Xor", "tags": ["constructive algorithms", "graphs", "math", "matrices"], "problem_rating": "3200", "solved_by": "x319"},
{"url": "https://codeforces.com//problemset/problem/1672/F2", "name": "Checker for Array Shuffling", "tags": ["constructive algorithms", "dfs and similar", "graphs"], "problem_rating": "2800", "solved_by": "x788"},
{"url": "https://codeforces.com//problemset/problem/1672/F1", "name": "Array Shuffling", "tags": ["constructive algorithms", "graphs", "greedy"], "problem_rating": "2000", "solved_by": "x3033"},
{"url": "https://codeforces.com//problemset/problem/1672/E", "name": "notepad.exe", "tags": ["binary search", "constructive algorithms", "greedy", "interactive"], "problem_rating": "2200", "solved_by": "x2119"},
{"url": "https://codeforces.com//problemset/problem/1672/D", "name": "Cyclic Rotation", "tags": ["constructive algorithms", "greedy", "implementation", "two pointers"], "problem_rating": "1700", "solved_by": "x6145"},
{"url": "https://codeforces.com//problemset/problem/1672/C", "name": "Unequal Array", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "1100", "solved_by": "x13099"},
{"url": "https://codeforces.com//problemset/problem/1672/B", "name": "I love AAAB", "tags": ["constructive algorithms", "implementation"], "problem_rating": "800", "solved_by": "x15717"},
{"url": "https://codeforces.com//problemset/problem/1672/A", "name": "Log Chopping", "tags": ["games", "implementation", "math"], "problem_rating": "800", "solved_by": "x15979"},
{"url": "https://codeforces.com//problemset/problem/1671/F", "name": "Permutation Counting", "tags": ["brute force", "combinatorics", "dp", "fft", "math"], "problem_rating": "2700", "solved_by": "x321"},
{"url": "https://codeforces.com//problemset/problem/1671/E", "name": "Preorder", "tags": ["combinatorics", "divide and conquer", "dp", "dsu", "hashing", "sortings", "trees"], "problem_rating": "2100", "solved_by": "x2689"},
{"url": "https://codeforces.com//problemset/problem/1671/D", "name": "Insert a Progression", "tags": ["brute force", "constructive algorithms", "greedy"], "problem_rating": "1600", "solved_by": "x7515"},
{"url": "https://codeforces.com//problemset/problem/1671/C", "name": "Dolce Vita", "tags": ["binary search", "brute force", "greedy", "math"], "problem_rating": "1200", "solved_by": "x16561"},
{"url": "https://codeforces.com//problemset/problem/1671/B", "name": "Consecutive Points Segment", "tags": ["brute force", "math", "sortings"], "problem_rating": "1000", "solved_by": "x18336"},
{"url": "https://codeforces.com//problemset/problem/1671/A", "name": "String Building", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x20332"},
{"url": "https://codeforces.com//problemset/problem/1670/F", "name": "Jee, You See?", "tags": ["bitmasks", "combinatorics", "dp"], "problem_rating": "2400", "solved_by": "x947"},
{"url": "https://codeforces.com//problemset/problem/1670/E", "name": "Hemose on the Tree", "tags": ["bitmasks", "constructive algorithms", "dfs and similar", "trees"], "problem_rating": "2200", "solved_by": "x1711"},
{"url": "https://codeforces.com//problemset/problem/1670/D", "name": "Very Suspicious", "tags": ["binary search", "brute force", "geometry", "greedy", "implementation", "math"], "problem_rating": "1700", "solved_by": "x5032"},
{"url": "https://codeforces.com//problemset/problem/1670/C", "name": "Where is the Pizza?", "tags": ["data structures", "dfs and similar", "dsu", "graphs", "implementation", "math"], "problem_rating": "1400", "solved_by": "x9774"},
{"url": "https://codeforces.com//problemset/problem/1670/B", "name": "Dorms War", "tags": ["brute force", "implementation", "strings"], "problem_rating": "1100", "solved_by": "x12552"},
{"url": "https://codeforces.com//problemset/problem/1670/A", "name": "Prof. Slim", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "800", "solved_by": "x15340"},
{"url": "https://codeforces.com//problemset/problem/1669/H", "name": "Maximal AND", "tags": ["bitmasks", "greedy", "math"], "problem_rating": "1300", "solved_by": "x17558"},
{"url": "https://codeforces.com//problemset/problem/1669/G", "name": "Fall Down", "tags": ["dfs and similar", "implementation"], "problem_rating": "1200", "solved_by": "x17822"},
{"url": "https://codeforces.com//problemset/problem/1669/F", "name": "Eating Candies", "tags": ["binary search", "data structures", "greedy", "two pointers"], "problem_rating": "1100", "solved_by": "x24513"},
{"url": "https://codeforces.com//problemset/problem/1669/E", "name": "2-Letter Strings", "tags": ["data structures", "math", "strings"], "problem_rating": "1200", "solved_by": "x17414"},
{"url": "https://codeforces.com//problemset/problem/1669/D", "name": "Colorful Stamp", "tags": ["implementation"], "problem_rating": "1100", "solved_by": "x21675"},
{"url": "https://codeforces.com//problemset/problem/1669/C", "name": "Odd/Even Increments", "tags": ["greedy", "greedy", "implementation", "math"], "problem_rating": "800", "solved_by": "x33803"},
{"url": "https://codeforces.com//problemset/problem/1669/B", "name": "Triple", "tags": ["implementation", "sortings"], "problem_rating": "800", "solved_by": "x41618"},
{"url": "https://codeforces.com//problemset/problem/1669/A", "name": "Division?", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x60064"},
{"url": "https://codeforces.com//problemset/problem/1668/B", "name": "Social Distance", "tags": ["greedy", "math", "sortings"], "problem_rating": "900", "solved_by": "x16462"},
{"url": "https://codeforces.com//problemset/problem/1668/A", "name": "Direction Change", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x16235"},
{"url": "https://codeforces.com//problemset/problem/1667/F", "name": "Yin Yang", "tags": ["implementation"], "problem_rating": "3500", "solved_by": "x93"},
{"url": "https://codeforces.com//problemset/problem/1667/E", "name": "Centroid Probabilities", "tags": ["combinatorics", "dp", "fft", "math"], "problem_rating": "3000", "solved_by": "x635"},
{"url": "https://codeforces.com//problemset/problem/1667/D", "name": "Edge Elimination", "tags": ["constructive algorithms", "dfs and similar", "dp", "trees"], "problem_rating": "2900", "solved_by": "x650"},
{"url": "https://codeforces.com//problemset/problem/1667/C", "name": "Half Queen Cover", "tags": ["constructive algorithms", "math"], "problem_rating": "2400", "solved_by": "x1546"},
{"url": "https://codeforces.com//problemset/problem/1667/B", "name": "Optimal Partition", "tags": ["data structures", "dp"], "problem_rating": "2100", "solved_by": "x3594"},
{"url": "https://codeforces.com//problemset/problem/1667/A", "name": "Make it Increasing", "tags": ["brute force", "greedy", "math"], "problem_rating": "1300", "solved_by": "x14561"},
{"url": "https://codeforces.com//problemset/problem/1666/L", "name": "Labyrinth", "tags": ["dfs and similar", "graphs"], "problem_rating": "1800", "solved_by": "x3031"},
{"url": "https://codeforces.com//problemset/problem/1666/K", "name": "Kingdom Partition", "tags": ["flows"], "problem_rating": "3200", "solved_by": "x235"},
{"url": "https://codeforces.com//problemset/problem/1666/J", "name": "Job Lookup", "tags": ["constructive algorithms", "dp", "shortest paths", "trees"], "problem_rating": "2100", "solved_by": "x1305"},
{"url": "https://codeforces.com//problemset/problem/1666/I", "name": "Interactive Treasure Hunt", "tags": ["brute force", "constructive algorithms", "geometry", "interactive", "math"], "problem_rating": "2200", "solved_by": "x1416"},
{"url": "https://codeforces.com//problemset/problem/1666/H", "name": "Heroes of Might", "tags": ["math"], "problem_rating": "3500", "solved_by": "x65"},
{"url": "https://codeforces.com//problemset/problem/1666/G", "name": "Global Warming", "tags": ["geometry", "math"], "problem_rating": "3100", "solved_by": "x136"},
{"url": "https://codeforces.com//problemset/problem/1666/F", "name": "Fancy Stack", "tags": ["combinatorics", "dp", "implementation"], "problem_rating": "2200", "solved_by": "x1130"},
{"url": "https://codeforces.com//problemset/problem/1666/E", "name": "Even Split", "tags": ["binary search", "constructive algorithms", "greedy", "math"], "problem_rating": "2500", "solved_by": "x693"},
{"url": "https://codeforces.com//problemset/problem/1666/D", "name": "Deletive Editing", "tags": ["greedy"], "problem_rating": "900", "solved_by": "x7587"},
{"url": "https://codeforces.com//problemset/problem/1666/C", "name": "Connect the Points", "tags": ["brute force", "constructive algorithms", "geometry"], "problem_rating": "1800", "solved_by": "x3126"},
{"url": "https://codeforces.com//problemset/problem/1666/B", "name": "Budget Distribution", "tags": [], "problem_rating": "3300", "solved_by": "x54"},
{"url": "https://codeforces.com//problemset/problem/1666/A", "name": "Admissible Map", "tags": [], "problem_rating": "3300", "solved_by": "x107"},
{"url": "https://codeforces.com//problemset/problem/1665/E", "name": "MinimizOR", "tags": ["bitmasks", "brute force", "data structures", "divide and conquer", "greedy", "implementation", "two pointers"], "problem_rating": "2500", "solved_by": "x1480"},
{"url": "https://codeforces.com//problemset/problem/1665/D", "name": "GCD Guess", "tags": ["bitmasks", "chinese remainder theorem", "constructive algorithms", "games", "interactive", "math", "number theory"], "problem_rating": "2000", "solved_by": "x3825"},
{"url": "https://codeforces.com//problemset/problem/1665/C", "name": "Tree Infection", "tags": ["binary search", "greedy", "sortings", "trees"], "problem_rating": "1600", "solved_by": "x8203"},
{"url": "https://codeforces.com//problemset/problem/1665/B", "name": "Array Cloning Technique", "tags": ["constructive algorithms", "greedy", "sortings"], "problem_rating": "900", "solved_by": "x19537"},
{"url": "https://codeforces.com//problemset/problem/1665/A", "name": "GCD vs LCM", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x23260"},
{"url": "https://codeforces.com//problemset/problem/1663/H", "name": "Cross-Language Program", "tags": ["*special problem", "constructive algorithms"], "problem_rating": [null], "solved_by": "x1274"},
{"url": "https://codeforces.com//problemset/problem/1663/G", "name": "Six Characters", "tags": ["*special problem", "constructive algorithms", "strings"], "problem_rating": [null], "solved_by": "x208"},
{"url": "https://codeforces.com//problemset/problem/1663/F", "name": "In Every Generation...", "tags": ["*special problem", "strings"], "problem_rating": [null], "solved_by": "x336"},
{"url": "https://codeforces.com//problemset/problem/1663/E", "name": "Are You Safe?", "tags": ["*special problem", "implementation"], "problem_rating": [null], "solved_by": "x548"},
{"url": "https://codeforces.com//problemset/problem/1663/D", "name": "Is it rated - 3", "tags": ["*special problem", "combinatorics", "dp", "math"], "problem_rating": [null], "solved_by": "x1397"},
{"url": "https://codeforces.com//problemset/problem/1663/C", "name": "Pōja Verdon", "tags": ["*special problem", "implementation", "math"], "problem_rating": [null], "solved_by": "x5645"},
{"url": "https://codeforces.com//problemset/problem/1663/B", "name": "Mike's Sequence", "tags": ["*special problem", "divide and conquer", "implementation", "math"], "problem_rating": [null], "solved_by": "x3375"},
{"url": "https://codeforces.com//problemset/problem/1663/A", "name": "Who Tested?", "tags": ["*special problem", "expression parsing", "trees"], "problem_rating": [null], "solved_by": "x10443"},
{"url": "https://codeforces.com//problemset/problem/1662/O", "name": "Circular Maze", "tags": ["brute force", "dfs and similar", "graphs", "implementation"], "problem_rating": [null], "solved_by": "x1296"},
{"url": "https://codeforces.com//problemset/problem/1662/N", "name": "Drone Photo", "tags": ["combinatorics", "math", "sortings"], "problem_rating": [null], "solved_by": "x712"},
{"url": "https://codeforces.com//problemset/problem/1662/M", "name": "Bottle Arrangements", "tags": ["constructive algorithms"], "problem_rating": [null], "solved_by": "x3347"},
{"url": "https://codeforces.com//problemset/problem/1662/L", "name": "Il Derby della Madonnina", "tags": ["data structures", "dp", "math"], "problem_rating": [null], "solved_by": "x1016"},
{"url": "https://codeforces.com//problemset/problem/1662/K", "name": "Pandemic Restrictions", "tags": ["geometry", "ternary search"], "problem_rating": [null], "solved_by": "x315"},
{"url": "https://codeforces.com//problemset/problem/1662/J", "name": "Training Camp", "tags": ["flows", "graphs"], "problem_rating": [null], "solved_by": "x228"},
{"url": "https://codeforces.com//problemset/problem/1662/I", "name": "Ice Cream Shop", "tags": ["brute force", "implementation", "sortings"], "problem_rating": [null], "solved_by": "x2017"},
{"url": "https://codeforces.com//problemset/problem/1662/H", "name": "Boundary", "tags": ["brute force", "math"], "problem_rating": [null], "solved_by": "x2860"},
{"url": "https://codeforces.com//problemset/problem/1662/G", "name": "Gastronomic Event", "tags": ["dp", "greedy", "trees"], "problem_rating": [null], "solved_by": "x457"},
{"url": "https://codeforces.com//problemset/problem/1662/F", "name": "Antennas", "tags": ["data structures", "dfs and similar", "graphs", "graphs", "implementation", "implementation", "shortest paths", "shortest paths"], "problem_rating": [null], "solved_by": "x993"},
{"url": "https://codeforces.com//problemset/problem/1662/E", "name": "Round Table", "tags": ["math"], "problem_rating": [null], "solved_by": "x133"},
{"url": "https://codeforces.com//problemset/problem/1662/D", "name": "Evolution of Weasels", "tags": ["greedy", "implementation", "strings"], "problem_rating": [null], "solved_by": "x1723"},
{"url": "https://codeforces.com//problemset/problem/1662/C", "name": "European Trip", "tags": ["dp", "graphs", "math", "matrices"], "problem_rating": [null], "solved_by": "x295"},
{"url": "https://codeforces.com//problemset/problem/1662/B", "name": "Toys", "tags": ["greedy", "strings"], "problem_rating": [null], "solved_by": "x133"},
{"url": "https://codeforces.com//problemset/problem/1662/A", "name": "Organizing SWERC", "tags": ["brute force", "implementation"], "problem_rating": [null], "solved_by": "x4221"},
{"url": "https://codeforces.com//problemset/problem/1661/F", "name": "Teleporters", "tags": ["binary search", "greedy"], "problem_rating": "2600", "solved_by": "x577"},
{"url": "https://codeforces.com//problemset/problem/1661/E", "name": "Narrow Components", "tags": ["brute force", "data structures", "dp", "dsu", "math", "trees"], "problem_rating": "2500", "solved_by": "x934"},
{"url": "https://codeforces.com//problemset/problem/1661/D", "name": "Progressions Covering", "tags": ["data structures", "greedy"], "problem_rating": "1900", "solved_by": "x4632"},
{"url": "https://codeforces.com//problemset/problem/1661/C", "name": "Water the Trees", "tags": ["binary search", "greedy", "math"], "problem_rating": "1700", "solved_by": "x9182"},
{"url": "https://codeforces.com//problemset/problem/1661/B", "name": "Getting Zero", "tags": ["bitmasks", "brute force", "dfs and similar", "dp", "graphs", "greedy", "shortest paths"], "problem_rating": "1300", "solved_by": "x17391"},
{"url": "https://codeforces.com//problemset/problem/1661/A", "name": "Array Balancing", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x18280"},
{"url": "https://codeforces.com//problemset/problem/1660/F2", "name": "Promising String (hard version)", "tags": ["data structures", "implementation", "math", "strings"], "problem_rating": "2100", "solved_by": "x2662"},
{"url": "https://codeforces.com//problemset/problem/1660/F1", "name": "Promising String (easy version)", "tags": ["brute force", "implementation", "math", "strings"], "problem_rating": "1700", "solved_by": "x7138"},
{"url": "https://codeforces.com//problemset/problem/1660/E", "name": "Matrix and Shifts", "tags": ["brute force", "constructive algorithms", "greedy", "implementation"], "problem_rating": "1600", "solved_by": "x7145"},
{"url": "https://codeforces.com//problemset/problem/1660/D", "name": "Maximum Product Strikes Back", "tags": ["brute force", "implementation", "math", "two pointers"], "problem_rating": "1600", "solved_by": "x8455"},
{"url": "https://codeforces.com//problemset/problem/1660/C", "name": "Get an Even String", "tags": ["dp", "greedy", "strings"], "problem_rating": "1300", "solved_by": "x19208"},
{"url": "https://codeforces.com//problemset/problem/1660/B", "name": "Vlad and Candies", "tags": ["math"], "problem_rating": "800", "solved_by": "x27851"},
{"url": "https://codeforces.com//problemset/problem/1660/A", "name": "Vasya and Coins", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x35574"},
{"url": "https://codeforces.com//problemset/problem/1659/F", "name": "Tree and Permutation Game", "tags": ["dfs and similar", "games", "graphs", "trees"], "problem_rating": "3000", "solved_by": "x189"},
{"url": "https://codeforces.com//problemset/problem/1659/E", "name": "AND-MEX Walk", "tags": ["bitmasks", "brute force", "constructive algorithms", "dfs and similar", "dsu", "graphs"], "problem_rating": "2200", "solved_by": "x1500"},
{"url": "https://codeforces.com//problemset/problem/1659/D", "name": "Reverse Sort Sum", "tags": ["constructive algorithms", "data structures", "greedy", "implementation", "math", "two pointers"], "problem_rating": "1900", "solved_by": "x3946"},
{"url": "https://codeforces.com//problemset/problem/1659/C", "name": "Line Empire", "tags": ["binary search", "brute force", "dp", "greedy", "implementation", "math"], "problem_rating": "1500", "solved_by": "x10137"},
{"url": "https://codeforces.com//problemset/problem/1659/B", "name": "Bit Flipping", "tags": ["bitmasks", "constructive algorithms", "greedy", "strings"], "problem_rating": "1300", "solved_by": "x10802"},
{"url": "https://codeforces.com//problemset/problem/1659/A", "name": "Red Versus Blue", "tags": ["constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "1000", "solved_by": "x17793"},
{"url": "https://codeforces.com//problemset/problem/1658/F", "name": "Juju and Binary String", "tags": ["brute force", "constructive algorithms", "greedy", "math"], "problem_rating": "2700", "solved_by": "x739"},
{"url": "https://codeforces.com//problemset/problem/1658/E", "name": "Gojou and Matrix Game", "tags": ["data structures", "dp", "games", "hashing", "implementation", "math", "number theory", "sortings"], "problem_rating": "2500", "solved_by": "x1032"},
{"url": "https://codeforces.com//problemset/problem/1658/D2", "name": "388535 (Hard Version)", "tags": ["bitmasks", "brute force", "data structures", "math"], "problem_rating": "2300", "solved_by": "x2478"},
{"url": "https://codeforces.com//problemset/problem/1658/D1", "name": "388535 (Easy Version)", "tags": ["bitmasks", "math"], "problem_rating": "1600", "solved_by": "x8938"},
{"url": "https://codeforces.com//problemset/problem/1658/C", "name": "Shinju and the Lost Permutation", "tags": ["constructive algorithms", "math"], "problem_rating": "1700", "solved_by": "x9204"},
{"url": "https://codeforces.com//problemset/problem/1658/B", "name": "Marin and Anti-coprime Permutation", "tags": ["combinatorics", "math", "number theory"], "problem_rating": "800", "solved_by": "x18498"},
{"url": "https://codeforces.com//problemset/problem/1658/A", "name": "Marin and Photoshoot", "tags": ["constructive algorithms", "implementation", "math"], "problem_rating": "800", "solved_by": "x20230"},
{"url": "https://codeforces.com//problemset/problem/1657/F", "name": "Words on Tree", "tags": ["2-sat", "dfs and similar", "dsu", "graphs", "trees"], "problem_rating": "2600", "solved_by": "x569"},
{"url": "https://codeforces.com//problemset/problem/1657/E", "name": "Star MST", "tags": ["combinatorics", "dp", "graph matchings", "math"], "problem_rating": "2200", "solved_by": "x2033"},
{"url": "https://codeforces.com//problemset/problem/1657/D", "name": "For Gamers. By Gamers.", "tags": ["binary search", "brute force", "greedy", "math", "sortings"], "problem_rating": "2000", "solved_by": "x4777"},
{"url": "https://codeforces.com//problemset/problem/1657/C", "name": "Bracket Sequence Deletion", "tags": ["greedy", "implementation"], "problem_rating": "1200", "solved_by": "x16675"},
{"url": "https://codeforces.com//problemset/problem/1657/B", "name": "XY Sequence", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x22710"},
{"url": "https://codeforces.com//problemset/problem/1657/A", "name": "Integer Moves", "tags": ["brute force", "math"], "problem_rating": "800", "solved_by": "x23867"},
{"url": "https://codeforces.com//problemset/problem/1656/I", "name": "Neighbour Ordering", "tags": ["constructive algorithms", "graphs"], "problem_rating": "3500", "solved_by": "x99"},
{"url": "https://codeforces.com//problemset/problem/1656/H", "name": "Equal LCM Subsets", "tags": ["data structures", "math", "number theory"], "problem_rating": "3200", "solved_by": "x545"},
{"url": "https://codeforces.com//problemset/problem/1656/G", "name": "Cycle Palindrome", "tags": ["constructive algorithms", "graphs", "math"], "problem_rating": "3200", "solved_by": "x367"},
{"url": "https://codeforces.com//problemset/problem/1656/F", "name": "Parametric MST", "tags": ["binary search", "constructive algorithms", "graphs", "greedy", "math", "sortings"], "problem_rating": "2600", "solved_by": "x1017"},
{"url": "https://codeforces.com//problemset/problem/1656/E", "name": "Equal Tree Sums", "tags": ["constructive algorithms", "dfs and similar", "math", "trees"], "problem_rating": "2200", "solved_by": "x3368"},
{"url": "https://codeforces.com//problemset/problem/1656/D", "name": "K-good", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "1900", "solved_by": "x6746"},
{"url": "https://codeforces.com//problemset/problem/1656/C", "name": "Make Equal With Mod", "tags": ["constructive algorithms", "math", "number theory", "sortings"], "problem_rating": "1200", "solved_by": "x18856"},
{"url": "https://codeforces.com//problemset/problem/1656/B", "name": "Subtract Operation", "tags": ["data structures", "greedy", "math", "two pointers"], "problem_rating": "1100", "solved_by": "x18276"},
{"url": "https://codeforces.com//problemset/problem/1656/A", "name": "Good Pairs", "tags": ["math", "sortings"], "problem_rating": "800", "solved_by": "x19500"},
{"url": "https://codeforces.com//problemset/problem/1654/H", "name": "Three Minimums", "tags": ["combinatorics", "constructive algorithms", "divide and conquer", "dp", "fft", "math"], "problem_rating": "3500", "solved_by": "x73"},
{"url": "https://codeforces.com//problemset/problem/1654/G", "name": "Snowy Mountain", "tags": ["data structures", "dfs and similar", "graphs", "greedy", "shortest paths", "trees"], "problem_rating": "2900", "solved_by": "x364"},
{"url": "https://codeforces.com//problemset/problem/1654/F", "name": "Minimal String Xoration", "tags": ["bitmasks", "data structures", "divide and conquer", "greedy", "hashing", "sortings", "strings"], "problem_rating": "2800", "solved_by": "x1091"},
{"url": "https://codeforces.com//problemset/problem/1654/E", "name": "Arithmetic Operations", "tags": ["brute force", "data structures", "graphs", "math"], "problem_rating": "2300", "solved_by": "x2025"},
{"url": "https://codeforces.com//problemset/problem/1654/D", "name": "Potion Brewing Class", "tags": ["dfs and similar", "math", "number theory", "trees"], "problem_rating": "2100", "solved_by": "x2811"},
{"url": "https://codeforces.com//problemset/problem/1654/C", "name": "Alice and the Cake", "tags": ["data structures", "greedy", "implementation", "sortings"], "problem_rating": "1400", "solved_by": "x13339"},
{"url": "https://codeforces.com//problemset/problem/1654/B", "name": "Prefix Removals", "tags": ["strings"], "problem_rating": "800", "solved_by": "x15546"},
{"url": "https://codeforces.com//problemset/problem/1654/A", "name": "Maximum Cake Tastiness", "tags": ["brute force", "greedy", "implementation", "sortings"], "problem_rating": "800", "solved_by": "x18511"},
{"url": "https://codeforces.com//problemset/problem/1651/F", "name": "Tower Defense", "tags": ["binary search", "brute force", "data structures"], "problem_rating": "3000", "solved_by": "x371"},
{"url": "https://codeforces.com//problemset/problem/1651/E", "name": "Sum of Matchings", "tags": ["brute force", "combinatorics", "constructive algorithms", "dfs and similar", "graph matchings", "greedy", "math"], "problem_rating": "2600", "solved_by": "x510"},
{"url": "https://codeforces.com//problemset/problem/1651/D", "name": "Nearest Excluded Points", "tags": ["binary search", "data structures", "dfs and similar", "graphs", "shortest paths"], "problem_rating": "1900", "solved_by": "x4981"},
{"url": "https://codeforces.com//problemset/problem/1651/C", "name": "Fault-tolerant Network", "tags": ["brute force", "data structures", "implementation"], "problem_rating": "1500", "solved_by": "x10603"},
{"url": "https://codeforces.com//problemset/problem/1651/B", "name": "Prove Him Wrong", "tags": ["constructive algorithms", "greedy"], "problem_rating": "800", "solved_by": "x19459"},
{"url": "https://codeforces.com//problemset/problem/1651/A", "name": "Playoff", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x25526"},
{"url": "https://codeforces.com//problemset/problem/1650/G", "name": "Counting Shortcuts", "tags": ["data structures", "dfs and similar", "dp", "graphs", "shortest paths"], "problem_rating": "2100", "solved_by": "x2372"},
{"url": "https://codeforces.com//problemset/problem/1650/F", "name": "Vitaly and Advanced Useless Algorithms", "tags": ["dp", "greedy", "implementation"], "problem_rating": "2200", "solved_by": "x1414"},
{"url": "https://codeforces.com//problemset/problem/1650/E", "name": "Rescheduling the Exam", "tags": ["binary search", "data structures", "greedy", "implementation", "math", "sortings"], "problem_rating": "1900", "solved_by": "x4075"},
{"url": "https://codeforces.com//problemset/problem/1650/D", "name": "Twist the Permutation", "tags": ["brute force", "constructive algorithms", "implementation", "math"], "problem_rating": "1300", "solved_by": "x12854"},
{"url": "https://codeforces.com//problemset/problem/1650/C", "name": "Weight of the System of Nested Segments", "tags": ["greedy", "hashing", "implementation", "sortings"], "problem_rating": "1200", "solved_by": "x16578"},
{"url": "https://codeforces.com//problemset/problem/1650/B", "name": "DIV + MOD", "tags": ["math"], "problem_rating": "900", "solved_by": "x27295"},
{"url": "https://codeforces.com//problemset/problem/1650/A", "name": "Deletions of Two Adjacent Letters", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x34343"},
{"url": "https://codeforces.com//problemset/problem/1649/B", "name": "Game of Ball Passing", "tags": ["greedy", "implementation"], "problem_rating": "1300", "solved_by": "x12900"},
{"url": "https://codeforces.com//problemset/problem/1649/A", "name": "Game", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x15458"},
{"url": "https://codeforces.com//problemset/problem/1648/F", "name": "Two Avenues", "tags": ["data structures", "dfs and similar", "graphs"], "problem_rating": "3500", "solved_by": "x109"},
{"url": "https://codeforces.com//problemset/problem/1648/E", "name": "Air Reform", "tags": ["data structures", "dfs and similar", "divide and conquer", "dsu", "graphs", "implementation", "trees"], "problem_rating": "3200", "solved_by": "x390"},
{"url": "https://codeforces.com//problemset/problem/1648/D", "name": "Serious Business", "tags": ["data structures", "divide and conquer", "dp", "implementation", "shortest paths"], "problem_rating": "2800", "solved_by": "x824"},
{"url": "https://codeforces.com//problemset/problem/1648/C", "name": "Tyler and Strings", "tags": ["combinatorics", "data structures", "implementation"], "problem_rating": "1900", "solved_by": "x2911"},
{"url": "https://codeforces.com//problemset/problem/1648/B", "name": "Integral Array", "tags": ["brute force", "constructive algorithms", "data structures", "math"], "problem_rating": "1800", "solved_by": "x6319"},
{"url": "https://codeforces.com//problemset/problem/1648/A", "name": "Weird Sum", "tags": ["combinatorics", "data structures", "geometry", "math", "matrices", "sortings"], "problem_rating": "1400", "solved_by": "x12290"},
{"url": "https://codeforces.com//problemset/problem/1647/F", "name": "Madoka and Laziness", "tags": ["dp", "greedy"], "problem_rating": "3100", "solved_by": "x381"},
{"url": "https://codeforces.com//problemset/problem/1647/E", "name": "Madoka and the Sixth-graders", "tags": ["data structures", "dfs and similar", "greedy"], "problem_rating": "2500", "solved_by": "x972"},
{"url": "https://codeforces.com//problemset/problem/1647/D", "name": "Madoka and the Best School in Russia", "tags": ["constructive algorithms", "dp", "math", "number theory"], "problem_rating": "1900", "solved_by": "x5216"},
{"url": "https://codeforces.com//problemset/problem/1647/C", "name": "Madoka and Childish Pranks", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1300", "solved_by": "x12495"},
{"url": "https://codeforces.com//problemset/problem/1647/B", "name": "Madoka and the Elegant Gift", "tags": ["brute force", "constructive algorithms", "graphs", "implementation"], "problem_rating": "1200", "solved_by": "x15234"},
{"url": "https://codeforces.com//problemset/problem/1647/A", "name": "Madoka and Math Dad", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x22647"},
{"url": "https://codeforces.com//problemset/problem/1646/F", "name": "Playing Around the Table", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "2900", "solved_by": "x513"},
{"url": "https://codeforces.com//problemset/problem/1646/E", "name": "Power Board", "tags": ["brute force", "dp", "math", "number theory"], "problem_rating": "2200", "solved_by": "x2338"},
{"url": "https://codeforces.com//problemset/problem/1646/D", "name": "Weight the Tree", "tags": ["constructive algorithms", "dfs and similar", "dp", "implementation", "trees"], "problem_rating": "2000", "solved_by": "x3649"},
{"url": "https://codeforces.com//problemset/problem/1646/C", "name": "Factorials and Powers of Two", "tags": ["bitmasks", "brute force", "constructive algorithms", "dp", "math"], "problem_rating": "1500", "solved_by": "x13711"},
{"url": "https://codeforces.com//problemset/problem/1646/B", "name": "Quality vs Quantity", "tags": ["brute force", "constructive algorithms", "greedy", "sortings", "two pointers"], "problem_rating": "800", "solved_by": "x21029"},
{"url": "https://codeforces.com//problemset/problem/1646/A", "name": "Square Counting", "tags": ["math"], "problem_rating": "800", "solved_by": "x24128"},
{"url": "https://codeforces.com//problemset/problem/1644/F", "name": "Basis", "tags": ["combinatorics", "fft", "math", "number theory"], "problem_rating": "2900", "solved_by": "x319"},
{"url": "https://codeforces.com//problemset/problem/1644/E", "name": "Expand the Path", "tags": ["brute force", "combinatorics", "data structures", "implementation", "math"], "problem_rating": "1900", "solved_by": "x3059"},
{"url": "https://codeforces.com//problemset/problem/1644/D", "name": "Cross Coloring", "tags": ["data structures", "implementation", "math"], "problem_rating": "1700", "solved_by": "x7111"},
{"url": "https://codeforces.com//problemset/problem/1644/C", "name": "Increase Subarray Sums", "tags": ["brute force", "dp", "greedy", "implementation"], "problem_rating": "1400", "solved_by": "x13586"},
{"url": "https://codeforces.com//problemset/problem/1644/B", "name": "Anti-Fibonacci Permutation", "tags": ["brute force", "constructive algorithms", "implementation"], "problem_rating": "800", "solved_by": "x20583"},
{"url": "https://codeforces.com//problemset/problem/1644/A", "name": "Doors and Keys", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x27154"},
{"url": "https://codeforces.com//problemset/problem/1642/B", "name": "Power Walking", "tags": ["greedy"], "problem_rating": "900", "solved_by": "x16772"},
{"url": "https://codeforces.com//problemset/problem/1642/A", "name": "Hard Way", "tags": ["geometry"], "problem_rating": "800", "solved_by": "x16103"},
{"url": "https://codeforces.com//problemset/problem/1641/F", "name": "Covering Circle", "tags": ["geometry"], "problem_rating": "3500", "solved_by": "x97"},
{"url": "https://codeforces.com//problemset/problem/1641/E", "name": "Special Positions", "tags": ["combinatorics", "divide and conquer", "fft", "math"], "problem_rating": "3300", "solved_by": "x205"},
{"url": "https://codeforces.com//problemset/problem/1641/D", "name": "Two Arrays", "tags": ["bitmasks", "brute force", "combinatorics", "greedy", "hashing", "math", "two pointers"], "problem_rating": "2700", "solved_by": "x1071"},
{"url": "https://codeforces.com//problemset/problem/1641/C", "name": "Anonymity Is Important", "tags": ["binary search", "brute force", "data structures", "dsu", "greedy", "sortings"], "problem_rating": "2200", "solved_by": "x2375"},
{"url": "https://codeforces.com//problemset/problem/1641/B", "name": "Repetitions Decoding", "tags": ["constructive algorithms", "implementation", "sortings"], "problem_rating": "2000", "solved_by": "x3765"},
{"url": "https://codeforces.com//problemset/problem/1641/A", "name": "Great Sequence", "tags": ["brute force", "greedy", "sortings"], "problem_rating": "1200", "solved_by": "x17733"},
{"url": "https://codeforces.com//problemset/problem/1639/K", "name": "Treasure Hunt", "tags": ["graphs", "interactive"], "problem_rating": [null], "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/1639/J", "name": "Treasure Hunt", "tags": ["graphs", "interactive"], "problem_rating": [null], "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/1639/I", "name": "Treasure Hunt", "tags": ["graphs", "interactive"], "problem_rating": [null], "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/1639/H", "name": "Treasure Hunt", "tags": ["graphs", "interactive"], "problem_rating": [null], "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/1639/G", "name": "Treasure Hunt", "tags": ["graphs", "interactive"], "problem_rating": [null], "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/1639/F", "name": "Treasure Hunt", "tags": ["graphs", "interactive"], "problem_rating": [null], "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/1639/E", "name": "Treasure Hunt", "tags": ["graphs", "interactive"], "problem_rating": [null], "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/1639/D", "name": "Treasure Hunt", "tags": ["graphs", "interactive"], "problem_rating": [null], "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/1639/C", "name": "Treasure Hunt", "tags": ["graphs", "interactive"], "problem_rating": [null], "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/1639/B", "name": "Treasure Hunt", "tags": ["graphs", "interactive"], "problem_rating": [null], "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/1639/A", "name": "Treasure Hunt", "tags": ["graphs", "interactive"], "problem_rating": [null], "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/1638/F", "name": "Two Posters", "tags": ["brute force", "data structures", "greedy", "two pointers"], "problem_rating": "3200", "solved_by": "x217"},
{"url": "https://codeforces.com//problemset/problem/1638/E", "name": "Colorful Operations", "tags": ["brute force", "data structures", "implementation"], "problem_rating": "2400", "solved_by": "x1846"},
{"url": "https://codeforces.com//problemset/problem/1638/D", "name": "Big Brush", "tags": ["constructive algorithms", "data structures", "greedy", "implementation"], "problem_rating": "2000", "solved_by": "x4132"},
{"url": "https://codeforces.com//problemset/problem/1638/C", "name": "Inversion Graph", "tags": ["data structures", "dsu", "graphs", "math"], "problem_rating": "1300", "solved_by": "x14558"},
{"url": "https://codeforces.com//problemset/problem/1638/B", "name": "Odd Swap Sort", "tags": ["data structures", "math", "sortings"], "problem_rating": "1100", "solved_by": "x20665"},
{"url": "https://codeforces.com//problemset/problem/1638/A", "name": "Reverse", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "800", "solved_by": "x21362"},
{"url": "https://codeforces.com//problemset/problem/1637/H", "name": "Minimize Inversions Number", "tags": ["data structures", "greedy", "math", "sortings"], "problem_rating": "3500", "solved_by": "x310"},
{"url": "https://codeforces.com//problemset/problem/1637/G", "name": "Birthday", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "3000", "solved_by": "x498"},
{"url": "https://codeforces.com//problemset/problem/1637/F", "name": "Towers", "tags": ["constructive algorithms", "dfs and similar", "dp", "greedy", "trees"], "problem_rating": "2500", "solved_by": "x1728"},
{"url": "https://codeforces.com//problemset/problem/1637/E", "name": "Best Pair", "tags": ["binary search", "brute force", "implementation"], "problem_rating": "2100", "solved_by": "x3231"},
{"url": "https://codeforces.com//problemset/problem/1637/D", "name": "Yet Another Minimization Problem", "tags": ["dp", "greedy", "math"], "problem_rating": "1800", "solved_by": "x7574"},
{"url": "https://codeforces.com//problemset/problem/1637/C", "name": "Andrew and Stones", "tags": ["greedy", "implementation"], "problem_rating": "1200", "solved_by": "x17530"},
{"url": "https://codeforces.com//problemset/problem/1637/B", "name": "MEX and Array", "tags": ["brute force", "dp", "greedy", "math"], "problem_rating": "1100", "solved_by": "x14726"},
{"url": "https://codeforces.com//problemset/problem/1637/A", "name": "Sorting Parts", "tags": ["brute force", "sortings"], "problem_rating": "800", "solved_by": "x22196"},
{"url": "https://codeforces.com//problemset/problem/1635/F", "name": "Closest Pair", "tags": ["data structures", "greedy"], "problem_rating": "2800", "solved_by": "x994"},
{"url": "https://codeforces.com//problemset/problem/1635/E", "name": "Cars", "tags": ["2-sat", "constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy", "sortings"], "problem_rating": "2200", "solved_by": "x2194"},
{"url": "https://codeforces.com//problemset/problem/1635/D", "name": "Infinite Set", "tags": ["bitmasks", "dp", "math", "matrices", "number theory", "strings"], "problem_rating": "1800", "solved_by": "x6142"},
{"url": "https://codeforces.com//problemset/problem/1635/C", "name": "Differential Sorting", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1200", "solved_by": "x17004"},
{"url": "https://codeforces.com//problemset/problem/1635/B", "name": "Avoid Local Maximums", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x17881"},
{"url": "https://codeforces.com//problemset/problem/1635/A", "name": "Min Or Sum", "tags": ["bitmasks", "greedy"], "problem_rating": "800", "solved_by": "x22634"},
{"url": "https://codeforces.com//problemset/problem/1634/F", "name": "Fibonacci Additions", "tags": ["brute force", "data structures", "hashing", "implementation", "math"], "problem_rating": "2700", "solved_by": "x1576"},
{"url": "https://codeforces.com//problemset/problem/1634/E", "name": "Fair Share", "tags": ["constructive algorithms", "data structures", "dfs and similar", "graph matchings", "graphs"], "problem_rating": "2400", "solved_by": "x1643"},
{"url": "https://codeforces.com//problemset/problem/1634/D", "name": "Finding Zero", "tags": ["constructive algorithms", "interactive", "math"], "problem_rating": "2000", "solved_by": "x4297"},
{"url": "https://codeforces.com//problemset/problem/1634/C", "name": "OKEA", "tags": ["constructive algorithms"], "problem_rating": "1000", "solved_by": "x18063"},
{"url": "https://codeforces.com//problemset/problem/1634/B", "name": "Fortune Telling", "tags": ["bitmasks", "math"], "problem_rating": "1400", "solved_by": "x16128"},
{"url": "https://codeforces.com//problemset/problem/1634/A", "name": "Reverse and Concatenate", "tags": ["greedy", "strings"], "problem_rating": "800", "solved_by": "x23770"},
{"url": "https://codeforces.com//problemset/problem/1633/F", "name": "Perfect Matching", "tags": ["data structures", "divide and conquer", "interactive", "trees"], "problem_rating": "2800", "solved_by": "x314"},
{"url": "https://codeforces.com//problemset/problem/1633/E", "name": "Spanning Tree Queries", "tags": ["binary search", "data structures", "dfs and similar", "dsu", "graphs", "greedy", "math", "sortings", "trees"], "problem_rating": "2400", "solved_by": "x1484"},
{"url": "https://codeforces.com//problemset/problem/1633/D", "name": "Make Them Equal", "tags": ["dp", "greedy"], "problem_rating": "1600", "solved_by": "x13565"},
{"url": "https://codeforces.com//problemset/problem/1633/C", "name": "Kill the Monster", "tags": ["brute force", "math"], "problem_rating": "1100", "solved_by": "x19830"},
{"url": "https://codeforces.com//problemset/problem/1633/B", "name": "Minority", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x27557"},
{"url": "https://codeforces.com//problemset/problem/1633/A", "name": "Div. 7", "tags": ["brute force"], "problem_rating": "800", "solved_by": "x32549"},
{"url": "https://codeforces.com//problemset/problem/1632/E2", "name": "Distance Tree (hard version)", "tags": ["binary search", "dfs and similar", "shortest paths", "trees"], "problem_rating": "2700", "solved_by": "x949"},
{"url": "https://codeforces.com//problemset/problem/1632/E1", "name": "Distance Tree (easy version)", "tags": ["binary search", "data structures", "dfs and similar", "graphs", "shortest paths", "trees"], "problem_rating": "2400", "solved_by": "x1135"},
{"url": "https://codeforces.com//problemset/problem/1632/D", "name": "New Year Concert", "tags": ["binary search", "data structures", "greedy", "math", "number theory", "two pointers"], "problem_rating": "2000", "solved_by": "x4566"},
{"url": "https://codeforces.com//problemset/problem/1632/C", "name": "Strange Test", "tags": ["binary search", "bitmasks", "brute force", "dp", "math"], "problem_rating": "1600", "solved_by": "x12533"},
{"url": "https://codeforces.com//problemset/problem/1632/B", "name": "Roof Construction", "tags": ["bitmasks", "constructive algorithms"], "problem_rating": "1000", "solved_by": "x21643"},
{"url": "https://codeforces.com//problemset/problem/1632/A", "name": "ABC", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x29213"},
{"url": "https://codeforces.com//problemset/problem/1631/B", "name": "Fun with Even Subarrays", "tags": ["dp", "greedy"], "problem_rating": "1100", "solved_by": "x19845"},
{"url": "https://codeforces.com//problemset/problem/1631/A", "name": "Min Max Swap", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x28887"},
{"url": "https://codeforces.com//problemset/problem/1630/F", "name": "Making It Bipartite", "tags": ["flows", "graph matchings", "graphs", "number theory"], "problem_rating": "3400", "solved_by": "x534"},
{"url": "https://codeforces.com//problemset/problem/1630/E", "name": "Expected Components", "tags": ["combinatorics", "math", "number theory", "probabilities"], "problem_rating": "2900", "solved_by": "x432"},
{"url": "https://codeforces.com//problemset/problem/1630/D", "name": "Flipping Range", "tags": ["constructive algorithms", "dp", "greedy", "number theory"], "problem_rating": "2400", "solved_by": "x1563"},
{"url": "https://codeforces.com//problemset/problem/1630/C", "name": "Paint the Middle", "tags": ["dp", "greedy", "sortings", "two pointers"], "problem_rating": "2200", "solved_by": "x2897"},
{"url": "https://codeforces.com//problemset/problem/1630/B", "name": "Range and Partition", "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "two pointers"], "problem_rating": "1800", "solved_by": "x5642"},
{"url": "https://codeforces.com//problemset/problem/1630/A", "name": "And Matching", "tags": ["bitmasks", "constructive algorithms"], "problem_rating": "1500", "solved_by": "x14332"},
{"url": "https://codeforces.com//problemset/problem/1629/B", "name": "GCD Arrays", "tags": ["greedy", "math", "number theory"], "problem_rating": "800", "solved_by": "x23202"},
{"url": "https://codeforces.com//problemset/problem/1629/A", "name": "Download More RAM", "tags": ["brute force", "greedy", "sortings"], "problem_rating": "800", "solved_by": "x28803"},
{"url": "https://codeforces.com//problemset/problem/1628/F", "name": "Spaceship Crisis Management", "tags": ["binary search", "data structures", "geometry", "sortings"], "problem_rating": "3500", "solved_by": "x86"},
{"url": "https://codeforces.com//problemset/problem/1628/E", "name": "Groceries in Meteor Town", "tags": ["binary search", "data structures", "dsu", "trees"], "problem_rating": "3100", "solved_by": "x853"},
{"url": "https://codeforces.com//problemset/problem/1628/D2", "name": "Game on Sum (Hard Version)", "tags": ["combinatorics", "dp", "games", "math"], "problem_rating": "2400", "solved_by": "x2020"},
{"url": "https://codeforces.com//problemset/problem/1628/D1", "name": "Game on Sum (Easy Version)", "tags": ["combinatorics", "dp", "games", "math"], "problem_rating": "2100", "solved_by": "x3076"},
{"url": "https://codeforces.com//problemset/problem/1628/C", "name": "Grid Xor", "tags": ["constructive algorithms", "greedy", "implementation", "interactive", "math"], "problem_rating": "2300", "solved_by": "x3126"},
{"url": "https://codeforces.com//problemset/problem/1628/B", "name": "Peculiar Movie Preferences", "tags": ["greedy", "strings"], "problem_rating": "1700", "solved_by": "x11386"},
{"url": "https://codeforces.com//problemset/problem/1628/A", "name": "Meximum Array", "tags": ["binary search", "constructive algorithms", "greedy", "implementation", "math", "two pointers"], "problem_rating": "1400", "solved_by": "x15416"},
{"url": "https://codeforces.com//problemset/problem/1627/F", "name": "Not Splitting", "tags": ["geometry", "graphs", "greedy", "implementation", "shortest paths"], "problem_rating": "2700", "solved_by": "x561"},
{"url": "https://codeforces.com//problemset/problem/1627/E", "name": "Not Escaping", "tags": ["data structures", "dp", "implementation", "shortest paths", "two pointers"], "problem_rating": "2200", "solved_by": "x2296"},
{"url": "https://codeforces.com//problemset/problem/1627/D", "name": "Not Adding", "tags": ["brute force", "dp", "math", "number theory"], "problem_rating": "1900", "solved_by": "x8056"},
{"url": "https://codeforces.com//problemset/problem/1627/C", "name": "Not Assigning", "tags": ["constructive algorithms", "dfs and similar", "number theory", "trees"], "problem_rating": "1400", "solved_by": "x14282"},
{"url": "https://codeforces.com//problemset/problem/1627/B", "name": "Not Sitting", "tags": ["games", "greedy", "sortings"], "problem_rating": "1300", "solved_by": "x16446"},
{"url": "https://codeforces.com//problemset/problem/1627/A", "name": "Not Shading", "tags": ["constructive algorithms", "implementation"], "problem_rating": "800", "solved_by": "x23910"},
{"url": "https://codeforces.com//problemset/problem/1626/F", "name": "A Random Code Problem", "tags": ["combinatorics", "dp", "math", "number theory", "probabilities"], "problem_rating": "2800", "solved_by": "x723"},
{"url": "https://codeforces.com//problemset/problem/1626/E", "name": "Black and White Tree", "tags": ["dfs and similar", "greedy", "trees"], "problem_rating": "2400", "solved_by": "x1542"},
{"url": "https://codeforces.com//problemset/problem/1626/D", "name": "Martial Arts Tournament", "tags": ["binary search", "brute force", "greedy", "math"], "problem_rating": "2100", "solved_by": "x3849"},
{"url": "https://codeforces.com//problemset/problem/1626/C", "name": "Monsters And Spells", "tags": ["binary search", "data structures", "dp", "greedy", "implementation", "math", "two pointers"], "problem_rating": "1700", "solved_by": "x10775"},
{"url": "https://codeforces.com//problemset/problem/1626/B", "name": "Minor Reduction", "tags": ["greedy", "strings"], "problem_rating": "1100", "solved_by": "x22592"},
{"url": "https://codeforces.com//problemset/problem/1626/A", "name": "Equidistant Letters", "tags": ["constructive algorithms", "sortings"], "problem_rating": "800", "solved_by": "x28584"},
{"url": "https://codeforces.com//problemset/problem/1625/E2", "name": "Cats on the Upgrade (hard version)", "tags": ["binary search", "data structures", "dfs and similar", "graphs", "trees"], "problem_rating": "2800", "solved_by": "x586"},
{"url": "https://codeforces.com//problemset/problem/1625/E1", "name": "Cats on the Upgrade (easy version)", "tags": ["brute force", "data structures", "dfs and similar", "divide and conquer", "dp", "graphs", "trees"], "problem_rating": "2500", "solved_by": "x1018"},
{"url": "https://codeforces.com//problemset/problem/1625/D", "name": "Binary Spiders", "tags": ["bitmasks", "data structures", "implementation", "math", "sortings", "trees"], "problem_rating": "2300", "solved_by": "x2014"},
{"url": "https://codeforces.com//problemset/problem/1625/C", "name": "Road Optimization", "tags": ["dp"], "problem_rating": "1700", "solved_by": "x10389"},
{"url": "https://codeforces.com//problemset/problem/1625/B", "name": "Elementary Particles", "tags": ["brute force", "greedy", "sortings"], "problem_rating": "1100", "solved_by": "x15992"},
{"url": "https://codeforces.com//problemset/problem/1625/A", "name": "Ancient Civilization", "tags": ["bitmasks", "greedy", "math"], "problem_rating": "800", "solved_by": "x17093"},
{"url": "https://codeforces.com//problemset/problem/1624/G", "name": "MinOr Tree", "tags": ["bitmasks", "dfs and similar", "dsu", "graphs", "greedy"], "problem_rating": "1900", "solved_by": "x5766"},
{"url": "https://codeforces.com//problemset/problem/1624/F", "name": "Interacdive Problem", "tags": ["binary search", "constructive algorithms", "interactive"], "problem_rating": "2000", "solved_by": "x3238"},
{"url": "https://codeforces.com//problemset/problem/1624/E", "name": "Masha-forgetful", "tags": ["brute force", "constructive algorithms", "dp", "hashing", "implementation", "strings"], "problem_rating": "2000", "solved_by": "x4027"},
{"url": "https://codeforces.com//problemset/problem/1624/D", "name": "Palindromes Coloring", "tags": ["binary search", "greedy", "sortings", "strings"], "problem_rating": "1400", "solved_by": "x16633"},
{"url": "https://codeforces.com//problemset/problem/1624/C", "name": "Division by Two and Permutation", "tags": ["constructive algorithms", "flows", "graph matchings", "greedy", "math"], "problem_rating": "1100", "solved_by": "x24528"},
{"url": "https://codeforces.com//problemset/problem/1624/B", "name": "Make AP", "tags": ["implementation", "math"], "problem_rating": "900", "solved_by": "x35513"},
{"url": "https://codeforces.com//problemset/problem/1624/A", "name": "Plus One on the Subset", "tags": ["math"], "problem_rating": "800", "solved_by": "x50906"},
{"url": "https://codeforces.com//problemset/problem/1623/E", "name": "Middle Duplication", "tags": ["data structures", "dfs and similar", "greedy", "strings", "trees"], "problem_rating": "2500", "solved_by": "x1086"},
{"url": "https://codeforces.com//problemset/problem/1623/D", "name": "Robot Cleaner Revisit", "tags": ["implementation", "math", "probabilities"], "problem_rating": "2300", "solved_by": "x1358"},
{"url": "https://codeforces.com//problemset/problem/1623/C", "name": "Balanced Stone Heaps", "tags": ["binary search", "greedy"], "problem_rating": "1600", "solved_by": "x11644"},
{"url": "https://codeforces.com//problemset/problem/1623/B", "name": "Game on Ranges", "tags": ["brute force", "dfs and similar", "implementation", "sortings"], "problem_rating": "1100", "solved_by": "x14000"},
{"url": "https://codeforces.com//problemset/problem/1623/A", "name": "Robot Cleaner", "tags": ["brute force", "implementation", "math"], "problem_rating": "800", "solved_by": "x19973"},
{"url": "https://codeforces.com//problemset/problem/1622/F", "name": "Quadratic Set", "tags": ["constructive algorithms", "hashing", "math", "number theory"], "problem_rating": "2900", "solved_by": "x609"},
{"url": "https://codeforces.com//problemset/problem/1622/E", "name": "Math Test", "tags": ["bitmasks", "brute force", "greedy"], "problem_rating": "2200", "solved_by": "x1868"},
{"url": "https://codeforces.com//problemset/problem/1622/D", "name": "Shuffle", "tags": ["combinatorics", "math", "two pointers"], "problem_rating": "2000", "solved_by": "x3950"},
{"url": "https://codeforces.com//problemset/problem/1622/C", "name": "Set or Decrease", "tags": ["binary search", "brute force", "greedy", "sortings"], "problem_rating": "1600", "solved_by": "x12703"},
{"url": "https://codeforces.com//problemset/problem/1622/B", "name": "Berland Music", "tags": ["data structures", "greedy", "math", "sortings"], "problem_rating": "1000", "solved_by": "x20758"},
{"url": "https://codeforces.com//problemset/problem/1622/A", "name": "Construct a Rectangle", "tags": ["geometry", "math"], "problem_rating": "800", "solved_by": "x29781"},
{"url": "https://codeforces.com//problemset/problem/1621/I", "name": "Two Sequences", "tags": ["data structures", "hashing", "string suffix structures"], "problem_rating": "3500", "solved_by": "x112"},
{"url": "https://codeforces.com//problemset/problem/1621/H", "name": "Trains and Airplanes", "tags": ["dfs and similar", "graphs", "shortest paths", "trees"], "problem_rating": "3500", "solved_by": "x175"},
{"url": "https://codeforces.com//problemset/problem/1621/G", "name": "Weighted Increasing Subsequences", "tags": ["data structures", "dp", "math"], "problem_rating": "3200", "solved_by": "x637"},
{"url": "https://codeforces.com//problemset/problem/1621/F", "name": "Strange Instructions", "tags": ["data structures", "greedy", "implementation"], "problem_rating": "2700", "solved_by": "x545"},
{"url": "https://codeforces.com//problemset/problem/1621/E", "name": "New School", "tags": ["binary search", "data structures", "dp", "greedy", "implementation", "sortings"], "problem_rating": "2300", "solved_by": "x1740"},
{"url": "https://codeforces.com//problemset/problem/1621/D", "name": "The Winter Hike", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "2100", "solved_by": "x4005"},
{"url": "https://codeforces.com//problemset/problem/1621/C", "name": "Hidden Permutations", "tags": ["dfs and similar", "interactive", "math"], "problem_rating": "1700", "solved_by": "x6820"},
{"url": "https://codeforces.com//problemset/problem/1621/B", "name": "Integers Shop", "tags": ["data structures", "greedy", "implementation"], "problem_rating": "1500", "solved_by": "x13261"},
{"url": "https://codeforces.com//problemset/problem/1621/A", "name": "Stable Arrangement of Rooks", "tags": ["constructive algorithms"], "problem_rating": "800", "solved_by": "x23673"},
{"url": "https://codeforces.com//problemset/problem/1620/G", "name": "Subsequences Galore", "tags": ["bitmasks", "combinatorics", "dp"], "problem_rating": "2400", "solved_by": "x874"},
{"url": "https://codeforces.com//problemset/problem/1620/F", "name": "Bipartite Array", "tags": ["dp", "greedy"], "problem_rating": "2800", "solved_by": "x595"},
{"url": "https://codeforces.com//problemset/problem/1620/E", "name": "Replace the Numbers", "tags": ["constructive algorithms", "data structures", "dsu", "implementation"], "problem_rating": "1900", "solved_by": "x8033"},
{"url": "https://codeforces.com//problemset/problem/1620/D", "name": "Exact Change", "tags": ["brute force", "constructive algorithms", "greedy"], "problem_rating": "2000", "solved_by": "x4111"},
{"url": "https://codeforces.com//problemset/problem/1620/C", "name": "BA-String", "tags": ["brute force", "dp", "greedy", "implementation", "math"], "problem_rating": "1800", "solved_by": "x6472"},
{"url": "https://codeforces.com//problemset/problem/1620/B", "name": "Triangles on a Rectangle", "tags": ["geometry", "greedy", "math"], "problem_rating": "1000", "solved_by": "x20374"},
{"url": "https://codeforces.com//problemset/problem/1620/A", "name": "Equal or Not Equal", "tags": ["constructive algorithms", "dsu", "implementation"], "problem_rating": "800", "solved_by": "x21411"},
{"url": "https://codeforces.com//problemset/problem/1619/H", "name": "Permutation and Queries", "tags": ["brute force", "data structures", "divide and conquer", "two pointers"], "problem_rating": "2400", "solved_by": "x1110"},
{"url": "https://codeforces.com//problemset/problem/1619/G", "name": "Unusual Minesweeper", "tags": ["binary search", "dfs and similar", "dsu", "greedy", "sortings"], "problem_rating": "2000", "solved_by": "x2356"},
{"url": "https://codeforces.com//problemset/problem/1619/F", "name": "Let's Play the Hat?", "tags": ["brute force", "constructive algorithms", "greedy", "math"], "problem_rating": "2000", "solved_by": "x2067"},
{"url": "https://codeforces.com//problemset/problem/1619/E", "name": "MEX and Increments", "tags": ["constructive algorithms", "data structures", "dp", "greedy", "implementation", "math", "sortings"], "problem_rating": "1700", "solved_by": "x8994"},
{"url": "https://codeforces.com//problemset/problem/1619/D", "name": "New Year's Problem", "tags": ["binary search", "greedy", "sortings"], "problem_rating": "1800", "solved_by": "x7413"},
{"url": "https://codeforces.com//problemset/problem/1619/C", "name": "Wrong Addition", "tags": ["implementation"], "problem_rating": "1200", "solved_by": "x20618"},
{"url": "https://codeforces.com//problemset/problem/1619/B", "name": "Squares and Cubes", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x30504"},
{"url": "https://codeforces.com//problemset/problem/1619/A", "name": "Square String?", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x50041"},
{"url": "https://codeforces.com//problemset/problem/1618/G", "name": "Trader Problem", "tags": ["data structures", "dsu", "greedy", "sortings"], "problem_rating": "2200", "solved_by": "x1522"},
{"url": "https://codeforces.com//problemset/problem/1618/F", "name": "Reverse", "tags": ["bitmasks", "constructive algorithms", "dfs and similar", "implementation", "math", "strings"], "problem_rating": "2000", "solved_by": "x4145"},
{"url": "https://codeforces.com//problemset/problem/1618/E", "name": "Singers' Tour", "tags": ["constructive algorithms", "math"], "problem_rating": "1700", "solved_by": "x7071"},
{"url": "https://codeforces.com//problemset/problem/1618/D", "name": "Array and Operations", "tags": ["dp", "greedy", "math"], "problem_rating": "1300", "solved_by": "x18637"},
{"url": "https://codeforces.com//problemset/problem/1618/C", "name": "Paint the Array", "tags": ["math"], "problem_rating": "1100", "solved_by": "x22325"},
{"url": "https://codeforces.com//problemset/problem/1618/B", "name": "Missing Bigram", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x22468"},
{"url": "https://codeforces.com//problemset/problem/1618/A", "name": "Polycarp and Sums of Subsequences", "tags": ["math", "sortings"], "problem_rating": "800", "solved_by": "x32009"},
{"url": "https://codeforces.com//problemset/problem/1617/E", "name": "Christmas Chocolates", "tags": ["dfs and similar", "dp", "games", "graphs", "implementation", "math", "number theory", "shortest paths", "trees"], "problem_rating": "2700", "solved_by": "x851"},
{"url": "https://codeforces.com//problemset/problem/1617/D2", "name": "Too Many Impostors (hard version)", "tags": ["constructive algorithms", "implementation", "interactive", "math"], "problem_rating": "2400", "solved_by": "x1749"},
{"url": "https://codeforces.com//problemset/problem/1617/D1", "name": "Too Many Impostors (easy version)", "tags": ["constructive algorithms", "implementation", "interactive"], "problem_rating": "1800", "solved_by": "x4606"},
{"url": "https://codeforces.com//problemset/problem/1617/C", "name": "Paprika and Permutation", "tags": ["binary search", "greedy", "math", "sortings"], "problem_rating": "1300", "solved_by": "x14809"},
{"url": "https://codeforces.com//problemset/problem/1617/B", "name": "GCD Problem", "tags": ["brute force", "constructive algorithms", "math", "number theory"], "problem_rating": "900", "solved_by": "x22899"},
{"url": "https://codeforces.com//problemset/problem/1617/A", "name": "Forbidden Subsequence", "tags": ["constructive algorithms", "greedy", "sortings", "strings"], "problem_rating": "800", "solved_by": "x16193"},
{"url": "https://codeforces.com//problemset/problem/1616/H", "name": "Keep XOR Low", "tags": ["bitmasks", "combinatorics", "data structures", "divide and conquer", "dp", "math"], "problem_rating": "3000", "solved_by": "x833"},
{"url": "https://codeforces.com//problemset/problem/1616/G", "name": "Just Add an Edge", "tags": ["dfs and similar", "dp", "graphs"], "problem_rating": "3500", "solved_by": "x271"},
{"url": "https://codeforces.com//problemset/problem/1616/F", "name": "Tricolor Triangles", "tags": ["brute force", "graphs", "math", "matrices"], "problem_rating": "2900", "solved_by": "x587"},
{"url": "https://codeforces.com//problemset/problem/1616/E", "name": "Lexicographically Small Enough", "tags": ["brute force", "data structures", "greedy", "strings"], "problem_rating": "2200", "solved_by": "x2459"},
{"url": "https://codeforces.com//problemset/problem/1616/D", "name": "Keep the Average High", "tags": ["dp", "greedy", "math"], "problem_rating": "2000", "solved_by": "x4810"},
{"url": "https://codeforces.com//problemset/problem/1616/C", "name": "Representative Edges", "tags": ["brute force", "geometry", "implementation", "math"], "problem_rating": "1500", "solved_by": "x12116"},
{"url": "https://codeforces.com//problemset/problem/1616/B", "name": "Mirror in the String", "tags": ["greedy", "strings"], "problem_rating": "1100", "solved_by": "x19474"},
{"url": "https://codeforces.com//problemset/problem/1616/A", "name": "Integer Diversity", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x22564"},
{"url": "https://codeforces.com//problemset/problem/1615/H", "name": "Reindeer Games", "tags": ["binary search", "constructive algorithms", "data structures", "divide and conquer", "flows", "graphs", "shortest paths"], "problem_rating": "3000", "solved_by": "x322"},
{"url": "https://codeforces.com//problemset/problem/1615/G", "name": "Maximum Adjacent Pairs", "tags": ["constructive algorithms", "graph matchings"], "problem_rating": "3300", "solved_by": "x149"},
{"url": "https://codeforces.com//problemset/problem/1615/F", "name": "LEGOndary Grandmaster", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2800", "solved_by": "x849"},
{"url": "https://codeforces.com//problemset/problem/1615/E", "name": "Purple Crayon", "tags": ["data structures", "dfs and similar", "games", "graphs", "greedy", "math", "sortings", "trees"], "problem_rating": "2400", "solved_by": "x1423"},
{"url": "https://codeforces.com//problemset/problem/1615/D", "name": "X(or)-mas Tree", "tags": ["bitmasks", "dfs and similar", "dsu", "graphs", "trees"], "problem_rating": "2200", "solved_by": "x1861"},
{"url": "https://codeforces.com//problemset/problem/1615/C", "name": "Menorah", "tags": ["brute force", "graphs", "greedy", "math"], "problem_rating": "1600", "solved_by": "x8266"},
{"url": "https://codeforces.com//problemset/problem/1615/B", "name": "And It's Non-Zero", "tags": ["bitmasks", "greedy", "math"], "problem_rating": "1300", "solved_by": "x15575"},
{"url": "https://codeforces.com//problemset/problem/1615/A", "name": "Closing The Gap", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x20636"},
{"url": "https://codeforces.com//problemset/problem/1614/E", "name": "Divan and a Cottage", "tags": ["binary search", "data structures"], "problem_rating": "2600", "solved_by": "x815"},
{"url": "https://codeforces.com//problemset/problem/1614/D2", "name": "Divan and Kostomuksha (hard version)", "tags": ["dp", "number theory"], "problem_rating": "2300", "solved_by": "x2259"},
{"url": "https://codeforces.com//problemset/problem/1614/D1", "name": "Divan and Kostomuksha (easy version)", "tags": ["dp", "number theory"], "problem_rating": "2100", "solved_by": "x3777"},
{"url": "https://codeforces.com//problemset/problem/1614/C", "name": "Divan and bitwise operations", "tags": ["bitmasks", "combinatorics", "constructive algorithms", "dp", "math"], "problem_rating": "1500", "solved_by": "x10101"},
{"url": "https://codeforces.com//problemset/problem/1614/B", "name": "Divan and a New Project", "tags": ["constructive algorithms", "sortings"], "problem_rating": "1000", "solved_by": "x18532"},
{"url": "https://codeforces.com//problemset/problem/1614/A", "name": "Divan and a Store", "tags": ["brute force", "constructive algorithms", "greedy"], "problem_rating": "800", "solved_by": "x23157"},
{"url": "https://codeforces.com//problemset/problem/1613/F", "name": "Tree Coloring", "tags": ["combinatorics", "divide and conquer", "fft"], "problem_rating": "2600", "solved_by": "x675"},
{"url": "https://codeforces.com//problemset/problem/1613/E", "name": "Crazy Robot", "tags": ["dfs and similar", "graphs"], "problem_rating": "2000", "solved_by": "x5081"},
{"url": "https://codeforces.com//problemset/problem/1613/D", "name": "MEX Sequences", "tags": ["dp", "math"], "problem_rating": "1900", "solved_by": "x4517"},
{"url": "https://codeforces.com//problemset/problem/1613/C", "name": "Poisoned Dagger", "tags": ["binary search"], "problem_rating": "1200", "solved_by": "x23516"},
{"url": "https://codeforces.com//problemset/problem/1613/B", "name": "Absent Remainder", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "1000", "solved_by": "x21430"},
{"url": "https://codeforces.com//problemset/problem/1613/A", "name": "Long Comparison", "tags": ["implementation", "math"], "problem_rating": "900", "solved_by": "x24243"},
{"url": "https://codeforces.com//problemset/problem/1612/G", "name": "Max Sum Array", "tags": ["combinatorics", "constructive algorithms", "greedy", "sortings"], "problem_rating": "2500", "solved_by": "x825"},
{"url": "https://codeforces.com//problemset/problem/1612/F", "name": "Armor and Weapons", "tags": ["brute force", "dp", "greedy", "shortest paths"], "problem_rating": "2800", "solved_by": "x587"},
{"url": "https://codeforces.com//problemset/problem/1612/E", "name": "Messages", "tags": ["brute force", "dp", "greedy", "probabilities", "sortings"], "problem_rating": "2000", "solved_by": "x2440"},
{"url": "https://codeforces.com//problemset/problem/1612/D", "name": "X-Magic Pair", "tags": ["math", "number theory"], "problem_rating": "1600", "solved_by": "x8989"},
{"url": "https://codeforces.com//problemset/problem/1612/C", "name": "Chat Ban", "tags": ["binary search", "math"], "problem_rating": "1300", "solved_by": "x16555"},
{"url": "https://codeforces.com//problemset/problem/1612/B", "name": "Special Permutation", "tags": ["constructive algorithms", "greedy"], "problem_rating": "900", "solved_by": "x17036"},
{"url": "https://codeforces.com//problemset/problem/1612/A", "name": "Distance", "tags": ["brute force", "constructive algorithms"], "problem_rating": "800", "solved_by": "x17582"},
{"url": "https://codeforces.com//problemset/problem/1611/G", "name": "Robot and Candies", "tags": ["data structures", "graph matchings", "greedy"], "problem_rating": "2500", "solved_by": "x633"},
{"url": "https://codeforces.com//problemset/problem/1611/F", "name": "ATM and Students", "tags": ["binary search", "data structures", "two pointers"], "problem_rating": "1800", "solved_by": "x6325"},
{"url": "https://codeforces.com//problemset/problem/1611/E2", "name": "Escape The Maze (hard version)", "tags": ["dfs and similar", "dp", "greedy", "shortest paths", "trees"], "problem_rating": "1900", "solved_by": "x3734"},
{"url": "https://codeforces.com//problemset/problem/1611/E1", "name": "Escape The Maze (easy version)", "tags": ["dfs and similar", "greedy", "shortest paths", "trees", "two pointers"], "problem_rating": "1700", "solved_by": "x7126"},
{"url": "https://codeforces.com//problemset/problem/1611/D", "name": "Weights Assignment For Tree Edges", "tags": ["constructive algorithms", "trees"], "problem_rating": "1500", "solved_by": "x9702"},
{"url": "https://codeforces.com//problemset/problem/1611/C", "name": "Polycarp Recovers the Permutation", "tags": ["constructive algorithms"], "problem_rating": "1000", "solved_by": "x18174"},
{"url": "https://codeforces.com//problemset/problem/1611/B", "name": "Team Composition: Programmers and Mathematicians", "tags": ["binary search", "constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x29100"},
{"url": "https://codeforces.com//problemset/problem/1611/A", "name": "Make Even", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x31107"},
{"url": "https://codeforces.com//problemset/problem/1610/I", "name": "Mashtali vs AtCoder", "tags": ["games", "trees"], "problem_rating": "3100", "solved_by": "x278"},
{"url": "https://codeforces.com//problemset/problem/1610/H", "name": "Squid Game", "tags": ["data structures", "dfs and similar", "greedy", "trees"], "problem_rating": "3100", "solved_by": "x475"},
{"url": "https://codeforces.com//problemset/problem/1610/G", "name": "AmShZ Wins a Bet", "tags": ["data structures", "greedy", "hashing"], "problem_rating": "3300", "solved_by": "x432"},
{"url": "https://codeforces.com//problemset/problem/1610/F", "name": "Mashtali: a Space Oddysey", "tags": ["constructive algorithms", "dfs and similar", "graphs"], "problem_rating": "3000", "solved_by": "x515"},
{"url": "https://codeforces.com//problemset/problem/1610/E", "name": "AmShZ and G.O.A.T.", "tags": ["binary search", "brute force", "greedy", "implementation", "math"], "problem_rating": "2300", "solved_by": "x1647"},
{"url": "https://codeforces.com//problemset/problem/1610/D", "name": "Not Quite Lee", "tags": ["combinatorics", "dp", "math", "number theory"], "problem_rating": "2000", "solved_by": "x2656"},
{"url": "https://codeforces.com//problemset/problem/1610/C", "name": "Keshi Is Throwing a Party", "tags": ["binary search", "greedy"], "problem_rating": "1600", "solved_by": "x11129"},
{"url": "https://codeforces.com//problemset/problem/1610/B", "name": "Kalindrome Array", "tags": ["greedy", "two pointers"], "problem_rating": "1100", "solved_by": "x15374"},
{"url": "https://codeforces.com//problemset/problem/1610/A", "name": "Anti Light's Cell Guessing", "tags": ["math"], "problem_rating": "900", "solved_by": "x15967"},
{"url": "https://codeforces.com//problemset/problem/1609/H", "name": "Pushing Robots", "tags": [], "problem_rating": "3500", "solved_by": "x90"},
{"url": "https://codeforces.com//problemset/problem/1609/G", "name": "A Stroll Around the Matrix", "tags": ["data structures", "greedy", "math"], "problem_rating": "3000", "solved_by": "x372"},
{"url": "https://codeforces.com//problemset/problem/1609/F", "name": "Interesting Sections", "tags": ["data structures", "divide and conquer", "meet-in-the-middle", "two pointers"], "problem_rating": "2800", "solved_by": "x743"},
{"url": "https://codeforces.com//problemset/problem/1609/E", "name": "William The Oblivious", "tags": ["bitmasks", "data structures", "dp", "matrices"], "problem_rating": "2400", "solved_by": "x1974"},
{"url": "https://codeforces.com//problemset/problem/1609/D", "name": "Social Network", "tags": ["dsu", "graphs", "greedy", "implementation", "trees"], "problem_rating": "1600", "solved_by": "x7175"},
{"url": "https://codeforces.com//problemset/problem/1609/C", "name": "Complex Market Analysis", "tags": ["binary search", "dp", "implementation", "number theory", "schedules", "two pointers"], "problem_rating": "1400", "solved_by": "x9626"},
{"url": "https://codeforces.com//problemset/problem/1609/B", "name": "William the Vigilant", "tags": ["implementation", "strings"], "problem_rating": "1100", "solved_by": "x11622"},
{"url": "https://codeforces.com//problemset/problem/1609/A", "name": "Divide and Multiply", "tags": ["greedy", "implementation", "math", "number theory"], "problem_rating": "900", "solved_by": "x16913"},
{"url": "https://codeforces.com//problemset/problem/1608/G", "name": "Alphabetic Tree", "tags": ["binary search", "data structures", "dfs and similar", "hashing", "string suffix structures", "strings", "trees"], "problem_rating": "3500", "solved_by": "x152"},
{"url": "https://codeforces.com//problemset/problem/1608/F", "name": "MEX counting", "tags": ["combinatorics", "dp", "implementation"], "problem_rating": "3200", "solved_by": "x570"},
{"url": "https://codeforces.com//problemset/problem/1608/E", "name": "The Cells on the Paper", "tags": ["binary search", "implementation", "sortings"], "problem_rating": "2800", "solved_by": "x431"},
{"url": "https://codeforces.com//problemset/problem/1608/D", "name": "Dominoes", "tags": ["combinatorics", "fft", "graphs", "math", "number theory"], "problem_rating": "2400", "solved_by": "x1366"},
{"url": "https://codeforces.com//problemset/problem/1608/C", "name": "Game Master", "tags": ["data structures", "dfs and similar", "dp", "graphs", "greedy", "two pointers"], "problem_rating": "1700", "solved_by": "x6546"},
{"url": "https://codeforces.com//problemset/problem/1608/B", "name": "Build the Permutation", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1200", "solved_by": "x11577"},
{"url": "https://codeforces.com//problemset/problem/1608/A", "name": "Find Array", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x18917"},
{"url": "https://codeforces.com//problemset/problem/1607/H", "name": "Banquet Preparations 2", "tags": ["greedy", "sortings", "two pointers"], "problem_rating": "2200", "solved_by": "x1219"},
{"url": "https://codeforces.com//problemset/problem/1607/G", "name": "Banquet Preparations 1", "tags": ["greedy"], "problem_rating": "2200", "solved_by": "x1540"},
{"url": "https://codeforces.com//problemset/problem/1607/F", "name": "Robot on the Board 2", "tags": ["brute force", "dfs and similar", "graphs", "implementation"], "problem_rating": "2300", "solved_by": "x1910"},
{"url": "https://codeforces.com//problemset/problem/1607/E", "name": "Robot on the Board 1", "tags": ["implementation"], "problem_rating": "1600", "solved_by": "x9201"},
{"url": "https://codeforces.com//problemset/problem/1607/D", "name": "Blue-Red Permutation", "tags": ["greedy", "math", "sortings"], "problem_rating": "1300", "solved_by": "x16625"},
{"url": "https://codeforces.com//problemset/problem/1607/C", "name": "Minimum Extraction", "tags": ["brute force", "sortings"], "problem_rating": "1000", "solved_by": "x24681"},
{"url": "https://codeforces.com//problemset/problem/1607/B", "name": "Odd Grasshopper", "tags": ["math"], "problem_rating": "900", "solved_by": "x25478"},
{"url": "https://codeforces.com//problemset/problem/1607/A", "name": "Linear Keyboard", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x36684"},
{"url": "https://codeforces.com//problemset/problem/1606/F", "name": "Tree Queries", "tags": ["brute force", "dp", "trees"], "problem_rating": "2800", "solved_by": "x525"},
{"url": "https://codeforces.com//problemset/problem/1606/E", "name": "Arena", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2100", "solved_by": "x3437"},
{"url": "https://codeforces.com//problemset/problem/1606/D", "name": "Red-Blue Matrix", "tags": ["brute force", "constructive algorithms", "implementation", "sortings"], "problem_rating": "2400", "solved_by": "x1416"},
{"url": "https://codeforces.com//problemset/problem/1606/C", "name": "Banknotes", "tags": ["greedy", "number theory"], "problem_rating": "1400", "solved_by": "x13974"},
{"url": "https://codeforces.com//problemset/problem/1606/B", "name": "Update Files", "tags": ["greedy", "implementation", "math"], "problem_rating": "1100", "solved_by": "x18514"},
{"url": "https://codeforces.com//problemset/problem/1606/A", "name": "AB Balance", "tags": ["strings"], "problem_rating": "900", "solved_by": "x23767"},
{"url": "https://codeforces.com//problemset/problem/1605/F", "name": "PalindORme", "tags": ["combinatorics", "dp"], "problem_rating": "2900", "solved_by": "x296"},
{"url": "https://codeforces.com//problemset/problem/1605/E", "name": "Array Equalizer", "tags": ["binary search", "greedy", "implementation", "math", "number theory", "sortings", "two pointers"], "problem_rating": "2400", "solved_by": "x1016"},
{"url": "https://codeforces.com//problemset/problem/1605/D", "name": "Treelabeling", "tags": ["bitmasks", "constructive algorithms", "dfs and similar", "games", "greedy", "implementation", "trees"], "problem_rating": "2100", "solved_by": "x2869"},
{"url": "https://codeforces.com//problemset/problem/1605/C", "name": "Dominant Character", "tags": ["brute force", "greedy", "implementation", "strings"], "problem_rating": "1400", "solved_by": "x16647"},
{"url": "https://codeforces.com//problemset/problem/1605/B", "name": "Reverse Sort", "tags": ["greedy", "sortings"], "problem_rating": "1000", "solved_by": "x17888"},
{"url": "https://codeforces.com//problemset/problem/1605/A", "name": "A.M. Deviation", "tags": ["math", "number theory"], "problem_rating": "800", "solved_by": "x20494"},
{"url": "https://codeforces.com//problemset/problem/1604/B", "name": "XOR Specia-LIS-t", "tags": [], "problem_rating": "1100", "solved_by": "x15560"},
{"url": "https://codeforces.com//problemset/problem/1604/A", "name": "Era", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x21307"},
{"url": "https://codeforces.com//problemset/problem/1603/F", "name": "October 18, 2017", "tags": ["combinatorics", "dp", "implementation", "math"], "problem_rating": "2700", "solved_by": "x271"},
{"url": "https://codeforces.com//problemset/problem/1603/E", "name": "A Perfect Problem", "tags": ["combinatorics", "dp", "math"], "problem_rating": "3200", "solved_by": "x412"},
{"url": "https://codeforces.com//problemset/problem/1603/D", "name": "Artistic Partition", "tags": ["divide and conquer", "dp", "number theory"], "problem_rating": "3000", "solved_by": "x649"},
{"url": "https://codeforces.com//problemset/problem/1603/C", "name": "Extreme Extension", "tags": ["dp", "greedy", "math", "number theory"], "problem_rating": "2300", "solved_by": "x2008"},
{"url": "https://codeforces.com//problemset/problem/1603/B", "name": "Moderate Modular Mode", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "1600", "solved_by": "x13297"},
{"url": "https://codeforces.com//problemset/problem/1603/A", "name": "Di-visible Confusion", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "1300", "solved_by": "x16404"},
{"url": "https://codeforces.com//problemset/problem/1602/B", "name": "Divine Array", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1100", "solved_by": "x13970"},
{"url": "https://codeforces.com//problemset/problem/1602/A", "name": "Two Subsequences", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x18887"},
{"url": "https://codeforces.com//problemset/problem/1601/F", "name": "Two Sorts", "tags": ["binary search", "dfs and similar", "math", "meet-in-the-middle"], "problem_rating": "3400", "solved_by": "x172"},
{"url": "https://codeforces.com//problemset/problem/1601/E", "name": "Phys Ed Online", "tags": ["data structures", "dp", "greedy"], "problem_rating": "2900", "solved_by": "x470"},
{"url": "https://codeforces.com//problemset/problem/1601/D", "name": "Difficult Mountain", "tags": ["data structures", "dp", "greedy", "sortings"], "problem_rating": "2700", "solved_by": "x1419"},
{"url": "https://codeforces.com//problemset/problem/1601/C", "name": "Optimal Insertion", "tags": ["data structures", "divide and conquer", "dp", "greedy", "sortings"], "problem_rating": "2300", "solved_by": "x1970"},
{"url": "https://codeforces.com//problemset/problem/1601/B", "name": "Frog Traveler", "tags": ["data structures", "dfs and similar", "dp", "graphs", "shortest paths", "two pointers"], "problem_rating": "1900", "solved_by": "x4879"},
{"url": "https://codeforces.com//problemset/problem/1601/A", "name": "Array Elimination", "tags": ["bitmasks", "greedy", "math", "number theory"], "problem_rating": "1300", "solved_by": "x13998"},
{"url": "https://codeforces.com//problemset/problem/1600/J", "name": "Robot Factory", "tags": ["bitmasks", "dfs and similar"], "problem_rating": "1400", "solved_by": "x3839"},
{"url": "https://codeforces.com//problemset/problem/1600/F", "name": "Party Organization", "tags": ["brute force", "math", "probabilities"], "problem_rating": "2300", "solved_by": "x468"},
{"url": "https://codeforces.com//problemset/problem/1600/E", "name": "Array Game", "tags": ["games", "greedy", "two pointers"], "problem_rating": "1900", "solved_by": "x1992"},
{"url": "https://codeforces.com//problemset/problem/1599/J", "name": "Bob's Beautiful Array", "tags": ["bitmasks", "brute force", "greedy"], "problem_rating": "2600", "solved_by": "x287"},
{"url": "https://codeforces.com//problemset/problem/1599/I", "name": "Desert", "tags": ["data structures", "graphs"], "problem_rating": "2700", "solved_by": "x114"},
{"url": "https://codeforces.com//problemset/problem/1599/H", "name": "Hidden Fortress", "tags": ["interactive", "math"], "problem_rating": "2100", "solved_by": "x1033"},
{"url": "https://codeforces.com//problemset/problem/1599/G", "name": "Shortest path", "tags": ["brute force", "geometry", "math", "shortest paths"], "problem_rating": "2700", "solved_by": "x364"},
{"url": "https://codeforces.com//problemset/problem/1599/F", "name": "Mars", "tags": ["hashing"], "problem_rating": "2700", "solved_by": "x311"},
{"url": "https://codeforces.com//problemset/problem/1599/E", "name": "Two Arrays", "tags": ["data structures", "matrices"], "problem_rating": "3200", "solved_by": "x67"},
{"url": "https://codeforces.com//problemset/problem/1599/D", "name": "Bubble Popping", "tags": [], "problem_rating": "3200", "solved_by": "x30"},
{"url": "https://codeforces.com//problemset/problem/1599/C", "name": "Bubble Strike", "tags": ["combinatorics", "math", "probabilities", "ternary search"], "problem_rating": "2000", "solved_by": "x1626"},
{"url": "https://codeforces.com//problemset/problem/1599/B", "name": "Restaurant Game", "tags": [], "problem_rating": "3100", "solved_by": "x137"},
{"url": "https://codeforces.com//problemset/problem/1599/A", "name": "Weights", "tags": ["constructive algorithms", "greedy", "two pointers"], "problem_rating": "2600", "solved_by": "x639"},
{"url": "https://codeforces.com//problemset/problem/1598/G", "name": "The Sum of Good Numbers", "tags": ["hashing", "math", "string suffix structures", "strings"], "problem_rating": "3200", "solved_by": "x328"},
{"url": "https://codeforces.com//problemset/problem/1598/F", "name": "RBS", "tags": ["binary search", "bitmasks", "brute force", "data structures", "dp"], "problem_rating": "2400", "solved_by": "x1398"},
{"url": "https://codeforces.com//problemset/problem/1598/E", "name": "Staircases", "tags": ["brute force", "combinatorics", "data structures", "dfs and similar", "dp", "implementation", "math"], "problem_rating": "2100", "solved_by": "x2270"},
{"url": "https://codeforces.com//problemset/problem/1598/D", "name": "Training Session", "tags": ["combinatorics", "data structures", "geometry", "implementation", "math"], "problem_rating": "1700", "solved_by": "x8512"},
{"url": "https://codeforces.com//problemset/problem/1598/C", "name": "Delete Two Elements", "tags": ["data structures", "dp", "implementation", "math", "two pointers"], "problem_rating": "1200", "solved_by": "x20432"},
{"url": "https://codeforces.com//problemset/problem/1598/B", "name": "Groups", "tags": ["brute force", "implementation"], "problem_rating": "1000", "solved_by": "x15879"},
{"url": "https://codeforces.com//problemset/problem/1598/A", "name": "Computer Game", "tags": ["brute force", "dfs and similar", "dp", "implementation"], "problem_rating": "800", "solved_by": "x23045"},
{"url": "https://codeforces.com//problemset/problem/1594/F", "name": "Ideal Farm", "tags": ["constructive algorithms", "math"], "problem_rating": "2400", "solved_by": "x1282"},
{"url": "https://codeforces.com//problemset/problem/1594/E2", "name": "Rubik's Cube Coloring (hard version)", "tags": ["brute force", "dp", "implementation", "math", "trees"], "problem_rating": "2300", "solved_by": "x1464"},
{"url": "https://codeforces.com//problemset/problem/1594/E1", "name": "Rubik's Cube Coloring (easy version)", "tags": ["combinatorics", "math"], "problem_rating": "1300", "solved_by": "x10988"},
{"url": "https://codeforces.com//problemset/problem/1594/D", "name": "The Number of Imposters", "tags": ["constructive algorithms", "dfs and similar", "dp", "dsu", "graphs"], "problem_rating": "1700", "solved_by": "x7300"},
{"url": "https://codeforces.com//problemset/problem/1594/C", "name": "Make Them Equal", "tags": ["brute force", "greedy", "math", "strings"], "problem_rating": "1200", "solved_by": "x18713"},
{"url": "https://codeforces.com//problemset/problem/1594/B", "name": "Special Numbers", "tags": ["bitmasks", "math"], "problem_rating": "1100", "solved_by": "x19579"},
{"url": "https://codeforces.com//problemset/problem/1594/A", "name": "Consecutive Sum Riddle", "tags": ["math"], "problem_rating": "800", "solved_by": "x24170"},
{"url": "https://codeforces.com//problemset/problem/1593/G", "name": "Changing Brackets", "tags": ["constructive algorithms", "data structures", "dp", "greedy"], "problem_rating": "2200", "solved_by": "x1662"},
{"url": "https://codeforces.com//problemset/problem/1593/F", "name": "Red-Black Number", "tags": ["dfs and similar", "dp", "implementation", "math", "meet-in-the-middle"], "problem_rating": "2100", "solved_by": "x2398"},
{"url": "https://codeforces.com//problemset/problem/1593/E", "name": "Gardener and Tree", "tags": ["brute force", "data structures", "dfs and similar", "greedy", "implementation", "trees"], "problem_rating": "1600", "solved_by": "x12058"},
{"url": "https://codeforces.com//problemset/problem/1593/D2", "name": "Half of Same", "tags": ["brute force", "math", "number theory"], "problem_rating": "1900", "solved_by": "x4889"},
{"url": "https://codeforces.com//problemset/problem/1593/D1", "name": "All are Same", "tags": ["math", "number theory"], "problem_rating": "1100", "solved_by": "x19866"},
{"url": "https://codeforces.com//problemset/problem/1593/C", "name": "Save More Mice", "tags": ["binary search", "greedy", "greedy"], "problem_rating": "1000", "solved_by": "x24462"},
{"url": "https://codeforces.com//problemset/problem/1593/B", "name": "Make it Divisible by 25", "tags": ["dfs and similar", "dp", "greedy", "math", "math"], "problem_rating": "900", "solved_by": "x26154"},
{"url": "https://codeforces.com//problemset/problem/1593/A", "name": "Elections", "tags": ["math"], "problem_rating": "800", "solved_by": "x36191"},
{"url": "https://codeforces.com//problemset/problem/1592/F2", "name": "Alice and Recoloring 2", "tags": ["constructive algorithms", "flows", "graph matchings", "greedy"], "problem_rating": "2800", "solved_by": "x694"},
{"url": "https://codeforces.com//problemset/problem/1592/F1", "name": "Alice and Recoloring 1", "tags": ["constructive algorithms", "greedy"], "problem_rating": "2600", "solved_by": "x804"},
{"url": "https://codeforces.com//problemset/problem/1592/E", "name": "Bored Bakry", "tags": ["bitmasks", "greedy", "math", "two pointers"], "problem_rating": "2400", "solved_by": "x1569"},
{"url": "https://codeforces.com//problemset/problem/1592/D", "name": "Hemose in ICPC ?", "tags": ["binary search", "dfs and similar", "implementation", "interactive", "math", "number theory", "trees"], "problem_rating": "2300", "solved_by": "x2197"},
{"url": "https://codeforces.com//problemset/problem/1592/C", "name": "Bakry and Partitioning", "tags": ["bitmasks", "constructive algorithms", "dfs and similar", "dp", "graphs", "trees"], "problem_rating": "1700", "solved_by": "x7795"},
{"url": "https://codeforces.com//problemset/problem/1592/B", "name": "Hemose Shopping", "tags": ["constructive algorithms", "dsu", "math", "sortings"], "problem_rating": "1200", "solved_by": "x15755"},
{"url": "https://codeforces.com//problemset/problem/1592/A", "name": "Gamer Hemose", "tags": ["binary search", "greedy", "math", "sortings"], "problem_rating": "800", "solved_by": "x21888"},
{"url": "https://codeforces.com//problemset/problem/1588/F", "name": "Jumping Through the Array", "tags": ["binary search", "data structures", "graphs", "two pointers"], "problem_rating": "3500", "solved_by": "x275"},
{"url": "https://codeforces.com//problemset/problem/1586/I", "name": "Omkar and Mosaic", "tags": ["combinatorics", "constructive algorithms", "math"], "problem_rating": "3500", "solved_by": "x191"},
{"url": "https://codeforces.com//problemset/problem/1585/G", "name": "Poachers", "tags": ["dp", "games", "graphs", "trees"], "problem_rating": "2500", "solved_by": "x175"},
{"url": "https://codeforces.com//problemset/problem/1585/F", "name": "Non-equal Neighbours", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2400", "solved_by": "x1185"},
{"url": "https://codeforces.com//problemset/problem/1585/E", "name": "Frequency Queries", "tags": ["data structures", "dfs and similar", "trees"], "problem_rating": "2400", "solved_by": "x1037"},
{"url": "https://codeforces.com//problemset/problem/1585/D", "name": "Yet Another Sorting Problem", "tags": ["data structures", "math"], "problem_rating": "1900", "solved_by": "x3779"},
{"url": "https://codeforces.com//problemset/problem/1585/C", "name": "Minimize Distance", "tags": ["greedy"], "problem_rating": "1300", "solved_by": "x11856"},
{"url": "https://codeforces.com//problemset/problem/1585/B", "name": "Array Eversion", "tags": ["greedy"], "problem_rating": "900", "solved_by": "x14940"},
{"url": "https://codeforces.com//problemset/problem/1585/A", "name": "Life of a Flower", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x17642"},
{"url": "https://codeforces.com//problemset/problem/1584/G", "name": "Eligible Segments", "tags": ["geometry"], "problem_rating": "3200", "solved_by": "x205"},
{"url": "https://codeforces.com//problemset/problem/1584/F", "name": "Strange LCS", "tags": ["bitmasks", "dp", "graphs", "greedy", "strings"], "problem_rating": "2600", "solved_by": "x904"},
{"url": "https://codeforces.com//problemset/problem/1584/E", "name": "Game with Stones", "tags": ["binary search", "data structures", "games", "greedy"], "problem_rating": "2300", "solved_by": "x1248"},
{"url": "https://codeforces.com//problemset/problem/1584/D", "name": "Guess the Permutation", "tags": ["binary search", "combinatorics", "interactive", "math"], "problem_rating": "2000", "solved_by": "x3610"},
{"url": "https://codeforces.com//problemset/problem/1584/C", "name": "Two Arrays", "tags": ["greedy", "math", "sortings"], "problem_rating": "900", "solved_by": "x16178"},
{"url": "https://codeforces.com//problemset/problem/1584/B", "name": "Coloring Rectangles", "tags": ["greedy", "math"], "problem_rating": "1000", "solved_by": "x13235"},
{"url": "https://codeforces.com//problemset/problem/1584/A", "name": "Mathematical Addition", "tags": ["math"], "problem_rating": "800", "solved_by": "x14796"},
{"url": "https://codeforces.com//problemset/problem/1583/H", "name": "Omkar and Tours", "tags": ["data structures", "divide and conquer", "sortings", "trees"], "problem_rating": "3300", "solved_by": "x319"},
{"url": "https://codeforces.com//problemset/problem/1583/G", "name": "Omkar and Time Travel", "tags": ["data structures", "math"], "problem_rating": "3000", "solved_by": "x432"},
{"url": "https://codeforces.com//problemset/problem/1583/F", "name": "Defender of Childhood Dreams", "tags": ["bitmasks", "constructive algorithms", "divide and conquer"], "problem_rating": "2500", "solved_by": "x1249"},
{"url": "https://codeforces.com//problemset/problem/1583/E", "name": "Moment of Bloom", "tags": ["constructive algorithms", "dfs and similar", "graph matchings", "graphs", "greedy", "trees"], "problem_rating": "2200", "solved_by": "x2179"},
{"url": "https://codeforces.com//problemset/problem/1583/D", "name": "Omkar and the Meaning of Life", "tags": ["constructive algorithms", "greedy", "interactive"], "problem_rating": "1800", "solved_by": "x5317"},
{"url": "https://codeforces.com//problemset/problem/1583/C", "name": "Omkar and Determination", "tags": ["data structures", "dp"], "problem_rating": "1700", "solved_by": "x6866"},
{"url": "https://codeforces.com//problemset/problem/1583/B", "name": "Omkar and Heavenly Tree", "tags": ["constructive algorithms", "trees"], "problem_rating": "1200", "solved_by": "x12092"},
{"url": "https://codeforces.com//problemset/problem/1583/A", "name": "Windblume Ode", "tags": ["math", "number theory"], "problem_rating": "800", "solved_by": "x13665"},
{"url": "https://codeforces.com//problemset/problem/1582/G", "name": "Kuzya and Homework", "tags": ["data structures", "number theory"], "problem_rating": "2600", "solved_by": "x574"},
{"url": "https://codeforces.com//problemset/problem/1582/F2", "name": "Korney Korneevich and XOR (hard version)", "tags": ["binary search", "brute force", "dp", "greedy", "two pointers"], "problem_rating": "2400", "solved_by": "x1758"},
{"url": "https://codeforces.com//problemset/problem/1582/F1", "name": "Korney Korneevich and XOR (easy version)", "tags": ["bitmasks", "dp", "greedy"], "problem_rating": "1800", "solved_by": "x5431"},
{"url": "https://codeforces.com//problemset/problem/1582/E", "name": "Pchelyonok and Segments", "tags": ["binary search", "data structures", "dp", "greedy", "math"], "problem_rating": "2000", "solved_by": "x3664"},
{"url": "https://codeforces.com//problemset/problem/1582/D", "name": "Vupsen, Pupsen and 0", "tags": ["constructive algorithms", "math"], "problem_rating": "1600", "solved_by": "x10332"},
{"url": "https://codeforces.com//problemset/problem/1582/C", "name": "Grandma Capa Knits a Scarf", "tags": ["brute force", "data structures", "greedy", "strings", "two pointers"], "problem_rating": "1200", "solved_by": "x15061"},
{"url": "https://codeforces.com//problemset/problem/1582/B", "name": "Luntik and Subsequences", "tags": ["combinatorics", "math"], "problem_rating": "900", "solved_by": "x19643"},
{"url": "https://codeforces.com//problemset/problem/1582/A", "name": "Luntik and Concerts", "tags": ["math"], "problem_rating": "800", "solved_by": "x18395"},
{"url": "https://codeforces.com//problemset/problem/1581/B", "name": "Diameter of Graph", "tags": ["constructive algorithms", "graphs", "greedy", "math"], "problem_rating": "1200", "solved_by": "x11184"},
{"url": "https://codeforces.com//problemset/problem/1581/A", "name": "CQXYM Count Permutations", "tags": ["combinatorics", "math", "number theory"], "problem_rating": "800", "solved_by": "x13346"},
{"url": "https://codeforces.com//problemset/problem/1580/F", "name": "Problems for Codeforces", "tags": ["combinatorics", "fft", "math"], "problem_rating": "3300", "solved_by": "x131"},
{"url": "https://codeforces.com//problemset/problem/1580/E", "name": "Railway Construction", "tags": ["brute force", "constructive algorithms", "data structures", "graphs", "shortest paths"], "problem_rating": "3400", "solved_by": "x72"},
{"url": "https://codeforces.com//problemset/problem/1580/D", "name": "Subsequence", "tags": ["brute force", "divide and conquer", "dp", "greedy", "trees"], "problem_rating": "2900", "solved_by": "x833"},
{"url": "https://codeforces.com//problemset/problem/1580/C", "name": "Train Maintenance", "tags": ["brute force", "data structures", "implementation"], "problem_rating": "2200", "solved_by": "x1721"},
{"url": "https://codeforces.com//problemset/problem/1580/B", "name": "Mathematics Curriculum", "tags": ["brute force", "combinatorics", "dp", "trees"], "problem_rating": "2600", "solved_by": "x1004"},
{"url": "https://codeforces.com//problemset/problem/1580/A", "name": "Portal", "tags": ["brute force", "data structures", "dp", "greedy", "implementation"], "problem_rating": "1700", "solved_by": "x3607"},
{"url": "https://codeforces.com//problemset/problem/1579/G", "name": "Minimal Coverage", "tags": ["dp"], "problem_rating": "2200", "solved_by": "x2313"},
{"url": "https://codeforces.com//problemset/problem/1579/F", "name": "Array Stabilization (AND version)", "tags": ["brute force", "graphs", "math", "number theory", "shortest paths"], "problem_rating": "1700", "solved_by": "x4682"},
{"url": "https://codeforces.com//problemset/problem/1579/E2", "name": "Array Optimization by Deque", "tags": ["data structures", "greedy"], "problem_rating": "1700", "solved_by": "x6538"},
{"url": "https://codeforces.com//problemset/problem/1579/E1", "name": "Permutation Minimization by Deque", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1000", "solved_by": "x21295"},
{"url": "https://codeforces.com//problemset/problem/1579/D", "name": "Productive Meeting", "tags": ["constructive algorithms", "graphs", "greedy"], "problem_rating": "1400", "solved_by": "x15715"},
{"url": "https://codeforces.com//problemset/problem/1579/C", "name": "Ticks", "tags": ["greedy", "implementation"], "problem_rating": "1500", "solved_by": "x10441"},
{"url": "https://codeforces.com//problemset/problem/1579/B", "name": "Shifting Sort", "tags": ["implementation", "sortings"], "problem_rating": "1100", "solved_by": "x17980"},
{"url": "https://codeforces.com//problemset/problem/1579/A", "name": "Casimir's String Solitaire", "tags": ["math", "strings"], "problem_rating": "800", "solved_by": "x38370"},
{"url": "https://codeforces.com//problemset/problem/1578/M", "name": "The Mind", "tags": ["constructive algorithms", "interactive", "probabilities"], "problem_rating": "2700", "solved_by": "x441"},
{"url": "https://codeforces.com//problemset/problem/1578/L", "name": "Labyrinth", "tags": ["binary search", "dsu", "greedy"], "problem_rating": "2400", "solved_by": "x1073"},
{"url": "https://codeforces.com//problemset/problem/1578/K", "name": "Kingdom of Islands", "tags": ["brute force", "graphs", "implementation"], "problem_rating": "2800", "solved_by": "x348"},
{"url": "https://codeforces.com//problemset/problem/1578/J", "name": "Just Kingdom", "tags": ["brute force", "data structures", "dfs and similar"], "problem_rating": "3100", "solved_by": "x225"},
{"url": "https://codeforces.com//problemset/problem/1578/I", "name": "Interactive Rays", "tags": ["geometry", "interactive"], "problem_rating": "3300", "solved_by": "x59"},
{"url": "https://codeforces.com//problemset/problem/1578/H", "name": "Higher Order Functions", "tags": ["implementation", "strings"], "problem_rating": "1700", "solved_by": "x2003"},
{"url": "https://codeforces.com//problemset/problem/1578/G", "name": "Game of Chance", "tags": ["math", "probabilities"], "problem_rating": "3500", "solved_by": "x36"},
{"url": "https://codeforces.com//problemset/problem/1578/F", "name": "Framing Pictures", "tags": ["geometry"], "problem_rating": "2900", "solved_by": "x148"},
{"url": "https://codeforces.com//problemset/problem/1578/E", "name": "Easy Scheduling", "tags": ["implementation", "math"], "problem_rating": "1200", "solved_by": "x3770"},
{"url": "https://codeforces.com//problemset/problem/1578/D", "name": "Dragon Curve", "tags": [], "problem_rating": "3200", "solved_by": "x44"},
{"url": "https://codeforces.com//problemset/problem/1578/C", "name": "Cactus Lady and her Cing", "tags": [], "problem_rating": "3500", "solved_by": "x9"},
{"url": "https://codeforces.com//problemset/problem/1578/B", "name": "Building Forest Trails", "tags": ["data structures", "dsu"], "problem_rating": "2800", "solved_by": "x326"},
{"url": "https://codeforces.com//problemset/problem/1578/A", "name": "Anti-Tetris", "tags": ["constructive algorithms", "graphs", "shortest paths"], "problem_rating": "2800", "solved_by": "x336"},
{"url": "https://codeforces.com//problemset/problem/1576/A", "name": "Communication Routing Challenge", "tags": ["*special problem"], "problem_rating": [null], "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/1575/M", "name": "Managing Telephone Poles", "tags": ["data structures", "geometry"], "problem_rating": "2400", "solved_by": "x244"},
{"url": "https://codeforces.com//problemset/problem/1575/L", "name": "Longest Array Deconstruction", "tags": ["data structures", "divide and conquer", "dp", "sortings"], "problem_rating": "2100", "solved_by": "x1320"},
{"url": "https://codeforces.com//problemset/problem/1575/K", "name": "Knitting Batik", "tags": ["implementation", "math"], "problem_rating": "2200", "solved_by": "x672"},
{"url": "https://codeforces.com//problemset/problem/1575/J", "name": "Jeopardy of Dropped Balls", "tags": ["binary search", "brute force", "dsu", "implementation"], "problem_rating": "1500", "solved_by": "x3705"},
{"url": "https://codeforces.com//problemset/problem/1575/I", "name": "Illusions of the Desert", "tags": ["data structures", "trees"], "problem_rating": "2300", "solved_by": "x855"},
{"url": "https://codeforces.com//problemset/problem/1575/H", "name": "Holiday Wall Ornaments", "tags": ["dp", "strings"], "problem_rating": "2200", "solved_by": "x598"},
{"url": "https://codeforces.com//problemset/problem/1575/G", "name": "GCD Festival", "tags": ["math", "number theory"], "problem_rating": "2200", "solved_by": "x664"},
{"url": "https://codeforces.com//problemset/problem/1575/F", "name": "Finding Expected Value", "tags": ["math"], "problem_rating": "2900", "solved_by": "x111"},
{"url": "https://codeforces.com//problemset/problem/1575/E", "name": "Eye-Pleasing City Park Tour", "tags": ["data structures", "trees"], "problem_rating": "2600", "solved_by": "x323"},
{"url": "https://codeforces.com//problemset/problem/1575/D", "name": "Divisible by Twenty-Five", "tags": ["brute force", "dfs and similar", "dp"], "problem_rating": "1800", "solved_by": "x2453"},
{"url": "https://codeforces.com//problemset/problem/1575/C", "name": "Cyclic Sum", "tags": ["data structures", "fft", "number theory"], "problem_rating": "3000", "solved_by": "x159"},
{"url": "https://codeforces.com//problemset/problem/1575/B", "name": "Building an Amusement Park", "tags": ["binary search", "geometry"], "problem_rating": "2300", "solved_by": "x459"},
{"url": "https://codeforces.com//problemset/problem/1575/A", "name": "Another Sorting Problem", "tags": ["data structures", "sortings", "strings"], "problem_rating": "1100", "solved_by": "x4359"},
{"url": "https://codeforces.com//problemset/problem/1574/F", "name": "Occurrences", "tags": ["combinatorics", "dfs and similar", "dp", "dsu", "fft", "graphs"], "problem_rating": "2700", "solved_by": "x597"},
{"url": "https://codeforces.com//problemset/problem/1574/E", "name": "Coloring", "tags": ["combinatorics", "constructive algorithms", "implementation", "math"], "problem_rating": "2500", "solved_by": "x888"},
{"url": "https://codeforces.com//problemset/problem/1574/D", "name": "The Strongest Build", "tags": ["binary search", "brute force", "data structures", "dfs and similar", "graphs", "greedy", "hashing", "implementation"], "problem_rating": "2000", "solved_by": "x4422"},
{"url": "https://codeforces.com//problemset/problem/1574/C", "name": "Slay the Dragon", "tags": ["binary search", "greedy", "sortings", "ternary search"], "problem_rating": "1300", "solved_by": "x16807"},
{"url": "https://codeforces.com//problemset/problem/1574/B", "name": "Combinatorics Homework", "tags": ["combinatorics", "greedy", "math"], "problem_rating": "1100", "solved_by": "x17186"},
{"url": "https://codeforces.com//problemset/problem/1574/A", "name": "Regular Bracket Sequences", "tags": ["constructive algorithms"], "problem_rating": "800", "solved_by": "x21624"},
{"url": "https://codeforces.com//problemset/problem/1573/B", "name": "Swaps", "tags": ["greedy", "math", "sortings"], "problem_rating": "1400", "solved_by": "x14346"},
{"url": "https://codeforces.com//problemset/problem/1573/A", "name": "Countdown", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x21046"},
{"url": "https://codeforces.com//problemset/problem/1572/F", "name": "Stations", "tags": ["data structures"], "problem_rating": "3400", "solved_by": "x253"},
{"url": "https://codeforces.com//problemset/problem/1572/E", "name": "Polygon", "tags": ["binary search", "dp", "geometry"], "problem_rating": "3000", "solved_by": "x283"},
{"url": "https://codeforces.com//problemset/problem/1572/D", "name": "Bridge Club", "tags": ["flows", "graph matchings", "graphs", "greedy"], "problem_rating": "2800", "solved_by": "x487"},
{"url": "https://codeforces.com//problemset/problem/1572/C", "name": "Paint", "tags": ["dp", "greedy"], "problem_rating": "2700", "solved_by": "x1418"},
{"url": "https://codeforces.com//problemset/problem/1572/B", "name": "Xor of 3", "tags": ["brute force", "constructive algorithms", "greedy", "two pointers"], "problem_rating": "2500", "solved_by": "x1778"},
{"url": "https://codeforces.com//problemset/problem/1572/A", "name": "Book", "tags": ["binary search", "brute force", "data structures", "dp", "graphs", "implementation", "sortings"], "problem_rating": "1800", "solved_by": "x8765"},
{"url": "https://codeforces.com//problemset/problem/1571/J", "name": "Two Railroads", "tags": ["*special problem"], "problem_rating": "3000", "solved_by": "x40"},
{"url": "https://codeforces.com//problemset/problem/1571/I", "name": "Physical Examination", "tags": ["*special problem", "binary search", "data structures"], "problem_rating": "3200", "solved_by": "x58"},
{"url": "https://codeforces.com//problemset/problem/1571/H", "name": "Laser Beams", "tags": ["*special problem", "geometry", "probabilities"], "problem_rating": "2900", "solved_by": "x48"},
{"url": "https://codeforces.com//problemset/problem/1571/G", "name": "A Battle Against a Dragon", "tags": ["*special problem", "data structures", "dp"], "problem_rating": "2500", "solved_by": "x75"},
{"url": "https://codeforces.com//problemset/problem/1571/F", "name": "Kotlinforces", "tags": ["*special problem", "constructive algorithms", "dp"], "problem_rating": "2000", "solved_by": "x181"},
{"url": "https://codeforces.com//problemset/problem/1571/E", "name": "Fix the String", "tags": ["*special problem", "bitmasks", "dp", "greedy"], "problem_rating": "1700", "solved_by": "x333"},
{"url": "https://codeforces.com//problemset/problem/1571/D", "name": "Sweepstake", "tags": ["*special problem", "brute force", "constructive algorithms", "implementation", "math"], "problem_rating": "1800", "solved_by": "x328"},
{"url": "https://codeforces.com//problemset/problem/1571/C", "name": "Rhyme", "tags": ["*special problem", "implementation"], "problem_rating": "1800", "solved_by": "x373"},
{"url": "https://codeforces.com//problemset/problem/1571/B", "name": "Epic Novel", "tags": ["*special problem", "math"], "problem_rating": "1300", "solved_by": "x698"},
{"url": "https://codeforces.com//problemset/problem/1571/A", "name": "Sequence of Comparisons", "tags": ["*special problem"], "problem_rating": "800", "solved_by": "x1273"},
{"url": "https://codeforces.com//problemset/problem/1569/F", "name": "Palindromic Hamiltonian Path", "tags": ["brute force", "dfs and similar", "dp", "graphs", "hashing"], "problem_rating": "3000", "solved_by": "x233"},
{"url": "https://codeforces.com//problemset/problem/1569/E", "name": "Playoff Restoration", "tags": ["bitmasks", "brute force", "hashing", "implementation", "meet-in-the-middle"], "problem_rating": "2600", "solved_by": "x791"},
{"url": "https://codeforces.com//problemset/problem/1569/D", "name": "Inconvenient Pairs", "tags": ["binary search", "data structures", "implementation", "sortings", "two pointers"], "problem_rating": "1900", "solved_by": "x4340"},
{"url": "https://codeforces.com//problemset/problem/1569/C", "name": "Jury Meeting", "tags": ["combinatorics", "math"], "problem_rating": "1500", "solved_by": "x11848"},
{"url": "https://codeforces.com//problemset/problem/1569/B", "name": "Chess Tournament", "tags": ["constructive algorithms"], "problem_rating": "1000", "solved_by": "x18719"},
{"url": "https://codeforces.com//problemset/problem/1569/A", "name": "Balanced Substring", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x25389"},
{"url": "https://codeforces.com//problemset/problem/1567/F", "name": "One-Four Overload", "tags": ["2-sat", "constructive algorithms", "dfs and similar", "dsu", "graphs", "implementation"], "problem_rating": "2700", "solved_by": "x736"},
{"url": "https://codeforces.com//problemset/problem/1567/E", "name": "Non-Decreasing Dilemma", "tags": ["data structures", "divide and conquer", "math"], "problem_rating": "2200", "solved_by": "x3574"},
{"url": "https://codeforces.com//problemset/problem/1567/D", "name": "Expression Evaluation Error", "tags": ["constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "2000", "solved_by": "x4455"},
{"url": "https://codeforces.com//problemset/problem/1567/C", "name": "Carrying Conundrum", "tags": ["bitmasks", "combinatorics", "dp", "math"], "problem_rating": "1600", "solved_by": "x12015"},
{"url": "https://codeforces.com//problemset/problem/1567/B", "name": "MEXor Mixup", "tags": ["bitmasks", "greedy"], "problem_rating": "1000", "solved_by": "x22306"},
{"url": "https://codeforces.com//problemset/problem/1567/A", "name": "Domino Disaster", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x29883"},
{"url": "https://codeforces.com//problemset/problem/1566/H", "name": "Xor-quiz", "tags": ["constructive algorithms", "dp", "interactive", "math", "number theory"], "problem_rating": "3200", "solved_by": "x129"},
{"url": "https://codeforces.com//problemset/problem/1566/G", "name": "Four Vertices", "tags": ["constructive algorithms", "data structures", "graphs", "greedy", "implementation", "shortest paths"], "problem_rating": "3100", "solved_by": "x339"},
{"url": "https://codeforces.com//problemset/problem/1566/F", "name": "Points Movement", "tags": ["data structures", "dp", "greedy", "implementation", "sortings"], "problem_rating": "2600", "solved_by": "x942"},
{"url": "https://codeforces.com//problemset/problem/1566/E", "name": "Buds Re-hanging", "tags": ["constructive algorithms", "dfs and similar", "dp", "greedy", "trees"], "problem_rating": "2000", "solved_by": "x4071"},
{"url": "https://codeforces.com//problemset/problem/1566/D2", "name": "Seating Arrangements (hard version)", "tags": ["data structures", "greedy", "implementation", "sortings", "two pointers"], "problem_rating": "1600", "solved_by": "x7781"},
{"url": "https://codeforces.com//problemset/problem/1566/D1", "name": "Seating Arrangements (easy version)", "tags": ["data structures", "greedy", "sortings"], "problem_rating": "1100", "solved_by": "x13896"},
{"url": "https://codeforces.com//problemset/problem/1566/C", "name": "MAX-MEX Cut", "tags": ["bitmasks", "constructive algorithms", "dp", "greedy"], "problem_rating": "1000", "solved_by": "x17305"},
{"url": "https://codeforces.com//problemset/problem/1566/B", "name": "MIN-MEX Cut", "tags": ["bitmasks", "constructive algorithms", "dp", "greedy"], "problem_rating": "800", "solved_by": "x19374"},
{"url": "https://codeforces.com//problemset/problem/1566/A", "name": "Median Maximization", "tags": ["binary search", "greedy", "math"], "problem_rating": "800", "solved_by": "x23001"},
{"url": "https://codeforces.com//problemset/problem/1562/F", "name": "Tubular Bells", "tags": ["interactive", "math", "number theory", "probabilities"], "problem_rating": "2900", "solved_by": "x388"},
{"url": "https://codeforces.com//problemset/problem/1562/E", "name": "Rescue Niwen!", "tags": ["dp", "greedy", "string suffix structures", "strings"], "problem_rating": "2500", "solved_by": "x1378"},
{"url": "https://codeforces.com//problemset/problem/1562/D2", "name": "Two Hundred Twenty One (hard version)", "tags": ["data structures", "math"], "problem_rating": "2200", "solved_by": "x2095"},
{"url": "https://codeforces.com//problemset/problem/1562/D1", "name": "Two Hundred Twenty One (easy version)", "tags": ["data structures", "dp", "math"], "problem_rating": "1700", "solved_by": "x6248"},
{"url": "https://codeforces.com//problemset/problem/1562/C", "name": "Rings", "tags": ["constructive algorithms", "math"], "problem_rating": "1500", "solved_by": "x13087"},
{"url": "https://codeforces.com//problemset/problem/1562/B", "name": "Scenes From a Memory", "tags": ["brute force", "constructive algorithms", "implementation", "math", "number theory"], "problem_rating": "1000", "solved_by": "x19382"},
{"url": "https://codeforces.com//problemset/problem/1562/A", "name": "The Miracle and the Sleeper", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x25371"},
{"url": "https://codeforces.com//problemset/problem/1561/D1", "name": "Up the Strip (simplified version)", "tags": ["brute force", "data structures", "dp", "math", "number theory"], "problem_rating": "1700", "solved_by": "x5528"},
{"url": "https://codeforces.com//problemset/problem/1561/C", "name": "Deep Down Below", "tags": ["binary search", "greedy", "sortings"], "problem_rating": "1300", "solved_by": "x14076"},
{"url": "https://codeforces.com//problemset/problem/1561/A", "name": "Simply Strange Sort", "tags": ["brute force", "implementation", "sortings"], "problem_rating": "800", "solved_by": "x16508"},
{"url": "https://codeforces.com//problemset/problem/1560/F2", "name": "Nearest Beautiful Number (hard version)", "tags": ["bitmasks", "brute force", "constructive algorithms", "dfs and similar", "dp", "greedy"], "problem_rating": "2100", "solved_by": "x4276"},
{"url": "https://codeforces.com//problemset/problem/1560/F1", "name": "Nearest Beautiful Number (easy version)", "tags": ["binary search", "bitmasks", "brute force", "constructive algorithms", "dfs and similar", "greedy"], "problem_rating": "1900", "solved_by": "x6027"},
{"url": "https://codeforces.com//problemset/problem/1560/E", "name": "Polycarp and String Transformation", "tags": ["binary search", "implementation", "sortings", "strings"], "problem_rating": "1800", "solved_by": "x7850"},
{"url": "https://codeforces.com//problemset/problem/1560/D", "name": "Make a Power of Two", "tags": ["greedy", "math", "strings"], "problem_rating": "1300", "solved_by": "x17937"},
{"url": "https://codeforces.com//problemset/problem/1560/C", "name": "Infinity Table", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x26351"},
{"url": "https://codeforces.com//problemset/problem/1560/B", "name": "Who's Opposite?", "tags": ["math"], "problem_rating": "800", "solved_by": "x35197"},
{"url": "https://codeforces.com//problemset/problem/1560/A", "name": "Dislike of Threes", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x57874"},
{"url": "https://codeforces.com//problemset/problem/1559/E", "name": "Mocha and Stars", "tags": ["combinatorics", "dp", "fft", "math", "number theory"], "problem_rating": "2200", "solved_by": "x2262"},
{"url": "https://codeforces.com//problemset/problem/1559/D2", "name": "Mocha and Diana (Hard Version)", "tags": ["brute force", "constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy", "trees", "two pointers"], "problem_rating": "2500", "solved_by": "x2584"},
{"url": "https://codeforces.com//problemset/problem/1559/D1", "name": "Mocha and Diana (Easy Version)", "tags": ["brute force", "constructive algorithms", "dsu", "graphs", "greedy", "trees"], "problem_rating": "1400", "solved_by": "x13529"},
{"url": "https://codeforces.com//problemset/problem/1559/C", "name": "Mocha and Hiking", "tags": ["constructive algorithms", "graphs"], "problem_rating": "1200", "solved_by": "x20081"},
{"url": "https://codeforces.com//problemset/problem/1559/B", "name": "Mocha and Red and Blue", "tags": ["dp", "greedy"], "problem_rating": "900", "solved_by": "x22229"},
{"url": "https://codeforces.com//problemset/problem/1559/A", "name": "Mocha and Math", "tags": ["bitmasks", "constructive algorithms", "math"], "problem_rating": "900", "solved_by": "x30079"},
{"url": "https://codeforces.com//problemset/problem/1558/F", "name": "Strange Sort", "tags": ["data structures", "sortings"], "problem_rating": "3300", "solved_by": "x372"},
{"url": "https://codeforces.com//problemset/problem/1558/E", "name": "Down Below", "tags": ["binary search", "dfs and similar", "graphs", "greedy", "meet-in-the-middle", "shortest paths"], "problem_rating": "3000", "solved_by": "x460"},
{"url": "https://codeforces.com//problemset/problem/1558/D", "name": "Top-Notch Insertions", "tags": ["combinatorics", "data structures"], "problem_rating": "2600", "solved_by": "x939"},
{"url": "https://codeforces.com//problemset/problem/1558/C", "name": "Bottom-Tier Reversals", "tags": ["constructive algorithms", "greedy"], "problem_rating": "2000", "solved_by": "x3207"},
{"url": "https://codeforces.com//problemset/problem/1558/B", "name": "Up the Strip", "tags": ["brute force", "dp", "math", "number theory", "two pointers"], "problem_rating": "1900", "solved_by": "x4714"},
{"url": "https://codeforces.com//problemset/problem/1558/A", "name": "Charmed by the Game", "tags": ["brute force", "math"], "problem_rating": "1300", "solved_by": "x10993"},
{"url": "https://codeforces.com//problemset/problem/1557/E", "name": "Assiut Chess", "tags": ["brute force", "constructive algorithms", "interactive"], "problem_rating": "2800", "solved_by": "x706"},
{"url": "https://codeforces.com//problemset/problem/1557/D", "name": "Ezzat and Grid", "tags": ["data structures", "dp", "greedy"], "problem_rating": "2200", "solved_by": "x2508"},
{"url": "https://codeforces.com//problemset/problem/1557/C", "name": "Moamen and XOR", "tags": ["bitmasks", "combinatorics", "dp", "math", "matrices"], "problem_rating": "1700", "solved_by": "x8476"},
{"url": "https://codeforces.com//problemset/problem/1557/B", "name": "Moamen and k-subarrays", "tags": ["greedy", "sortings"], "problem_rating": "1100", "solved_by": "x23114"},
{"url": "https://codeforces.com//problemset/problem/1557/A", "name": "Ezzat and Two Subsequences", "tags": ["brute force", "math", "sortings"], "problem_rating": "800", "solved_by": "x27719"},
{"url": "https://codeforces.com//problemset/problem/1556/H", "name": "DIY Tree", "tags": ["graphs", "greedy", "math", "probabilities"], "problem_rating": "3300", "solved_by": "x362"},
{"url": "https://codeforces.com//problemset/problem/1556/G", "name": "Gates to Another World", "tags": ["bitmasks", "data structures", "dsu", "two pointers"], "problem_rating": "3300", "solved_by": "x315"},
{"url": "https://codeforces.com//problemset/problem/1556/F", "name": "Sports Betting", "tags": ["bitmasks", "combinatorics", "dp", "graphs", "math", "probabilities"], "problem_rating": "2500", "solved_by": "x1197"},
{"url": "https://codeforces.com//problemset/problem/1556/E", "name": "Equilibrium", "tags": ["data structures", "dp", "greedy"], "problem_rating": "2200", "solved_by": "x2542"},
{"url": "https://codeforces.com//problemset/problem/1556/D", "name": "Take a Guess", "tags": ["bitmasks", "constructive algorithms", "interactive", "math"], "problem_rating": "1800", "solved_by": "x6742"},
{"url": "https://codeforces.com//problemset/problem/1556/C", "name": "Compressed Bracket Sequence", "tags": ["brute force", "implementation"], "problem_rating": "1800", "solved_by": "x5723"},
{"url": "https://codeforces.com//problemset/problem/1556/B", "name": "Take Your Places!", "tags": ["implementation"], "problem_rating": "1300", "solved_by": "x12564"},
{"url": "https://codeforces.com//problemset/problem/1556/A", "name": "A Variety of Operations", "tags": ["math"], "problem_rating": "800", "solved_by": "x18005"},
{"url": "https://codeforces.com//problemset/problem/1555/F", "name": "Good Graph", "tags": ["data structures", "dsu", "graphs", "trees"], "problem_rating": "2700", "solved_by": "x836"},
{"url": "https://codeforces.com//problemset/problem/1555/E", "name": "Boring Segments", "tags": ["data structures", "sortings", "trees", "two pointers"], "problem_rating": "2100", "solved_by": "x3950"},
{"url": "https://codeforces.com//problemset/problem/1555/D", "name": "Say No to Palindromes", "tags": ["brute force", "constructive algorithms", "dp", "strings"], "problem_rating": "1600", "solved_by": "x12088"},
{"url": "https://codeforces.com//problemset/problem/1555/C", "name": "Coin Rows", "tags": ["brute force", "constructive algorithms", "dp", "implementation"], "problem_rating": "1300", "solved_by": "x21295"},
{"url": "https://codeforces.com//problemset/problem/1555/B", "name": "Two Tables", "tags": ["brute force"], "problem_rating": "1300", "solved_by": "x15873"},
{"url": "https://codeforces.com//problemset/problem/1555/A", "name": "PizzaForces", "tags": ["brute force", "math"], "problem_rating": "900", "solved_by": "x27715"},
{"url": "https://codeforces.com//problemset/problem/1554/E", "name": "You", "tags": ["dfs and similar", "dp", "math", "number theory"], "problem_rating": "2600", "solved_by": "x1196"},
{"url": "https://codeforces.com//problemset/problem/1554/D", "name": "Diane", "tags": ["constructive algorithms", "greedy", "strings"], "problem_rating": "1800", "solved_by": "x9254"},
{"url": "https://codeforces.com//problemset/problem/1554/C", "name": "Mikasa", "tags": ["binary search", "bitmasks", "greedy", "implementation"], "problem_rating": "1800", "solved_by": "x8712"},
{"url": "https://codeforces.com//problemset/problem/1554/B", "name": "Cobb", "tags": ["bitmasks", "brute force", "greedy", "math"], "problem_rating": "1700", "solved_by": "x12607"},
{"url": "https://codeforces.com//problemset/problem/1554/A", "name": "Cherry", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x28974"},
{"url": "https://codeforces.com//problemset/problem/1553/I", "name": "Stairs", "tags": ["combinatorics", "divide and conquer", "dp", "fft", "math"], "problem_rating": "3400", "solved_by": "x198"},
{"url": "https://codeforces.com//problemset/problem/1553/H", "name": "XOR and Distance", "tags": ["bitmasks", "divide and conquer", "trees"], "problem_rating": "2900", "solved_by": "x680"},
{"url": "https://codeforces.com//problemset/problem/1553/G", "name": "Common Divisor Graph", "tags": ["brute force", "constructive algorithms", "dsu", "graphs", "hashing", "math", "number theory"], "problem_rating": "2700", "solved_by": "x991"},
{"url": "https://codeforces.com//problemset/problem/1553/F", "name": "Pairwise Modulo", "tags": ["data structures", "math"], "problem_rating": "2300", "solved_by": "x2185"},
{"url": "https://codeforces.com//problemset/problem/1553/E", "name": "Permutation Shift", "tags": ["brute force", "combinatorics", "constructive algorithms", "dfs and similar", "dsu", "graphs", "math"], "problem_rating": "2100", "solved_by": "x3278"},
{"url": "https://codeforces.com//problemset/problem/1553/D", "name": "Backspace", "tags": ["dp", "greedy", "strings", "two pointers"], "problem_rating": "1500", "solved_by": "x13526"},
{"url": "https://codeforces.com//problemset/problem/1553/C", "name": "Penalty", "tags": ["bitmasks", "brute force", "dp", "greedy"], "problem_rating": "1200", "solved_by": "x17609"},
{"url": "https://codeforces.com//problemset/problem/1553/B", "name": "Reverse String", "tags": ["brute force", "dp", "hashing", "implementation", "strings"], "problem_rating": "1300", "solved_by": "x13997"},
{"url": "https://codeforces.com//problemset/problem/1553/A", "name": "Digits Sum", "tags": ["math", "number theory"], "problem_rating": "800", "solved_by": "x30630"},
{"url": "https://codeforces.com//problemset/problem/1552/I", "name": "Organizing a Music Festival", "tags": ["dfs and similar", "math"], "problem_rating": "3400", "solved_by": "x124"},
{"url": "https://codeforces.com//problemset/problem/1552/H", "name": "Guess the Perimeter", "tags": ["binary search", "interactive", "number theory"], "problem_rating": "3300", "solved_by": "x385"},
{"url": "https://codeforces.com//problemset/problem/1552/G", "name": "A Serious Referee", "tags": ["bitmasks", "brute force", "dfs and similar", "sortings"], "problem_rating": "3000", "solved_by": "x518"},
{"url": "https://codeforces.com//problemset/problem/1552/F", "name": "Telepanting", "tags": ["binary search", "data structures", "dp", "sortings"], "problem_rating": "2200", "solved_by": "x2848"},
{"url": "https://codeforces.com//problemset/problem/1552/E", "name": "Colors and Intervals", "tags": ["constructive algorithms", "data structures", "greedy", "sortings"], "problem_rating": "2300", "solved_by": "x1808"},
{"url": "https://codeforces.com//problemset/problem/1552/D", "name": "Array Differentiation", "tags": ["bitmasks", "brute force", "constructive algorithms", "dfs and similar", "dp", "graphs", "math"], "problem_rating": "1800", "solved_by": "x6874"},
{"url": "https://codeforces.com//problemset/problem/1552/C", "name": "Maximize the Intersections", "tags": ["combinatorics", "constructive algorithms", "geometry", "greedy", "sortings"], "problem_rating": "1800", "solved_by": "x5846"},
{"url": "https://codeforces.com//problemset/problem/1552/B", "name": "Running for Gold", "tags": ["combinatorics", "graphs", "greedy", "sortings"], "problem_rating": "1500", "solved_by": "x15227"},
{"url": "https://codeforces.com//problemset/problem/1552/A", "name": "Subsequence Permutation", "tags": ["sortings", "strings"], "problem_rating": "800", "solved_by": "x23682"},
{"url": "https://codeforces.com//problemset/problem/1551/F", "name": "Equidistant Vertices", "tags": ["brute force", "combinatorics", "dfs and similar", "dp", "trees"], "problem_rating": "2200", "solved_by": "x1797"},
{"url": "https://codeforces.com//problemset/problem/1551/E", "name": "Fixed Points", "tags": ["binary search", "brute force", "dp"], "problem_rating": "2000", "solved_by": "x3797"},
{"url": "https://codeforces.com//problemset/problem/1551/D2", "name": "Domino (hard version)", "tags": ["constructive algorithms", "implementation", "math"], "problem_rating": "2100", "solved_by": "x2706"},
{"url": "https://codeforces.com//problemset/problem/1551/D1", "name": "Domino (easy version)", "tags": ["constructive algorithms", "math"], "problem_rating": "1700", "solved_by": "x6978"},
{"url": "https://codeforces.com//problemset/problem/1551/C", "name": "Interesting Story", "tags": ["greedy", "sortings", "strings"], "problem_rating": "1500", "solved_by": "x13090"},
{"url": "https://codeforces.com//problemset/problem/1551/B2", "name": "Wonderful Coloring - 2", "tags": ["binary search", "constructive algorithms", "data structures", "greedy"], "problem_rating": "1400", "solved_by": "x15289"},
{"url": "https://codeforces.com//problemset/problem/1551/B1", "name": "Wonderful Coloring - 1", "tags": ["greedy", "strings"], "problem_rating": "800", "solved_by": "x28966"},
{"url": "https://codeforces.com//problemset/problem/1551/A", "name": "Polycarp and Coins", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x49696"},
{"url": "https://codeforces.com//problemset/problem/1550/F", "name": "Jumping Around", "tags": ["binary search", "data structures", "divide and conquer", "dp", "dsu", "graphs", "shortest paths"], "problem_rating": "2700", "solved_by": "x651"},
{"url": "https://codeforces.com//problemset/problem/1550/E", "name": "Stringforces", "tags": ["binary search", "bitmasks", "brute force", "dp", "strings", "two pointers"], "problem_rating": "2500", "solved_by": "x1485"},
{"url": "https://codeforces.com//problemset/problem/1550/D", "name": "Excellent Arrays", "tags": ["binary search", "combinatorics", "constructive algorithms", "implementation", "math", "sortings", "two pointers"], "problem_rating": "2300", "solved_by": "x1806"},
{"url": "https://codeforces.com//problemset/problem/1550/C", "name": "Manhattan Subarrays", "tags": ["brute force", "geometry", "greedy", "implementation"], "problem_rating": "1700", "solved_by": "x10060"},
{"url": "https://codeforces.com//problemset/problem/1550/B", "name": "Maximum Cost Deletion", "tags": ["greedy", "math"], "problem_rating": "1000", "solved_by": "x26074"},
{"url": "https://codeforces.com//problemset/problem/1550/A", "name": "Find The Array", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x27872"},
{"url": "https://codeforces.com//problemset/problem/1549/B", "name": "Gregor and the Pawn Game", "tags": ["dfs and similar", "dp", "flows", "graph matchings", "graphs", "greedy", "implementation"], "problem_rating": "800", "solved_by": "x24083"},
{"url": "https://codeforces.com//problemset/problem/1549/A", "name": "Gregor and Cryptography", "tags": ["math", "number theory"], "problem_rating": "800", "solved_by": "x31979"},
{"url": "https://codeforces.com//problemset/problem/1548/E", "name": "Gregor and the Two Painters", "tags": ["data structures", "divide and conquer", "graphs", "greedy", "math"], "problem_rating": "3400", "solved_by": "x385"},
{"url": "https://codeforces.com//problemset/problem/1548/D2", "name": "Gregor and the Odd Cows (Hard)", "tags": ["brute force", "geometry", "math", "number theory"], "problem_rating": "3300", "solved_by": "x240"},
{"url": "https://codeforces.com//problemset/problem/1548/D1", "name": "Gregor and the Odd Cows (Easy)", "tags": ["bitmasks", "geometry", "math", "number theory"], "problem_rating": "2300", "solved_by": "x1440"},
{"url": "https://codeforces.com//problemset/problem/1548/C", "name": "The Three Little Pigs", "tags": ["combinatorics", "dp", "fft", "math"], "problem_rating": "2500", "solved_by": "x1776"},
{"url": "https://codeforces.com//problemset/problem/1548/B", "name": "Integers Have Friends", "tags": ["binary search", "data structures", "divide and conquer", "math", "number theory", "two pointers"], "problem_rating": "1800", "solved_by": "x9567"},
{"url": "https://codeforces.com//problemset/problem/1548/A", "name": "Web of Lies", "tags": ["brute force", "graphs", "greedy"], "problem_rating": "1400", "solved_by": "x16240"},
{"url": "https://codeforces.com//problemset/problem/1547/G", "name": "How Many Paths?", "tags": ["dfs and similar", "dp", "graphs", "trees"], "problem_rating": "2100", "solved_by": "x2940"},
{"url": "https://codeforces.com//problemset/problem/1547/F", "name": "Array Stabilization (GCD version)", "tags": ["binary search", "brute force", "data structures", "divide and conquer", "number theory", "two pointers"], "problem_rating": "1900", "solved_by": "x5691"},
{"url": "https://codeforces.com//problemset/problem/1547/E", "name": "Air Conditioners", "tags": ["data structures", "dp", "implementation", "shortest paths", "sortings", "two pointers"], "problem_rating": "1500", "solved_by": "x14183"},
{"url": "https://codeforces.com//problemset/problem/1547/D", "name": "Co-growing Sequence", "tags": ["bitmasks", "constructive algorithms", "greedy"], "problem_rating": "1300", "solved_by": "x16359"},
{"url": "https://codeforces.com//problemset/problem/1547/C", "name": "Pair Programming", "tags": ["greedy", "two pointers"], "problem_rating": "1100", "solved_by": "x22392"},
{"url": "https://codeforces.com//problemset/problem/1547/B", "name": "Alphabetical Strings", "tags": ["greedy", "implementation", "strings"], "problem_rating": "800", "solved_by": "x26178"},
{"url": "https://codeforces.com//problemset/problem/1547/A", "name": "Shortest Path with Obstacle", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x30196"},
{"url": "https://codeforces.com//problemset/problem/1546/B", "name": "AquaMoon and Stolen String", "tags": ["interactive", "math"], "problem_rating": "1200", "solved_by": "x12960"},
{"url": "https://codeforces.com//problemset/problem/1546/A", "name": "AquaMoon and Two Arrays", "tags": ["brute force", "greedy"], "problem_rating": "800", "solved_by": "x18157"},
{"url": "https://codeforces.com//problemset/problem/1545/F", "name": "AquaMoon and Potatoes", "tags": ["brute force", "data structures", "dp"], "problem_rating": "3500", "solved_by": "x106"},
{"url": "https://codeforces.com//problemset/problem/1545/E2", "name": "AquaMoon and Time Stop (hard version)", "tags": ["data structures", "dp"], "problem_rating": "3500", "solved_by": "x81"},
{"url": "https://codeforces.com//problemset/problem/1545/E1", "name": "AquaMoon and Time Stop (easy version)", "tags": ["data structures", "dp"], "problem_rating": "3500", "solved_by": "x77"},
{"url": "https://codeforces.com//problemset/problem/1545/D", "name": "AquaMoon and Wrong Coordinate", "tags": ["constructive algorithms", "interactive", "math"], "problem_rating": "3000", "solved_by": "x473"},
{"url": "https://codeforces.com//problemset/problem/1545/C", "name": "AquaMoon and Permutations", "tags": ["2-sat", "brute force", "combinatorics", "constructive algorithms", "graph matchings", "graphs"], "problem_rating": "2800", "solved_by": "x597"},
{"url": "https://codeforces.com//problemset/problem/1545/B", "name": "AquaMoon and Chess", "tags": ["combinatorics", "math"], "problem_rating": "1900", "solved_by": "x5816"},
{"url": "https://codeforces.com//problemset/problem/1545/A", "name": "AquaMoon and Strange Sort", "tags": ["sortings"], "problem_rating": "1500", "solved_by": "x13758"},
{"url": "https://codeforces.com//problemset/problem/1543/E", "name": "The Final Pursuit", "tags": ["bitmasks", "constructive algorithms", "divide and conquer", "graphs", "greedy", "math"], "problem_rating": "2700", "solved_by": "x397"},
{"url": "https://codeforces.com//problemset/problem/1543/D2", "name": "RPD and Rap Sheet (Hard Version)", "tags": ["brute force", "constructive algorithms", "interactive", "math"], "problem_rating": "2200", "solved_by": "x1965"},
{"url": "https://codeforces.com//problemset/problem/1543/D1", "name": "RPD and Rap Sheet (Easy Version)", "tags": ["bitmasks", "constructive algorithms", "interactive", "math"], "problem_rating": "1700", "solved_by": "x7513"},
{"url": "https://codeforces.com//problemset/problem/1543/C", "name": "Need for Pink Slips", "tags": ["bitmasks", "brute force", "dfs and similar", "implementation", "math", "probabilities"], "problem_rating": "1900", "solved_by": "x5236"},
{"url": "https://codeforces.com//problemset/problem/1543/B", "name": "Customising the Track", "tags": ["combinatorics", "greedy", "math"], "problem_rating": "900", "solved_by": "x22886"},
{"url": "https://codeforces.com//problemset/problem/1543/A", "name": "Exciting Bets", "tags": ["greedy", "math", "number theory"], "problem_rating": "900", "solved_by": "x27305"},
{"url": "https://codeforces.com//problemset/problem/1542/E2", "name": "Abnormal Permutation Pairs (hard version)", "tags": ["combinatorics", "dp", "fft", "math"], "problem_rating": "2700", "solved_by": "x829"},
{"url": "https://codeforces.com//problemset/problem/1542/E1", "name": "Abnormal Permutation Pairs (easy version)", "tags": ["combinatorics", "dp", "fft", "math"], "problem_rating": "2400", "solved_by": "x1212"},
{"url": "https://codeforces.com//problemset/problem/1542/D", "name": "Priority Queue", "tags": ["combinatorics", "dp", "implementation", "math", "ternary search"], "problem_rating": "2200", "solved_by": "x2579"},
{"url": "https://codeforces.com//problemset/problem/1542/C", "name": "Strange Function", "tags": ["math", "number theory"], "problem_rating": "1600", "solved_by": "x13910"},
{"url": "https://codeforces.com//problemset/problem/1542/B", "name": "Plus and Multiply", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "1500", "solved_by": "x22635"},
{"url": "https://codeforces.com//problemset/problem/1542/A", "name": "Odd Set", "tags": ["math"], "problem_rating": "800", "solved_by": "x43549"},
{"url": "https://codeforces.com//problemset/problem/1541/B", "name": "Pleasant Pairs", "tags": ["brute force", "implementation", "math", "number theory"], "problem_rating": "1200", "solved_by": "x27465"},
{"url": "https://codeforces.com//problemset/problem/1541/A", "name": "Pretty Permutations", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "800", "solved_by": "x29213"},
{"url": "https://codeforces.com//problemset/problem/1540/E", "name": "Tasty Dishes", "tags": ["math", "matrices"], "problem_rating": "3500", "solved_by": "x102"},
{"url": "https://codeforces.com//problemset/problem/1540/D", "name": "Inverse Inversions", "tags": ["binary search", "brute force", "data structures"], "problem_rating": "3200", "solved_by": "x268"},
{"url": "https://codeforces.com//problemset/problem/1540/C2", "name": "Converging Array (Hard Version)", "tags": ["dp", "math"], "problem_rating": "2900", "solved_by": "x446"},
{"url": "https://codeforces.com//problemset/problem/1540/C1", "name": "Converging Array (Easy Version)", "tags": ["dp", "math"], "problem_rating": "2700", "solved_by": "x606"},
{"url": "https://codeforces.com//problemset/problem/1540/B", "name": "Tree Array", "tags": ["brute force", "combinatorics", "dp", "graphs", "math", "probabilities", "trees"], "problem_rating": "2300", "solved_by": "x2527"},
{"url": "https://codeforces.com//problemset/problem/1540/A", "name": "Great Graphs", "tags": ["constructive algorithms", "graphs", "greedy", "shortest paths", "sortings"], "problem_rating": "1400", "solved_by": "x13810"},
{"url": "https://codeforces.com//problemset/problem/1539/F", "name": "Strange Array", "tags": ["data structures", "greedy", "sortings"], "problem_rating": "2600", "solved_by": "x849"},
{"url": "https://codeforces.com//problemset/problem/1539/E", "name": "Game with Cards", "tags": ["binary search", "constructive algorithms", "data structures", "dp", "greedy", "implementation"], "problem_rating": "2500", "solved_by": "x935"},
{"url": "https://codeforces.com//problemset/problem/1539/D", "name": "PriceFixed", "tags": ["binary search", "greedy", "implementation", "sortings", "two pointers"], "problem_rating": "1600", "solved_by": "x11476"},
{"url": "https://codeforces.com//problemset/problem/1539/C", "name": "Stable Groups", "tags": ["greedy", "sortings"], "problem_rating": "1200", "solved_by": "x22042"},
{"url": "https://codeforces.com//problemset/problem/1539/B", "name": "Love Song", "tags": ["dp", "implementation", "strings"], "problem_rating": "800", "solved_by": "x24161"},
{"url": "https://codeforces.com//problemset/problem/1539/A", "name": "Contest Start", "tags": ["combinatorics", "geometry", "greedy", "math"], "problem_rating": "1000", "solved_by": "x19881"},
{"url": "https://codeforces.com//problemset/problem/1538/G", "name": "Gift Set", "tags": ["binary search", "greedy", "math", "ternary search"], "problem_rating": "2100", "solved_by": "x4453"},
{"url": "https://codeforces.com//problemset/problem/1538/F", "name": "Interesting Function", "tags": ["binary search", "dp", "math", "number theory"], "problem_rating": "1500", "solved_by": "x18867"},
{"url": "https://codeforces.com//problemset/problem/1538/E", "name": "Funny Substrings", "tags": ["data structures", "hashing", "implementation", "matrices", "strings"], "problem_rating": "2100", "solved_by": "x2850"},
{"url": "https://codeforces.com//problemset/problem/1538/D", "name": "Another Problem About Dividing Numbers", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "1700", "solved_by": "x13354"},
{"url": "https://codeforces.com//problemset/problem/1538/C", "name": "Number of Pairs", "tags": ["binary search", "data structures", "math", "two pointers"], "problem_rating": "1300", "solved_by": "x27784"},
{"url": "https://codeforces.com//problemset/problem/1538/B", "name": "Friends and Candies", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x31438"},
{"url": "https://codeforces.com//problemset/problem/1538/A", "name": "Stone Game", "tags": ["brute force", "dp", "greedy"], "problem_rating": "800", "solved_by": "x36325"},
{"url": "https://codeforces.com//problemset/problem/1537/F", "name": "Figure Fixing", "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy", "math"], "problem_rating": "2200", "solved_by": "x2408"},
{"url": "https://codeforces.com//problemset/problem/1537/E2", "name": "Erase and Extend (Hard Version)", "tags": ["binary search", "data structures", "greedy", "hashing", "string suffix structures", "strings", "two pointers"], "problem_rating": "2200", "solved_by": "x5101"},
{"url": "https://codeforces.com//problemset/problem/1537/E1", "name": "Erase and Extend (Easy Version)", "tags": ["binary search", "brute force", "dp", "greedy", "hashing", "implementation", "string suffix structures", "strings", "two pointers"], "problem_rating": "1600", "solved_by": "x12638"},
{"url": "https://codeforces.com//problemset/problem/1537/D", "name": "Deleting Divisors", "tags": ["games", "math", "number theory"], "problem_rating": "1700", "solved_by": "x12142"},
{"url": "https://codeforces.com//problemset/problem/1537/C", "name": "Challenging Cliffs", "tags": ["constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "1200", "solved_by": "x26994"},
{"url": "https://codeforces.com//problemset/problem/1537/B", "name": "Bad Boy", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "900", "solved_by": "x28947"},
{"url": "https://codeforces.com//problemset/problem/1537/A", "name": "Arithmetic Array", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x36689"},
{"url": "https://codeforces.com//problemset/problem/1536/F", "name": "Omkar and Akmar", "tags": ["chinese remainder theorem", "combinatorics", "constructive algorithms", "fft", "games", "geometry", "math", "meet-in-the-middle", "string suffix structures"], "problem_rating": "2600", "solved_by": "x926"},
{"url": "https://codeforces.com//problemset/problem/1536/E", "name": "Omkar and Forest", "tags": ["combinatorics", "graphs", "math", "shortest paths"], "problem_rating": "2300", "solved_by": "x2370"},
{"url": "https://codeforces.com//problemset/problem/1536/D", "name": "Omkar and Medians", "tags": ["data structures", "greedy", "implementation"], "problem_rating": "2000", "solved_by": "x4617"},
{"url": "https://codeforces.com//problemset/problem/1536/C", "name": "Diluc and Kaeya", "tags": ["data structures", "dp", "hashing", "number theory"], "problem_rating": "1500", "solved_by": "x13863"},
{"url": "https://codeforces.com//problemset/problem/1536/B", "name": "Prinzessin der Verurteilung", "tags": ["brute force", "constructive algorithms", "strings"], "problem_rating": "1200", "solved_by": "x18288"},
{"url": "https://codeforces.com//problemset/problem/1536/A", "name": "Omkar and Bad Story", "tags": ["brute force", "constructive algorithms"], "problem_rating": "800", "solved_by": "x20131"},
{"url": "https://codeforces.com//problemset/problem/1535/F", "name": "String Distance", "tags": ["binary search", "brute force", "data structures", "hashing", "implementation", "strings"], "problem_rating": "3000", "solved_by": "x446"},
{"url": "https://codeforces.com//problemset/problem/1535/E", "name": "Gold Transfer", "tags": ["binary search", "data structures", "dp", "greedy", "interactive", "trees"], "problem_rating": "2200", "solved_by": "x2677"},
{"url": "https://codeforces.com//problemset/problem/1535/D", "name": "Playoff Tournament", "tags": ["data structures", "dfs and similar", "dp", "implementation", "trees"], "problem_rating": "1800", "solved_by": "x7600"},
{"url": "https://codeforces.com//problemset/problem/1535/C", "name": "Unstable String", "tags": ["binary search", "dp", "greedy", "implementation", "strings", "two pointers"], "problem_rating": "1400", "solved_by": "x16302"},
{"url": "https://codeforces.com//problemset/problem/1535/B", "name": "Array Reodering", "tags": ["brute force", "greedy", "math", "number theory", "sortings"], "problem_rating": "900", "solved_by": "x30067"},
{"url": "https://codeforces.com//problemset/problem/1535/A", "name": "Fair Playoff", "tags": ["brute force", "implementation"], "problem_rating": "800", "solved_by": "x47903"},
{"url": "https://codeforces.com//problemset/problem/1534/H", "name": "Lost Nodes", "tags": ["constructive algorithms", "dp", "graphs", "interactive", "sortings", "trees"], "problem_rating": "3500", "solved_by": "x146"},
{"url": "https://codeforces.com//problemset/problem/1534/G", "name": "A New Beginning", "tags": ["data structures", "dp", "geometry", "sortings"], "problem_rating": "3300", "solved_by": "x546"},
{"url": "https://codeforces.com//problemset/problem/1534/F2", "name": "Falling Sand (Hard Version)", "tags": ["dfs and similar", "dp", "graphs", "greedy"], "problem_rating": "3000", "solved_by": "x529"},
{"url": "https://codeforces.com//problemset/problem/1534/F1", "name": "Falling Sand (Easy Version)", "tags": ["dfs and similar", "graphs", "greedy"], "problem_rating": "2500", "solved_by": "x1211"},
{"url": "https://codeforces.com//problemset/problem/1534/E", "name": "Lost Array", "tags": ["graphs", "greedy", "interactive", "shortest paths"], "problem_rating": "2300", "solved_by": "x1885"},
{"url": "https://codeforces.com//problemset/problem/1534/D", "name": "Lost Tree", "tags": ["constructive algorithms", "interactive", "trees"], "problem_rating": "1800", "solved_by": "x5910"},
{"url": "https://codeforces.com//problemset/problem/1534/C", "name": "Little Alawn's Puzzle", "tags": ["combinatorics", "dp", "dsu", "graphs", "math"], "problem_rating": "1300", "solved_by": "x12670"},
{"url": "https://codeforces.com//problemset/problem/1534/B", "name": "Histogram Ugliness", "tags": ["greedy", "implementation", "math"], "problem_rating": "1100", "solved_by": "x12436"},
{"url": "https://codeforces.com//problemset/problem/1534/A", "name": "Colour the Flag", "tags": ["brute force", "implementation"], "problem_rating": "800", "solved_by": "x12663"},
{"url": "https://codeforces.com//problemset/problem/1533/J", "name": "Pawns", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x44"},
{"url": "https://codeforces.com//problemset/problem/1533/I", "name": "Excursions", "tags": ["*special problem", "constructive algorithms", "dfs and similar", "flows", "graph matchings", "graphs"], "problem_rating": [null], "solved_by": "x52"},
{"url": "https://codeforces.com//problemset/problem/1533/H", "name": "Submatrices", "tags": ["*special problem", "bitmasks", "data structures", "dp"], "problem_rating": [null], "solved_by": "x83"},
{"url": "https://codeforces.com//problemset/problem/1533/G", "name": "Biome Map", "tags": ["*special problem", "constructive algorithms", "dfs and similar", "graphs"], "problem_rating": [null], "solved_by": "x89"},
{"url": "https://codeforces.com//problemset/problem/1533/F", "name": "Binary String Partition", "tags": ["*special problem", "binary search", "greedy"], "problem_rating": [null], "solved_by": "x215"},
{"url": "https://codeforces.com//problemset/problem/1533/E", "name": "Chess Team Forming", "tags": ["*special problem", "binary search", "data structures", "greedy"], "problem_rating": [null], "solved_by": "x275"},
{"url": "https://codeforces.com//problemset/problem/1533/D", "name": "String Searching", "tags": ["*special problem", "hashing"], "problem_rating": [null], "solved_by": "x441"},
{"url": "https://codeforces.com//problemset/problem/1533/C", "name": "Sweets", "tags": ["*special problem", "data structures", "implementation"], "problem_rating": [null], "solved_by": "x470"},
{"url": "https://codeforces.com//problemset/problem/1533/B", "name": "Nearest Point Function", "tags": ["*special problem", "implementation"], "problem_rating": [null], "solved_by": "x766"},
{"url": "https://codeforces.com//problemset/problem/1533/A", "name": "Travel to Bertown", "tags": ["*special problem", "implementation", "math"], "problem_rating": [null], "solved_by": "x1073"},
{"url": "https://codeforces.com//problemset/problem/1532/F", "name": "Prefixes and Suffixes", "tags": ["*special problem", "strings"], "problem_rating": [null], "solved_by": "x218"},
{"url": "https://codeforces.com//problemset/problem/1532/E", "name": "Good Array", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x388"},
{"url": "https://codeforces.com//problemset/problem/1532/D", "name": "Teams Forming", "tags": ["*special problem", "sortings"], "problem_rating": [null], "solved_by": "x583"},
{"url": "https://codeforces.com//problemset/problem/1532/C", "name": "Uniform String", "tags": ["*special problem", "implementation"], "problem_rating": [null], "solved_by": "x637"},
{"url": "https://codeforces.com//problemset/problem/1532/B", "name": "Frog Jumping", "tags": ["*special problem", "math"], "problem_rating": [null], "solved_by": "x822"},
{"url": "https://codeforces.com//problemset/problem/1532/A", "name": "A+B (Trial Problem)", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x1134"},
{"url": "https://codeforces.com//problemset/problem/1531/E3", "name": "Сортировка слиянием", "tags": ["*special problem", "binary search"], "problem_rating": [null], "solved_by": "x269"},
{"url": "https://codeforces.com//problemset/problem/1531/E2", "name": "Сортировка слиянием", "tags": ["*special problem", "*special problem", "brute force"], "problem_rating": [null], "solved_by": "x333"},
{"url": "https://codeforces.com//problemset/problem/1531/E1", "name": "Сортировка слиянием", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x358"},
{"url": "https://codeforces.com//problemset/problem/1531/D", "name": "Редактируем Зингер | color", "tags": ["*special problem", "*special problem"], "problem_rating": [null], "solved_by": "x353"},
{"url": "https://codeforces.com//problemset/problem/1531/C", "name": "Симметричный амфитеатр", "tags": ["*special problem", "constructive algorithms", "dp"], "problem_rating": [null], "solved_by": "x648"},
{"url": "https://codeforces.com//problemset/problem/1531/B2", "name": "Мониторинг", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x767"},
{"url": "https://codeforces.com//problemset/problem/1531/B1", "name": "Мониторинг", "tags": ["*special problem", "*special problem"], "problem_rating": [null], "solved_by": "x1089"},
{"url": "https://codeforces.com//problemset/problem/1531/A", "name": "Зингер | color", "tags": ["*special problem", "implementation"], "problem_rating": [null], "solved_by": "x1447"},
{"url": "https://codeforces.com//problemset/problem/1530/H", "name": "Turing's Award", "tags": ["data structures", "dp"], "problem_rating": "3400", "solved_by": "x151"},
{"url": "https://codeforces.com//problemset/problem/1530/G", "name": "What a Reversal", "tags": ["constructive algorithms"], "problem_rating": "3300", "solved_by": "x143"},
{"url": "https://codeforces.com//problemset/problem/1530/F", "name": "Bingo", "tags": ["bitmasks", "combinatorics", "dp", "math", "probabilities"], "problem_rating": "2600", "solved_by": "x764"},
{"url": "https://codeforces.com//problemset/problem/1530/E", "name": "Minimax", "tags": ["constructive algorithms", "greedy", "strings"], "problem_rating": "2100", "solved_by": "x2935"},
{"url": "https://codeforces.com//problemset/problem/1530/D", "name": "Secret Santa", "tags": ["constructive algorithms", "flows", "graphs", "greedy", "math"], "problem_rating": "1600", "solved_by": "x9071"},
{"url": "https://codeforces.com//problemset/problem/1530/C", "name": "Pursuit", "tags": ["binary search", "brute force", "greedy", "sortings"], "problem_rating": "1200", "solved_by": "x14482"},
{"url": "https://codeforces.com//problemset/problem/1530/B", "name": "Putting Plates", "tags": ["constructive algorithms", "implementation"], "problem_rating": "800", "solved_by": "x15737"},
{"url": "https://codeforces.com//problemset/problem/1530/A", "name": "Binary Decimal", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x20961"},
{"url": "https://codeforces.com//problemset/problem/1529/B", "name": "Sifid and Strange Subsequences", "tags": ["greedy", "math", "sortings"], "problem_rating": "1100", "solved_by": "x20460"},
{"url": "https://codeforces.com//problemset/problem/1529/A", "name": "Eshag Loves Big Arrays", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "800", "solved_by": "x29584"},
{"url": "https://codeforces.com//problemset/problem/1528/F", "name": "AmShZ Farm", "tags": ["combinatorics", "fft", "math"], "problem_rating": "3300", "solved_by": "x281"},
{"url": "https://codeforces.com//problemset/problem/1528/E", "name": "Mashtali and Hagh Trees", "tags": ["combinatorics", "dp", "trees"], "problem_rating": "2900", "solved_by": "x515"},
{"url": "https://codeforces.com//problemset/problem/1528/D", "name": "It's a bird! No, it's a plane! No, it's AaParsa!", "tags": ["constructive algorithms", "graphs", "shortest paths"], "problem_rating": "2500", "solved_by": "x1415"},
{"url": "https://codeforces.com//problemset/problem/1528/C", "name": "Trees of Tranquillity", "tags": ["data structures", "dfs and similar", "greedy", "trees"], "problem_rating": "2300", "solved_by": "x2598"},
{"url": "https://codeforces.com//problemset/problem/1528/B", "name": "Kavi on Pairing Duty", "tags": ["combinatorics", "dp", "math"], "problem_rating": "1700", "solved_by": "x8587"},
{"url": "https://codeforces.com//problemset/problem/1528/A", "name": "Parsa's Humongous Tree", "tags": ["dfs and similar", "divide and conquer", "dp", "greedy", "trees"], "problem_rating": "1600", "solved_by": "x14307"},
{"url": "https://codeforces.com//problemset/problem/1527/E", "name": "Partition Game", "tags": ["binary search", "data structures", "divide and conquer", "dp"], "problem_rating": "2500", "solved_by": "x2237"},
{"url": "https://codeforces.com//problemset/problem/1527/D", "name": "MEX Tree", "tags": ["combinatorics", "dfs and similar", "implementation", "math", "trees"], "problem_rating": "2400", "solved_by": "x1864"},
{"url": "https://codeforces.com//problemset/problem/1527/C", "name": "Sequence Pair Weight", "tags": ["hashing", "implementation", "math"], "problem_rating": "1600", "solved_by": "x13317"},
{"url": "https://codeforces.com//problemset/problem/1527/B2", "name": "Palindrome Game (hard version)", "tags": ["constructive algorithms", "games"], "problem_rating": "1900", "solved_by": "x7752"},
{"url": "https://codeforces.com//problemset/problem/1527/B1", "name": "Palindrome Game (easy version)", "tags": ["constructive algorithms", "games"], "problem_rating": "1200", "solved_by": "x25247"},
{"url": "https://codeforces.com//problemset/problem/1527/A", "name": "And Then There Were K", "tags": ["bitmasks"], "problem_rating": "800", "solved_by": "x34863"},
{"url": "https://codeforces.com//problemset/problem/1526/F", "name": "Median Queries", "tags": ["constructive algorithms", "interactive", "probabilities"], "problem_rating": "3000", "solved_by": "x253"},
{"url": "https://codeforces.com//problemset/problem/1526/E", "name": "Oolimry and Suffix Array", "tags": ["combinatorics", "constructive algorithms", "math"], "problem_rating": "2400", "solved_by": "x1039"},
{"url": "https://codeforces.com//problemset/problem/1526/D", "name": "Kill Anton", "tags": ["brute force", "constructive algorithms", "data structures", "math", "strings"], "problem_rating": "2200", "solved_by": "x2381"},
{"url": "https://codeforces.com//problemset/problem/1526/C2", "name": "Potions (Hard Version)", "tags": ["data structures", "greedy"], "problem_rating": "1600", "solved_by": "x21882"},
{"url": "https://codeforces.com//problemset/problem/1526/C1", "name": "Potions (Easy Version)", "tags": ["brute force", "data structures", "dp", "greedy"], "problem_rating": "1500", "solved_by": "x21851"},
{"url": "https://codeforces.com//problemset/problem/1526/B", "name": "I Hate 1111", "tags": ["dp", "math", "number theory"], "problem_rating": "1400", "solved_by": "x29712"},
{"url": "https://codeforces.com//problemset/problem/1526/A", "name": "Mean Inequality", "tags": ["constructive algorithms", "sortings"], "problem_rating": "800", "solved_by": "x24028"},
{"url": "https://codeforces.com//problemset/problem/1525/F", "name": "Goblins And Gnomes", "tags": ["brute force", "dp", "flows", "graph matchings"], "problem_rating": "2800", "solved_by": "x325"},
{"url": "https://codeforces.com//problemset/problem/1525/E", "name": "Assimilation IV", "tags": ["combinatorics", "dp", "math", "probabilities", "two pointers"], "problem_rating": "2100", "solved_by": "x2020"},
{"url": "https://codeforces.com//problemset/problem/1525/D", "name": "Armchairs", "tags": ["dp", "flows", "graph matchings", "greedy"], "problem_rating": "1800", "solved_by": "x9545"},
{"url": "https://codeforces.com//problemset/problem/1525/C", "name": "Robot Collisions", "tags": ["data structures", "greedy", "implementation", "sortings"], "problem_rating": "2000", "solved_by": "x4391"},
{"url": "https://codeforces.com//problemset/problem/1525/B", "name": "Permutation Sort", "tags": ["constructive algorithms", "greedy"], "problem_rating": "900", "solved_by": "x24468"},
{"url": "https://codeforces.com//problemset/problem/1525/A", "name": "Potion-making", "tags": ["math", "number theory"], "problem_rating": "800", "solved_by": "x25229"},
{"url": "https://codeforces.com//problemset/problem/1523/H", "name": "Hopping Around the Array", "tags": ["data structures", "dp"], "problem_rating": "3500", "solved_by": "x238"},
{"url": "https://codeforces.com//problemset/problem/1523/G", "name": "Try Booking", "tags": ["data structures", "divide and conquer"], "problem_rating": "3200", "solved_by": "x443"},
{"url": "https://codeforces.com//problemset/problem/1523/F", "name": "Favorite Game", "tags": ["bitmasks", "dp"], "problem_rating": "3300", "solved_by": "x415"},
{"url": "https://codeforces.com//problemset/problem/1523/E", "name": "Crypto Lights", "tags": ["combinatorics", "dp", "math", "probabilities"], "problem_rating": "2600", "solved_by": "x1575"},
{"url": "https://codeforces.com//problemset/problem/1523/D", "name": "Love-Hate", "tags": ["bitmasks", "brute force", "dp", "probabilities"], "problem_rating": "2400", "solved_by": "x2140"},
{"url": "https://codeforces.com//problemset/problem/1523/C", "name": "Compression and Expansion", "tags": ["brute force", "data structures", "greedy", "implementation", "trees"], "problem_rating": "1600", "solved_by": "x8668"},
{"url": "https://codeforces.com//problemset/problem/1523/B", "name": "Lord of the Values", "tags": ["constructive algorithms"], "problem_rating": "1100", "solved_by": "x12045"},
{"url": "https://codeforces.com//problemset/problem/1523/A", "name": "Game of Life", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x13444"},
{"url": "https://codeforces.com//problemset/problem/1521/E", "name": "Nastia and a Beautiful Matrix", "tags": ["binary search", "constructive algorithms", "dp", "greedy"], "problem_rating": "2700", "solved_by": "x654"},
{"url": "https://codeforces.com//problemset/problem/1521/D", "name": "Nastia Plays with a Tree", "tags": ["constructive algorithms", "data structures", "dfs and similar", "dp", "dsu", "greedy", "implementation", "trees"], "problem_rating": "2500", "solved_by": "x1877"},
{"url": "https://codeforces.com//problemset/problem/1521/C", "name": "Nastia and a Hidden Permutation", "tags": ["constructive algorithms", "interactive"], "problem_rating": "2000", "solved_by": "x4316"},
{"url": "https://codeforces.com//problemset/problem/1521/B", "name": "Nastia and a Good Array", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "1300", "solved_by": "x21070"},
{"url": "https://codeforces.com//problemset/problem/1521/A", "name": "Nastia and Nearly Good Numbers", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "1000", "solved_by": "x36266"},
{"url": "https://codeforces.com//problemset/problem/1520/G", "name": "To Go Or Not To Go?", "tags": ["brute force", "dfs and similar", "graphs", "greedy", "implementation", "shortest paths"], "problem_rating": "2200", "solved_by": "x3619"},
{"url": "https://codeforces.com//problemset/problem/1520/F2", "name": "Guess the K-th Zero (Hard version)", "tags": ["binary search", "constructive algorithms", "data structures", "interactive"], "problem_rating": "2200", "solved_by": "x2947"},
{"url": "https://codeforces.com//problemset/problem/1520/F1", "name": "Guess the K-th Zero (Easy version)", "tags": ["binary search", "interactive"], "problem_rating": "1600", "solved_by": "x11268"},
{"url": "https://codeforces.com//problemset/problem/1520/E", "name": "Arranging The Sheep", "tags": ["greedy", "math"], "problem_rating": "1400", "solved_by": "x20735"},
{"url": "https://codeforces.com//problemset/problem/1520/D", "name": "Same Differences", "tags": ["data structures", "hashing", "math"], "problem_rating": "1200", "solved_by": "x44936"},
{"url": "https://codeforces.com//problemset/problem/1520/C", "name": "Not Adjacent Matrix", "tags": ["constructive algorithms"], "problem_rating": "1000", "solved_by": "x31233"},
{"url": "https://codeforces.com//problemset/problem/1520/B", "name": "Ordinary Numbers", "tags": ["brute force", "math", "number theory"], "problem_rating": "800", "solved_by": "x43706"},
{"url": "https://codeforces.com//problemset/problem/1520/A", "name": "Do Not Be Distracted!", "tags": ["brute force", "implementation"], "problem_rating": "800", "solved_by": "x50809"},
{"url": "https://codeforces.com//problemset/problem/1519/F", "name": "Chests and Keys", "tags": ["bitmasks", "brute force", "dfs and similar", "dp", "flows"], "problem_rating": "3200", "solved_by": "x402"},
{"url": "https://codeforces.com//problemset/problem/1519/E", "name": "Off by One", "tags": ["constructive algorithms", "dfs and similar", "geometry", "graphs", "sortings", "trees"], "problem_rating": "2700", "solved_by": "x814"},
{"url": "https://codeforces.com//problemset/problem/1519/D", "name": "Maximum Sum of Products", "tags": ["brute force", "dp", "implementation", "math", "two pointers"], "problem_rating": "1600", "solved_by": "x14908"},
{"url": "https://codeforces.com//problemset/problem/1519/C", "name": "Berland Regional", "tags": ["brute force", "data structures", "greedy", "number theory", "sortings"], "problem_rating": "1400", "solved_by": "x16460"},
{"url": "https://codeforces.com//problemset/problem/1519/B", "name": "The Cake Is a Lie", "tags": ["dp", "math"], "problem_rating": "800", "solved_by": "x30474"},
{"url": "https://codeforces.com//problemset/problem/1519/A", "name": "Red and Blue Beans", "tags": ["math"], "problem_rating": "800", "solved_by": "x28518"},
{"url": "https://codeforces.com//problemset/problem/1517/H", "name": "Fly Around the World", "tags": ["dp", "geometry"], "problem_rating": "3500", "solved_by": "x68"},
{"url": "https://codeforces.com//problemset/problem/1517/G", "name": "Starry Night Camping", "tags": ["constructive algorithms", "flows", "graphs"], "problem_rating": "3300", "solved_by": "x464"},
{"url": "https://codeforces.com//problemset/problem/1517/F", "name": "Reunion", "tags": ["combinatorics", "dp", "trees"], "problem_rating": "3200", "solved_by": "x452"},
{"url": "https://codeforces.com//problemset/problem/1517/E", "name": "Group Photo", "tags": ["binary search", "data structures", "implementation", "two pointers"], "problem_rating": "2500", "solved_by": "x961"},
{"url": "https://codeforces.com//problemset/problem/1517/D", "name": "Explorer Space", "tags": ["dp", "graphs", "shortest paths"], "problem_rating": "1800", "solved_by": "x7520"},
{"url": "https://codeforces.com//problemset/problem/1517/C", "name": "Fillomino 2", "tags": ["constructive algorithms", "dfs and similar", "greedy", "implementation"], "problem_rating": "1400", "solved_by": "x13219"},
{"url": "https://codeforces.com//problemset/problem/1517/B", "name": "Morning Jogging", "tags": ["constructive algorithms", "greedy", "sortings"], "problem_rating": "1200", "solved_by": "x13172"},
{"url": "https://codeforces.com//problemset/problem/1517/A", "name": "Sum of 2050", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x25365"},
{"url": "https://codeforces.com//problemset/problem/1516/E", "name": "Baby Ehab Plays with Permutations", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2500", "solved_by": "x830"},
{"url": "https://codeforces.com//problemset/problem/1516/D", "name": "Cut", "tags": ["binary search", "data structures", "dp", "graphs", "number theory", "two pointers"], "problem_rating": "2100", "solved_by": "x4210"},
{"url": "https://codeforces.com//problemset/problem/1516/C", "name": "Baby Ehab Partitions Again", "tags": ["bitmasks", "constructive algorithms", "dp", "math"], "problem_rating": "1700", "solved_by": "x11737"},
{"url": "https://codeforces.com//problemset/problem/1516/B", "name": "AGAGA XOOORRR", "tags": ["bitmasks", "brute force", "dp", "greedy"], "problem_rating": "1500", "solved_by": "x18794"},
{"url": "https://codeforces.com//problemset/problem/1516/A", "name": "Tit for Tat", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x23246"},
{"url": "https://codeforces.com//problemset/problem/1515/I", "name": "Phoenix and Diamonds", "tags": ["binary search", "data structures", "sortings"], "problem_rating": "3400", "solved_by": "x249"},
{"url": "https://codeforces.com//problemset/problem/1515/H", "name": "Phoenix and Bits", "tags": ["bitmasks", "brute force", "data structures", "sortings"], "problem_rating": "3500", "solved_by": "x222"},
{"url": "https://codeforces.com//problemset/problem/1515/G", "name": "Phoenix and Odometers", "tags": ["dfs and similar", "graphs", "math", "number theory"], "problem_rating": "2700", "solved_by": "x986"},
{"url": "https://codeforces.com//problemset/problem/1515/F", "name": "Phoenix and Earthquake", "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy", "trees"], "problem_rating": "2600", "solved_by": "x1726"},
{"url": "https://codeforces.com//problemset/problem/1515/E", "name": "Phoenix and Computers", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2200", "solved_by": "x3456"},
{"url": "https://codeforces.com//problemset/problem/1515/D", "name": "Phoenix and Socks", "tags": ["greedy", "sortings", "two pointers"], "problem_rating": "1500", "solved_by": "x11268"},
{"url": "https://codeforces.com//problemset/problem/1515/C", "name": "Phoenix and Towers", "tags": ["constructive algorithms", "data structures", "greedy"], "problem_rating": "1400", "solved_by": "x16823"},
{"url": "https://codeforces.com//problemset/problem/1515/B", "name": "Phoenix and Puzzle", "tags": ["brute force", "geometry", "math", "number theory"], "problem_rating": "1000", "solved_by": "x24558"},
{"url": "https://codeforces.com//problemset/problem/1515/A", "name": "Phoenix and Gold", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "800", "solved_by": "x20129"},
{"url": "https://codeforces.com//problemset/problem/1514/E", "name": "Baby Ehab's Hyper Apartment", "tags": ["binary search", "graphs", "interactive", "sortings", "two pointers"], "problem_rating": "2700", "solved_by": "x593"},
{"url": "https://codeforces.com//problemset/problem/1514/D", "name": "Cut and Stick", "tags": ["binary search", "data structures", "greedy", "implementation", "sortings"], "problem_rating": "2000", "solved_by": "x4175"},
{"url": "https://codeforces.com//problemset/problem/1514/C", "name": "Product 1 Modulo N", "tags": ["greedy", "number theory"], "problem_rating": "1600", "solved_by": "x14725"},
{"url": "https://codeforces.com//problemset/problem/1514/B", "name": "AND 0, Sum Big", "tags": ["bitmasks", "combinatorics", "math"], "problem_rating": "1200", "solved_by": "x23938"},
{"url": "https://codeforces.com//problemset/problem/1514/A", "name": "Perfectly Imperfect Array", "tags": ["math", "number theory"], "problem_rating": "800", "solved_by": "x23946"},
{"url": "https://codeforces.com//problemset/problem/1513/F", "name": "Swapping Problem", "tags": ["brute force", "constructive algorithms", "data structures", "sortings"], "problem_rating": "2500", "solved_by": "x1214"},
{"url": "https://codeforces.com//problemset/problem/1513/E", "name": "Cost Equilibrium", "tags": ["combinatorics", "constructive algorithms", "math", "sortings"], "problem_rating": "2300", "solved_by": "x1437"},
{"url": "https://codeforces.com//problemset/problem/1513/D", "name": "GCD and MST", "tags": ["constructive algorithms", "dsu", "graphs", "greedy", "number theory", "sortings"], "problem_rating": "2000", "solved_by": "x5204"},
{"url": "https://codeforces.com//problemset/problem/1513/C", "name": "Add One", "tags": ["dp", "matrices"], "problem_rating": "1600", "solved_by": "x13586"},
{"url": "https://codeforces.com//problemset/problem/1513/B", "name": "AND Sequences", "tags": ["bitmasks", "combinatorics", "constructive algorithms", "math"], "problem_rating": "1400", "solved_by": "x14246"},
{"url": "https://codeforces.com//problemset/problem/1513/A", "name": "Array and Peaks", "tags": ["constructive algorithms", "implementation"], "problem_rating": "800", "solved_by": "x19258"},
{"url": "https://codeforces.com//problemset/problem/1512/G", "name": "Short Task", "tags": ["brute force", "dp", "math", "number theory"], "problem_rating": "1700", "solved_by": "x7997"},
{"url": "https://codeforces.com//problemset/problem/1512/F", "name": "Education", "tags": ["brute force", "dp", "greedy", "implementation"], "problem_rating": "1900", "solved_by": "x6060"},
{"url": "https://codeforces.com//problemset/problem/1512/E", "name": "Permutation by Sum", "tags": ["brute force", "greedy", "math"], "problem_rating": "1600", "solved_by": "x10242"},
{"url": "https://codeforces.com//problemset/problem/1512/D", "name": "Corrupted Array", "tags": ["constructive algorithms", "data structures", "greedy"], "problem_rating": "1200", "solved_by": "x22169"},
{"url": "https://codeforces.com//problemset/problem/1512/C", "name": "A-B Palindrome", "tags": ["constructive algorithms", "implementation", "strings"], "problem_rating": "1200", "solved_by": "x19803"},
{"url": "https://codeforces.com//problemset/problem/1512/B", "name": "Almost Rectangle", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x25191"},
{"url": "https://codeforces.com//problemset/problem/1512/A", "name": "Spy Detected!", "tags": ["brute force", "implementation"], "problem_rating": "800", "solved_by": "x61917"},
{"url": "https://codeforces.com//problemset/problem/1511/G", "name": "Chips on a Board", "tags": ["bitmasks", "brute force", "data structures", "dp", "games", "two pointers"], "problem_rating": "2700", "solved_by": "x721"},
{"url": "https://codeforces.com//problemset/problem/1511/F", "name": "Chainword", "tags": ["brute force", "data structures", "dp", "matrices", "string suffix structures", "strings"], "problem_rating": "2700", "solved_by": "x424"},
{"url": "https://codeforces.com//problemset/problem/1511/E", "name": "Colorings and Dominoes", "tags": ["combinatorics", "dp", "greedy", "math"], "problem_rating": "2100", "solved_by": "x2498"},
{"url": "https://codeforces.com//problemset/problem/1511/D", "name": "Min Cost String", "tags": ["brute force", "constructive algorithms", "graphs", "greedy", "strings"], "problem_rating": "1600", "solved_by": "x11261"},
{"url": "https://codeforces.com//problemset/problem/1511/C", "name": "Yet Another Card Deck", "tags": ["brute force", "data structures", "implementation", "trees"], "problem_rating": "1100", "solved_by": "x22970"},
{"url": "https://codeforces.com//problemset/problem/1511/B", "name": "GCD Length", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "1100", "solved_by": "x22540"},
{"url": "https://codeforces.com//problemset/problem/1511/A", "name": "Review Site", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x27375"},
{"url": "https://codeforces.com//problemset/problem/1510/K", "name": "King's Task", "tags": ["brute force", "graphs", "implementation"], "problem_rating": "1200", "solved_by": "x5337"},
{"url": "https://codeforces.com//problemset/problem/1510/J", "name": "Japanese Game", "tags": ["constructive algorithms", "math"], "problem_rating": "2700", "solved_by": "x516"},
{"url": "https://codeforces.com//problemset/problem/1510/I", "name": "Is It Rated?", "tags": ["greedy", "interactive", "math", "probabilities"], "problem_rating": "2700", "solved_by": "x462"},
{"url": "https://codeforces.com//problemset/problem/1510/H", "name": "Hard Optimization", "tags": ["dp"], "problem_rating": "3200", "solved_by": "x98"},
{"url": "https://codeforces.com//problemset/problem/1510/G", "name": "Guide", "tags": [], "problem_rating": "2100", "solved_by": "x1266"},
{"url": "https://codeforces.com//problemset/problem/1510/F", "name": "Fiber Shape", "tags": [], "problem_rating": "2800", "solved_by": "x58"},
{"url": "https://codeforces.com//problemset/problem/1510/E", "name": "Equilibrium Point /\\textbackslash/\\textbackslash", "tags": [], "problem_rating": "2700", "solved_by": "x246"},
{"url": "https://codeforces.com//problemset/problem/1510/D", "name": "Digits", "tags": ["dp", "math", "number theory"], "problem_rating": "2100", "solved_by": "x1853"},
{"url": "https://codeforces.com//problemset/problem/1510/C", "name": "Cactus Not Enough", "tags": ["dfs and similar", "graph matchings", "graphs"], "problem_rating": "2900", "solved_by": "x211"},
{"url": "https://codeforces.com//problemset/problem/1510/B", "name": "Button Lock", "tags": ["flows", "graph matchings", "graphs"], "problem_rating": "2600", "solved_by": "x726"},
{"url": "https://codeforces.com//problemset/problem/1510/A", "name": "ASCII Automata Art", "tags": [], "problem_rating": "3100", "solved_by": "x152"},
{"url": "https://codeforces.com//problemset/problem/1509/C", "name": "The Sports Festival", "tags": ["dp", "greedy"], "problem_rating": "1800", "solved_by": "x12135"},
{"url": "https://codeforces.com//problemset/problem/1509/B", "name": "TMT Document", "tags": ["greedy"], "problem_rating": "1100", "solved_by": "x21333"},
{"url": "https://codeforces.com//problemset/problem/1509/A", "name": "Average Height", "tags": ["constructive algorithms"], "problem_rating": "800", "solved_by": "x25857"},
{"url": "https://codeforces.com//problemset/problem/1508/F", "name": "Optimal Encoding", "tags": ["brute force", "data structures"], "problem_rating": "3500", "solved_by": "x120"},
{"url": "https://codeforces.com//problemset/problem/1508/E", "name": "Tree Calendar", "tags": ["brute force", "constructive algorithms", "data structures", "dfs and similar", "sortings", "trees"], "problem_rating": "3100", "solved_by": "x331"},
{"url": "https://codeforces.com//problemset/problem/1508/D", "name": "Swap Pass", "tags": ["constructive algorithms", "geometry", "sortings"], "problem_rating": "3000", "solved_by": "x546"},
{"url": "https://codeforces.com//problemset/problem/1508/C", "name": "Complete the MST", "tags": ["bitmasks", "brute force", "data structures", "dfs and similar", "dsu", "graphs", "greedy", "trees"], "problem_rating": "2500", "solved_by": "x1448"},
{"url": "https://codeforces.com//problemset/problem/1508/B", "name": "Almost Sorted", "tags": ["binary search", "combinatorics", "constructive algorithms", "implementation"], "problem_rating": "1800", "solved_by": "x3907"},
{"url": "https://codeforces.com//problemset/problem/1508/A", "name": "Binary Literature", "tags": ["constructive algorithms", "greedy", "implementation", "strings", "two pointers"], "problem_rating": "1900", "solved_by": "x6107"},
{"url": "https://codeforces.com//problemset/problem/1506/G", "name": "Maximize the Remaining String", "tags": ["brute force", "data structures", "dp", "greedy", "strings"], "problem_rating": "2000", "solved_by": "x4165"},
{"url": "https://codeforces.com//problemset/problem/1506/F", "name": "Triangular Paths", "tags": ["constructive algorithms", "graphs", "math", "shortest paths", "sortings"], "problem_rating": "2000", "solved_by": "x3167"},
{"url": "https://codeforces.com//problemset/problem/1506/E", "name": "Restoring the Permutation", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1500", "solved_by": "x12828"},
{"url": "https://codeforces.com//problemset/problem/1506/D", "name": "Epic Transformation", "tags": ["constructive algorithms", "data structures", "greedy"], "problem_rating": "1400", "solved_by": "x21281"},
{"url": "https://codeforces.com//problemset/problem/1506/C", "name": "Double-ended Strings", "tags": ["brute force", "implementation", "strings"], "problem_rating": "1000", "solved_by": "x24195"},
{"url": "https://codeforces.com//problemset/problem/1506/B", "name": "Partial Replacement", "tags": ["greedy", "implementation"], "problem_rating": "1100", "solved_by": "x20060"},
{"url": "https://codeforces.com//problemset/problem/1506/A", "name": "Strange Table", "tags": ["math"], "problem_rating": "800", "solved_by": "x30366"},
{"url": "https://codeforces.com//problemset/problem/1505/I", "name": "Mysterious language again, seriously?", "tags": ["*special problem"], "problem_rating": "2200", "solved_by": "x549"},
{"url": "https://codeforces.com//problemset/problem/1505/H", "name": "L BREAK into program", "tags": ["*special problem"], "problem_rating": "2500", "solved_by": "x497"},
{"url": "https://codeforces.com//problemset/problem/1505/G", "name": "Encoded message", "tags": ["*special problem", "implementation"], "problem_rating": "2600", "solved_by": "x298"},
{"url": "https://codeforces.com//problemset/problem/1505/F", "name": "Math", "tags": ["*special problem", "math"], "problem_rating": "2200", "solved_by": "x1485"},
{"url": "https://codeforces.com//problemset/problem/1505/E", "name": "Cakewalk", "tags": ["*special problem", "greedy", "implementation", "shortest paths"], "problem_rating": "1800", "solved_by": "x1741"},
{"url": "https://codeforces.com//problemset/problem/1505/D", "name": "Xenolith? Hippodrome?", "tags": ["*special problem", "number theory"], "problem_rating": "1800", "solved_by": "x756"},
{"url": "https://codeforces.com//problemset/problem/1505/C", "name": "Fibonacci Words", "tags": ["*special problem", "implementation"], "problem_rating": "1400", "solved_by": "x6340"},
{"url": "https://codeforces.com//problemset/problem/1505/B", "name": "DMCA", "tags": ["*special problem", "implementation", "number theory"], "problem_rating": "1600", "solved_by": "x6061"},
{"url": "https://codeforces.com//problemset/problem/1505/A", "name": "Is it rated - 2", "tags": ["*special problem", "implementation", "interactive"], "problem_rating": "900", "solved_by": "x14186"},
{"url": "https://codeforces.com//problemset/problem/1504/B", "name": "Flip the Bits", "tags": ["constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "1200", "solved_by": "x17909"},
{"url": "https://codeforces.com//problemset/problem/1504/A", "name": "Déjà Vu", "tags": ["constructive algorithms", "strings"], "problem_rating": "800", "solved_by": "x21551"},
{"url": "https://codeforces.com//problemset/problem/1503/F", "name": "Balance the Cards", "tags": ["constructive algorithms", "data structures", "divide and conquer", "geometry", "graphs", "implementation"], "problem_rating": "3500", "solved_by": "x137"},
{"url": "https://codeforces.com//problemset/problem/1503/E", "name": "2-Coloring", "tags": ["combinatorics", "dp", "math"], "problem_rating": "3100", "solved_by": "x603"},
{"url": "https://codeforces.com//problemset/problem/1503/D", "name": "Flip the Cards", "tags": ["2-sat", "constructive algorithms", "data structures", "greedy", "sortings", "two pointers"], "problem_rating": "2600", "solved_by": "x988"},
{"url": "https://codeforces.com//problemset/problem/1503/C", "name": "Travelling Salesman Problem", "tags": ["binary search", "data structures", "dp", "greedy", "shortest paths", "sortings", "two pointers"], "problem_rating": "2200", "solved_by": "x3300"},
{"url": "https://codeforces.com//problemset/problem/1503/B", "name": "3-Coloring", "tags": ["constructive algorithms", "games", "interactive"], "problem_rating": "1700", "solved_by": "x6923"},
{"url": "https://codeforces.com//problemset/problem/1503/A", "name": "Balance the Bits", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1600", "solved_by": "x13211"},
{"url": "https://codeforces.com//problemset/problem/1501/B", "name": "Napoleon Cake", "tags": ["dp", "implementation", "sortings"], "problem_rating": "900", "solved_by": "x18791"},
{"url": "https://codeforces.com//problemset/problem/1501/A", "name": "Alexey and Train", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x11552"},
{"url": "https://codeforces.com//problemset/problem/1500/F", "name": "Cupboards Jumps", "tags": ["dp"], "problem_rating": "3500", "solved_by": "x341"},
{"url": "https://codeforces.com//problemset/problem/1500/E", "name": "Subset Trick", "tags": ["binary search", "data structures"], "problem_rating": "3300", "solved_by": "x216"},
{"url": "https://codeforces.com//problemset/problem/1500/D", "name": "Tiles for Bathroom", "tags": ["data structures", "sortings", "two pointers"], "problem_rating": "2900", "solved_by": "x450"},
{"url": "https://codeforces.com//problemset/problem/1500/C", "name": "Matrix Sorting", "tags": ["bitmasks", "brute force", "constructive algorithms", "greedy", "two pointers"], "problem_rating": "2600", "solved_by": "x787"},
{"url": "https://codeforces.com//problemset/problem/1500/B", "name": "Two chandeliers", "tags": ["binary search", "brute force", "chinese remainder theorem", "math", "number theory"], "problem_rating": "2200", "solved_by": "x2022"},
{"url": "https://codeforces.com//problemset/problem/1500/A", "name": "Going Home", "tags": ["brute force", "hashing", "implementation", "math"], "problem_rating": "1800", "solved_by": "x8659"},
{"url": "https://codeforces.com//problemset/problem/1499/G", "name": "Graph Coloring", "tags": ["data structures", "graphs", "interactive"], "problem_rating": "3100", "solved_by": "x188"},
{"url": "https://codeforces.com//problemset/problem/1499/F", "name": "Diameter Cuts", "tags": ["combinatorics", "dfs and similar", "dp", "trees"], "problem_rating": "2400", "solved_by": "x1276"},
{"url": "https://codeforces.com//problemset/problem/1499/E", "name": "Chaotic Merge", "tags": ["combinatorics", "dp", "math", "strings"], "problem_rating": "2400", "solved_by": "x1431"},
{"url": "https://codeforces.com//problemset/problem/1499/D", "name": "The Number of Pairs", "tags": ["dp", "math", "number theory"], "problem_rating": "2100", "solved_by": "x5633"},
{"url": "https://codeforces.com//problemset/problem/1499/C", "name": "Minimum Grid Path", "tags": ["brute force", "data structures", "greedy", "math"], "problem_rating": "1500", "solved_by": "x12462"},
{"url": "https://codeforces.com//problemset/problem/1499/B", "name": "Binary Removals", "tags": ["brute force", "dp", "greedy", "implementation"], "problem_rating": "1000", "solved_by": "x20479"},
{"url": "https://codeforces.com//problemset/problem/1499/A", "name": "Domino on Windowsill", "tags": ["combinatorics", "constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x21096"},
{"url": "https://codeforces.com//problemset/problem/1498/F", "name": "Christmas Game", "tags": ["bitmasks", "data structures", "dfs and similar", "dp", "games", "math", "trees"], "problem_rating": "2500", "solved_by": "x864"},
{"url": "https://codeforces.com//problemset/problem/1498/E", "name": "Two Houses", "tags": ["brute force", "graphs", "greedy", "interactive", "sortings"], "problem_rating": "2200", "solved_by": "x1870"},
{"url": "https://codeforces.com//problemset/problem/1498/D", "name": "Bananas in a Microwave", "tags": ["dfs and similar", "dp", "graphs", "implementation"], "problem_rating": "2200", "solved_by": "x2270"},
{"url": "https://codeforces.com//problemset/problem/1498/C", "name": "Planar Reflections", "tags": ["brute force", "data structures", "dp"], "problem_rating": "1600", "solved_by": "x9463"},
{"url": "https://codeforces.com//problemset/problem/1498/B", "name": "Box Fitting", "tags": ["binary search", "bitmasks", "data structures", "greedy"], "problem_rating": "1300", "solved_by": "x16605"},
{"url": "https://codeforces.com//problemset/problem/1498/A", "name": "GCD Sum", "tags": ["brute force", "math"], "problem_rating": "800", "solved_by": "x22981"},
{"url": "https://codeforces.com//problemset/problem/1497/E2", "name": "Square-Free Division (hard version)", "tags": ["data structures", "dp", "greedy", "math", "number theory", "two pointers"], "problem_rating": "2500", "solved_by": "x1593"},
{"url": "https://codeforces.com//problemset/problem/1497/E1", "name": "Square-Free Division (easy version)", "tags": ["data structures", "dp", "greedy", "math", "number theory", "two pointers"], "problem_rating": "1700", "solved_by": "x8159"},
{"url": "https://codeforces.com//problemset/problem/1497/D", "name": "Genius", "tags": ["bitmasks", "dp", "graphs", "number theory"], "problem_rating": "2500", "solved_by": "x1509"},
{"url": "https://codeforces.com//problemset/problem/1497/C2", "name": "k-LCM (hard version)", "tags": ["constructive algorithms", "math"], "problem_rating": "1600", "solved_by": "x16833"},
{"url": "https://codeforces.com//problemset/problem/1497/C1", "name": "k-LCM (easy version)", "tags": ["constructive algorithms", "math"], "problem_rating": "1200", "solved_by": "x25169"},
{"url": "https://codeforces.com//problemset/problem/1497/B", "name": "M-arrays", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1200", "solved_by": "x19270"},
{"url": "https://codeforces.com//problemset/problem/1497/A", "name": "Meximization", "tags": ["brute force", "data structures", "greedy", "sortings"], "problem_rating": "800", "solved_by": "x24091"},
{"url": "https://codeforces.com//problemset/problem/1496/B", "name": "Max and Mex", "tags": ["math"], "problem_rating": "1100", "solved_by": "x17394"},
{"url": "https://codeforces.com//problemset/problem/1496/A", "name": "Split it!", "tags": ["brute force", "constructive algorithms", "greedy", "strings"], "problem_rating": "900", "solved_by": "x20496"},
{"url": "https://codeforces.com//problemset/problem/1495/F", "name": "Squares", "tags": ["constructive algorithms", "data structures", "dp", "graphs", "trees"], "problem_rating": "3300", "solved_by": "x292"},
{"url": "https://codeforces.com//problemset/problem/1495/E", "name": "Qingshan and Daniel", "tags": ["brute force", "data structures", "greedy", "implementation"], "problem_rating": "3200", "solved_by": "x411"},
{"url": "https://codeforces.com//problemset/problem/1495/D", "name": "BFS Trees", "tags": ["combinatorics", "dfs and similar", "graphs", "math", "shortest paths", "trees"], "problem_rating": "2600", "solved_by": "x1203"},
{"url": "https://codeforces.com//problemset/problem/1495/C", "name": "Garden of the Sun", "tags": ["constructive algorithms", "graphs"], "problem_rating": "2300", "solved_by": "x2542"},
{"url": "https://codeforces.com//problemset/problem/1495/B", "name": "Let's Go Hiking", "tags": ["games", "greedy"], "problem_rating": "1900", "solved_by": "x5898"},
{"url": "https://codeforces.com//problemset/problem/1495/A", "name": "Diamond Miner", "tags": ["geometry", "greedy", "math", "sortings"], "problem_rating": "1200", "solved_by": "x16870"},
{"url": "https://codeforces.com//problemset/problem/1494/F", "name": "Delete The Edges", "tags": ["brute force", "constructive algorithms", "dfs and similar", "graphs", "implementation"], "problem_rating": "2900", "solved_by": "x335"},
{"url": "https://codeforces.com//problemset/problem/1494/E", "name": "A-Z Graph", "tags": ["constructive algorithms", "data structures", "graphs", "hashing"], "problem_rating": "2400", "solved_by": "x1678"},
{"url": "https://codeforces.com//problemset/problem/1494/D", "name": "Dogeforces", "tags": ["constructive algorithms", "data structures", "dfs and similar", "divide and conquer", "dsu", "greedy", "sortings", "trees"], "problem_rating": "2300", "solved_by": "x2523"},
{"url": "https://codeforces.com//problemset/problem/1494/C", "name": "1D Sokoban", "tags": ["binary search", "dp", "greedy", "implementation", "two pointers"], "problem_rating": "1900", "solved_by": "x5352"},
{"url": "https://codeforces.com//problemset/problem/1494/B", "name": "Berland Crossword", "tags": ["bitmasks", "brute force", "greedy", "implementation"], "problem_rating": "1400", "solved_by": "x14134"},
{"url": "https://codeforces.com//problemset/problem/1494/A", "name": "ABC String", "tags": ["bitmasks", "brute force", "implementation"], "problem_rating": "900", "solved_by": "x20631"},
{"url": "https://codeforces.com//problemset/problem/1493/F", "name": "Enchanted Matrix", "tags": ["bitmasks", "interactive", "number theory"], "problem_rating": "2600", "solved_by": "x384"},
{"url": "https://codeforces.com//problemset/problem/1493/E", "name": "Enormous XOR", "tags": ["bitmasks", "constructive algorithms", "greedy", "math", "strings", "two pointers"], "problem_rating": "2600", "solved_by": "x883"},
{"url": "https://codeforces.com//problemset/problem/1493/D", "name": "GCD of an Array", "tags": ["brute force", "data structures", "hashing", "implementation", "math", "number theory", "sortings", "two pointers"], "problem_rating": "2100", "solved_by": "x4838"},
{"url": "https://codeforces.com//problemset/problem/1493/C", "name": "K-beautiful Strings", "tags": ["binary search", "brute force", "constructive algorithms", "greedy", "strings"], "problem_rating": "2000", "solved_by": "x4513"},
{"url": "https://codeforces.com//problemset/problem/1493/B", "name": "Planet Lapituletti", "tags": ["brute force", "implementation"], "problem_rating": "1300", "solved_by": "x11729"},
{"url": "https://codeforces.com//problemset/problem/1493/A", "name": "Anti-knapsack", "tags": ["constructive algorithms", "greedy"], "problem_rating": "800", "solved_by": "x19181"},
{"url": "https://codeforces.com//problemset/problem/1492/E", "name": "Almost Fault-Tolerant Database", "tags": ["brute force", "constructive algorithms", "dfs and similar", "greedy", "implementation"], "problem_rating": "2500", "solved_by": "x1172"},
{"url": "https://codeforces.com//problemset/problem/1492/D", "name": "Genius's Gambit", "tags": ["bitmasks", "constructive algorithms", "greedy", "math"], "problem_rating": "1900", "solved_by": "x6003"},
{"url": "https://codeforces.com//problemset/problem/1492/C", "name": "Maximum width", "tags": ["binary search", "data structures", "dp", "greedy", "two pointers"], "problem_rating": "1500", "solved_by": "x15814"},
{"url": "https://codeforces.com//problemset/problem/1492/B", "name": "Card Deck", "tags": ["data structures", "greedy", "math"], "problem_rating": "1100", "solved_by": "x18256"},
{"url": "https://codeforces.com//problemset/problem/1492/A", "name": "Three swimmers", "tags": ["math"], "problem_rating": "800", "solved_by": "x22545"},
{"url": "https://codeforces.com//problemset/problem/1491/I", "name": "Ruler Of The Zoo", "tags": ["brute force", "data structures"], "problem_rating": "3500", "solved_by": "x79"},
{"url": "https://codeforces.com//problemset/problem/1491/H", "name": "Yuezheng Ling and Dynamic Tree", "tags": ["data structures", "trees"], "problem_rating": "3400", "solved_by": "x787"},
{"url": "https://codeforces.com//problemset/problem/1491/G", "name": "Switch and Flip", "tags": ["constructive algorithms", "graphs", "math"], "problem_rating": "2800", "solved_by": "x754"},
{"url": "https://codeforces.com//problemset/problem/1491/F", "name": "Magnets", "tags": ["binary search", "constructive algorithms", "interactive"], "problem_rating": "2700", "solved_by": "x921"},
{"url": "https://codeforces.com//problemset/problem/1491/E", "name": "Fib-tree", "tags": ["brute force", "dfs and similar", "divide and conquer", "number theory", "trees"], "problem_rating": "2400", "solved_by": "x2077"},
{"url": "https://codeforces.com//problemset/problem/1491/D", "name": "Zookeeper and The Infinite Zoo", "tags": ["bitmasks", "constructive algorithms", "dp", "greedy", "math"], "problem_rating": "1800", "solved_by": "x7033"},
{"url": "https://codeforces.com//problemset/problem/1491/C", "name": "Pekora and Trampoline", "tags": ["brute force", "data structures", "dp", "greedy", "implementation"], "problem_rating": "1700", "solved_by": "x7792"},
{"url": "https://codeforces.com//problemset/problem/1491/B", "name": "Minimal Cost", "tags": ["brute force", "math"], "problem_rating": "1200", "solved_by": "x13667"},
{"url": "https://codeforces.com//problemset/problem/1491/A", "name": "K-th Largest Value", "tags": ["brute force", "greedy", "implementation"], "problem_rating": "800", "solved_by": "x18123"},
{"url": "https://codeforces.com//problemset/problem/1490/G", "name": "Old Floppy Drive", "tags": ["binary search", "data structures", "math"], "problem_rating": "1900", "solved_by": "x5583"},
{"url": "https://codeforces.com//problemset/problem/1490/F", "name": "Equalize the Array", "tags": ["binary search", "data structures", "greedy", "math", "sortings"], "problem_rating": "1500", "solved_by": "x15813"},
{"url": "https://codeforces.com//problemset/problem/1490/E", "name": "Accidental Victory", "tags": ["binary search", "data structures", "greedy"], "problem_rating": "1400", "solved_by": "x18708"},
{"url": "https://codeforces.com//problemset/problem/1490/D", "name": "Permutation Transformation", "tags": ["dfs and similar", "divide and conquer", "implementation"], "problem_rating": "1200", "solved_by": "x19153"},
{"url": "https://codeforces.com//problemset/problem/1490/C", "name": "Sum of Cubes", "tags": ["binary search", "brute force", "brute force", "math"], "problem_rating": "1100", "solved_by": "x32286"},
{"url": "https://codeforces.com//problemset/problem/1490/B", "name": "Balanced Remainders", "tags": ["brute force", "constructive algorithms", "math"], "problem_rating": "1000", "solved_by": "x25918"},
{"url": "https://codeforces.com//problemset/problem/1490/A", "name": "Dense Array", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x30916"},
{"url": "https://codeforces.com//problemset/problem/1488/J", "name": "Flower Shop", "tags": ["*special problem", "data structures", "fft", "math"], "problem_rating": "3100", "solved_by": "x35"},
{"url": "https://codeforces.com//problemset/problem/1488/I", "name": "Demonic Invasion", "tags": ["*special problem", "flows"], "problem_rating": "3100", "solved_by": "x37"},
{"url": "https://codeforces.com//problemset/problem/1488/H", "name": "Build From Suffixes", "tags": ["*special problem", "combinatorics", "data structures"], "problem_rating": "2800", "solved_by": "x58"},
{"url": "https://codeforces.com//problemset/problem/1488/G", "name": "Painting Numbers", "tags": ["*special problem", "data structures", "greedy", "number theory"], "problem_rating": "2500", "solved_by": "x122"},
{"url": "https://codeforces.com//problemset/problem/1488/F", "name": "Dogecoin", "tags": ["*special problem", "*special problem", "binary search", "data structures"], "problem_rating": "2300", "solved_by": "x174"},
{"url": "https://codeforces.com//problemset/problem/1488/E", "name": "Palindromic Doubles", "tags": ["*special problem", "data structures", "dp"], "problem_rating": "2200", "solved_by": "x212"},
{"url": "https://codeforces.com//problemset/problem/1488/D", "name": "Problemsolving Marathon", "tags": ["*special problem", "binary search", "greedy"], "problem_rating": "1900", "solved_by": "x336"},
{"url": "https://codeforces.com//problemset/problem/1488/C", "name": "Two Policemen", "tags": ["*special problem", "binary search", "brute force", "math"], "problem_rating": "1900", "solved_by": "x404"},
{"url": "https://codeforces.com//problemset/problem/1488/B", "name": "RBS Deletion", "tags": ["*special problem", "greedy"], "problem_rating": "1800", "solved_by": "x554"},
{"url": "https://codeforces.com//problemset/problem/1488/A", "name": "From Zero To Y", "tags": ["*special problem", "math"], "problem_rating": "900", "solved_by": "x1379"},
{"url": "https://codeforces.com//problemset/problem/1487/G", "name": "String Counting", "tags": ["combinatorics", "dp", "fft", "math"], "problem_rating": "2700", "solved_by": "x581"},
{"url": "https://codeforces.com//problemset/problem/1487/F", "name": "Ones", "tags": ["dp", "greedy", "shortest paths"], "problem_rating": "2900", "solved_by": "x365"},
{"url": "https://codeforces.com//problemset/problem/1487/E", "name": "Cheap Dinner", "tags": ["brute force", "data structures", "graphs", "greedy", "implementation", "sortings", "two pointers"], "problem_rating": "2000", "solved_by": "x4435"},
{"url": "https://codeforces.com//problemset/problem/1487/D", "name": "Pythagorean Triples", "tags": ["binary search", "brute force", "math", "number theory"], "problem_rating": "1500", "solved_by": "x17429"},
{"url": "https://codeforces.com//problemset/problem/1487/C", "name": "Minimum Ties", "tags": ["brute force", "constructive algorithms", "dfs and similar", "graphs", "greedy", "implementation", "math"], "problem_rating": "1500", "solved_by": "x13908"},
{"url": "https://codeforces.com//problemset/problem/1487/B", "name": "Cat Cycle", "tags": ["math", "number theory"], "problem_rating": "1200", "solved_by": "x20350"},
{"url": "https://codeforces.com//problemset/problem/1487/A", "name": "Arena", "tags": ["implementation", "sortings"], "problem_rating": "800", "solved_by": "x26336"},
{"url": "https://codeforces.com//problemset/problem/1486/F", "name": "Pairs of Paths", "tags": ["combinatorics", "data structures", "dfs and similar", "dp", "trees"], "problem_rating": "2600", "solved_by": "x646"},
{"url": "https://codeforces.com//problemset/problem/1486/E", "name": "Paired Payment", "tags": ["binary search", "brute force", "constructive algorithms", "dp", "flows", "graphs", "shortest paths"], "problem_rating": "2200", "solved_by": "x2845"},
{"url": "https://codeforces.com//problemset/problem/1486/D", "name": "Max Median", "tags": ["binary search", "data structures", "dp"], "problem_rating": "2100", "solved_by": "x7003"},
{"url": "https://codeforces.com//problemset/problem/1486/C2", "name": "Guessing the Greatest (hard version)", "tags": ["binary search", "interactive"], "problem_rating": "1900", "solved_by": "x8286"},
{"url": "https://codeforces.com//problemset/problem/1486/C1", "name": "Guessing the Greatest (easy version)", "tags": ["binary search", "interactive"], "problem_rating": "1600", "solved_by": "x11872"},
{"url": "https://codeforces.com//problemset/problem/1486/B", "name": "Eastern Exhibition", "tags": ["binary search", "geometry", "shortest paths", "sortings"], "problem_rating": "1500", "solved_by": "x15638"},
{"url": "https://codeforces.com//problemset/problem/1486/A", "name": "Shifting Stacks", "tags": ["greedy", "implementation"], "problem_rating": "900", "solved_by": "x25102"},
{"url": "https://codeforces.com//problemset/problem/1485/F", "name": "Copy or Prefix Sum", "tags": ["combinatorics", "data structures", "dp", "sortings"], "problem_rating": "2400", "solved_by": "x1901"},
{"url": "https://codeforces.com//problemset/problem/1485/E", "name": "Move and Swap", "tags": ["dfs and similar", "dp", "greedy", "trees"], "problem_rating": "2500", "solved_by": "x1247"},
{"url": "https://codeforces.com//problemset/problem/1485/D", "name": "Multiples and Power Differences", "tags": ["constructive algorithms", "graphs", "math", "number theory"], "problem_rating": "2200", "solved_by": "x5003"},
{"url": "https://codeforces.com//problemset/problem/1485/C", "name": "Floor and Mod", "tags": ["binary search", "brute force", "math", "number theory"], "problem_rating": "1700", "solved_by": "x9722"},
{"url": "https://codeforces.com//problemset/problem/1485/B", "name": "Replace and Keep Sorted", "tags": ["dp", "implementation", "math"], "problem_rating": "1200", "solved_by": "x16861"},
{"url": "https://codeforces.com//problemset/problem/1485/A", "name": "Add and Divide", "tags": ["brute force", "greedy", "math", "number theory"], "problem_rating": "1000", "solved_by": "x21614"},
{"url": "https://codeforces.com//problemset/problem/1482/H", "name": "Exam", "tags": ["data structures", "string suffix structures", "trees"], "problem_rating": "3400", "solved_by": "x451"},
{"url": "https://codeforces.com//problemset/problem/1482/G", "name": "Vabank", "tags": ["binary search", "interactive"], "problem_rating": "3200", "solved_by": "x277"},
{"url": "https://codeforces.com//problemset/problem/1482/F", "name": "Useful Edges", "tags": ["graphs", "shortest paths"], "problem_rating": "2400", "solved_by": "x1486"},
{"url": "https://codeforces.com//problemset/problem/1482/E", "name": "Skyline Photo", "tags": ["data structures", "divide and conquer", "dp"], "problem_rating": "2100", "solved_by": "x3036"},
{"url": "https://codeforces.com//problemset/problem/1482/D", "name": "Playlist", "tags": ["data structures", "dsu", "implementation", "shortest paths"], "problem_rating": "1900", "solved_by": "x3768"},
{"url": "https://codeforces.com//problemset/problem/1482/C", "name": "Basic Diplomacy", "tags": ["brute force", "constructive algorithms", "greedy", "implementation"], "problem_rating": "1600", "solved_by": "x9253"},
{"url": "https://codeforces.com//problemset/problem/1482/B", "name": "Restore Modulo", "tags": ["implementation", "math"], "problem_rating": "1500", "solved_by": "x9120"},
{"url": "https://codeforces.com//problemset/problem/1482/A", "name": "Prison Break", "tags": ["math"], "problem_rating": "800", "solved_by": "x20309"},
{"url": "https://codeforces.com//problemset/problem/1481/F", "name": "AB Tree", "tags": ["dp", "greedy", "trees"], "problem_rating": "3100", "solved_by": "x478"},
{"url": "https://codeforces.com//problemset/problem/1481/E", "name": "Sorting Books", "tags": ["data structures", "dp", "greedy"], "problem_rating": "2500", "solved_by": "x2036"},
{"url": "https://codeforces.com//problemset/problem/1481/D", "name": "AB Graph", "tags": ["brute force", "constructive algorithms", "graphs", "greedy", "implementation"], "problem_rating": "2000", "solved_by": "x4449"},
{"url": "https://codeforces.com//problemset/problem/1481/C", "name": "Fence Painting", "tags": ["brute force", "constructive algorithms", "greedy"], "problem_rating": "1600", "solved_by": "x11452"},
{"url": "https://codeforces.com//problemset/problem/1481/B", "name": "New Colony", "tags": ["brute force", "greedy", "implementation"], "problem_rating": "1100", "solved_by": "x19122"},
{"url": "https://codeforces.com//problemset/problem/1481/A", "name": "Space Navigation", "tags": ["greedy", "strings"], "problem_rating": "800", "solved_by": "x24757"},
{"url": "https://codeforces.com//problemset/problem/1480/B", "name": "The Great Hero", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "900", "solved_by": "x17038"},
{"url": "https://codeforces.com//problemset/problem/1480/A", "name": "Yet Another String Game", "tags": ["games", "greedy", "strings"], "problem_rating": "800", "solved_by": "x25688"},
{"url": "https://codeforces.com//problemset/problem/1479/E", "name": "School Clubs", "tags": ["dp", "fft", "math", "number theory", "probabilities"], "problem_rating": "3500", "solved_by": "x201"},
{"url": "https://codeforces.com//problemset/problem/1479/D", "name": "Odd Mineral Resource", "tags": ["binary search", "bitmasks", "brute force", "data structures", "probabilities", "trees"], "problem_rating": "2900", "solved_by": "x998"},
{"url": "https://codeforces.com//problemset/problem/1479/C", "name": "Continuous City", "tags": ["bitmasks", "constructive algorithms"], "problem_rating": "2500", "solved_by": "x1265"},
{"url": "https://codeforces.com//problemset/problem/1479/B2", "name": "Painting the Array II", "tags": ["constructive algorithms", "data structures", "dp", "greedy", "implementation"], "problem_rating": "2100", "solved_by": "x3983"},
{"url": "https://codeforces.com//problemset/problem/1479/B1", "name": "Painting the Array I", "tags": ["constructive algorithms", "data structures", "dp", "greedy", "implementation"], "problem_rating": "1900", "solved_by": "x6844"},
{"url": "https://codeforces.com//problemset/problem/1479/A", "name": "Searching Local Minimum", "tags": ["binary search", "interactive", "ternary search"], "problem_rating": "1700", "solved_by": "x11314"},
{"url": "https://codeforces.com//problemset/problem/1478/C", "name": "Nezzar and Symmetric Array", "tags": ["implementation", "math", "sortings"], "problem_rating": "1700", "solved_by": "x9605"},
{"url": "https://codeforces.com//problemset/problem/1478/B", "name": "Nezzar and Lucky Number", "tags": ["brute force", "dp", "greedy", "math"], "problem_rating": "1100", "solved_by": "x18146"},
{"url": "https://codeforces.com//problemset/problem/1478/A", "name": "Nezzar and Colorful Balls", "tags": ["brute force", "greedy"], "problem_rating": "800", "solved_by": "x25945"},
{"url": "https://codeforces.com//problemset/problem/1477/F", "name": "Nezzar and Chocolate Bars", "tags": ["combinatorics", "fft", "math", "probabilities"], "problem_rating": "3500", "solved_by": "x127"},
{"url": "https://codeforces.com//problemset/problem/1477/E", "name": "Nezzar and Tournaments", "tags": ["data structures", "greedy"], "problem_rating": "3300", "solved_by": "x119"},
{"url": "https://codeforces.com//problemset/problem/1477/D", "name": "Nezzar and Hidden Permutations", "tags": ["constructive algorithms", "dfs and similar", "graphs"], "problem_rating": "2800", "solved_by": "x539"},
{"url": "https://codeforces.com//problemset/problem/1477/C", "name": "Nezzar and Nice Beatmap", "tags": ["constructive algorithms", "geometry", "greedy", "math", "sortings"], "problem_rating": "2200", "solved_by": "x2233"},
{"url": "https://codeforces.com//problemset/problem/1477/B", "name": "Nezzar and Binary String", "tags": ["data structures", "greedy"], "problem_rating": "1900", "solved_by": "x3115"},
{"url": "https://codeforces.com//problemset/problem/1477/A", "name": "Nezzar and Board", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "1800", "solved_by": "x5780"},
{"url": "https://codeforces.com//problemset/problem/1476/G", "name": "Minimum Difference", "tags": ["data structures", "hashing", "sortings", "two pointers"], "problem_rating": "3100", "solved_by": "x559"},
{"url": "https://codeforces.com//problemset/problem/1476/F", "name": "Lanterns", "tags": ["binary search", "data structures", "dp"], "problem_rating": "3000", "solved_by": "x665"},
{"url": "https://codeforces.com//problemset/problem/1476/E", "name": "Pattern Matching", "tags": ["bitmasks", "data structures", "dfs and similar", "graphs", "hashing", "sortings", "strings"], "problem_rating": "2300", "solved_by": "x2286"},
{"url": "https://codeforces.com//problemset/problem/1476/D", "name": "Journey", "tags": ["dfs and similar", "dp", "dsu", "implementation"], "problem_rating": "1700", "solved_by": "x8475"},
{"url": "https://codeforces.com//problemset/problem/1476/C", "name": "Longest Simple Cycle", "tags": ["dp", "graphs", "greedy"], "problem_rating": "1600", "solved_by": "x11188"},
{"url": "https://codeforces.com//problemset/problem/1476/B", "name": "Inflation", "tags": ["binary search", "brute force", "greedy", "math"], "problem_rating": "1300", "solved_by": "x19729"},
{"url": "https://codeforces.com//problemset/problem/1476/A", "name": "K-divisible Sum", "tags": ["binary search", "constructive algorithms", "greedy", "math"], "problem_rating": "1000", "solved_by": "x36137"},
{"url": "https://codeforces.com//problemset/problem/1475/G", "name": "Strange Beauty", "tags": ["dp", "math", "number theory", "sortings"], "problem_rating": "1900", "solved_by": "x6606"},
{"url": "https://codeforces.com//problemset/problem/1475/F", "name": "Unusual Matrix", "tags": ["2-sat", "brute force", "constructive algorithms"], "problem_rating": "1900", "solved_by": "x5182"},
{"url": "https://codeforces.com//problemset/problem/1475/E", "name": "Advertising Agency", "tags": ["combinatorics", "math", "sortings"], "problem_rating": "1600", "solved_by": "x13294"},
{"url": "https://codeforces.com//problemset/problem/1475/D", "name": "Cleaning the Phone", "tags": ["binary search", "dp", "sortings", "two pointers"], "problem_rating": "1800", "solved_by": "x9929"},
{"url": "https://codeforces.com//problemset/problem/1475/C", "name": "Ball in Berland", "tags": ["combinatorics", "graphs", "math"], "problem_rating": "1400", "solved_by": "x20589"},
{"url": "https://codeforces.com//problemset/problem/1475/B", "name": "New Year's Number", "tags": ["brute force", "dp", "math"], "problem_rating": "900", "solved_by": "x47632"},
{"url": "https://codeforces.com//problemset/problem/1475/A", "name": "Odd Divisor", "tags": ["math", "number theory"], "problem_rating": "900", "solved_by": "x57920"},
{"url": "https://codeforces.com//problemset/problem/1474/F", "name": "1 2 3 4 ...", "tags": ["dp", "math", "matrices"], "problem_rating": "3000", "solved_by": "x243"},
{"url": "https://codeforces.com//problemset/problem/1474/E", "name": "What Is It?", "tags": ["constructive algorithms", "greedy"], "problem_rating": "2500", "solved_by": "x1312"},
{"url": "https://codeforces.com//problemset/problem/1474/D", "name": "Cleaning", "tags": ["data structures", "dp", "greedy", "math"], "problem_rating": "2200", "solved_by": "x3920"},
{"url": "https://codeforces.com//problemset/problem/1474/C", "name": "Array Destruction", "tags": ["brute force", "constructive algorithms", "data structures", "greedy", "implementation", "sortings"], "problem_rating": "1700", "solved_by": "x12402"},
{"url": "https://codeforces.com//problemset/problem/1474/B", "name": "Different Divisors", "tags": ["binary search", "constructive algorithms", "greedy", "math", "number theory"], "problem_rating": "1000", "solved_by": "x27548"},
{"url": "https://codeforces.com//problemset/problem/1474/A", "name": "Puzzle From the Future", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x22283"},
{"url": "https://codeforces.com//problemset/problem/1473/G", "name": "Tiles", "tags": ["combinatorics", "dp", "fft", "math"], "problem_rating": "2800", "solved_by": "x385"},
{"url": "https://codeforces.com//problemset/problem/1473/F", "name": "Strange Set", "tags": ["flows", "math"], "problem_rating": "2700", "solved_by": "x932"},
{"url": "https://codeforces.com//problemset/problem/1473/E", "name": "Minimum Path", "tags": ["graphs", "shortest paths"], "problem_rating": "2400", "solved_by": "x3437"},
{"url": "https://codeforces.com//problemset/problem/1473/D", "name": "Program", "tags": ["data structures", "dp", "implementation", "strings"], "problem_rating": "1700", "solved_by": "x9453"},
{"url": "https://codeforces.com//problemset/problem/1473/C", "name": "No More Inversions", "tags": ["constructive algorithms", "math"], "problem_rating": "1500", "solved_by": "x12522"},
{"url": "https://codeforces.com//problemset/problem/1473/B", "name": "String LCM", "tags": ["brute force", "math", "number theory", "strings"], "problem_rating": "1000", "solved_by": "x30686"},
{"url": "https://codeforces.com//problemset/problem/1473/A", "name": "Replacing Elements", "tags": ["greedy", "implementation", "math", "sortings"], "problem_rating": "800", "solved_by": "x33244"},
{"url": "https://codeforces.com//problemset/problem/1472/G", "name": "Moving to the Capital", "tags": ["dfs and similar", "dp", "graphs", "shortest paths"], "problem_rating": "2100", "solved_by": "x4513"},
{"url": "https://codeforces.com//problemset/problem/1472/F", "name": "New Year's Puzzle", "tags": ["brute force", "dp", "graph matchings", "greedy", "sortings"], "problem_rating": "2100", "solved_by": "x2975"},
{"url": "https://codeforces.com//problemset/problem/1472/E", "name": "Correct Placement", "tags": ["binary search", "data structures", "dp", "sortings", "two pointers"], "problem_rating": "1700", "solved_by": "x7867"},
{"url": "https://codeforces.com//problemset/problem/1472/D", "name": "Even-Odd Game", "tags": ["dp", "games", "greedy", "sortings"], "problem_rating": "1200", "solved_by": "x26623"},
{"url": "https://codeforces.com//problemset/problem/1472/C", "name": "Long Jumps", "tags": ["dp", "graphs"], "problem_rating": "1100", "solved_by": "x30638"},
{"url": "https://codeforces.com//problemset/problem/1472/B", "name": "Fair Division", "tags": ["dp", "greedy", "math"], "problem_rating": "800", "solved_by": "x48896"},
{"url": "https://codeforces.com//problemset/problem/1472/A", "name": "Cards for Friends", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x41417"},
{"url": "https://codeforces.com//problemset/problem/1471/B", "name": "Strange List", "tags": ["brute force", "greedy", "implementation", "math"], "problem_rating": "1100", "solved_by": "x19237"},
{"url": "https://codeforces.com//problemset/problem/1471/A", "name": "Strange Partition", "tags": ["greedy", "math", "number theory"], "problem_rating": "900", "solved_by": "x25353"},
{"url": "https://codeforces.com//problemset/problem/1470/F", "name": "Strange Covering", "tags": ["divide and conquer"], "problem_rating": "3500", "solved_by": "x118"},
{"url": "https://codeforces.com//problemset/problem/1470/E", "name": "Strange Permutation", "tags": ["binary search", "combinatorics", "data structures", "dp", "graphs", "implementation", "two pointers"], "problem_rating": "3200", "solved_by": "x297"},
{"url": "https://codeforces.com//problemset/problem/1470/D", "name": "Strange Housing", "tags": ["constructive algorithms", "dfs and similar", "graph matchings", "graphs", "greedy"], "problem_rating": "2200", "solved_by": "x3624"},
{"url": "https://codeforces.com//problemset/problem/1470/C", "name": "Strange Shuffle", "tags": ["binary search", "brute force", "constructive algorithms", "interactive"], "problem_rating": "2500", "solved_by": "x1318"},
{"url": "https://codeforces.com//problemset/problem/1470/B", "name": "Strange Definition", "tags": ["bitmasks", "graphs", "hashing", "math", "number theory"], "problem_rating": "1900", "solved_by": "x6248"},
{"url": "https://codeforces.com//problemset/problem/1470/A", "name": "Strange Birthday Party", "tags": ["binary search", "dp", "greedy", "sortings", "two pointers"], "problem_rating": "1300", "solved_by": "x21862"},
{"url": "https://codeforces.com//problemset/problem/1469/F", "name": "Power Sockets", "tags": ["binary search", "data structures", "greedy"], "problem_rating": "2600", "solved_by": "x845"},
{"url": "https://codeforces.com//problemset/problem/1469/E", "name": "A Bit Similar", "tags": ["bitmasks", "brute force", "hashing", "string suffix structures", "strings", "two pointers"], "problem_rating": "2400", "solved_by": "x1901"},
{"url": "https://codeforces.com//problemset/problem/1469/D", "name": "Ceil Divisions", "tags": ["brute force", "constructive algorithms", "math", "number theory"], "problem_rating": "1700", "solved_by": "x9296"},
{"url": "https://codeforces.com//problemset/problem/1469/C", "name": "Building a Fence", "tags": ["dp", "greedy", "implementation", "two pointers"], "problem_rating": "1600", "solved_by": "x10605"},
{"url": "https://codeforces.com//problemset/problem/1469/B", "name": "Red and Blue", "tags": ["dp", "greedy"], "problem_rating": "1000", "solved_by": "x26683"},
{"url": "https://codeforces.com//problemset/problem/1469/A", "name": "Regular Bracket Sequence", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1000", "solved_by": "x26974"},
{"url": "https://codeforces.com//problemset/problem/1468/N", "name": "Waste Sorting", "tags": ["greedy", "implementation"], "problem_rating": "900", "solved_by": "x8045"},
{"url": "https://codeforces.com//problemset/problem/1468/M", "name": "Similar Sets", "tags": ["data structures", "graphs", "implementation"], "problem_rating": "2300", "solved_by": "x930"},
{"url": "https://codeforces.com//problemset/problem/1468/L", "name": "Prime Divisors Selection", "tags": ["binary search", "greedy", "math", "number theory"], "problem_rating": "2700", "solved_by": "x318"},
{"url": "https://codeforces.com//problemset/problem/1468/K", "name": "The Robot", "tags": ["brute force", "implementation"], "problem_rating": "1600", "solved_by": "x5023"},
{"url": "https://codeforces.com//problemset/problem/1468/J", "name": "Road Reform", "tags": ["dsu", "graphs", "greedy"], "problem_rating": "1800", "solved_by": "x3996"},
{"url": "https://codeforces.com//problemset/problem/1468/I", "name": "Plane Tiling", "tags": ["geometry", "implementation", "math"], "problem_rating": "2500", "solved_by": "x492"},
{"url": "https://codeforces.com//problemset/problem/1468/H", "name": "K and Medians", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "2200", "solved_by": "x1731"},
{"url": "https://codeforces.com//problemset/problem/1468/G", "name": "Hobbits", "tags": ["binary search", "geometry"], "problem_rating": "2500", "solved_by": "x805"},
{"url": "https://codeforces.com//problemset/problem/1468/F", "name": "Full Turn", "tags": ["geometry", "hashing", "number theory"], "problem_rating": "1700", "solved_by": "x3657"},
{"url": "https://codeforces.com//problemset/problem/1468/E", "name": "Four Segments", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x8713"},
{"url": "https://codeforces.com//problemset/problem/1468/D", "name": "Firecrackers", "tags": ["binary search", "sortings"], "problem_rating": "1700", "solved_by": "x4557"},
{"url": "https://codeforces.com//problemset/problem/1468/C", "name": "Berpizza", "tags": ["data structures", "implementation"], "problem_rating": "1400", "solved_by": "x7613"},
{"url": "https://codeforces.com//problemset/problem/1468/B", "name": "Bakery", "tags": ["data structures", "dsu"], "problem_rating": "2900", "solved_by": "x209"},
{"url": "https://codeforces.com//problemset/problem/1468/A", "name": "LaIS", "tags": ["data structures", "dp", "greedy"], "problem_rating": "2200", "solved_by": "x1630"},
{"url": "https://codeforces.com//problemset/problem/1467/E", "name": "Distinctive Roots in a Tree", "tags": ["data structures", "dfs and similar", "dp", "trees"], "problem_rating": "2500", "solved_by": "x1360"},
{"url": "https://codeforces.com//problemset/problem/1467/D", "name": "Sum of Paths", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2200", "solved_by": "x3592"},
{"url": "https://codeforces.com//problemset/problem/1467/C", "name": "Three Bags", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1900", "solved_by": "x6286"},
{"url": "https://codeforces.com//problemset/problem/1467/B", "name": "Hills And Valleys", "tags": ["brute force", "implementation"], "problem_rating": "1700", "solved_by": "x10807"},
{"url": "https://codeforces.com//problemset/problem/1467/A", "name": "Wizard of Orz", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "900", "solved_by": "x24099"},
{"url": "https://codeforces.com//problemset/problem/1466/I", "name": "The Riddle of the Sphinx", "tags": ["binary search", "data structures", "data structures", "interactive"], "problem_rating": "3400", "solved_by": "x186"},
{"url": "https://codeforces.com//problemset/problem/1466/H", "name": "Finding satisfactory solutions", "tags": ["combinatorics", "dp", "graphs", "greedy", "math"], "problem_rating": "3300", "solved_by": "x270"},
{"url": "https://codeforces.com//problemset/problem/1466/G", "name": "Song of the Sirens", "tags": ["combinatorics", "divide and conquer", "hashing", "math", "string suffix structures", "strings"], "problem_rating": "2600", "solved_by": "x863"},
{"url": "https://codeforces.com//problemset/problem/1466/F", "name": "Euclid's nightmare", "tags": ["bitmasks", "dfs and similar", "dsu", "graphs", "greedy", "math", "sortings"], "problem_rating": "2100", "solved_by": "x2815"},
{"url": "https://codeforces.com//problemset/problem/1466/E", "name": "Apollo versus Pan", "tags": ["bitmasks", "brute force", "math"], "problem_rating": "1800", "solved_by": "x7154"},
{"url": "https://codeforces.com//problemset/problem/1466/D", "name": "13th Labour of Heracles", "tags": ["data structures", "greedy", "sortings", "trees"], "problem_rating": "1500", "solved_by": "x11047"},
{"url": "https://codeforces.com//problemset/problem/1466/C", "name": "Canine poetry", "tags": ["dp", "greedy", "strings"], "problem_rating": "1300", "solved_by": "x17455"},
{"url": "https://codeforces.com//problemset/problem/1466/B", "name": "Last minute enhancements", "tags": ["dp", "greedy"], "problem_rating": "800", "solved_by": "x22508"},
{"url": "https://codeforces.com//problemset/problem/1466/A", "name": "Bovine Dilemma", "tags": ["brute force", "geometry", "math"], "problem_rating": "800", "solved_by": "x22393"},
{"url": "https://codeforces.com//problemset/problem/1464/F", "name": "My Beautiful Madness", "tags": ["data structures", "trees"], "problem_rating": "3500", "solved_by": "x298"},
{"url": "https://codeforces.com//problemset/problem/1463/F", "name": "Max Correct Set", "tags": ["bitmasks", "dp", "math"], "problem_rating": "3100", "solved_by": "x564"},
{"url": "https://codeforces.com//problemset/problem/1463/E", "name": "Plan of Lectures", "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs", "implementation", "sortings", "trees"], "problem_rating": "2400", "solved_by": "x1478"},
{"url": "https://codeforces.com//problemset/problem/1463/D", "name": "Pairs", "tags": ["binary search", "constructive algorithms", "greedy", "two pointers"], "problem_rating": "1900", "solved_by": "x4347"},
{"url": "https://codeforces.com//problemset/problem/1463/C", "name": "Busy Robot", "tags": ["implementation"], "problem_rating": "1800", "solved_by": "x5579"},
{"url": "https://codeforces.com//problemset/problem/1463/B", "name": "Find The Array", "tags": ["bitmasks", "constructive algorithms", "greedy"], "problem_rating": "1400", "solved_by": "x19096"},
{"url": "https://codeforces.com//problemset/problem/1463/A", "name": "Dungeon", "tags": ["binary search", "math"], "problem_rating": "1100", "solved_by": "x25118"},
{"url": "https://codeforces.com//problemset/problem/1462/F", "name": "The Treasure of The Segments", "tags": ["binary search", "data structures", "greedy"], "problem_rating": "1800", "solved_by": "x6849"},
{"url": "https://codeforces.com//problemset/problem/1462/E2", "name": "Close Tuples (hard version)", "tags": ["binary search", "combinatorics", "implementation", "math", "sortings", "two pointers"], "problem_rating": "1700", "solved_by": "x9508"},
{"url": "https://codeforces.com//problemset/problem/1462/E1", "name": "Close Tuples (easy version)", "tags": ["binary search", "combinatorics", "math", "sortings", "two pointers"], "problem_rating": "1500", "solved_by": "x13515"},
{"url": "https://codeforces.com//problemset/problem/1462/D", "name": "Add to Neighbour and Remove", "tags": ["greedy", "math", "number theory"], "problem_rating": "1400", "solved_by": "x16531"},
{"url": "https://codeforces.com//problemset/problem/1462/C", "name": "Unique Number", "tags": ["brute force", "greedy", "math"], "problem_rating": "900", "solved_by": "x32015"},
{"url": "https://codeforces.com//problemset/problem/1462/B", "name": "Last Year's Substring", "tags": ["dp", "implementation", "strings"], "problem_rating": "800", "solved_by": "x26903"},
{"url": "https://codeforces.com//problemset/problem/1462/A", "name": "Favorite Sequence", "tags": ["implementation", "two pointers"], "problem_rating": "800", "solved_by": "x40888"},
{"url": "https://codeforces.com//problemset/problem/1461/F", "name": "Mathematical Expression", "tags": ["constructive algorithms", "dp", "greedy"], "problem_rating": "2700", "solved_by": "x538"},
{"url": "https://codeforces.com//problemset/problem/1461/E", "name": "Water Level", "tags": ["brute force", "graphs", "greedy", "implementation", "math"], "problem_rating": "2200", "solved_by": "x2086"},
{"url": "https://codeforces.com//problemset/problem/1461/D", "name": "Divide and Summarize", "tags": ["binary search", "brute force", "data structures", "divide and conquer", "implementation", "sortings"], "problem_rating": "1600", "solved_by": "x9119"},
{"url": "https://codeforces.com//problemset/problem/1461/C", "name": "Random Events", "tags": ["dp", "math", "probabilities"], "problem_rating": "1500", "solved_by": "x11062"},
{"url": "https://codeforces.com//problemset/problem/1461/B", "name": "Find the Spruce", "tags": ["brute force", "dp", "implementation"], "problem_rating": "1400", "solved_by": "x12522"},
{"url": "https://codeforces.com//problemset/problem/1461/A", "name": "String Generation", "tags": ["constructive algorithms", "greedy"], "problem_rating": "800", "solved_by": "x18522"},
{"url": "https://codeforces.com//problemset/problem/1459/B", "name": "Move and Turn", "tags": ["dp", "math"], "problem_rating": "1300", "solved_by": "x14364"},
{"url": "https://codeforces.com//problemset/problem/1459/A", "name": "Red-Blue Shuffle", "tags": ["math", "probabilities"], "problem_rating": "800", "solved_by": "x16922"},
{"url": "https://codeforces.com//problemset/problem/1458/F", "name": "Range Diameter Sum", "tags": ["data structures", "trees"], "problem_rating": "3500", "solved_by": "x268"},
{"url": "https://codeforces.com//problemset/problem/1458/E", "name": "Nim Shortcuts", "tags": ["data structures", "games"], "problem_rating": "3100", "solved_by": "x440"},
{"url": "https://codeforces.com//problemset/problem/1458/D", "name": "Flip and Reverse", "tags": ["data structures", "graphs", "greedy"], "problem_rating": "3100", "solved_by": "x1032"},
{"url": "https://codeforces.com//problemset/problem/1458/C", "name": "Latin Square", "tags": ["math", "matrices"], "problem_rating": "2700", "solved_by": "x1263"},
{"url": "https://codeforces.com//problemset/problem/1458/B", "name": "Glass Half Spilled", "tags": ["dp"], "problem_rating": "2000", "solved_by": "x3477"},
{"url": "https://codeforces.com//problemset/problem/1458/A", "name": "Row GCD", "tags": ["math", "number theory"], "problem_rating": "1600", "solved_by": "x17020"},
{"url": "https://codeforces.com//problemset/problem/1456/E", "name": "XOR-ranges", "tags": ["dp", "greedy"], "problem_rating": "3500", "solved_by": "x275"},
{"url": "https://codeforces.com//problemset/problem/1455/G", "name": "Forbidden Value", "tags": ["data structures", "dp"], "problem_rating": "2900", "solved_by": "x400"},
{"url": "https://codeforces.com//problemset/problem/1455/F", "name": "String and Operations", "tags": ["dp", "greedy"], "problem_rating": "2800", "solved_by": "x426"},
{"url": "https://codeforces.com//problemset/problem/1455/E", "name": "Four Points", "tags": ["brute force", "constructive algorithms", "flows", "geometry", "greedy", "implementation", "math", "ternary search"], "problem_rating": "2400", "solved_by": "x1497"},
{"url": "https://codeforces.com//problemset/problem/1455/D", "name": "Sequence and Swaps", "tags": ["dp", "greedy", "sortings"], "problem_rating": "1600", "solved_by": "x12164"},
{"url": "https://codeforces.com//problemset/problem/1455/C", "name": "Ping-pong", "tags": ["constructive algorithms", "games", "math"], "problem_rating": "1100", "solved_by": "x19454"},
{"url": "https://codeforces.com//problemset/problem/1455/B", "name": "Jumps", "tags": ["constructive algorithms", "math"], "problem_rating": "1200", "solved_by": "x21592"},
{"url": "https://codeforces.com//problemset/problem/1455/A", "name": "Strange Functions", "tags": ["math", "number theory"], "problem_rating": "800", "solved_by": "x26273"},
{"url": "https://codeforces.com//problemset/problem/1454/F", "name": "Array Partition", "tags": ["binary search", "data structures", "greedy", "two pointers"], "problem_rating": "2100", "solved_by": "x3940"},
{"url": "https://codeforces.com//problemset/problem/1454/E", "name": "Number of Simple Paths", "tags": ["combinatorics", "dfs and similar", "graphs", "trees"], "problem_rating": "2000", "solved_by": "x5679"},
{"url": "https://codeforces.com//problemset/problem/1454/D", "name": "Number into Sequence", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "1300", "solved_by": "x20067"},
{"url": "https://codeforces.com//problemset/problem/1454/C", "name": "Sequence Transformation", "tags": ["greedy", "implementation"], "problem_rating": "1200", "solved_by": "x21224"},
{"url": "https://codeforces.com//problemset/problem/1454/B", "name": "Unique Bid Auction", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x27824"},
{"url": "https://codeforces.com//problemset/problem/1454/A", "name": "Special Permutation", "tags": ["constructive algorithms", "probabilities"], "problem_rating": "800", "solved_by": "x39926"},
{"url": "https://codeforces.com//problemset/problem/1453/F", "name": "Even Harder", "tags": ["dp"], "problem_rating": "2700", "solved_by": "x822"},
{"url": "https://codeforces.com//problemset/problem/1453/E", "name": "Dog Snacks", "tags": ["binary search", "dfs and similar", "dp", "greedy", "trees"], "problem_rating": "2300", "solved_by": "x1994"},
{"url": "https://codeforces.com//problemset/problem/1453/D", "name": "Checkpoints", "tags": ["brute force", "constructive algorithms", "greedy", "math", "probabilities"], "problem_rating": "1900", "solved_by": "x4116"},
{"url": "https://codeforces.com//problemset/problem/1453/C", "name": "Triangles", "tags": ["greedy", "implementation"], "problem_rating": "1700", "solved_by": "x6006"},
{"url": "https://codeforces.com//problemset/problem/1453/B", "name": "Suffix Operations", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1400", "solved_by": "x13261"},
{"url": "https://codeforces.com//problemset/problem/1453/A", "name": "Cancel the Trains", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x22411"},
{"url": "https://codeforces.com//problemset/problem/1452/G", "name": "Game On Tree", "tags": ["data structures", "dfs and similar", "greedy", "trees"], "problem_rating": "2700", "solved_by": "x469"},
{"url": "https://codeforces.com//problemset/problem/1452/F", "name": "Divide Powers", "tags": ["constructive algorithms", "greedy"], "problem_rating": "2900", "solved_by": "x308"},
{"url": "https://codeforces.com//problemset/problem/1452/E", "name": "Two Editorials", "tags": ["brute force", "dp", "greedy", "sortings", "two pointers"], "problem_rating": "2500", "solved_by": "x1544"},
{"url": "https://codeforces.com//problemset/problem/1452/D", "name": "Radio Towers", "tags": ["combinatorics", "dp", "math"], "problem_rating": "1600", "solved_by": "x7873"},
{"url": "https://codeforces.com//problemset/problem/1452/C", "name": "Two Brackets", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x19303"},
{"url": "https://codeforces.com//problemset/problem/1452/B", "name": "Toy Blocks", "tags": ["binary search", "greedy", "math", "sortings"], "problem_rating": "1400", "solved_by": "x14591"},
{"url": "https://codeforces.com//problemset/problem/1452/A", "name": "Robot Program", "tags": ["math"], "problem_rating": "800", "solved_by": "x21993"},
{"url": "https://codeforces.com//problemset/problem/1451/F", "name": "Nullify The Matrix", "tags": ["constructive algorithms", "games"], "problem_rating": "2700", "solved_by": "x939"},
{"url": "https://codeforces.com//problemset/problem/1451/E2", "name": "Bitwise Queries (Hard Version)", "tags": ["bitmasks", "constructive algorithms", "interactive", "math"], "problem_rating": "2300", "solved_by": "x2925"},
{"url": "https://codeforces.com//problemset/problem/1451/E1", "name": "Bitwise Queries (Easy Version)", "tags": ["bitmasks", "constructive algorithms", "interactive", "math"], "problem_rating": "2000", "solved_by": "x4303"},
{"url": "https://codeforces.com//problemset/problem/1451/D", "name": "Circle Game", "tags": ["games", "geometry", "math"], "problem_rating": "1700", "solved_by": "x9382"},
{"url": "https://codeforces.com//problemset/problem/1451/C", "name": "String Equality", "tags": ["dp", "greedy", "hashing", "implementation", "strings"], "problem_rating": "1400", "solved_by": "x15356"},
{"url": "https://codeforces.com//problemset/problem/1451/B", "name": "Non-Substring Subsequence", "tags": ["dp", "greedy", "implementation", "strings"], "problem_rating": "900", "solved_by": "x19142"},
{"url": "https://codeforces.com//problemset/problem/1451/A", "name": "Subtract or Divide", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x24047"},
{"url": "https://codeforces.com//problemset/problem/1450/H2", "name": "Multithreading (Hard Version)", "tags": ["combinatorics", "implementation", "math"], "problem_rating": "3300", "solved_by": "x215"},
{"url": "https://codeforces.com//problemset/problem/1450/H1", "name": "Multithreading (Easy Version)", "tags": ["combinatorics", "fft", "math"], "problem_rating": "2900", "solved_by": "x425"},
{"url": "https://codeforces.com//problemset/problem/1450/G", "name": "Communism", "tags": ["bitmasks", "dp", "trees"], "problem_rating": "3500", "solved_by": "x303"},
{"url": "https://codeforces.com//problemset/problem/1450/F", "name": "The Struggling Contestant", "tags": ["constructive algorithms", "greedy"], "problem_rating": "2400", "solved_by": "x1329"},
{"url": "https://codeforces.com//problemset/problem/1450/E", "name": "Capitalism", "tags": ["constructive algorithms", "dfs and similar", "graphs", "shortest paths"], "problem_rating": "2700", "solved_by": "x1105"},
{"url": "https://codeforces.com//problemset/problem/1450/D", "name": "Rating Compression", "tags": ["binary search", "data structures", "greedy", "implementation", "two pointers"], "problem_rating": "1800", "solved_by": "x5416"},
{"url": "https://codeforces.com//problemset/problem/1450/C2", "name": "Errich-Tac-Toe (Hard Version)", "tags": ["constructive algorithms", "math"], "problem_rating": "2300", "solved_by": "x3613"},
{"url": "https://codeforces.com//problemset/problem/1450/C1", "name": "Errich-Tac-Toe (Easy Version)", "tags": ["constructive algorithms", "math"], "problem_rating": "2100", "solved_by": "x5417"},
{"url": "https://codeforces.com//problemset/problem/1450/B", "name": "Balls of Steel", "tags": ["brute force", "geometry", "greedy"], "problem_rating": "1000", "solved_by": "x15085"},
{"url": "https://codeforces.com//problemset/problem/1450/A", "name": "Avoid Trygub", "tags": ["constructive algorithms", "sortings"], "problem_rating": "800", "solved_by": "x17652"},
{"url": "https://codeforces.com//problemset/problem/1447/B", "name": "Numbers Box", "tags": ["greedy", "math"], "problem_rating": "1000", "solved_by": "x15934"},
{"url": "https://codeforces.com//problemset/problem/1447/A", "name": "Add Candies", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x13743"},
{"url": "https://codeforces.com//problemset/problem/1446/F", "name": "Line Distance", "tags": ["binary search", "data structures", "geometry"], "problem_rating": "3200", "solved_by": "x327"},
{"url": "https://codeforces.com//problemset/problem/1446/E", "name": "Long Recovery", "tags": ["constructive algorithms", "dfs and similar"], "problem_rating": "3500", "solved_by": "x80"},
{"url": "https://codeforces.com//problemset/problem/1446/D2", "name": "Frequency Problem (Hard Version)", "tags": ["data structures", "greedy", "two pointers"], "problem_rating": "3000", "solved_by": "x1268"},
{"url": "https://codeforces.com//problemset/problem/1446/D1", "name": "Frequency Problem (Easy Version)", "tags": ["data structures", "greedy"], "problem_rating": "2600", "solved_by": "x1706"},
{"url": "https://codeforces.com//problemset/problem/1446/C", "name": "Xor Tree", "tags": ["binary search", "bitmasks", "data structures", "divide and conquer", "dp", "trees"], "problem_rating": "2100", "solved_by": "x3525"},
{"url": "https://codeforces.com//problemset/problem/1446/B", "name": "Catching Cheaters", "tags": ["dp", "strings"], "problem_rating": "1800", "solved_by": "x7735"},
{"url": "https://codeforces.com//problemset/problem/1446/A", "name": "Knapsack", "tags": ["constructive algorithms", "greedy", "sortings"], "problem_rating": "1300", "solved_by": "x15280"},
{"url": "https://codeforces.com//problemset/problem/1445/B", "name": "Elimination", "tags": ["greedy", "math"], "problem_rating": "900", "solved_by": "x15180"},
{"url": "https://codeforces.com//problemset/problem/1445/A", "name": "Array Rearrangment", "tags": ["greedy", "sortings"], "problem_rating": "800", "solved_by": "x19037"},
{"url": "https://codeforces.com//problemset/problem/1444/E", "name": "Finding the Vertex", "tags": ["brute force", "dfs and similar", "dp", "interactive", "trees"], "problem_rating": "3500", "solved_by": "x135"},
{"url": "https://codeforces.com//problemset/problem/1444/D", "name": "Rectangular Polyline", "tags": ["constructive algorithms", "dp", "geometry"], "problem_rating": "2900", "solved_by": "x563"},
{"url": "https://codeforces.com//problemset/problem/1444/C", "name": "Team-Building", "tags": ["data structures", "dfs and similar", "dsu", "graphs"], "problem_rating": "2500", "solved_by": "x1560"},
{"url": "https://codeforces.com//problemset/problem/1444/B", "name": "Divide and Sum", "tags": ["combinatorics", "math", "sortings"], "problem_rating": "1900", "solved_by": "x6189"},
{"url": "https://codeforces.com//problemset/problem/1444/A", "name": "Division", "tags": ["brute force", "math", "number theory"], "problem_rating": "1500", "solved_by": "x12843"},
{"url": "https://codeforces.com//problemset/problem/1443/E", "name": "Long Permutation", "tags": ["brute force", "math", "two pointers"], "problem_rating": "2400", "solved_by": "x1234"},
{"url": "https://codeforces.com//problemset/problem/1443/C", "name": "The Delivery Dilemma", "tags": ["binary search", "greedy", "sortings"], "problem_rating": "1400", "solved_by": "x15102"},
{"url": "https://codeforces.com//problemset/problem/1443/B", "name": "Saving the City", "tags": ["dp", "greedy", "math", "sortings"], "problem_rating": "1300", "solved_by": "x15660"},
{"url": "https://codeforces.com//problemset/problem/1443/A", "name": "Kids Seating", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x16180"},
{"url": "https://codeforces.com//problemset/problem/1442/F", "name": "Differentiating Games", "tags": ["games", "interactive"], "problem_rating": "3400", "solved_by": "x130"},
{"url": "https://codeforces.com//problemset/problem/1442/E", "name": "Black, White and Grey Tree", "tags": ["binary search", "constructive algorithms", "dfs and similar", "dp", "greedy", "trees"], "problem_rating": "3000", "solved_by": "x567"},
{"url": "https://codeforces.com//problemset/problem/1442/D", "name": "Sum", "tags": ["data structures", "divide and conquer", "dp", "greedy"], "problem_rating": "2800", "solved_by": "x2105"},
{"url": "https://codeforces.com//problemset/problem/1442/C", "name": "Graph Transpositions", "tags": ["dfs and similar", "graphs", "greedy", "shortest paths"], "problem_rating": "2400", "solved_by": "x1658"},
{"url": "https://codeforces.com//problemset/problem/1442/B", "name": "Identify the Operations", "tags": ["combinatorics", "data structures", "dsu", "greedy", "implementation"], "problem_rating": "1800", "solved_by": "x4431"},
{"url": "https://codeforces.com//problemset/problem/1442/A", "name": "Extreme Subtraction", "tags": ["constructive algorithms", "dp", "greedy"], "problem_rating": "1800", "solved_by": "x8739"},
{"url": "https://codeforces.com//problemset/problem/1440/B", "name": "Sum of Medians", "tags": ["greedy", "math"], "problem_rating": "900", "solved_by": "x18151"},
{"url": "https://codeforces.com//problemset/problem/1440/A", "name": "Buy the String", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x19657"},
{"url": "https://codeforces.com//problemset/problem/1439/E", "name": "Cheat and Win", "tags": ["bitmasks", "data structures", "games", "trees"], "problem_rating": "3500", "solved_by": "x219"},
{"url": "https://codeforces.com//problemset/problem/1439/D", "name": "INOI Final Contests", "tags": ["combinatorics", "dp", "fft"], "problem_rating": "3100", "solved_by": "x355"},
{"url": "https://codeforces.com//problemset/problem/1439/C", "name": "Greedy Shopping", "tags": ["binary search", "data structures", "divide and conquer", "greedy", "implementation"], "problem_rating": "2600", "solved_by": "x1742"},
{"url": "https://codeforces.com//problemset/problem/1439/B", "name": "Graph Subset Problem", "tags": ["constructive algorithms", "data structures", "graphs"], "problem_rating": "2600", "solved_by": "x1442"},
{"url": "https://codeforces.com//problemset/problem/1439/A2", "name": "Binary Table (Hard Version)", "tags": ["constructive algorithms", "graphs", "greedy", "implementation"], "problem_rating": "1900", "solved_by": "x5067"},
{"url": "https://codeforces.com//problemset/problem/1439/A1", "name": "Binary Table (Easy Version)", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1500", "solved_by": "x9300"},
{"url": "https://codeforces.com//problemset/problem/1438/F", "name": "Olha and Igor", "tags": ["interactive", "probabilities", "trees"], "problem_rating": "3000", "solved_by": "x625"},
{"url": "https://codeforces.com//problemset/problem/1438/E", "name": "Yurii Can Do Everything", "tags": ["binary search", "bitmasks", "brute force", "constructive algorithms", "divide and conquer", "two pointers"], "problem_rating": "2500", "solved_by": "x1309"},
{"url": "https://codeforces.com//problemset/problem/1438/D", "name": "Powerful Ksenia", "tags": ["bitmasks", "constructive algorithms", "math"], "problem_rating": "2200", "solved_by": "x4130"},
{"url": "https://codeforces.com//problemset/problem/1438/C", "name": "Engineer Artem", "tags": ["2-sat", "chinese remainder theorem", "constructive algorithms", "fft", "flows"], "problem_rating": "2000", "solved_by": "x10323"},
{"url": "https://codeforces.com//problemset/problem/1438/B", "name": "Valerii Against Everyone", "tags": ["constructive algorithms", "data structures", "greedy", "sortings"], "problem_rating": "1000", "solved_by": "x19106"},
{"url": "https://codeforces.com//problemset/problem/1438/A", "name": "Specific Tastes of Andre", "tags": ["constructive algorithms", "implementation"], "problem_rating": "800", "solved_by": "x19196"},
{"url": "https://codeforces.com//problemset/problem/1437/G", "name": "Death DBMS", "tags": ["data structures", "string suffix structures", "strings", "trees"], "problem_rating": "2600", "solved_by": "x967"},
{"url": "https://codeforces.com//problemset/problem/1437/F", "name": "Emotional Fishermen", "tags": ["combinatorics", "dp", "math", "two pointers"], "problem_rating": "2600", "solved_by": "x1189"},
{"url": "https://codeforces.com//problemset/problem/1437/E", "name": "Make It Increasing", "tags": ["binary search", "constructive algorithms", "data structures", "dp", "implementation"], "problem_rating": "2200", "solved_by": "x3383"},
{"url": "https://codeforces.com//problemset/problem/1437/D", "name": "Minimal Height Tree", "tags": ["graphs", "greedy", "shortest paths", "trees"], "problem_rating": "1600", "solved_by": "x12562"},
{"url": "https://codeforces.com//problemset/problem/1437/C", "name": "Chef Monocarp", "tags": ["dp", "flows", "graph matchings", "greedy", "math", "sortings"], "problem_rating": "1800", "solved_by": "x10323"},
{"url": "https://codeforces.com//problemset/problem/1437/B", "name": "Reverse Binary Strings", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1200", "solved_by": "x18986"},
{"url": "https://codeforces.com//problemset/problem/1437/A", "name": "Marketing Scheme", "tags": ["brute force", "constructive algorithms", "greedy", "math"], "problem_rating": "800", "solved_by": "x17973"},
{"url": "https://codeforces.com//problemset/problem/1436/F", "name": "Sum Over Subsets", "tags": ["combinatorics", "math", "number theory"], "problem_rating": "2800", "solved_by": "x514"},
{"url": "https://codeforces.com//problemset/problem/1436/E", "name": "Complicated Computations", "tags": ["binary search", "data structures", "two pointers"], "problem_rating": "2400", "solved_by": "x2213"},
{"url": "https://codeforces.com//problemset/problem/1436/D", "name": "Bandit in a City", "tags": ["binary search", "dfs and similar", "graphs", "greedy", "trees"], "problem_rating": "1900", "solved_by": "x5981"},
{"url": "https://codeforces.com//problemset/problem/1436/C", "name": "Binary Search", "tags": ["binary search", "combinatorics"], "problem_rating": "1500", "solved_by": "x10717"},
{"url": "https://codeforces.com//problemset/problem/1436/B", "name": "Prime Square", "tags": ["constructive algorithms", "math"], "problem_rating": "900", "solved_by": "x20421"},
{"url": "https://codeforces.com//problemset/problem/1436/A", "name": "Reorder", "tags": ["math"], "problem_rating": "800", "solved_by": "x22591"},
{"url": "https://codeforces.com//problemset/problem/1434/E", "name": "A Convex Game", "tags": ["dsu", "games"], "problem_rating": "3500", "solved_by": "x169"},
{"url": "https://codeforces.com//problemset/problem/1433/G", "name": "Reducing Delivery Cost", "tags": ["brute force", "graphs", "shortest paths"], "problem_rating": "2100", "solved_by": "x4223"},
{"url": "https://codeforces.com//problemset/problem/1433/F", "name": "Zero Remainder Sum", "tags": ["dp"], "problem_rating": "2100", "solved_by": "x5947"},
{"url": "https://codeforces.com//problemset/problem/1433/E", "name": "Two Round Dances", "tags": ["combinatorics", "math"], "problem_rating": "1300", "solved_by": "x18272"},
{"url": "https://codeforces.com//problemset/problem/1433/D", "name": "Districts Connection", "tags": ["constructive algorithms", "dfs and similar"], "problem_rating": "1200", "solved_by": "x22499"},
{"url": "https://codeforces.com//problemset/problem/1433/C", "name": "Dominant Piranha", "tags": ["constructive algorithms", "greedy"], "problem_rating": "900", "solved_by": "x26724"},
{"url": "https://codeforces.com//problemset/problem/1433/B", "name": "Yet Another Bookshelf", "tags": ["greedy", "implementation"], "problem_rating": "800", "solved_by": "x28239"},
{"url": "https://codeforces.com//problemset/problem/1433/A", "name": "Boring Apartments", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x50921"},
{"url": "https://codeforces.com//problemset/problem/1431/J", "name": "Zero-XOR Array", "tags": ["*special problem", "dp"], "problem_rating": "3400", "solved_by": "x44"},
{"url": "https://codeforces.com//problemset/problem/1431/I", "name": "Cyclic Shifts", "tags": ["*special problem", "strings"], "problem_rating": "2900", "solved_by": "x45"},
{"url": "https://codeforces.com//problemset/problem/1431/H", "name": "Rogue-like Game", "tags": ["*special problem", "brute force", "greedy", "two pointers"], "problem_rating": "2600", "solved_by": "x67"},
{"url": "https://codeforces.com//problemset/problem/1431/G", "name": "Number Deletion Game", "tags": ["*special problem", "dp", "games", "greedy"], "problem_rating": "2100", "solved_by": "x181"},
{"url": "https://codeforces.com//problemset/problem/1431/F", "name": "Neural Network Problem", "tags": ["*special problem", "binary search", "greedy"], "problem_rating": "2100", "solved_by": "x156"},
{"url": "https://codeforces.com//problemset/problem/1431/E", "name": "Chess Match", "tags": ["*special problem"], "problem_rating": "2000", "solved_by": "x220"},
{"url": "https://codeforces.com//problemset/problem/1431/D", "name": "Used Markers", "tags": ["*special problem", "greedy"], "problem_rating": "1500", "solved_by": "x451"},
{"url": "https://codeforces.com//problemset/problem/1431/C", "name": "Black Friday", "tags": ["*special problem", "implementation"], "problem_rating": "1600", "solved_by": "x701"},
{"url": "https://codeforces.com//problemset/problem/1431/B", "name": "Polycarp and the Language of Gods", "tags": ["*special problem", "implementation", "two pointers"], "problem_rating": "1400", "solved_by": "x1006"},
{"url": "https://codeforces.com//problemset/problem/1431/A", "name": "Selling Hamburgers", "tags": ["*special problem"], "problem_rating": "800", "solved_by": "x1822"},
{"url": "https://codeforces.com//problemset/problem/1430/G", "name": "Yet Another DAG Problem", "tags": ["bitmasks", "dfs and similar", "dp", "flows", "graphs", "math"], "problem_rating": "2600", "solved_by": "x638"},
{"url": "https://codeforces.com//problemset/problem/1430/F", "name": "Realistic Gameplay", "tags": ["dp", "greedy"], "problem_rating": "2600", "solved_by": "x879"},
{"url": "https://codeforces.com//problemset/problem/1430/E", "name": "String Reversal", "tags": ["data structures", "greedy", "strings"], "problem_rating": "1900", "solved_by": "x6379"},
{"url": "https://codeforces.com//problemset/problem/1430/D", "name": "String Deletion", "tags": ["binary search", "data structures", "greedy", "two pointers"], "problem_rating": "1700", "solved_by": "x8737"},
{"url": "https://codeforces.com//problemset/problem/1430/C", "name": "Numbers on Whiteboard", "tags": ["constructive algorithms", "data structures", "greedy", "implementation", "math"], "problem_rating": "1000", "solved_by": "x23947"},
{"url": "https://codeforces.com//problemset/problem/1430/B", "name": "Barrels", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "800", "solved_by": "x19302"},
{"url": "https://codeforces.com//problemset/problem/1430/A", "name": "Number of Apartments", "tags": ["brute force", "constructive algorithms", "math"], "problem_rating": "900", "solved_by": "x20764"},
{"url": "https://codeforces.com//problemset/problem/1428/H", "name": "Rotary Laser Lock", "tags": ["binary search", "interactive"], "problem_rating": "3500", "solved_by": "x103"},
{"url": "https://codeforces.com//problemset/problem/1428/G2", "name": "Lucky Numbers (Hard Version)", "tags": ["dp", "greedy"], "problem_rating": "3000", "solved_by": "x619"},
{"url": "https://codeforces.com//problemset/problem/1428/G1", "name": "Lucky Numbers (Easy Version)", "tags": ["dp", "greedy"], "problem_rating": "2900", "solved_by": "x556"},
{"url": "https://codeforces.com//problemset/problem/1428/F", "name": "Fruit Sequences", "tags": ["binary search", "data structures", "divide and conquer", "dp", "two pointers"], "problem_rating": "2400", "solved_by": "x2197"},
{"url": "https://codeforces.com//problemset/problem/1428/E", "name": "Carrots for Rabbits", "tags": ["binary search", "data structures", "greedy", "math", "sortings"], "problem_rating": "2200", "solved_by": "x3585"},
{"url": "https://codeforces.com//problemset/problem/1428/D", "name": "Bouncing Boomerangs", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "1900", "solved_by": "x4447"},
{"url": "https://codeforces.com//problemset/problem/1428/C", "name": "ABBB", "tags": ["brute force", "data structures", "greedy", "strings"], "problem_rating": "1100", "solved_by": "x19984"},
{"url": "https://codeforces.com//problemset/problem/1428/B", "name": "Belted Rooms", "tags": ["graphs", "implementation"], "problem_rating": "1200", "solved_by": "x14265"},
{"url": "https://codeforces.com//problemset/problem/1428/A", "name": "Box is Pull", "tags": ["math"], "problem_rating": "800", "solved_by": "x16235"},
{"url": "https://codeforces.com//problemset/problem/1427/H", "name": "Prison Break", "tags": ["binary search", "games", "geometry", "ternary search"], "problem_rating": "3500", "solved_by": "x73"},
{"url": "https://codeforces.com//problemset/problem/1427/G", "name": "One Billion Shades of Grey", "tags": ["flows", "graphs"], "problem_rating": "3300", "solved_by": "x332"},
{"url": "https://codeforces.com//problemset/problem/1427/F", "name": "Boring Card Game", "tags": ["data structures", "greedy", "trees"], "problem_rating": "3200", "solved_by": "x311"},
{"url": "https://codeforces.com//problemset/problem/1427/E", "name": "Xum", "tags": ["bitmasks", "constructive algorithms", "math", "matrices", "number theory"], "problem_rating": "2500", "solved_by": "x1361"},
{"url": "https://codeforces.com//problemset/problem/1427/D", "name": "Unshuffling a Deck", "tags": ["constructive algorithms", "implementation"], "problem_rating": "2000", "solved_by": "x3451"},
{"url": "https://codeforces.com//problemset/problem/1427/C", "name": "The Hard Work of Paparazzi", "tags": ["dp"], "problem_rating": "2000", "solved_by": "x5577"},
{"url": "https://codeforces.com//problemset/problem/1427/B", "name": "Chess Cheater", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "1400", "solved_by": "x10831"},
{"url": "https://codeforces.com//problemset/problem/1427/A", "name": "Avoiding Zero", "tags": ["math", "sortings"], "problem_rating": "900", "solved_by": "x17120"},
{"url": "https://codeforces.com//problemset/problem/1426/F", "name": "Number of Subsequences", "tags": ["combinatorics", "dp", "strings"], "problem_rating": "2000", "solved_by": "x5207"},
{"url": "https://codeforces.com//problemset/problem/1426/E", "name": "Rock, Paper, Scissors", "tags": ["brute force", "constructive algorithms", "flows", "greedy", "math"], "problem_rating": "1800", "solved_by": "x7324"},
{"url": "https://codeforces.com//problemset/problem/1426/D", "name": "Non-zero Segments", "tags": ["constructive algorithms", "data structures", "greedy", "sortings"], "problem_rating": "1500", "solved_by": "x15760"},
{"url": "https://codeforces.com//problemset/problem/1426/C", "name": "Increase and Copy", "tags": ["binary search", "constructive algorithms", "math"], "problem_rating": "1100", "solved_by": "x19224"},
{"url": "https://codeforces.com//problemset/problem/1426/B", "name": "Symmetric Matrix", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x20527"},
{"url": "https://codeforces.com//problemset/problem/1426/A", "name": "Floor Number", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x46807"},
{"url": "https://codeforces.com//problemset/problem/1425/I", "name": "Impressive Harvesting of The Orchard", "tags": ["data structures"], "problem_rating": "2800", "solved_by": "x233"},
{"url": "https://codeforces.com//problemset/problem/1425/H", "name": "Huge Boxes of Animal Toys", "tags": ["constructive algorithms"], "problem_rating": "1300", "solved_by": "x4115"},
{"url": "https://codeforces.com//problemset/problem/1425/F", "name": "Flamingoes of Mystery", "tags": ["interactive"], "problem_rating": "1400", "solved_by": "x5381"},
{"url": "https://codeforces.com//problemset/problem/1425/E", "name": "Excitation of Atoms", "tags": ["greedy", "implementation"], "problem_rating": "2200", "solved_by": "x912"},
{"url": "https://codeforces.com//problemset/problem/1425/D", "name": "Danger of Mad Snakes", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2300", "solved_by": "x819"},
{"url": "https://codeforces.com//problemset/problem/1425/C", "name": "Captain of Knights", "tags": ["math"], "problem_rating": "3100", "solved_by": "x41"},
{"url": "https://codeforces.com//problemset/problem/1425/B", "name": "Blue and Red of Our Faculty!", "tags": ["divide and conquer", "dp"], "problem_rating": "2600", "solved_by": "x276"},
{"url": "https://codeforces.com//problemset/problem/1425/A", "name": "Arena of Greed", "tags": ["games", "greedy"], "problem_rating": "1400", "solved_by": "x6437"},
{"url": "https://codeforces.com//problemset/problem/1424/M", "name": "Ancient Language", "tags": ["graphs", "sortings"], "problem_rating": "2200", "solved_by": "x522"},
{"url": "https://codeforces.com//problemset/problem/1424/G", "name": "Years", "tags": ["data structures", "sortings"], "problem_rating": "1300", "solved_by": "x5730"},
{"url": "https://codeforces.com//problemset/problem/1423/N", "name": "BubbleSquare Tokens", "tags": [], "problem_rating": "3500", "solved_by": "x149"},
{"url": "https://codeforces.com//problemset/problem/1423/M", "name": "Milutin's Plums", "tags": ["interactive"], "problem_rating": "2800", "solved_by": "x151"},
{"url": "https://codeforces.com//problemset/problem/1423/L", "name": "Light switches", "tags": ["meet-in-the-middle"], "problem_rating": "2600", "solved_by": "x456"},
{"url": "https://codeforces.com//problemset/problem/1423/K", "name": "Lonely Numbers", "tags": ["binary search", "math", "number theory", "two pointers"], "problem_rating": "1600", "solved_by": "x4745"},
{"url": "https://codeforces.com//problemset/problem/1423/J", "name": "Bubble Cup hypothesis", "tags": ["bitmasks", "constructive algorithms", "dp", "math"], "problem_rating": "2400", "solved_by": "x745"},
{"url": "https://codeforces.com//problemset/problem/1423/I", "name": "Lookup Tables", "tags": ["bitmasks"], "problem_rating": "3000", "solved_by": "x105"},
{"url": "https://codeforces.com//problemset/problem/1423/H", "name": "Virus", "tags": ["data structures", "divide and conquer", "dsu", "graphs"], "problem_rating": "2500", "solved_by": "x515"},
{"url": "https://codeforces.com//problemset/problem/1423/G", "name": "Growing flowers", "tags": ["data structures"], "problem_rating": "3500", "solved_by": "x202"},
{"url": "https://codeforces.com//problemset/problem/1423/F", "name": "Coins", "tags": ["math"], "problem_rating": "2700", "solved_by": "x366"},
{"url": "https://codeforces.com//problemset/problem/1423/E", "name": "5G Antenna Towers", "tags": ["geometry"], "problem_rating": "2700", "solved_by": "x76"},
{"url": "https://codeforces.com//problemset/problem/1423/D", "name": "Does anyone else hate the wind?", "tags": [], "problem_rating": "3100", "solved_by": "x37"},
{"url": "https://codeforces.com//problemset/problem/1423/C", "name": "Dušan's Railway", "tags": ["divide and conquer", "graphs", "trees"], "problem_rating": "3500", "solved_by": "x138"},
{"url": "https://codeforces.com//problemset/problem/1423/B", "name": "Valuable Paper", "tags": ["binary search", "flows", "graph matchings", "graphs"], "problem_rating": "1900", "solved_by": "x1789"},
{"url": "https://codeforces.com//problemset/problem/1423/A", "name": "Wakanda Forever", "tags": [], "problem_rating": "3500", "solved_by": "x68"},
{"url": "https://codeforces.com//problemset/problem/1422/F", "name": "Boring Queries", "tags": ["data structures", "math", "number theory"], "problem_rating": "2700", "solved_by": "x994"},
{"url": "https://codeforces.com//problemset/problem/1422/E", "name": "Minlexes", "tags": ["dp", "greedy", "implementation", "strings"], "problem_rating": "2700", "solved_by": "x735"},
{"url": "https://codeforces.com//problemset/problem/1422/D", "name": "Returning Home", "tags": ["graphs", "shortest paths", "sortings"], "problem_rating": "2300", "solved_by": "x2737"},
{"url": "https://codeforces.com//problemset/problem/1422/C", "name": "Bargain", "tags": ["combinatorics", "dp", "math"], "problem_rating": "1700", "solved_by": "x8159"},
{"url": "https://codeforces.com//problemset/problem/1422/B", "name": "Nice Matrix", "tags": ["greedy", "implementation", "math"], "problem_rating": "1300", "solved_by": "x14298"},
{"url": "https://codeforces.com//problemset/problem/1422/A", "name": "Fence", "tags": ["geometry", "math"], "problem_rating": "800", "solved_by": "x20806"},
{"url": "https://codeforces.com//problemset/problem/1421/E", "name": "Swedish Heroes", "tags": ["brute force", "dp", "implementation"], "problem_rating": "2700", "solved_by": "x688"},
{"url": "https://codeforces.com//problemset/problem/1421/D", "name": "Hexagons", "tags": ["brute force", "constructive algorithms", "greedy", "implementation", "math", "shortest paths"], "problem_rating": "1900", "solved_by": "x4136"},
{"url": "https://codeforces.com//problemset/problem/1421/C", "name": "Palindromifier", "tags": ["constructive algorithms", "strings"], "problem_rating": "1400", "solved_by": "x12682"},
{"url": "https://codeforces.com//problemset/problem/1421/B", "name": "Putting Bricks in the Wall", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1100", "solved_by": "x12996"},
{"url": "https://codeforces.com//problemset/problem/1421/A", "name": "XORwice", "tags": ["bitmasks", "greedy", "math"], "problem_rating": "800", "solved_by": "x28228"},
{"url": "https://codeforces.com//problemset/problem/1420/E", "name": "Battle Lemmings", "tags": ["dp", "greedy"], "problem_rating": "2500", "solved_by": "x865"},
{"url": "https://codeforces.com//problemset/problem/1420/D", "name": "Rescue Nibel!", "tags": ["combinatorics", "data structures", "sortings"], "problem_rating": "1800", "solved_by": "x7485"},
{"url": "https://codeforces.com//problemset/problem/1420/C2", "name": "Pokémon Army (hard version)", "tags": ["data structures", "divide and conquer", "dp", "greedy", "implementation"], "problem_rating": "2100", "solved_by": "x4588"},
{"url": "https://codeforces.com//problemset/problem/1420/C1", "name": "Pokémon Army (easy version)", "tags": ["constructive algorithms", "dp", "greedy"], "problem_rating": "1300", "solved_by": "x17331"},
{"url": "https://codeforces.com//problemset/problem/1420/B", "name": "Rock and Lever", "tags": ["bitmasks", "math"], "problem_rating": "1200", "solved_by": "x24767"},
{"url": "https://codeforces.com//problemset/problem/1420/A", "name": "Cubes Sorting", "tags": ["math", "sortings"], "problem_rating": "900", "solved_by": "x23109"},
{"url": "https://codeforces.com//problemset/problem/1419/F", "name": "Rain of Fire", "tags": ["binary search", "data structures", "dfs and similar", "dsu", "graphs", "implementation"], "problem_rating": "2800", "solved_by": "x487"},
{"url": "https://codeforces.com//problemset/problem/1419/E", "name": "Decryption", "tags": ["constructive algorithms", "implementation", "math", "number theory"], "problem_rating": "2100", "solved_by": "x3224"},
{"url": "https://codeforces.com//problemset/problem/1419/D2", "name": "Sage's Birthday (hard version)", "tags": ["binary search", "brute force", "constructive algorithms", "greedy", "sortings", "two pointers"], "problem_rating": "1500", "solved_by": "x15129"},
{"url": "https://codeforces.com//problemset/problem/1419/D1", "name": "Sage's Birthday (easy version)", "tags": ["binary search", "constructive algorithms", "greedy", "sortings"], "problem_rating": "1000", "solved_by": "x24027"},
{"url": "https://codeforces.com//problemset/problem/1419/C", "name": "Killjoy", "tags": ["greedy", "implementation", "math"], "problem_rating": "1500", "solved_by": "x15189"},
{"url": "https://codeforces.com//problemset/problem/1419/B", "name": "Stairs", "tags": ["brute force", "constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "1200", "solved_by": "x16120"},
{"url": "https://codeforces.com//problemset/problem/1419/A", "name": "Digit Game", "tags": ["games", "greedy", "implementation"], "problem_rating": "900", "solved_by": "x19454"},
{"url": "https://codeforces.com//problemset/problem/1418/G", "name": "Three Occurrences", "tags": ["data structures", "divide and conquer", "hashing", "two pointers"], "problem_rating": "2500", "solved_by": "x1547"},
{"url": "https://codeforces.com//problemset/problem/1418/F", "name": "Equal Product", "tags": ["data structures", "math", "number theory", "two pointers"], "problem_rating": "3000", "solved_by": "x361"},
{"url": "https://codeforces.com//problemset/problem/1418/E", "name": "Expected Damage", "tags": ["binary search", "combinatorics", "probabilities"], "problem_rating": "2400", "solved_by": "x1814"},
{"url": "https://codeforces.com//problemset/problem/1418/D", "name": "Trash Problem", "tags": ["data structures", "implementation"], "problem_rating": "2100", "solved_by": "x4281"},
{"url": "https://codeforces.com//problemset/problem/1418/C", "name": "Mortal Kombat Tower", "tags": ["dp", "graphs", "greedy", "shortest paths"], "problem_rating": "1500", "solved_by": "x19082"},
{"url": "https://codeforces.com//problemset/problem/1418/B", "name": "Negative Prefixes", "tags": ["greedy", "sortings"], "problem_rating": "1300", "solved_by": "x16520"},
{"url": "https://codeforces.com//problemset/problem/1418/A", "name": "Buying Torches", "tags": ["math"], "problem_rating": "1000", "solved_by": "x22323"},
{"url": "https://codeforces.com//problemset/problem/1417/B", "name": "Two Arrays", "tags": ["greedy", "math", "sortings"], "problem_rating": "1100", "solved_by": "x14409"},
{"url": "https://codeforces.com//problemset/problem/1417/A", "name": "Copy-paste", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x18182"},
{"url": "https://codeforces.com//problemset/problem/1416/F", "name": "Showing Off", "tags": ["flows", "graph matchings", "greedy", "implementation"], "problem_rating": "3300", "solved_by": "x445"},
{"url": "https://codeforces.com//problemset/problem/1416/E", "name": "Split", "tags": ["binary search", "data structures", "dp", "greedy"], "problem_rating": "3200", "solved_by": "x280"},
{"url": "https://codeforces.com//problemset/problem/1416/D", "name": "Graph and Queries", "tags": ["data structures", "dsu", "graphs", "implementation", "trees"], "problem_rating": "2600", "solved_by": "x1967"},
{"url": "https://codeforces.com//problemset/problem/1416/C", "name": "XOR Inverse", "tags": ["bitmasks", "data structures", "divide and conquer", "dp", "greedy", "math", "sortings", "strings", "trees"], "problem_rating": "2000", "solved_by": "x4315"},
{"url": "https://codeforces.com//problemset/problem/1416/B", "name": "Make Them Equal", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "2000", "solved_by": "x6023"},
{"url": "https://codeforces.com//problemset/problem/1416/A", "name": "k-Amazing Numbers", "tags": ["binary search", "data structures", "implementation", "two pointers"], "problem_rating": "1500", "solved_by": "x12173"},
{"url": "https://codeforces.com//problemset/problem/1415/F", "name": "Cakes for Clones", "tags": ["dp"], "problem_rating": "2900", "solved_by": "x453"},
{"url": "https://codeforces.com//problemset/problem/1415/E", "name": "New Game Plus!", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "2200", "solved_by": "x2672"},
{"url": "https://codeforces.com//problemset/problem/1415/D", "name": "XOR-gun", "tags": ["bitmasks", "brute force", "constructive algorithms"], "problem_rating": "2000", "solved_by": "x5320"},
{"url": "https://codeforces.com//problemset/problem/1415/C", "name": "Bouncing Ball", "tags": ["brute force", "dp", "implementation"], "problem_rating": "1400", "solved_by": "x10796"},
{"url": "https://codeforces.com//problemset/problem/1415/B", "name": "Repainting Street", "tags": ["brute force", "brute force", "greedy"], "problem_rating": "1100", "solved_by": "x12130"},
{"url": "https://codeforces.com//problemset/problem/1415/A", "name": "Prison Break", "tags": ["brute force", "math"], "problem_rating": "800", "solved_by": "x15070"},
{"url": "https://codeforces.com//problemset/problem/1413/F", "name": "Roads and Ramen", "tags": ["data structures", "trees"], "problem_rating": "2800", "solved_by": "x764"},
{"url": "https://codeforces.com//problemset/problem/1413/E", "name": "Solo mid Oracle", "tags": ["greedy", "math", "ternary search"], "problem_rating": "2100", "solved_by": "x1989"},
{"url": "https://codeforces.com//problemset/problem/1413/D", "name": "Shurikens", "tags": ["data structures", "greedy", "implementation"], "problem_rating": "1700", "solved_by": "x6451"},
{"url": "https://codeforces.com//problemset/problem/1413/C", "name": "Perform Easily", "tags": ["binary search", "brute force", "dp", "implementation", "sortings", "two pointers"], "problem_rating": "1900", "solved_by": "x5658"},
{"url": "https://codeforces.com//problemset/problem/1413/B", "name": "A New Technique", "tags": ["implementation"], "problem_rating": "1100", "solved_by": "x11665"},
{"url": "https://codeforces.com//problemset/problem/1413/A", "name": "Finding Sasuke", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x14643"},
{"url": "https://codeforces.com//problemset/problem/1411/G", "name": "No Game No Life", "tags": ["bitmasks", "games", "math", "matrices"], "problem_rating": "2700", "solved_by": "x630"},
{"url": "https://codeforces.com//problemset/problem/1411/F", "name": "The Thorny Path", "tags": ["greedy", "math"], "problem_rating": "3000", "solved_by": "x356"},
{"url": "https://codeforces.com//problemset/problem/1411/E", "name": "Poman Numbers", "tags": ["bitmasks", "greedy", "math", "strings"], "problem_rating": "2300", "solved_by": "x1608"},
{"url": "https://codeforces.com//problemset/problem/1411/D", "name": "Grime Zoo", "tags": ["brute force", "greedy", "implementation", "strings"], "problem_rating": "2100", "solved_by": "x2479"},
{"url": "https://codeforces.com//problemset/problem/1411/C", "name": "Peaceful Rooks", "tags": ["dfs and similar", "dsu", "graphs"], "problem_rating": "1700", "solved_by": "x7903"},
{"url": "https://codeforces.com//problemset/problem/1411/B", "name": "Fair Numbers", "tags": ["brute force", "number theory"], "problem_rating": "1000", "solved_by": "x18520"},
{"url": "https://codeforces.com//problemset/problem/1411/A", "name": "In-game Chat", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x20494"},
{"url": "https://codeforces.com//problemset/problem/1409/F", "name": "Subsequences of Length Two", "tags": ["dp", "strings"], "problem_rating": "2100", "solved_by": "x4372"},
{"url": "https://codeforces.com//problemset/problem/1409/E", "name": "Two Platforms", "tags": ["binary search", "dp", "sortings", "two pointers"], "problem_rating": "1800", "solved_by": "x7725"},
{"url": "https://codeforces.com//problemset/problem/1409/D", "name": "Decrease the Sum of Digits", "tags": ["greedy", "math"], "problem_rating": "1500", "solved_by": "x19094"},
{"url": "https://codeforces.com//problemset/problem/1409/C", "name": "Yet Another Array Restoration", "tags": ["brute force", "math", "number theory"], "problem_rating": "1200", "solved_by": "x23048"},
{"url": "https://codeforces.com//problemset/problem/1409/B", "name": "Minimum Product", "tags": ["brute force", "greedy", "math"], "problem_rating": "1100", "solved_by": "x28651"},
{"url": "https://codeforces.com//problemset/problem/1409/A", "name": "Yet Another Two Integers Problem", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x64426"},
{"url": "https://codeforces.com//problemset/problem/1408/I", "name": "Bitwise Magic", "tags": ["dp", "math"], "problem_rating": "3200", "solved_by": "x172"},
{"url": "https://codeforces.com//problemset/problem/1408/H", "name": "Rainbow Triples", "tags": ["binary search", "data structures", "flows", "greedy"], "problem_rating": "3300", "solved_by": "x391"},
{"url": "https://codeforces.com//problemset/problem/1408/G", "name": "Clusterization Counting", "tags": ["combinatorics", "dp", "dsu", "fft", "graphs", "trees"], "problem_rating": "2700", "solved_by": "x990"},
{"url": "https://codeforces.com//problemset/problem/1408/F", "name": "Two Different", "tags": ["constructive algorithms", "divide and conquer"], "problem_rating": "2300", "solved_by": "x2336"},
{"url": "https://codeforces.com//problemset/problem/1408/E", "name": "Avoid Rainbow Cycles", "tags": ["data structures", "dsu", "graphs", "greedy", "sortings", "trees"], "problem_rating": "2400", "solved_by": "x1953"},
{"url": "https://codeforces.com//problemset/problem/1408/D", "name": "Searchlights", "tags": ["binary search", "brute force", "data structures", "dp", "implementation", "sortings", "two pointers"], "problem_rating": "2000", "solved_by": "x4264"},
{"url": "https://codeforces.com//problemset/problem/1408/C", "name": "Discrete Acceleration", "tags": ["binary search", "dp", "implementation", "math", "two pointers"], "problem_rating": "1500", "solved_by": "x8765"},
{"url": "https://codeforces.com//problemset/problem/1408/B", "name": "Arrays Sum", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1400", "solved_by": "x9883"},
{"url": "https://codeforces.com//problemset/problem/1408/A", "name": "Circle Coloring", "tags": ["constructive algorithms"], "problem_rating": "800", "solved_by": "x12467"},
{"url": "https://codeforces.com//problemset/problem/1407/E", "name": "Egor in the Republic of Dagestan", "tags": ["constructive algorithms", "dfs and similar", "dp", "graphs", "greedy", "shortest paths"], "problem_rating": "2500", "solved_by": "x1666"},
{"url": "https://codeforces.com//problemset/problem/1407/D", "name": "Discrete Centrifugal Jumps", "tags": ["data structures", "dp", "graphs"], "problem_rating": "2200", "solved_by": "x4735"},
{"url": "https://codeforces.com//problemset/problem/1407/C", "name": "Chocolate Bunny", "tags": ["constructive algorithms", "interactive", "math", "two pointers"], "problem_rating": "1600", "solved_by": "x11783"},
{"url": "https://codeforces.com//problemset/problem/1407/B", "name": "Big Vova", "tags": ["brute force", "greedy", "math", "number theory"], "problem_rating": "1300", "solved_by": "x16870"},
{"url": "https://codeforces.com//problemset/problem/1407/A", "name": "Ahahahahahahahaha", "tags": ["constructive algorithms", "math"], "problem_rating": "1100", "solved_by": "x20279"},
{"url": "https://codeforces.com//problemset/problem/1406/E", "name": "Deleting Numbers", "tags": ["interactive", "math", "number theory"], "problem_rating": "2600", "solved_by": "x1591"},
{"url": "https://codeforces.com//problemset/problem/1406/D", "name": "Three Sequences", "tags": ["constructive algorithms", "data structures", "greedy", "math"], "problem_rating": "2200", "solved_by": "x3457"},
{"url": "https://codeforces.com//problemset/problem/1406/C", "name": "Link Cut Centroids", "tags": ["constructive algorithms", "dfs and similar", "graphs", "trees"], "problem_rating": "1700", "solved_by": "x10067"},
{"url": "https://codeforces.com//problemset/problem/1406/B", "name": "Maximum Product", "tags": ["brute force", "dp", "greedy", "implementation", "sortings"], "problem_rating": "1200", "solved_by": "x22416"},
{"url": "https://codeforces.com//problemset/problem/1406/A", "name": "Subset Mex", "tags": ["greedy", "implementation", "math"], "problem_rating": "900", "solved_by": "x21171"},
{"url": "https://codeforces.com//problemset/problem/1405/B", "name": "Array Cancellation", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1000", "solved_by": "x21285"},
{"url": "https://codeforces.com//problemset/problem/1405/A", "name": "Permutation Forgery", "tags": ["constructive algorithms"], "problem_rating": "800", "solved_by": "x21369"},
{"url": "https://codeforces.com//problemset/problem/1404/E", "name": "Bricks", "tags": ["flows", "graph matchings", "graphs"], "problem_rating": "2800", "solved_by": "x1174"},
{"url": "https://codeforces.com//problemset/problem/1404/D", "name": "Game of Pairs", "tags": ["constructive algorithms", "dfs and similar", "interactive", "math", "number theory"], "problem_rating": "2800", "solved_by": "x1046"},
{"url": "https://codeforces.com//problemset/problem/1404/C", "name": "Fixed Point Removal", "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "two pointers"], "problem_rating": "2300", "solved_by": "x2602"},
{"url": "https://codeforces.com//problemset/problem/1404/B", "name": "Tree Tag", "tags": ["dfs and similar", "dp", "games", "trees"], "problem_rating": "1900", "solved_by": "x7287"},
{"url": "https://codeforces.com//problemset/problem/1404/A", "name": "Balanced Bitstring", "tags": ["implementation", "strings"], "problem_rating": "1500", "solved_by": "x15124"},
{"url": "https://codeforces.com//problemset/problem/1403/C", "name": "Chess Rush", "tags": ["*special problem", "combinatorics", "dp", "implementation", "math"], "problem_rating": "3200", "solved_by": "x48"},
{"url": "https://codeforces.com//problemset/problem/1403/B", "name": "Spring cleaning", "tags": ["*special problem", "data structures", "dfs and similar", "graphs", "trees"], "problem_rating": "2300", "solved_by": "x362"},
{"url": "https://codeforces.com//problemset/problem/1403/A", "name": "The Potion of Great Power", "tags": ["*special problem", "2-sat", "binary search", "data structures", "graphs", "interactive", "sortings", "two pointers"], "problem_rating": "2400", "solved_by": "x290"},
{"url": "https://codeforces.com//problemset/problem/1402/C", "name": "Star Trek", "tags": ["*special problem", "combinatorics", "dfs and similar", "dp", "games", "graphs", "matrices", "trees"], "problem_rating": "2600", "solved_by": "x201"},
{"url": "https://codeforces.com//problemset/problem/1402/B", "name": "Roads", "tags": ["*special problem", "geometry", "sortings"], "problem_rating": "2900", "solved_by": "x109"},
{"url": "https://codeforces.com//problemset/problem/1402/A", "name": "Fancy Fence", "tags": ["*special problem", "data structures", "dsu", "implementation", "math", "sortings"], "problem_rating": "1800", "solved_by": "x1168"},
{"url": "https://codeforces.com//problemset/problem/1401/F", "name": "Reverse and Swap", "tags": ["binary search", "bitmasks", "data structures"], "problem_rating": "2400", "solved_by": "x1608"},
{"url": "https://codeforces.com//problemset/problem/1401/E", "name": "Divide Square", "tags": ["data structures", "geometry", "implementation", "sortings"], "problem_rating": "2400", "solved_by": "x2234"},
{"url": "https://codeforces.com//problemset/problem/1401/D", "name": "Maximum Distributed Tree", "tags": ["dfs and similar", "dp", "greedy", "implementation", "math", "number theory", "sortings", "trees"], "problem_rating": "1800", "solved_by": "x9020"},
{"url": "https://codeforces.com//problemset/problem/1401/C", "name": "Mere Array", "tags": ["constructive algorithms", "math", "number theory", "sortings"], "problem_rating": "1300", "solved_by": "x23863"},
{"url": "https://codeforces.com//problemset/problem/1401/B", "name": "Ternary Sequence", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1100", "solved_by": "x20896"},
{"url": "https://codeforces.com//problemset/problem/1401/A", "name": "Distance and Axis", "tags": ["constructive algorithms", "math"], "problem_rating": "900", "solved_by": "x27157"},
{"url": "https://codeforces.com//problemset/problem/1400/G", "name": "Mercenaries", "tags": ["bitmasks", "brute force", "combinatorics", "dp", "dsu", "math", "two pointers"], "problem_rating": "2600", "solved_by": "x948"},
{"url": "https://codeforces.com//problemset/problem/1400/F", "name": "x-prime Substrings", "tags": ["brute force", "dfs and similar", "dp", "string suffix structures", "strings"], "problem_rating": "2800", "solved_by": "x806"},
{"url": "https://codeforces.com//problemset/problem/1400/E", "name": "Clear the Multiset", "tags": ["data structures", "divide and conquer", "dp", "greedy"], "problem_rating": "2200", "solved_by": "x5234"},
{"url": "https://codeforces.com//problemset/problem/1400/D", "name": "Zigzags", "tags": ["brute force", "combinatorics", "data structures", "math", "two pointers"], "problem_rating": "1900", "solved_by": "x10004"},
{"url": "https://codeforces.com//problemset/problem/1400/C", "name": "Binary String Reconstruction", "tags": ["2-sat", "brute force", "constructive algorithms", "greedy"], "problem_rating": "1500", "solved_by": "x17030"},
{"url": "https://codeforces.com//problemset/problem/1400/B", "name": "RPG Protagonist", "tags": ["brute force", "greedy", "math"], "problem_rating": "1700", "solved_by": "x11018"},
{"url": "https://codeforces.com//problemset/problem/1400/A", "name": "String Similarity", "tags": ["constructive algorithms", "strings"], "problem_rating": "800", "solved_by": "x26795"},
{"url": "https://codeforces.com//problemset/problem/1399/F", "name": "Yet Another Segments Subset", "tags": ["data structures", "dp", "graphs", "sortings"], "problem_rating": "2300", "solved_by": "x1587"},
{"url": "https://codeforces.com//problemset/problem/1399/E2", "name": "Weights Division (hard version)", "tags": ["binary search", "dfs and similar", "greedy", "sortings", "trees", "two pointers"], "problem_rating": "2200", "solved_by": "x2240"},
{"url": "https://codeforces.com//problemset/problem/1399/E1", "name": "Weights Division (easy version)", "tags": ["data structures", "dfs and similar", "greedy", "trees"], "problem_rating": "2000", "solved_by": "x5748"},
{"url": "https://codeforces.com//problemset/problem/1399/D", "name": "Binary String To Subsequences", "tags": ["constructive algorithms", "data structures", "greedy", "implementation"], "problem_rating": "1500", "solved_by": "x17956"},
{"url": "https://codeforces.com//problemset/problem/1399/C", "name": "Boats Competition", "tags": ["brute force", "greedy", "two pointers"], "problem_rating": "1200", "solved_by": "x28280"},
{"url": "https://codeforces.com//problemset/problem/1399/B", "name": "Gifts Fixing", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x42941"},
{"url": "https://codeforces.com//problemset/problem/1399/A", "name": "Remove Smallest", "tags": ["greedy", "sortings"], "problem_rating": "800", "solved_by": "x64714"},
{"url": "https://codeforces.com//problemset/problem/1398/G", "name": "Running Competition", "tags": ["bitmasks", "fft", "math", "number theory"], "problem_rating": "2600", "solved_by": "x860"},
{"url": "https://codeforces.com//problemset/problem/1398/F", "name": "Controversial Rounds", "tags": ["binary search", "data structures", "dp", "greedy", "two pointers"], "problem_rating": "2500", "solved_by": "x1122"},
{"url": "https://codeforces.com//problemset/problem/1398/E", "name": "Two Types of Spells", "tags": ["binary search", "data structures", "greedy", "implementation", "math", "sortings"], "problem_rating": "2200", "solved_by": "x2246"},
{"url": "https://codeforces.com//problemset/problem/1398/D", "name": "Colored Rectangles", "tags": ["dp", "greedy", "sortings"], "problem_rating": "1800", "solved_by": "x11199"},
{"url": "https://codeforces.com//problemset/problem/1398/C", "name": "Good Subarrays", "tags": ["data structures", "dp", "math"], "problem_rating": "1600", "solved_by": "x25231"},
{"url": "https://codeforces.com//problemset/problem/1398/B", "name": "Substring Removal Game", "tags": ["games", "greedy", "sortings"], "problem_rating": "800", "solved_by": "x24297"},
{"url": "https://codeforces.com//problemset/problem/1398/A", "name": "Bad Triangle", "tags": ["geometry", "math"], "problem_rating": "800", "solved_by": "x27256"},
{"url": "https://codeforces.com//problemset/problem/1397/B", "name": "Power Sequence", "tags": ["brute force", "math", "number theory", "sortings"], "problem_rating": "1500", "solved_by": "x14540"},
{"url": "https://codeforces.com//problemset/problem/1397/A", "name": "Juggling Letters", "tags": ["greedy", "strings"], "problem_rating": "800", "solved_by": "x28351"},
{"url": "https://codeforces.com//problemset/problem/1396/E", "name": "Distance Matching", "tags": ["constructive algorithms", "dfs and similar", "trees"], "problem_rating": "3200", "solved_by": "x347"},
{"url": "https://codeforces.com//problemset/problem/1396/D", "name": "Rainbow Rectangles", "tags": ["data structures", "sortings", "two pointers"], "problem_rating": "3300", "solved_by": "x301"},
{"url": "https://codeforces.com//problemset/problem/1396/C", "name": "Monster Invaders", "tags": ["dp", "greedy", "implementation"], "problem_rating": "2300", "solved_by": "x2468"},
{"url": "https://codeforces.com//problemset/problem/1396/B", "name": "Stoned Game", "tags": ["brute force", "constructive algorithms", "games", "greedy"], "problem_rating": "1800", "solved_by": "x11132"},
{"url": "https://codeforces.com//problemset/problem/1396/A", "name": "Multiples of Length", "tags": ["constructive algorithms", "greedy", "number theory"], "problem_rating": "1600", "solved_by": "x15203"},
{"url": "https://codeforces.com//problemset/problem/1395/C", "name": "Boboniu and Bit Operations", "tags": ["bitmasks", "brute force", "dp", "greedy"], "problem_rating": "1600", "solved_by": "x13826"},
{"url": "https://codeforces.com//problemset/problem/1395/B", "name": "Boboniu Plays Chess", "tags": ["constructive algorithms"], "problem_rating": "1100", "solved_by": "x15884"},
{"url": "https://codeforces.com//problemset/problem/1395/A", "name": "Boboniu Likes to Color Balls", "tags": ["brute force", "math"], "problem_rating": "1000", "solved_by": "x23788"},
{"url": "https://codeforces.com//problemset/problem/1394/E", "name": "Boboniu and Banknote Collection", "tags": ["strings"], "problem_rating": "3500", "solved_by": "x139"},
{"url": "https://codeforces.com//problemset/problem/1394/D", "name": "Boboniu and Jianghu", "tags": ["dp", "greedy", "sortings", "trees"], "problem_rating": "2800", "solved_by": "x876"},
{"url": "https://codeforces.com//problemset/problem/1394/C", "name": "Boboniu and String", "tags": ["binary search", "geometry", "ternary search"], "problem_rating": "2600", "solved_by": "x960"},
{"url": "https://codeforces.com//problemset/problem/1394/B", "name": "Boboniu Walks on Graph", "tags": ["brute force", "dfs and similar", "graphs", "hashing"], "problem_rating": "2300", "solved_by": "x1851"},
{"url": "https://codeforces.com//problemset/problem/1394/A", "name": "Boboniu Chats with Du", "tags": ["dp", "greedy", "sortings", "two pointers"], "problem_rating": "1800", "solved_by": "x6578"},
{"url": "https://codeforces.com//problemset/problem/1393/E2", "name": "Twilight and Ancient Scroll (harder version)", "tags": ["dp", "hashing", "implementation", "string suffix structures", "strings", "two pointers"], "problem_rating": "3200", "solved_by": "x359"},
{"url": "https://codeforces.com//problemset/problem/1393/E1", "name": "Twilight and Ancient Scroll (easier version)", "tags": ["dp", "hashing", "implementation", "string suffix structures", "strings"], "problem_rating": "2800", "solved_by": "x381"},
{"url": "https://codeforces.com//problemset/problem/1393/D", "name": "Rarity and New Dress", "tags": ["dfs and similar", "dp", "implementation", "shortest paths"], "problem_rating": "2100", "solved_by": "x3844"},
{"url": "https://codeforces.com//problemset/problem/1393/C", "name": "Pinkie Pie Eats Patty-cakes", "tags": ["constructive algorithms", "greedy", "math", "sortings"], "problem_rating": "1700", "solved_by": "x10390"},
{"url": "https://codeforces.com//problemset/problem/1393/B", "name": "Applejack and Storages", "tags": ["constructive algorithms", "data structures", "greedy", "implementation"], "problem_rating": "1400", "solved_by": "x16448"},
{"url": "https://codeforces.com//problemset/problem/1393/A", "name": "Rainbow Dash, Fluttershy and Chess Coloring", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x20324"},
{"url": "https://codeforces.com//problemset/problem/1392/I", "name": "Kevin and Grid", "tags": ["fft", "graphs", "math"], "problem_rating": "3300", "solved_by": "x204"},
{"url": "https://codeforces.com//problemset/problem/1392/H", "name": "ZS Shuffles Cards", "tags": ["combinatorics", "dp", "math", "probabilities"], "problem_rating": "3000", "solved_by": "x694"},
{"url": "https://codeforces.com//problemset/problem/1392/G", "name": "Omkar and Pies", "tags": ["bitmasks", "dfs and similar", "dp", "math", "shortest paths"], "problem_rating": "2900", "solved_by": "x473"},
{"url": "https://codeforces.com//problemset/problem/1392/F", "name": "Omkar and Landslide", "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "math"], "problem_rating": "2400", "solved_by": "x1999"},
{"url": "https://codeforces.com//problemset/problem/1392/E", "name": "Omkar and Duck", "tags": ["bitmasks", "constructive algorithms", "interactive", "math"], "problem_rating": "2100", "solved_by": "x3342"},
{"url": "https://codeforces.com//problemset/problem/1392/D", "name": "Omkar and Bed Wars", "tags": ["dp", "greedy"], "problem_rating": "1700", "solved_by": "x8626"},
{"url": "https://codeforces.com//problemset/problem/1392/C", "name": "Omkar and Waterslide", "tags": ["greedy", "implementation"], "problem_rating": "1200", "solved_by": "x18497"},
{"url": "https://codeforces.com//problemset/problem/1392/B", "name": "Omkar and Infinity Clock", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x18440"},
{"url": "https://codeforces.com//problemset/problem/1392/A", "name": "Omkar and Password", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x20372"},
{"url": "https://codeforces.com//problemset/problem/1391/E", "name": "Pairs of Pairs", "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy", "trees"], "problem_rating": "2600", "solved_by": "x1554"},
{"url": "https://codeforces.com//problemset/problem/1391/D", "name": "505", "tags": ["bitmasks", "brute force", "constructive algorithms", "dp", "greedy", "implementation"], "problem_rating": "2000", "solved_by": "x5063"},
{"url": "https://codeforces.com//problemset/problem/1391/C", "name": "Cyclic Permutations", "tags": ["combinatorics", "dp", "graphs", "math"], "problem_rating": "1500", "solved_by": "x14740"},
{"url": "https://codeforces.com//problemset/problem/1391/B", "name": "Fix You", "tags": ["brute force", "greedy", "implementation"], "problem_rating": "800", "solved_by": "x26644"},
{"url": "https://codeforces.com//problemset/problem/1391/A", "name": "Suborrays", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x24150"},
{"url": "https://codeforces.com//problemset/problem/1389/G", "name": "Directing Edges", "tags": ["dfs and similar", "dp", "graphs", "trees"], "problem_rating": "2800", "solved_by": "x390"},
{"url": "https://codeforces.com//problemset/problem/1389/F", "name": "Bicolored Segments", "tags": ["data structures", "dp", "graph matchings", "sortings"], "problem_rating": "2600", "solved_by": "x959"},
{"url": "https://codeforces.com//problemset/problem/1389/E", "name": "Calendar Ambiguity", "tags": ["math", "number theory"], "problem_rating": "2200", "solved_by": "x3206"},
{"url": "https://codeforces.com//problemset/problem/1389/D", "name": "Segment Intersections", "tags": ["brute force", "greedy", "implementation", "math"], "problem_rating": "2100", "solved_by": "x4112"},
{"url": "https://codeforces.com//problemset/problem/1389/C", "name": "Good String", "tags": ["brute force", "dp", "greedy", "two pointers"], "problem_rating": "1500", "solved_by": "x18675"},
{"url": "https://codeforces.com//problemset/problem/1389/B", "name": "Array Walk", "tags": ["brute force", "dp", "greedy"], "problem_rating": "1600", "solved_by": "x16259"},
{"url": "https://codeforces.com//problemset/problem/1389/A", "name": "LCM Problem", "tags": ["constructive algorithms", "greedy", "math", "number theory"], "problem_rating": "800", "solved_by": "x39928"},
{"url": "https://codeforces.com//problemset/problem/1388/E", "name": "Uncle Bogdan and Projections", "tags": ["data structures", "geometry", "sortings"], "problem_rating": "2700", "solved_by": "x449"},
{"url": "https://codeforces.com//problemset/problem/1388/D", "name": "Captain Flint and Treasure", "tags": ["data structures", "dfs and similar", "graphs", "greedy", "implementation", "trees"], "problem_rating": "2000", "solved_by": "x6230"},
{"url": "https://codeforces.com//problemset/problem/1388/C", "name": "Uncle Bogdan and Country Happiness", "tags": ["dfs and similar", "greedy", "math", "trees"], "problem_rating": "1800", "solved_by": "x9494"},
{"url": "https://codeforces.com//problemset/problem/1388/B", "name": "Captain Flint and a Long Voyage", "tags": ["greedy", "math"], "problem_rating": "1000", "solved_by": "x22068"},
{"url": "https://codeforces.com//problemset/problem/1388/A", "name": "Captain Flint and Crew Recruitment", "tags": ["brute force", "greedy", "math", "number theory"], "problem_rating": "800", "solved_by": "x24684"},
{"url": "https://codeforces.com//problemset/problem/1387/C", "name": "Viruses", "tags": ["*special problem", "dp", "shortest paths", "string suffix structures"], "problem_rating": "2900", "solved_by": "x127"},
{"url": "https://codeforces.com//problemset/problem/1387/B2", "name": "Village (Maximum)", "tags": ["*special problem", "dfs and similar", "trees"], "problem_rating": "2500", "solved_by": "x864"},
{"url": "https://codeforces.com//problemset/problem/1387/B1", "name": "Village (Minimum)", "tags": ["*special problem", "dp", "greedy", "trees"], "problem_rating": "2100", "solved_by": "x1377"},
{"url": "https://codeforces.com//problemset/problem/1387/A", "name": "Graph", "tags": ["*special problem", "binary search", "dfs and similar", "dp", "math", "ternary search"], "problem_rating": "2100", "solved_by": "x692"},
{"url": "https://codeforces.com//problemset/problem/1386/C", "name": "Joker", "tags": ["*special problem", "bitmasks", "data structures", "divide and conquer", "dsu"], "problem_rating": "2800", "solved_by": "x459"},
{"url": "https://codeforces.com//problemset/problem/1386/B", "name": "Mixture", "tags": ["*special problem", "data structures", "geometry", "math", "sortings"], "problem_rating": "2900", "solved_by": "x121"},
{"url": "https://codeforces.com//problemset/problem/1386/A", "name": "Colors", "tags": ["*special problem", "binary search", "constructive algorithms", "interactive"], "problem_rating": "2700", "solved_by": "x256"},
{"url": "https://codeforces.com//problemset/problem/1385/G", "name": "Columns Swaps", "tags": ["2-sat", "dfs and similar", "dsu", "graphs", "implementation"], "problem_rating": "2300", "solved_by": "x1394"},
{"url": "https://codeforces.com//problemset/problem/1385/F", "name": "Removing Leaves", "tags": ["data structures", "greedy", "implementation", "trees"], "problem_rating": "2300", "solved_by": "x2352"},
{"url": "https://codeforces.com//problemset/problem/1385/E", "name": "Directing Edges", "tags": ["constructive algorithms", "dfs and similar", "graphs"], "problem_rating": "2000", "solved_by": "x7110"},
{"url": "https://codeforces.com//problemset/problem/1385/D", "name": "a-Good String", "tags": ["bitmasks", "brute force", "divide and conquer", "dp", "implementation"], "problem_rating": "1500", "solved_by": "x18833"},
{"url": "https://codeforces.com//problemset/problem/1385/C", "name": "Make It Good", "tags": ["greedy"], "problem_rating": "1200", "solved_by": "x26561"},
{"url": "https://codeforces.com//problemset/problem/1385/B", "name": "Restore the Permutation by Merger", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x36748"},
{"url": "https://codeforces.com//problemset/problem/1385/A", "name": "Three Pairwise Maximums", "tags": ["math"], "problem_rating": "800", "solved_by": "x38378"},
{"url": "https://codeforces.com//problemset/problem/1384/B2", "name": "Koa and the Beach (Hard Version)", "tags": ["constructive algorithms", "dp", "greedy", "implementation"], "problem_rating": "2200", "solved_by": "x2477"},
{"url": "https://codeforces.com//problemset/problem/1384/B1", "name": "Koa and the Beach (Easy Version)", "tags": ["brute force", "dp", "greedy"], "problem_rating": "1900", "solved_by": "x3871"},
{"url": "https://codeforces.com//problemset/problem/1384/A", "name": "Common Prefixes", "tags": ["constructive algorithms", "greedy", "strings"], "problem_rating": "1200", "solved_by": "x18534"},
{"url": "https://codeforces.com//problemset/problem/1383/F", "name": "Special Edges", "tags": ["flows", "graphs"], "problem_rating": "3200", "solved_by": "x345"},
{"url": "https://codeforces.com//problemset/problem/1383/E", "name": "Strange Operation", "tags": ["combinatorics", "data structures", "dp"], "problem_rating": "2800", "solved_by": "x765"},
{"url": "https://codeforces.com//problemset/problem/1383/D", "name": "Rearrange", "tags": ["brute force", "constructive algorithms", "graphs", "greedy", "sortings"], "problem_rating": "2800", "solved_by": "x673"},
{"url": "https://codeforces.com//problemset/problem/1383/C", "name": "String Transformation 2", "tags": ["bitmasks", "dp", "graphs", "trees"], "problem_rating": "3100", "solved_by": "x566"},
{"url": "https://codeforces.com//problemset/problem/1383/B", "name": "GameGame", "tags": ["bitmasks", "constructive algorithms", "dp", "games", "greedy", "math"], "problem_rating": "1900", "solved_by": "x4858"},
{"url": "https://codeforces.com//problemset/problem/1383/A", "name": "String Transformation 1", "tags": ["dsu", "graphs", "greedy", "sortings", "strings", "trees", "two pointers"], "problem_rating": "1700", "solved_by": "x10372"},
{"url": "https://codeforces.com//problemset/problem/1382/B", "name": "Sequential Nim", "tags": ["dp", "games"], "problem_rating": "1100", "solved_by": "x24275"},
{"url": "https://codeforces.com//problemset/problem/1382/A", "name": "Common Subsequence", "tags": ["brute force"], "problem_rating": "800", "solved_by": "x26255"},
{"url": "https://codeforces.com//problemset/problem/1381/E", "name": "Origami", "tags": ["geometry", "math", "sortings"], "problem_rating": "3300", "solved_by": "x150"},
{"url": "https://codeforces.com//problemset/problem/1381/D", "name": "The Majestic Brown Tree Snake", "tags": ["dfs and similar", "dp", "greedy", "trees", "two pointers"], "problem_rating": "3000", "solved_by": "x504"},
{"url": "https://codeforces.com//problemset/problem/1381/C", "name": "Mastermind", "tags": ["constructive algorithms", "graph matchings", "greedy", "implementation", "sortings", "two pointers"], "problem_rating": "2500", "solved_by": "x1462"},
{"url": "https://codeforces.com//problemset/problem/1381/B", "name": "Unmerge", "tags": ["dp"], "problem_rating": "1800", "solved_by": "x8655"},
{"url": "https://codeforces.com//problemset/problem/1381/A2", "name": "Prefix Flip (Hard Version)", "tags": ["constructive algorithms", "data structures", "implementation", "strings", "two pointers"], "problem_rating": "1700", "solved_by": "x12963"},
{"url": "https://codeforces.com//problemset/problem/1381/A1", "name": "Prefix Flip (Easy Version)", "tags": ["constructive algorithms", "data structures", "strings"], "problem_rating": "1300", "solved_by": "x20101"},
{"url": "https://codeforces.com//problemset/problem/1380/G", "name": "Circular Dungeon", "tags": ["greedy", "math", "probabilities"], "problem_rating": "2600", "solved_by": "x778"},
{"url": "https://codeforces.com//problemset/problem/1380/F", "name": "Strange Addition", "tags": ["data structures", "dp", "matrices"], "problem_rating": "2600", "solved_by": "x775"},
{"url": "https://codeforces.com//problemset/problem/1380/E", "name": "Merging Towers", "tags": ["data structures", "dsu", "implementation", "trees"], "problem_rating": "2300", "solved_by": "x1991"},
{"url": "https://codeforces.com//problemset/problem/1380/D", "name": "Berserk And Fireball", "tags": ["constructive algorithms", "greedy", "implementation", "math", "two pointers"], "problem_rating": "2000", "solved_by": "x4659"},
{"url": "https://codeforces.com//problemset/problem/1380/C", "name": "Create The Teams", "tags": ["brute force", "dp", "greedy", "implementation", "sortings"], "problem_rating": "1400", "solved_by": "x20286"},
{"url": "https://codeforces.com//problemset/problem/1380/B", "name": "Universal Solution", "tags": ["greedy"], "problem_rating": "1400", "solved_by": "x14371"},
{"url": "https://codeforces.com//problemset/problem/1380/A", "name": "Three Indices", "tags": ["brute force", "data structures"], "problem_rating": "900", "solved_by": "x24610"},
{"url": "https://codeforces.com//problemset/problem/1379/F2", "name": "Chess Strikes Back (hard version)", "tags": ["data structures", "divide and conquer"], "problem_rating": "2800", "solved_by": "x478"},
{"url": "https://codeforces.com//problemset/problem/1379/F1", "name": "Chess Strikes Back (easy version)", "tags": ["binary search", "data structures"], "problem_rating": "2700", "solved_by": "x583"},
{"url": "https://codeforces.com//problemset/problem/1379/E", "name": "Inverse Genealogy", "tags": ["constructive algorithms", "divide and conquer", "dp", "math", "trees"], "problem_rating": "2800", "solved_by": "x423"},
{"url": "https://codeforces.com//problemset/problem/1379/D", "name": "New Passenger Trams", "tags": ["binary search", "brute force", "data structures", "sortings", "two pointers"], "problem_rating": "2300", "solved_by": "x1064"},
{"url": "https://codeforces.com//problemset/problem/1379/C", "name": "Choosing flowers", "tags": ["binary search", "brute force", "data structures", "dfs and similar", "dp", "greedy", "sortings", "two pointers"], "problem_rating": "2000", "solved_by": "x5475"},
{"url": "https://codeforces.com//problemset/problem/1379/B", "name": "Dubious Cyrpto", "tags": ["binary search", "brute force", "math", "number theory"], "problem_rating": "1500", "solved_by": "x12569"},
{"url": "https://codeforces.com//problemset/problem/1379/A", "name": "Acacius and String", "tags": ["brute force", "implementation", "strings"], "problem_rating": "1500", "solved_by": "x11710"},
{"url": "https://codeforces.com//problemset/problem/1375/I", "name": "Cubic Lattice", "tags": ["geometry", "math", "matrices", "number theory"], "problem_rating": "3500", "solved_by": "x187"},
{"url": "https://codeforces.com//problemset/problem/1375/H", "name": "Set Merging", "tags": ["constructive algorithms", "divide and conquer"], "problem_rating": "3300", "solved_by": "x414"},
{"url": "https://codeforces.com//problemset/problem/1375/G", "name": "Tree Modification", "tags": ["brute force", "constructive algorithms", "dfs and similar", "graph matchings", "graphs", "trees"], "problem_rating": "2800", "solved_by": "x1787"},
{"url": "https://codeforces.com//problemset/problem/1375/F", "name": "Integer Game", "tags": ["constructive algorithms", "games", "interactive", "math"], "problem_rating": "2600", "solved_by": "x2048"},
{"url": "https://codeforces.com//problemset/problem/1375/E", "name": "Inversion SwapSort", "tags": ["constructive algorithms", "greedy", "sortings"], "problem_rating": "2500", "solved_by": "x2893"},
{"url": "https://codeforces.com//problemset/problem/1375/D", "name": "Replace by MEX", "tags": ["brute force", "constructive algorithms", "sortings"], "problem_rating": "1900", "solved_by": "x8977"},
{"url": "https://codeforces.com//problemset/problem/1375/C", "name": "Element Extermination", "tags": ["constructive algorithms", "data structures", "greedy"], "problem_rating": "1400", "solved_by": "x20799"},
{"url": "https://codeforces.com//problemset/problem/1375/B", "name": "Neighbor Grid", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1200", "solved_by": "x17088"},
{"url": "https://codeforces.com//problemset/problem/1375/A", "name": "Sign Flipping", "tags": ["constructive algorithms", "math"], "problem_rating": "1100", "solved_by": "x18200"},
{"url": "https://codeforces.com//problemset/problem/1374/F", "name": "Cyclic Shifts Sorting", "tags": ["brute force", "constructive algorithms", "implementation", "sortings"], "problem_rating": "2400", "solved_by": "x1282"},
{"url": "https://codeforces.com//problemset/problem/1374/E2", "name": "Reading Books (hard version)", "tags": ["data structures", "greedy", "implementation", "sortings", "ternary search", "two pointers"], "problem_rating": "2500", "solved_by": "x917"},
{"url": "https://codeforces.com//problemset/problem/1374/E1", "name": "Reading Books (easy version)", "tags": ["data structures", "greedy", "sortings"], "problem_rating": "1600", "solved_by": "x13794"},
{"url": "https://codeforces.com//problemset/problem/1374/D", "name": "Zero Remainder Array", "tags": ["math", "sortings", "two pointers"], "problem_rating": "1400", "solved_by": "x23059"},
{"url": "https://codeforces.com//problemset/problem/1374/C", "name": "Move Brackets", "tags": ["greedy", "strings"], "problem_rating": "1000", "solved_by": "x45022"},
{"url": "https://codeforces.com//problemset/problem/1374/B", "name": "Multiply by 2, divide by 6", "tags": ["math"], "problem_rating": "900", "solved_by": "x48160"},
{"url": "https://codeforces.com//problemset/problem/1374/A", "name": "Required Remainder", "tags": ["math"], "problem_rating": "800", "solved_by": "x52369"},
{"url": "https://codeforces.com//problemset/problem/1373/G", "name": "Pawns", "tags": ["data structures", "divide and conquer", "greedy"], "problem_rating": "2600", "solved_by": "x782"},
{"url": "https://codeforces.com//problemset/problem/1373/F", "name": "Network Coverage", "tags": ["binary search", "constructive algorithms", "data structures", "greedy"], "problem_rating": "2400", "solved_by": "x1639"},
{"url": "https://codeforces.com//problemset/problem/1373/E", "name": "Sum of Digits", "tags": ["brute force", "constructive algorithms", "dp", "greedy"], "problem_rating": "2200", "solved_by": "x2716"},
{"url": "https://codeforces.com//problemset/problem/1373/D", "name": "Maximum Sum on Even Positions", "tags": ["divide and conquer", "dp", "greedy", "implementation"], "problem_rating": "1600", "solved_by": "x15373"},
{"url": "https://codeforces.com//problemset/problem/1373/C", "name": "Pluses and Minuses", "tags": ["math"], "problem_rating": "1300", "solved_by": "x18180"},
{"url": "https://codeforces.com//problemset/problem/1373/B", "name": "01 Game", "tags": ["games"], "problem_rating": "900", "solved_by": "x34346"},
{"url": "https://codeforces.com//problemset/problem/1373/A", "name": "Donut Shops", "tags": ["greedy", "implementation", "math"], "problem_rating": "1000", "solved_by": "x26512"},
{"url": "https://codeforces.com//problemset/problem/1372/F", "name": "Omkar and Modes", "tags": ["binary search", "divide and conquer", "interactive"], "problem_rating": "2700", "solved_by": "x437"},
{"url": "https://codeforces.com//problemset/problem/1372/E", "name": "Omkar and Last Floor", "tags": ["dp", "greedy", "two pointers"], "problem_rating": "2900", "solved_by": "x1023"},
{"url": "https://codeforces.com//problemset/problem/1372/D", "name": "Omkar and Circle", "tags": ["brute force", "dp", "games", "greedy"], "problem_rating": "2100", "solved_by": "x5329"},
{"url": "https://codeforces.com//problemset/problem/1372/C", "name": "Omkar and Baseball", "tags": ["constructive algorithms", "math"], "problem_rating": "1500", "solved_by": "x17647"},
{"url": "https://codeforces.com//problemset/problem/1372/B", "name": "Omkar and Last Class of Math", "tags": ["greedy", "math", "number theory"], "problem_rating": "1300", "solved_by": "x27111"},
{"url": "https://codeforces.com//problemset/problem/1372/A", "name": "Omkar and Completion", "tags": ["constructive algorithms", "implementation"], "problem_rating": "800", "solved_by": "x31747"},
{"url": "https://codeforces.com//problemset/problem/1371/F", "name": "Raging Thunder", "tags": ["data structures", "divide and conquer", "implementation"], "problem_rating": "2800", "solved_by": "x583"},
{"url": "https://codeforces.com//problemset/problem/1371/E2", "name": "Asterism (Hard Version)", "tags": ["binary search", "combinatorics", "dp", "math", "number theory", "sortings"], "problem_rating": "2300", "solved_by": "x2320"},
{"url": "https://codeforces.com//problemset/problem/1371/E1", "name": "Asterism (Easy Version)", "tags": ["binary search", "brute force", "combinatorics", "math", "number theory", "sortings"], "problem_rating": "1900", "solved_by": "x5113"},
{"url": "https://codeforces.com//problemset/problem/1371/D", "name": "Grid-00100", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "1600", "solved_by": "x12906"},
{"url": "https://codeforces.com//problemset/problem/1371/C", "name": "A Cookie for You", "tags": ["greedy", "implementation", "math"], "problem_rating": "1300", "solved_by": "x20372"},
{"url": "https://codeforces.com//problemset/problem/1371/B", "name": "Magical Calendar", "tags": ["math"], "problem_rating": "1200", "solved_by": "x19080"},
{"url": "https://codeforces.com//problemset/problem/1371/A", "name": "Magical Sticks", "tags": ["math"], "problem_rating": "800", "solved_by": "x45221"},
{"url": "https://codeforces.com//problemset/problem/1370/F2", "name": "The Hidden Pair (Hard Version)", "tags": ["binary search", "dfs and similar", "graphs", "interactive", "shortest paths", "trees"], "problem_rating": "2700", "solved_by": "x1432"},
{"url": "https://codeforces.com//problemset/problem/1370/F1", "name": "The Hidden Pair (Easy Version)", "tags": ["binary search", "dfs and similar", "graphs", "interactive", "shortest paths", "trees"], "problem_rating": "2400", "solved_by": "x1557"},
{"url": "https://codeforces.com//problemset/problem/1370/E", "name": "Binary Subsequence Rotation", "tags": ["binary search", "constructive algorithms", "data structures", "greedy"], "problem_rating": "2100", "solved_by": "x4825"},
{"url": "https://codeforces.com//problemset/problem/1370/D", "name": "Odd-Even Subsequence", "tags": ["binary search", "dp", "dsu", "greedy", "implementation"], "problem_rating": "2000", "solved_by": "x9455"},
{"url": "https://codeforces.com//problemset/problem/1370/C", "name": "Number Game", "tags": ["games", "math", "number theory"], "problem_rating": "1400", "solved_by": "x24186"},
{"url": "https://codeforces.com//problemset/problem/1370/B", "name": "GCD Compression", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "1100", "solved_by": "x23487"},
{"url": "https://codeforces.com//problemset/problem/1370/A", "name": "Maximum GCD", "tags": ["greedy", "implementation", "math", "number theory"], "problem_rating": "800", "solved_by": "x50648"},
{"url": "https://codeforces.com//problemset/problem/1369/F", "name": "BareLee", "tags": ["dfs and similar", "dp", "games"], "problem_rating": "2700", "solved_by": "x640"},
{"url": "https://codeforces.com//problemset/problem/1369/E", "name": "DeadLee", "tags": ["data structures", "dfs and similar", "greedy", "implementation", "sortings"], "problem_rating": "2400", "solved_by": "x2088"},
{"url": "https://codeforces.com//problemset/problem/1369/D", "name": "TediousLee", "tags": ["dp", "graphs", "greedy", "math", "trees"], "problem_rating": "1900", "solved_by": "x8492"},
{"url": "https://codeforces.com//problemset/problem/1369/C", "name": "RationalLee", "tags": ["greedy", "math", "sortings", "two pointers"], "problem_rating": "1400", "solved_by": "x19382"},
{"url": "https://codeforces.com//problemset/problem/1369/B", "name": "AccurateLee", "tags": ["greedy", "implementation", "strings"], "problem_rating": "1200", "solved_by": "x24132"},
{"url": "https://codeforces.com//problemset/problem/1369/A", "name": "FashionabLee", "tags": ["geometry", "math"], "problem_rating": "800", "solved_by": "x36174"},
{"url": "https://codeforces.com//problemset/problem/1368/H2", "name": "Breadboard Capacity (hard version)", "tags": [], "problem_rating": "3500", "solved_by": "x223"},
{"url": "https://codeforces.com//problemset/problem/1368/H1", "name": "Breadboard Capacity (easy version)", "tags": ["dp", "flows", "greedy"], "problem_rating": "3300", "solved_by": "x344"},
{"url": "https://codeforces.com//problemset/problem/1368/G", "name": "Shifting Dominoes", "tags": ["data structures", "geometry", "graphs", "trees"], "problem_rating": "3200", "solved_by": "x587"},
{"url": "https://codeforces.com//problemset/problem/1368/F", "name": "Lamps on a Circle", "tags": ["games", "implementation", "interactive", "math"], "problem_rating": "2600", "solved_by": "x1026"},
{"url": "https://codeforces.com//problemset/problem/1368/E", "name": "Ski Accidents", "tags": ["constructive algorithms", "graphs", "greedy"], "problem_rating": "2500", "solved_by": "x2183"},
{"url": "https://codeforces.com//problemset/problem/1368/D", "name": "AND, OR and square sum", "tags": ["bitmasks", "greedy", "math"], "problem_rating": "1700", "solved_by": "x11596"},
{"url": "https://codeforces.com//problemset/problem/1368/C", "name": "Even Picture", "tags": ["constructive algorithms"], "problem_rating": "1500", "solved_by": "x13252"},
{"url": "https://codeforces.com//problemset/problem/1368/B", "name": "Codeforces Subsequences", "tags": ["brute force", "constructive algorithms", "greedy", "math", "strings"], "problem_rating": "1500", "solved_by": "x19467"},
{"url": "https://codeforces.com//problemset/problem/1368/A", "name": "C+=", "tags": ["brute force", "greedy", "implementation", "math"], "problem_rating": "800", "solved_by": "x38219"},
{"url": "https://codeforces.com//problemset/problem/1367/F2", "name": "Flying Sort (Hard Version)", "tags": ["binary search", "data structures", "dp", "greedy", "sortings", "two pointers"], "problem_rating": "2400", "solved_by": "x1635"},
{"url": "https://codeforces.com//problemset/problem/1367/F1", "name": "Flying Sort (Easy Version)", "tags": ["dp", "greedy", "two pointers"], "problem_rating": "2100", "solved_by": "x3206"},
{"url": "https://codeforces.com//problemset/problem/1367/E", "name": "Necklace Assembly", "tags": ["brute force", "dfs and similar", "dp", "graphs", "greedy", "number theory"], "problem_rating": "1900", "solved_by": "x5385"},
{"url": "https://codeforces.com//problemset/problem/1367/D", "name": "Task On The Board", "tags": ["constructive algorithms", "greedy", "implementation", "sortings"], "problem_rating": "1800", "solved_by": "x8260"},
{"url": "https://codeforces.com//problemset/problem/1367/C", "name": "Social Distance", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1300", "solved_by": "x23239"},
{"url": "https://codeforces.com//problemset/problem/1367/B", "name": "Even Array", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x52041"},
{"url": "https://codeforces.com//problemset/problem/1367/A", "name": "Short Substrings", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x56358"},
{"url": "https://codeforces.com//problemset/problem/1366/G", "name": "Construct the String", "tags": ["data structures", "dp", "strings"], "problem_rating": "2700", "solved_by": "x538"},
{"url": "https://codeforces.com//problemset/problem/1366/F", "name": "Jog Around The Graph", "tags": ["binary search", "dp", "geometry", "graphs"], "problem_rating": "2700", "solved_by": "x793"},
{"url": "https://codeforces.com//problemset/problem/1366/E", "name": "Two Arrays", "tags": ["binary search", "brute force", "combinatorics", "constructive algorithms", "dp", "two pointers"], "problem_rating": "2100", "solved_by": "x4203"},
{"url": "https://codeforces.com//problemset/problem/1366/D", "name": "Two Divisors", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "2000", "solved_by": "x10311"},
{"url": "https://codeforces.com//problemset/problem/1366/C", "name": "Palindromic Paths", "tags": ["greedy", "math"], "problem_rating": "1500", "solved_by": "x13465"},
{"url": "https://codeforces.com//problemset/problem/1366/B", "name": "Shuffle", "tags": ["math", "two pointers"], "problem_rating": "1300", "solved_by": "x20347"},
{"url": "https://codeforces.com//problemset/problem/1366/A", "name": "Shovels and Swords", "tags": ["binary search", "greedy", "math"], "problem_rating": "1100", "solved_by": "x29678"},
{"url": "https://codeforces.com//problemset/problem/1365/G", "name": "Secure Password", "tags": ["bitmasks", "combinatorics", "constructive algorithms", "interactive", "math"], "problem_rating": "2800", "solved_by": "x1127"},
{"url": "https://codeforces.com//problemset/problem/1365/F", "name": "Swaps Again", "tags": ["constructive algorithms", "implementation", "sortings"], "problem_rating": "2100", "solved_by": "x4393"},
{"url": "https://codeforces.com//problemset/problem/1365/E", "name": "Maximum Subsequence Value", "tags": ["brute force", "constructive algorithms"], "problem_rating": "1900", "solved_by": "x7758"},
{"url": "https://codeforces.com//problemset/problem/1365/D", "name": "Solve The Maze", "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy", "implementation", "shortest paths"], "problem_rating": "1700", "solved_by": "x16849"},
{"url": "https://codeforces.com//problemset/problem/1365/C", "name": "Rotation Matching", "tags": ["constructive algorithms", "data structures", "greedy", "implementation"], "problem_rating": "1400", "solved_by": "x22839"},
{"url": "https://codeforces.com//problemset/problem/1365/B", "name": "Trouble Sort", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1300", "solved_by": "x26555"},
{"url": "https://codeforces.com//problemset/problem/1365/A", "name": "Matrix Game", "tags": ["games", "greedy", "implementation"], "problem_rating": "1100", "solved_by": "x23924"},
{"url": "https://codeforces.com//problemset/problem/1364/E", "name": "X-OR", "tags": ["bitmasks", "constructive algorithms", "divide and conquer", "interactive", "probabilities"], "problem_rating": "2700", "solved_by": "x1402"},
{"url": "https://codeforces.com//problemset/problem/1364/D", "name": "Ehab's Last Corollary", "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy", "implementation", "trees"], "problem_rating": "2100", "solved_by": "x4291"},
{"url": "https://codeforces.com//problemset/problem/1364/C", "name": "Ehab and Prefix MEXs", "tags": ["brute force", "constructive algorithms", "greedy"], "problem_rating": "1600", "solved_by": "x13009"},
{"url": "https://codeforces.com//problemset/problem/1364/B", "name": "Most socially-distanced subsequence", "tags": ["greedy", "two pointers"], "problem_rating": "1300", "solved_by": "x19344"},
{"url": "https://codeforces.com//problemset/problem/1364/A", "name": "XXXXX", "tags": ["brute force", "data structures", "number theory", "two pointers"], "problem_rating": "1200", "solved_by": "x27595"},
{"url": "https://codeforces.com//problemset/problem/1363/F", "name": "Rotating Substrings", "tags": ["dp", "strings"], "problem_rating": "2600", "solved_by": "x1473"},
{"url": "https://codeforces.com//problemset/problem/1363/E", "name": "Tree Shuffling", "tags": ["dfs and similar", "dp", "greedy", "trees"], "problem_rating": "2000", "solved_by": "x6737"},
{"url": "https://codeforces.com//problemset/problem/1363/D", "name": "Guess The Maximums", "tags": ["binary search", "implementation", "interactive", "math"], "problem_rating": "2100", "solved_by": "x4041"},
{"url": "https://codeforces.com//problemset/problem/1363/C", "name": "Game On Leaves", "tags": ["games", "trees"], "problem_rating": "1600", "solved_by": "x18369"},
{"url": "https://codeforces.com//problemset/problem/1363/B", "name": "Subsequence Hate", "tags": ["implementation", "strings"], "problem_rating": "1400", "solved_by": "x23343"},
{"url": "https://codeforces.com//problemset/problem/1363/A", "name": "Odd Selection", "tags": ["brute force", "implementation", "math"], "problem_rating": "1200", "solved_by": "x35243"},
{"url": "https://codeforces.com//problemset/problem/1362/C", "name": "Johnny and Another Rating Drop", "tags": ["bitmasks", "greedy", "math"], "problem_rating": "1400", "solved_by": "x17878"},
{"url": "https://codeforces.com//problemset/problem/1362/B", "name": "Johnny and His Hobbies", "tags": ["bitmasks", "brute force"], "problem_rating": "1200", "solved_by": "x18808"},
{"url": "https://codeforces.com//problemset/problem/1362/A", "name": "Johnny and Ancient Computer", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x23371"},
{"url": "https://codeforces.com//problemset/problem/1361/F", "name": "Johnny and New Toy", "tags": ["data structures", "implementation", "math"], "problem_rating": "3300", "solved_by": "x151"},
{"url": "https://codeforces.com//problemset/problem/1361/E", "name": "James and the Chase", "tags": ["dfs and similar", "graphs", "probabilities", "trees"], "problem_rating": "3000", "solved_by": "x666"},
{"url": "https://codeforces.com//problemset/problem/1361/D", "name": "Johnny and James", "tags": ["greedy", "implementation", "math", "trees"], "problem_rating": "2900", "solved_by": "x312"},
{"url": "https://codeforces.com//problemset/problem/1361/C", "name": "Johnny and Megan's Necklace", "tags": ["binary search", "bitmasks", "constructive algorithms", "dfs and similar", "dsu", "graphs"], "problem_rating": "2500", "solved_by": "x1605"},
{"url": "https://codeforces.com//problemset/problem/1361/B", "name": "Johnny and Grandmaster", "tags": ["greedy", "implementation", "math", "sortings"], "problem_rating": "1900", "solved_by": "x3594"},
{"url": "https://codeforces.com//problemset/problem/1361/A", "name": "Johnny and Contribution", "tags": ["constructive algorithms", "graphs", "greedy", "sortings"], "problem_rating": "1700", "solved_by": "x8370"},
{"url": "https://codeforces.com//problemset/problem/1360/H", "name": "Binary Median", "tags": ["binary search", "bitmasks", "brute force", "constructive algorithms"], "problem_rating": "2100", "solved_by": "x4513"},
{"url": "https://codeforces.com//problemset/problem/1360/G", "name": "A/B Matrix", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1900", "solved_by": "x7654"},
{"url": "https://codeforces.com//problemset/problem/1360/F", "name": "Spy-string", "tags": ["bitmasks", "brute force", "constructive algorithms", "dp", "hashing", "strings"], "problem_rating": "1700", "solved_by": "x12217"},
{"url": "https://codeforces.com//problemset/problem/1360/E", "name": "Polygon", "tags": ["dp", "graphs", "implementation", "shortest paths"], "problem_rating": "1300", "solved_by": "x24934"},
{"url": "https://codeforces.com//problemset/problem/1360/D", "name": "Buying Shovels", "tags": ["math", "number theory"], "problem_rating": "1300", "solved_by": "x32086"},
{"url": "https://codeforces.com//problemset/problem/1360/C", "name": "Similar Pairs", "tags": ["constructive algorithms", "graph matchings", "greedy", "sortings"], "problem_rating": "1100", "solved_by": "x32392"},
{"url": "https://codeforces.com//problemset/problem/1360/B", "name": "Honest Coach", "tags": ["greedy", "sortings"], "problem_rating": "800", "solved_by": "x47157"},
{"url": "https://codeforces.com//problemset/problem/1360/A", "name": "Minimal Square", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x49456"},
{"url": "https://codeforces.com//problemset/problem/1359/F", "name": "RC Kaboom Show", "tags": ["binary search", "brute force", "data structures", "geometry", "math"], "problem_rating": "2900", "solved_by": "x533"},
{"url": "https://codeforces.com//problemset/problem/1359/E", "name": "Modular Stability", "tags": ["combinatorics", "math", "number theory"], "problem_rating": "2000", "solved_by": "x6023"},
{"url": "https://codeforces.com//problemset/problem/1359/D", "name": "Yet Another Yet Another Task", "tags": ["data structures", "dp", "implementation", "two pointers"], "problem_rating": "2000", "solved_by": "x9308"},
{"url": "https://codeforces.com//problemset/problem/1359/C", "name": "Mixing Water", "tags": ["binary search", "math"], "problem_rating": "1700", "solved_by": "x13636"},
{"url": "https://codeforces.com//problemset/problem/1359/B", "name": "New Theatre Square", "tags": ["brute force", "dp", "greedy", "implementation", "two pointers"], "problem_rating": "1000", "solved_by": "x27537"},
{"url": "https://codeforces.com//problemset/problem/1359/A", "name": "Berland Poker", "tags": ["brute force", "greedy", "math"], "problem_rating": "1000", "solved_by": "x29308"},
{"url": "https://codeforces.com//problemset/problem/1358/F", "name": "Tasty Cookie", "tags": ["binary search", "constructive algorithms", "greedy", "implementation"], "problem_rating": "2700", "solved_by": "x441"},
{"url": "https://codeforces.com//problemset/problem/1358/E", "name": "Are You Fired?", "tags": ["constructive algorithms", "data structures", "greedy", "implementation"], "problem_rating": "2400", "solved_by": "x2286"},
{"url": "https://codeforces.com//problemset/problem/1358/D", "name": "The Best Vacation", "tags": ["binary search", "brute force", "greedy", "implementation", "two pointers"], "problem_rating": "1900", "solved_by": "x8090"},
{"url": "https://codeforces.com//problemset/problem/1358/C", "name": "Celex Update", "tags": ["math"], "problem_rating": "1600", "solved_by": "x17212"},
{"url": "https://codeforces.com//problemset/problem/1358/B", "name": "Maria Breaks the Self-isolation", "tags": ["greedy", "sortings"], "problem_rating": "1000", "solved_by": "x24807"},
{"url": "https://codeforces.com//problemset/problem/1358/A", "name": "Park Lighting", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x38810"},
{"url": "https://codeforces.com//problemset/problem/1357/E2", "name": "Root of quantum Fourier transform", "tags": [], "problem_rating": [null], "solved_by": "x50"},
{"url": "https://codeforces.com//problemset/problem/1357/E1", "name": "Power of quantum Fourier transform", "tags": [], "problem_rating": [null], "solved_by": "x192"},
{"url": "https://codeforces.com//problemset/problem/1357/D5", "name": "Quantum Classification - Dataset 7", "tags": [], "problem_rating": [null], "solved_by": "x81"},
{"url": "https://codeforces.com//problemset/problem/1357/D4", "name": "Quantum Classification - Dataset 6", "tags": [], "problem_rating": [null], "solved_by": "x84"},
{"url": "https://codeforces.com//problemset/problem/1357/D3", "name": "Quantum Classification - Dataset 5", "tags": [], "problem_rating": [null], "solved_by": "x104"},
{"url": "https://codeforces.com//problemset/problem/1357/D2", "name": "Quantum Classification - Dataset 4", "tags": [], "problem_rating": [null], "solved_by": "x111"},
{"url": "https://codeforces.com//problemset/problem/1357/D1", "name": "Quantum Classification - Dataset 3", "tags": [], "problem_rating": [null], "solved_by": "x124"},
{"url": "https://codeforces.com//problemset/problem/1357/C2", "name": "Prepare superposition of basis states with the same parity", "tags": [], "problem_rating": [null], "solved_by": "x302"},
{"url": "https://codeforces.com//problemset/problem/1357/C1", "name": "Prepare superposition of basis states with 0s", "tags": [], "problem_rating": [null], "solved_by": "x347"},
{"url": "https://codeforces.com//problemset/problem/1357/B2", "name": "\"Is the number divisible by 3?\" oracle", "tags": [], "problem_rating": [null], "solved_by": "x213"},
{"url": "https://codeforces.com//problemset/problem/1357/B1", "name": "\"Is the bit string balanced?\" oracle", "tags": [], "problem_rating": [null], "solved_by": "x213"},
{"url": "https://codeforces.com//problemset/problem/1357/A7", "name": "Distinguish Y, XZ, -Y and -XZ", "tags": [], "problem_rating": [null], "solved_by": "x181"},
{"url": "https://codeforces.com//problemset/problem/1357/A6", "name": "Distinguish four Pauli gates", "tags": [], "problem_rating": [null], "solved_by": "x166"},
{"url": "https://codeforces.com//problemset/problem/1357/A5", "name": "Distinguish Rz(θ) from Ry(θ)", "tags": [], "problem_rating": [null], "solved_by": "x239"},
{"url": "https://codeforces.com//problemset/problem/1357/A4", "name": "Distinguish Rz from R1", "tags": [], "problem_rating": [null], "solved_by": "x350"},
{"url": "https://codeforces.com//problemset/problem/1357/A3", "name": "Distinguish H from X", "tags": [], "problem_rating": [null], "solved_by": "x477"},
{"url": "https://codeforces.com//problemset/problem/1357/A2", "name": "Distinguish I, CNOTs and SWAP", "tags": [], "problem_rating": [null], "solved_by": "x509"},
{"url": "https://codeforces.com//problemset/problem/1357/A1", "name": "Figure out direction of CNOT", "tags": [], "problem_rating": [null], "solved_by": "x630"},
{"url": "https://codeforces.com//problemset/problem/1356/D2", "name": "Quantum Classification - 2", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x126"},
{"url": "https://codeforces.com//problemset/problem/1356/D1", "name": "Quantum Classification - 1", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x135"},
{"url": "https://codeforces.com//problemset/problem/1356/C", "name": "Prepare state |01⟩ + |10⟩ + |11⟩", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x301"},
{"url": "https://codeforces.com//problemset/problem/1356/B2", "name": "Decrement", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x281"},
{"url": "https://codeforces.com//problemset/problem/1356/B1", "name": "Increment", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x281"},
{"url": "https://codeforces.com//problemset/problem/1356/A5", "name": "Distinguish Z from -Z", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x329"},
{"url": "https://codeforces.com//problemset/problem/1356/A4", "name": "Distinguish I ⊗ X from CNOT", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x457"},
{"url": "https://codeforces.com//problemset/problem/1356/A3", "name": "Distinguish Z from S", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x459"},
{"url": "https://codeforces.com//problemset/problem/1356/A2", "name": "Distinguish I from Z", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x486"},
{"url": "https://codeforces.com//problemset/problem/1356/A1", "name": "Distinguish I from X", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x601"},
{"url": "https://codeforces.com//problemset/problem/1355/F", "name": "Guess Divisors Count", "tags": ["constructive algorithms", "interactive", "number theory"], "problem_rating": "2600", "solved_by": "x829"},
{"url": "https://codeforces.com//problemset/problem/1355/E", "name": "Restorer Distance", "tags": ["binary search", "greedy", "math", "sortings", "ternary search"], "problem_rating": "2100", "solved_by": "x5019"},
{"url": "https://codeforces.com//problemset/problem/1355/D", "name": "Game With Array", "tags": ["constructive algorithms", "math"], "problem_rating": "1400", "solved_by": "x17860"},
{"url": "https://codeforces.com//problemset/problem/1355/C", "name": "Count Triangles", "tags": ["binary search", "implementation", "math", "two pointers"], "problem_rating": "1800", "solved_by": "x10540"},
{"url": "https://codeforces.com//problemset/problem/1355/B", "name": "Young Explorers", "tags": ["dp", "greedy", "sortings"], "problem_rating": "1200", "solved_by": "x25346"},
{"url": "https://codeforces.com//problemset/problem/1355/A", "name": "Sequence with Digits", "tags": ["brute force", "implementation", "math"], "problem_rating": "1200", "solved_by": "x26149"},
{"url": "https://codeforces.com//problemset/problem/1354/G", "name": "Find a Gift", "tags": ["binary search", "interactive", "probabilities"], "problem_rating": "2600", "solved_by": "x764"},
{"url": "https://codeforces.com//problemset/problem/1354/F", "name": "Summoning Minions", "tags": ["constructive algorithms", "dp", "flows", "graph matchings", "greedy", "sortings"], "problem_rating": "2500", "solved_by": "x1181"},
{"url": "https://codeforces.com//problemset/problem/1354/E", "name": "Graph Coloring", "tags": ["dfs and similar", "dp", "graphs"], "problem_rating": "2100", "solved_by": "x3282"},
{"url": "https://codeforces.com//problemset/problem/1354/D", "name": "Multiset", "tags": ["binary search", "data structures"], "problem_rating": "1900", "solved_by": "x8612"},
{"url": "https://codeforces.com//problemset/problem/1354/C2", "name": "Not So Simple Polygon Embedding", "tags": ["binary search", "brute force", "geometry", "math"], "problem_rating": "2000", "solved_by": "x6020"},
{"url": "https://codeforces.com//problemset/problem/1354/C1", "name": "Simple Polygon Embedding", "tags": ["binary search", "geometry", "math", "ternary search"], "problem_rating": "1400", "solved_by": "x15585"},
{"url": "https://codeforces.com//problemset/problem/1354/B", "name": "Ternary String", "tags": ["binary search", "dp", "implementation", "two pointers"], "problem_rating": "1200", "solved_by": "x30100"},
{"url": "https://codeforces.com//problemset/problem/1354/A", "name": "Alarm Clock", "tags": ["math"], "problem_rating": "900", "solved_by": "x23639"},
{"url": "https://codeforces.com//problemset/problem/1353/F", "name": "Decreasing Heights", "tags": ["brute force", "dp"], "problem_rating": "2200", "solved_by": "x3275"},
{"url": "https://codeforces.com//problemset/problem/1353/E", "name": "K-periodic Garland", "tags": ["brute force", "dp", "greedy"], "problem_rating": "1900", "solved_by": "x7061"},
{"url": "https://codeforces.com//problemset/problem/1353/D", "name": "Constructing the Array", "tags": ["constructive algorithms", "data structures", "sortings"], "problem_rating": "1600", "solved_by": "x17841"},
{"url": "https://codeforces.com//problemset/problem/1353/C", "name": "Board Moves", "tags": ["math"], "problem_rating": "1000", "solved_by": "x34925"},
{"url": "https://codeforces.com//problemset/problem/1353/B", "name": "Two Arrays And Swaps", "tags": ["greedy", "sortings"], "problem_rating": "800", "solved_by": "x48642"},
{"url": "https://codeforces.com//problemset/problem/1353/A", "name": "Most Unstable Array", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "800", "solved_by": "x40058"},
{"url": "https://codeforces.com//problemset/problem/1352/G", "name": "Special Permutation", "tags": ["constructive algorithms"], "problem_rating": "1600", "solved_by": "x20688"},
{"url": "https://codeforces.com//problemset/problem/1352/F", "name": "Binary String Reconstruction", "tags": ["constructive algorithms", "dfs and similar", "math"], "problem_rating": "1500", "solved_by": "x16801"},
{"url": "https://codeforces.com//problemset/problem/1352/E", "name": "Special Elements", "tags": ["brute force", "implementation", "two pointers"], "problem_rating": "1500", "solved_by": "x20061"},
{"url": "https://codeforces.com//problemset/problem/1352/D", "name": "Alice, Bob and Candies", "tags": ["implementation"], "problem_rating": "1300", "solved_by": "x25606"},
{"url": "https://codeforces.com//problemset/problem/1352/C", "name": "K-th Not Divisible by n", "tags": ["binary search", "math"], "problem_rating": "1200", "solved_by": "x52441"},
{"url": "https://codeforces.com//problemset/problem/1352/B", "name": "Same Parity Summands", "tags": ["constructive algorithms", "math"], "problem_rating": "1200", "solved_by": "x36625"},
{"url": "https://codeforces.com//problemset/problem/1352/A", "name": "Sum of Round Numbers", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x75846"},
{"url": "https://codeforces.com//problemset/problem/1351/C", "name": "Skier", "tags": ["data structures", "implementation"], "problem_rating": "1400", "solved_by": "x8479"},
{"url": "https://codeforces.com//problemset/problem/1351/B", "name": "Square?", "tags": ["brute force", "implementation", "math"], "problem_rating": "900", "solved_by": "x16803"},
{"url": "https://codeforces.com//problemset/problem/1351/A", "name": "A+B (Trial Problem)", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x23370"},
{"url": "https://codeforces.com//problemset/problem/1350/B", "name": "Orac and Models", "tags": ["dp", "math", "number theory"], "problem_rating": "1400", "solved_by": "x21451"},
{"url": "https://codeforces.com//problemset/problem/1350/A", "name": "Orac and Factors", "tags": ["math"], "problem_rating": "900", "solved_by": "x25952"},
{"url": "https://codeforces.com//problemset/problem/1349/F2", "name": "Slime and Sequences (Hard Version)", "tags": ["dp", "fft", "math"], "problem_rating": "3500", "solved_by": "x109"},
{"url": "https://codeforces.com//problemset/problem/1349/F1", "name": "Slime and Sequences (Easy Version)", "tags": ["dp", "fft", "math"], "problem_rating": "3100", "solved_by": "x405"},
{"url": "https://codeforces.com//problemset/problem/1349/E", "name": "Slime and Hats", "tags": ["constructive algorithms", "dp", "greedy"], "problem_rating": "3500", "solved_by": "x88"},
{"url": "https://codeforces.com//problemset/problem/1349/D", "name": "Slime and Biscuits", "tags": ["math", "probabilities"], "problem_rating": "3200", "solved_by": "x881"},
{"url": "https://codeforces.com//problemset/problem/1349/C", "name": "Orac and Game of Life", "tags": ["dfs and similar", "graphs", "implementation", "shortest paths"], "problem_rating": "2000", "solved_by": "x4483"},
{"url": "https://codeforces.com//problemset/problem/1349/B", "name": "Orac and Medians", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "2000", "solved_by": "x8033"},
{"url": "https://codeforces.com//problemset/problem/1349/A", "name": "Orac and LCM", "tags": ["data structures", "math", "number theory"], "problem_rating": "1600", "solved_by": "x16626"},
{"url": "https://codeforces.com//problemset/problem/1348/F", "name": "Phoenix and Memory", "tags": ["data structures", "dfs and similar", "graphs", "greedy"], "problem_rating": "2600", "solved_by": "x790"},
{"url": "https://codeforces.com//problemset/problem/1348/E", "name": "Phoenix and Berries", "tags": ["brute force", "dp", "greedy", "math"], "problem_rating": "2400", "solved_by": "x2171"},
{"url": "https://codeforces.com//problemset/problem/1348/D", "name": "Phoenix and Science", "tags": ["binary search", "constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "1900", "solved_by": "x8767"},
{"url": "https://codeforces.com//problemset/problem/1348/C", "name": "Phoenix and Distribution", "tags": ["constructive algorithms", "greedy", "sortings", "strings"], "problem_rating": "1600", "solved_by": "x14506"},
{"url": "https://codeforces.com//problemset/problem/1348/B", "name": "Phoenix and Beauty", "tags": ["constructive algorithms", "data structures", "greedy", "sortings"], "problem_rating": "1400", "solved_by": "x25046"},
{"url": "https://codeforces.com//problemset/problem/1348/A", "name": "Phoenix and Balance", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x39123"},
{"url": "https://codeforces.com//problemset/problem/1346/I", "name": "Pac-Man 2.0", "tags": ["*special problem", "dp"], "problem_rating": "2900", "solved_by": "x48"},
{"url": "https://codeforces.com//problemset/problem/1346/H", "name": "Game with Segments", "tags": ["*special problem", "data structures", "games"], "problem_rating": "2700", "solved_by": "x49"},
{"url": "https://codeforces.com//problemset/problem/1346/G", "name": "Two IP Cameras", "tags": ["*special problem", "math", "number theory"], "problem_rating": "2300", "solved_by": "x134"},
{"url": "https://codeforces.com//problemset/problem/1346/F", "name": "Dune II: Battle For Arrakis", "tags": ["*special problem", "data structures", "greedy", "math"], "problem_rating": "2000", "solved_by": "x223"},
{"url": "https://codeforces.com//problemset/problem/1346/E", "name": "Magic Tricks", "tags": ["*special problem", "dp", "graphs"], "problem_rating": "1700", "solved_by": "x375"},
{"url": "https://codeforces.com//problemset/problem/1346/D", "name": "Constructing the Dungeon", "tags": ["*special problem", "graphs", "greedy"], "problem_rating": "1600", "solved_by": "x486"},
{"url": "https://codeforces.com//problemset/problem/1346/C", "name": "Spring Cleaning", "tags": ["*special problem", "greedy", "sortings"], "problem_rating": "1600", "solved_by": "x589"},
{"url": "https://codeforces.com//problemset/problem/1346/B", "name": "Boot Camp", "tags": ["*special problem", "greedy"], "problem_rating": "1400", "solved_by": "x1188"},
{"url": "https://codeforces.com//problemset/problem/1346/A", "name": "Color Revolution", "tags": ["*special problem", "math"], "problem_rating": "1000", "solved_by": "x1966"},
{"url": "https://codeforces.com//problemset/problem/1345/B", "name": "Card Constructions", "tags": ["binary search", "brute force", "dp", "math"], "problem_rating": "1100", "solved_by": "x26076"},
{"url": "https://codeforces.com//problemset/problem/1345/A", "name": "Puzzle Pieces", "tags": ["math"], "problem_rating": "800", "solved_by": "x24087"},
{"url": "https://codeforces.com//problemset/problem/1344/F", "name": "Piet's Palette", "tags": ["matrices"], "problem_rating": "3200", "solved_by": "x447"},
{"url": "https://codeforces.com//problemset/problem/1344/E", "name": "Train Tracks", "tags": ["data structures", "trees"], "problem_rating": "3100", "solved_by": "x456"},
{"url": "https://codeforces.com//problemset/problem/1344/D", "name": "Résumé Review", "tags": ["binary search", "greedy", "math"], "problem_rating": "2700", "solved_by": "x1144"},
{"url": "https://codeforces.com//problemset/problem/1344/C", "name": "Quantifier Question", "tags": ["dfs and similar", "dp", "graphs", "math"], "problem_rating": "2600", "solved_by": "x1839"},
{"url": "https://codeforces.com//problemset/problem/1344/B", "name": "Monopole Magnets", "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs"], "problem_rating": "2000", "solved_by": "x6017"},
{"url": "https://codeforces.com//problemset/problem/1344/A", "name": "Hilbert's Hotel", "tags": ["math", "number theory", "sortings"], "problem_rating": "1600", "solved_by": "x15535"},
{"url": "https://codeforces.com//problemset/problem/1343/F", "name": "Restore the Permutation by Sorted Segments", "tags": ["brute force", "constructive algorithms", "data structures", "greedy", "implementation"], "problem_rating": "2400", "solved_by": "x1247"},
{"url": "https://codeforces.com//problemset/problem/1343/E", "name": "Weights Distributing", "tags": ["brute force", "graphs", "greedy", "shortest paths", "sortings"], "problem_rating": "2100", "solved_by": "x5058"},
{"url": "https://codeforces.com//problemset/problem/1343/D", "name": "Constant Palindrome Sum", "tags": ["brute force", "data structures", "greedy", "two pointers"], "problem_rating": "1700", "solved_by": "x12519"},
{"url": "https://codeforces.com//problemset/problem/1343/C", "name": "Alternating Subsequence", "tags": ["dp", "greedy", "two pointers"], "problem_rating": "1200", "solved_by": "x37588"},
{"url": "https://codeforces.com//problemset/problem/1343/B", "name": "Balanced Array", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x55355"},
{"url": "https://codeforces.com//problemset/problem/1343/A", "name": "Candies", "tags": ["brute force", "math"], "problem_rating": "900", "solved_by": "x47223"},
{"url": "https://codeforces.com//problemset/problem/1342/F", "name": "Make It Ascending", "tags": ["bitmasks", "brute force", "dp"], "problem_rating": "3000", "solved_by": "x701"},
{"url": "https://codeforces.com//problemset/problem/1342/E", "name": "Placing Rooks", "tags": ["combinatorics", "fft", "math"], "problem_rating": "2300", "solved_by": "x3032"},
{"url": "https://codeforces.com//problemset/problem/1342/D", "name": "Multiple Testcases", "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "sortings", "two pointers"], "problem_rating": "1900", "solved_by": "x6058"},
{"url": "https://codeforces.com//problemset/problem/1342/C", "name": "Yet Another Counting Problem", "tags": ["math", "number theory"], "problem_rating": "1600", "solved_by": "x13928"},
{"url": "https://codeforces.com//problemset/problem/1342/B", "name": "Binary Period", "tags": ["constructive algorithms", "strings"], "problem_rating": "1100", "solved_by": "x23561"},
{"url": "https://codeforces.com//problemset/problem/1342/A", "name": "Road To Zero", "tags": ["greedy", "math"], "problem_rating": "1000", "solved_by": "x39522"},
{"url": "https://codeforces.com//problemset/problem/1341/B", "name": "Nastya and Door", "tags": ["greedy", "implementation"], "problem_rating": "1300", "solved_by": "x19407"},
{"url": "https://codeforces.com//problemset/problem/1341/A", "name": "Nastya and Rice", "tags": ["math"], "problem_rating": "900", "solved_by": "x28801"},
{"url": "https://codeforces.com//problemset/problem/1340/F", "name": "Nastya and CBS", "tags": ["brute force", "data structures", "hashing"], "problem_rating": "3300", "solved_by": "x497"},
{"url": "https://codeforces.com//problemset/problem/1340/E", "name": "Nastya and Bees", "tags": ["graphs", "interactive", "probabilities"], "problem_rating": "3000", "solved_by": "x53"},
{"url": "https://codeforces.com//problemset/problem/1340/D", "name": "Nastya and Time Machine", "tags": ["constructive algorithms", "dfs and similar", "graphs", "trees"], "problem_rating": "2600", "solved_by": "x982"},
{"url": "https://codeforces.com//problemset/problem/1340/C", "name": "Nastya and Unexpected Guest", "tags": ["dfs and similar", "dp", "graphs", "shortest paths"], "problem_rating": "2400", "solved_by": "x2208"},
{"url": "https://codeforces.com//problemset/problem/1340/B", "name": "Nastya and Scoreboard", "tags": ["bitmasks", "dp", "graphs", "greedy"], "problem_rating": "1700", "solved_by": "x7807"},
{"url": "https://codeforces.com//problemset/problem/1340/A", "name": "Nastya and Strange Generator", "tags": ["brute force", "data structures", "greedy", "implementation"], "problem_rating": "1500", "solved_by": "x13378"},
{"url": "https://codeforces.com//problemset/problem/1339/B", "name": "Sorted Adjacent Differences", "tags": ["constructive algorithms", "sortings"], "problem_rating": "1200", "solved_by": "x26051"},
{"url": "https://codeforces.com//problemset/problem/1339/A", "name": "Filling Diamonds", "tags": ["brute force", "dp", "implementation", "math"], "problem_rating": "900", "solved_by": "x31622"},
{"url": "https://codeforces.com//problemset/problem/1338/E", "name": "JYPnation", "tags": ["graphs"], "problem_rating": "3500", "solved_by": "x239"},
{"url": "https://codeforces.com//problemset/problem/1338/D", "name": "Nested Rubber Bands", "tags": ["constructive algorithms", "dfs and similar", "dp", "math", "trees"], "problem_rating": "2700", "solved_by": "x995"},
{"url": "https://codeforces.com//problemset/problem/1338/C", "name": "Perfect Triples", "tags": ["bitmasks", "brute force", "constructive algorithms", "divide and conquer", "math"], "problem_rating": "2200", "solved_by": "x3164"},
{"url": "https://codeforces.com//problemset/problem/1338/B", "name": "Edge Weight Assignment", "tags": ["bitmasks", "constructive algorithms", "dfs and similar", "greedy", "math", "trees"], "problem_rating": "1800", "solved_by": "x8365"},
{"url": "https://codeforces.com//problemset/problem/1338/A", "name": "Powered Addition", "tags": ["greedy", "math"], "problem_rating": "1500", "solved_by": "x23436"},
{"url": "https://codeforces.com//problemset/problem/1337/B", "name": "Kana and Dragon Quest game", "tags": ["greedy", "implementation", "math"], "problem_rating": "900", "solved_by": "x33783"},
{"url": "https://codeforces.com//problemset/problem/1337/A", "name": "Ichihime and Triangle", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x37323"},
{"url": "https://codeforces.com//problemset/problem/1336/F", "name": "Journey", "tags": ["data structures", "divide and conquer", "graphs", "trees"], "problem_rating": "3500", "solved_by": "x202"},
{"url": "https://codeforces.com//problemset/problem/1336/E2", "name": "Chiori and Doll Picking (hard version)", "tags": ["bitmasks", "brute force", "combinatorics", "math"], "problem_rating": "3500", "solved_by": "x297"},
{"url": "https://codeforces.com//problemset/problem/1336/E1", "name": "Chiori and Doll Picking (easy version)", "tags": ["bitmasks", "brute force", "combinatorics", "math"], "problem_rating": "2700", "solved_by": "x658"},
{"url": "https://codeforces.com//problemset/problem/1336/D", "name": "Yui and Mahjong Set", "tags": ["constructive algorithms", "interactive"], "problem_rating": "3200", "solved_by": "x470"},
{"url": "https://codeforces.com//problemset/problem/1336/C", "name": "Kaavi and Magic Spell", "tags": ["dp", "strings"], "problem_rating": "2200", "solved_by": "x3532"},
{"url": "https://codeforces.com//problemset/problem/1336/B", "name": "Xenia and Colorful Gems", "tags": ["binary search", "greedy", "math", "sortings", "two pointers"], "problem_rating": "1700", "solved_by": "x11264"},
{"url": "https://codeforces.com//problemset/problem/1336/A", "name": "Linova and Kingdom", "tags": ["dfs and similar", "dp", "greedy", "sortings", "trees"], "problem_rating": "1600", "solved_by": "x19987"},
{"url": "https://codeforces.com//problemset/problem/1335/F", "name": "Robots on a Grid", "tags": ["data structures", "dfs and similar", "dsu", "graphs", "greedy", "matrices"], "problem_rating": "2200", "solved_by": "x2165"},
{"url": "https://codeforces.com//problemset/problem/1335/E2", "name": "Three Blocks Palindrome (hard version)", "tags": ["brute force", "data structures", "dp", "two pointers"], "problem_rating": "1800", "solved_by": "x8254"},
{"url": "https://codeforces.com//problemset/problem/1335/E1", "name": "Three Blocks Palindrome (easy version)", "tags": ["binary search", "brute force", "data structures", "dp", "two pointers"], "problem_rating": "1700", "solved_by": "x10741"},
{"url": "https://codeforces.com//problemset/problem/1335/D", "name": "Anti-Sudoku", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1300", "solved_by": "x27133"},
{"url": "https://codeforces.com//problemset/problem/1335/C", "name": "Two Teams Composing", "tags": ["binary search", "greedy", "implementation", "sortings"], "problem_rating": "1100", "solved_by": "x34076"},
{"url": "https://codeforces.com//problemset/problem/1335/B", "name": "Construct the String", "tags": ["constructive algorithms"], "problem_rating": "900", "solved_by": "x37859"},
{"url": "https://codeforces.com//problemset/problem/1335/A", "name": "Candies and Two Sisters", "tags": ["math"], "problem_rating": "800", "solved_by": "x81556"},
{"url": "https://codeforces.com//problemset/problem/1334/G", "name": "Substring Search", "tags": ["bitmasks", "brute force", "fft"], "problem_rating": "2900", "solved_by": "x357"},
{"url": "https://codeforces.com//problemset/problem/1334/F", "name": "Strange Function", "tags": ["binary search", "data structures", "dp", "greedy"], "problem_rating": "2500", "solved_by": "x1287"},
{"url": "https://codeforces.com//problemset/problem/1334/E", "name": "Divisor Paths", "tags": ["combinatorics", "graphs", "greedy", "math", "number theory"], "problem_rating": "2200", "solved_by": "x2797"},
{"url": "https://codeforces.com//problemset/problem/1334/D", "name": "Minimum Euler Cycle", "tags": ["constructive algorithms", "graphs", "greedy", "implementation"], "problem_rating": "1800", "solved_by": "x7235"},
{"url": "https://codeforces.com//problemset/problem/1334/C", "name": "Circle of Monsters", "tags": ["brute force", "constructive algorithms", "greedy", "math"], "problem_rating": "1600", "solved_by": "x16442"},
{"url": "https://codeforces.com//problemset/problem/1334/B", "name": "Middle Class", "tags": ["greedy", "sortings"], "problem_rating": "1100", "solved_by": "x25636"},
{"url": "https://codeforces.com//problemset/problem/1334/A", "name": "Level Statistics", "tags": ["implementation", "math"], "problem_rating": "1200", "solved_by": "x23059"},
{"url": "https://codeforces.com//problemset/problem/1333/F", "name": "Kate and imperfection", "tags": ["greedy", "implementation", "math", "number theory", "sortings", "two pointers"], "problem_rating": "2200", "solved_by": "x4208"},
{"url": "https://codeforces.com//problemset/problem/1333/E", "name": "Road to 1600", "tags": ["brute force", "constructive algorithms"], "problem_rating": "2400", "solved_by": "x1677"},
{"url": "https://codeforces.com//problemset/problem/1333/D", "name": "Challenges in school №41", "tags": ["brute force", "constructive algorithms", "games", "graphs", "greedy", "implementation", "sortings"], "problem_rating": "2100", "solved_by": "x3905"},
{"url": "https://codeforces.com//problemset/problem/1333/C", "name": "Eugene and an array", "tags": ["binary search", "data structures", "implementation", "two pointers"], "problem_rating": "1700", "solved_by": "x12481"},
{"url": "https://codeforces.com//problemset/problem/1333/B", "name": "Kind Anton", "tags": ["greedy", "implementation"], "problem_rating": "1100", "solved_by": "x21523"},
{"url": "https://codeforces.com//problemset/problem/1333/A", "name": "Little Artem", "tags": ["constructive algorithms"], "problem_rating": "1000", "solved_by": "x24482"},
{"url": "https://codeforces.com//problemset/problem/1332/G", "name": "No Monotone Triples", "tags": ["data structures"], "problem_rating": "3100", "solved_by": "x294"},
{"url": "https://codeforces.com//problemset/problem/1332/F", "name": "Independent Set", "tags": ["dfs and similar", "dp", "trees"], "problem_rating": "2500", "solved_by": "x988"},
{"url": "https://codeforces.com//problemset/problem/1332/E", "name": "Height All the Same", "tags": ["combinatorics", "constructive algorithms", "math", "matrices"], "problem_rating": "2100", "solved_by": "x3786"},
{"url": "https://codeforces.com//problemset/problem/1332/D", "name": "Walk on Matrix", "tags": ["bitmasks", "constructive algorithms", "math"], "problem_rating": "1700", "solved_by": "x8114"},
{"url": "https://codeforces.com//problemset/problem/1332/C", "name": "K-Complete Word", "tags": ["dfs and similar", "dsu", "greedy", "implementation", "strings"], "problem_rating": "1500", "solved_by": "x16237"},
{"url": "https://codeforces.com//problemset/problem/1332/B", "name": "Composite Coloring", "tags": ["brute force", "constructive algorithms", "greedy", "math", "number theory"], "problem_rating": "1400", "solved_by": "x17459"},
{"url": "https://codeforces.com//problemset/problem/1332/A", "name": "Exercising Walk", "tags": ["greedy", "implementation", "math"], "problem_rating": "1100", "solved_by": "x19347"},
{"url": "https://codeforces.com//problemset/problem/1331/H", "name": "It's showtime", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x621"},
{"url": "https://codeforces.com//problemset/problem/1331/G", "name": "Lingua Romana", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x497"},
{"url": "https://codeforces.com//problemset/problem/1331/F", "name": "Elementary!", "tags": ["*special problem", "brute force", "dp", "strings"], "problem_rating": [null], "solved_by": "x561"},
{"url": "https://codeforces.com//problemset/problem/1331/E", "name": "Jordan Smiley", "tags": ["*special problem", "dfs and similar", "geometry", "implementation"], "problem_rating": [null], "solved_by": "x1207"},
{"url": "https://codeforces.com//problemset/problem/1331/D", "name": "Again?", "tags": ["*special problem", "implementation"], "problem_rating": [null], "solved_by": "x11872"},
{"url": "https://codeforces.com//problemset/problem/1331/C", "name": "...And after happily lived ever they", "tags": ["*special problem", "bitmasks"], "problem_rating": [null], "solved_by": "x3145"},
{"url": "https://codeforces.com//problemset/problem/1331/B", "name": "Limericks", "tags": ["*special problem", "math", "number theory"], "problem_rating": [null], "solved_by": "x6993"},
{"url": "https://codeforces.com//problemset/problem/1331/A", "name": "Is it rated?", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x17060"},
{"url": "https://codeforces.com//problemset/problem/1330/B", "name": "Dreamoon Likes Permutations", "tags": ["implementation", "math"], "problem_rating": "1400", "solved_by": "x13964"},
{"url": "https://codeforces.com//problemset/problem/1330/A", "name": "Dreamoon and Ranking Collection", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x18616"},
{"url": "https://codeforces.com//problemset/problem/1329/E", "name": "Dreamoon Loves AA", "tags": ["binary search", "greedy"], "problem_rating": "3300", "solved_by": "x178"},
{"url": "https://codeforces.com//problemset/problem/1329/D", "name": "Dreamoon Likes Strings", "tags": ["constructive algorithms", "data structures"], "problem_rating": "3100", "solved_by": "x392"},
{"url": "https://codeforces.com//problemset/problem/1329/C", "name": "Drazil Likes Heap", "tags": ["constructive algorithms", "data structures", "greedy", "implementation"], "problem_rating": "2400", "solved_by": "x1698"},
{"url": "https://codeforces.com//problemset/problem/1329/B", "name": "Dreamoon Likes Sequences", "tags": ["bitmasks", "combinatorics", "math"], "problem_rating": "1700", "solved_by": "x6599"},
{"url": "https://codeforces.com//problemset/problem/1329/A", "name": "Dreamoon Likes Coloring", "tags": ["constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "1800", "solved_by": "x9028"},
{"url": "https://codeforces.com//problemset/problem/1328/F", "name": "Make k Equal", "tags": ["greedy"], "problem_rating": "2200", "solved_by": "x3199"},
{"url": "https://codeforces.com//problemset/problem/1328/E", "name": "Tree Queries", "tags": ["dfs and similar", "graphs", "trees"], "problem_rating": "1900", "solved_by": "x9279"},
{"url": "https://codeforces.com//problemset/problem/1328/D", "name": "Carousel", "tags": ["constructive algorithms", "dp", "graphs", "greedy", "math"], "problem_rating": "1800", "solved_by": "x12973"},
{"url": "https://codeforces.com//problemset/problem/1328/C", "name": "Ternary XOR", "tags": ["greedy", "implementation"], "problem_rating": "1200", "solved_by": "x30010"},
{"url": "https://codeforces.com//problemset/problem/1328/B", "name": "K-th Beautiful String", "tags": ["binary search", "brute force", "combinatorics", "implementation", "math"], "problem_rating": "1300", "solved_by": "x28739"},
{"url": "https://codeforces.com//problemset/problem/1328/A", "name": "Divisibility Problem", "tags": ["math"], "problem_rating": "800", "solved_by": "x97333"},
{"url": "https://codeforces.com//problemset/problem/1327/G", "name": "Letters and Question Marks", "tags": ["bitmasks", "dp", "string suffix structures"], "problem_rating": "2800", "solved_by": "x421"},
{"url": "https://codeforces.com//problemset/problem/1327/F", "name": "AND Segments", "tags": ["bitmasks", "combinatorics", "data structures", "dp", "two pointers"], "problem_rating": "2500", "solved_by": "x1627"},
{"url": "https://codeforces.com//problemset/problem/1327/E", "name": "Count The Blocks", "tags": ["combinatorics", "dp", "math"], "problem_rating": "1800", "solved_by": "x8831"},
{"url": "https://codeforces.com//problemset/problem/1327/D", "name": "Infinite Path", "tags": ["brute force", "dfs and similar", "graphs", "math", "number theory"], "problem_rating": "2200", "solved_by": "x3246"},
{"url": "https://codeforces.com//problemset/problem/1327/C", "name": "Game with Chips", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1600", "solved_by": "x13325"},
{"url": "https://codeforces.com//problemset/problem/1327/B", "name": "Princesses and Princes", "tags": ["brute force", "graphs", "greedy"], "problem_rating": "1200", "solved_by": "x18560"},
{"url": "https://codeforces.com//problemset/problem/1327/A", "name": "Sum of Odd Integers", "tags": ["math"], "problem_rating": "1100", "solved_by": "x38001"},
{"url": "https://codeforces.com//problemset/problem/1326/G", "name": "Spiderweb Trees", "tags": ["dp", "geometry", "trees"], "problem_rating": "3500", "solved_by": "x75"},
{"url": "https://codeforces.com//problemset/problem/1326/F2", "name": "Wise Men (Hard Version)", "tags": ["bitmasks", "dp", "math"], "problem_rating": "3200", "solved_by": "x478"},
{"url": "https://codeforces.com//problemset/problem/1326/F1", "name": "Wise Men (Easy Version)", "tags": ["bitmasks", "brute force", "dp", "meet-in-the-middle"], "problem_rating": "2600", "solved_by": "x831"},
{"url": "https://codeforces.com//problemset/problem/1326/E", "name": "Bombs", "tags": ["data structures", "two pointers"], "problem_rating": "2400", "solved_by": "x2175"},
{"url": "https://codeforces.com//problemset/problem/1326/D2", "name": "Prefix-Suffix Palindrome (Hard version)", "tags": ["binary search", "greedy", "hashing", "string suffix structures", "strings"], "problem_rating": "1800", "solved_by": "x9991"},
{"url": "https://codeforces.com//problemset/problem/1326/D1", "name": "Prefix-Suffix Palindrome (Easy version)", "tags": ["hashing", "string suffix structures", "strings"], "problem_rating": "1500", "solved_by": "x11971"},
{"url": "https://codeforces.com//problemset/problem/1326/C", "name": "Permutation Partitions", "tags": ["combinatorics", "greedy", "math"], "problem_rating": "1300", "solved_by": "x15532"},
{"url": "https://codeforces.com//problemset/problem/1326/B", "name": "Maximums", "tags": ["implementation", "math"], "problem_rating": "900", "solved_by": "x23885"},
{"url": "https://codeforces.com//problemset/problem/1326/A", "name": "Bad Ugly Numbers", "tags": ["constructive algorithms", "number theory"], "problem_rating": "1000", "solved_by": "x29982"},
{"url": "https://codeforces.com//problemset/problem/1325/F", "name": "Ehab's Last Theorem", "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy"], "problem_rating": "2500", "solved_by": "x1912"},
{"url": "https://codeforces.com//problemset/problem/1325/E", "name": "Ehab's REAL Number Theory Problem", "tags": ["brute force", "dfs and similar", "graphs", "number theory", "shortest paths"], "problem_rating": "2600", "solved_by": "x2015"},
{"url": "https://codeforces.com//problemset/problem/1325/D", "name": "Ehab the Xorcist", "tags": ["bitmasks", "constructive algorithms", "greedy", "number theory"], "problem_rating": "1700", "solved_by": "x11921"},
{"url": "https://codeforces.com//problemset/problem/1325/C", "name": "Ehab and Path-etic MEXs", "tags": ["constructive algorithms", "dfs and similar", "greedy", "trees"], "problem_rating": "1500", "solved_by": "x13401"},
{"url": "https://codeforces.com//problemset/problem/1325/B", "name": "CopyCopyCopyCopyCopy", "tags": ["greedy", "implementation"], "problem_rating": "800", "solved_by": "x35632"},
{"url": "https://codeforces.com//problemset/problem/1325/A", "name": "EhAb AnD gCd", "tags": ["constructive algorithms", "greedy", "number theory"], "problem_rating": "800", "solved_by": "x39242"},
{"url": "https://codeforces.com//problemset/problem/1324/F", "name": "Maximum White Subtree", "tags": ["dfs and similar", "dp", "graphs", "trees"], "problem_rating": "1800", "solved_by": "x9626"},
{"url": "https://codeforces.com//problemset/problem/1324/E", "name": "Sleeping Schedule", "tags": ["dp", "implementation"], "problem_rating": "1700", "solved_by": "x13133"},
{"url": "https://codeforces.com//problemset/problem/1324/D", "name": "Pair of Topics", "tags": ["binary search", "data structures", "sortings", "two pointers"], "problem_rating": "1400", "solved_by": "x27619"},
{"url": "https://codeforces.com//problemset/problem/1324/C", "name": "Frog Jumps", "tags": ["binary search", "data structures", "dfs and similar", "greedy", "implementation"], "problem_rating": "1100", "solved_by": "x27577"},
{"url": "https://codeforces.com//problemset/problem/1324/B", "name": "Yet Another Palindrome Problem", "tags": ["brute force", "strings"], "problem_rating": "1100", "solved_by": "x27978"},
{"url": "https://codeforces.com//problemset/problem/1324/A", "name": "Yet Another Tetris Problem", "tags": ["implementation", "number theory"], "problem_rating": "900", "solved_by": "x25758"},
{"url": "https://codeforces.com//problemset/problem/1323/B", "name": "Count Subrectangles", "tags": ["binary search", "greedy", "implementation"], "problem_rating": "1500", "solved_by": "x8830"},
{"url": "https://codeforces.com//problemset/problem/1323/A", "name": "Even Subset Sum Problem", "tags": ["brute force", "dp", "greedy", "implementation"], "problem_rating": "800", "solved_by": "x19645"},
{"url": "https://codeforces.com//problemset/problem/1322/F", "name": "Assigning Fares", "tags": ["dp", "trees"], "problem_rating": "3500", "solved_by": "x94"},
{"url": "https://codeforces.com//problemset/problem/1322/E", "name": "Median Mountain Range", "tags": ["data structures"], "problem_rating": "3300", "solved_by": "x300"},
{"url": "https://codeforces.com//problemset/problem/1322/D", "name": "Reality Show", "tags": ["bitmasks", "dp"], "problem_rating": "2800", "solved_by": "x707"},
{"url": "https://codeforces.com//problemset/problem/1322/C", "name": "Instant Noodles", "tags": ["graphs", "hashing", "math", "number theory"], "problem_rating": "2300", "solved_by": "x2373"},
{"url": "https://codeforces.com//problemset/problem/1322/B", "name": "Present", "tags": ["binary search", "bitmasks", "constructive algorithms", "data structures", "math", "sortings"], "problem_rating": "2100", "solved_by": "x4151"},
{"url": "https://codeforces.com//problemset/problem/1322/A", "name": "Unusual Competitions", "tags": ["greedy"], "problem_rating": "1300", "solved_by": "x12401"},
{"url": "https://codeforces.com//problemset/problem/1321/C", "name": "Remove Adjacent", "tags": ["brute force", "constructive algorithms", "greedy", "strings"], "problem_rating": "1600", "solved_by": "x9759"},
{"url": "https://codeforces.com//problemset/problem/1321/A", "name": "Contest for Robots", "tags": ["greedy"], "problem_rating": "900", "solved_by": "x14226"},
{"url": "https://codeforces.com//problemset/problem/1320/F", "name": "Blocks and Sensors", "tags": ["brute force"], "problem_rating": "3500", "solved_by": "x154"},
{"url": "https://codeforces.com//problemset/problem/1320/E", "name": "Treeland and Viruses", "tags": ["data structures", "dfs and similar", "dp", "shortest paths", "trees"], "problem_rating": "3000", "solved_by": "x803"},
{"url": "https://codeforces.com//problemset/problem/1320/D", "name": "Reachable Strings", "tags": ["data structures", "hashing", "strings"], "problem_rating": "2500", "solved_by": "x1423"},
{"url": "https://codeforces.com//problemset/problem/1320/C", "name": "World of Darkraft: Battle for Azathoth", "tags": ["brute force", "data structures", "sortings"], "problem_rating": "2000", "solved_by": "x3069"},
{"url": "https://codeforces.com//problemset/problem/1320/B", "name": "Navigation System", "tags": ["dfs and similar", "graphs", "shortest paths"], "problem_rating": "1700", "solved_by": "x5970"},
{"url": "https://codeforces.com//problemset/problem/1320/A", "name": "Journey Planning", "tags": ["data structures", "dp", "greedy", "math", "sortings"], "problem_rating": "1400", "solved_by": "x15982"},
{"url": "https://codeforces.com//problemset/problem/1316/F", "name": "Battalion Strength", "tags": ["data structures", "divide and conquer", "probabilities"], "problem_rating": "2800", "solved_by": "x792"},
{"url": "https://codeforces.com//problemset/problem/1316/E", "name": "Team Building", "tags": ["bitmasks", "dp", "greedy", "sortings"], "problem_rating": "2300", "solved_by": "x3791"},
{"url": "https://codeforces.com//problemset/problem/1316/D", "name": "Nash Matrix", "tags": ["constructive algorithms", "dfs and similar", "graphs", "implementation"], "problem_rating": "2000", "solved_by": "x3362"},
{"url": "https://codeforces.com//problemset/problem/1316/C", "name": "Primitive Primes", "tags": ["constructive algorithms", "math", "ternary search"], "problem_rating": "1800", "solved_by": "x7234"},
{"url": "https://codeforces.com//problemset/problem/1316/B", "name": "String Modification", "tags": ["brute force", "constructive algorithms", "implementation", "sortings", "strings"], "problem_rating": "1400", "solved_by": "x11206"},
{"url": "https://codeforces.com//problemset/problem/1316/A", "name": "Grade Allocation", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x18606"},
{"url": "https://codeforces.com//problemset/problem/1315/C", "name": "Restoring Permutation", "tags": ["greedy"], "problem_rating": "1200", "solved_by": "x10010"},
{"url": "https://codeforces.com//problemset/problem/1315/B", "name": "Homecoming", "tags": ["binary search", "dp", "greedy", "strings"], "problem_rating": "1300", "solved_by": "x9150"},
{"url": "https://codeforces.com//problemset/problem/1315/A", "name": "Dead Pixel", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x12005"},
{"url": "https://codeforces.com//problemset/problem/1313/E", "name": "Concatenation with intersection", "tags": ["data structures", "hashing", "strings", "two pointers"], "problem_rating": "2700", "solved_by": "x530"},
{"url": "https://codeforces.com//problemset/problem/1313/D", "name": "Happy New Year", "tags": ["bitmasks", "dp", "implementation"], "problem_rating": "2500", "solved_by": "x1315"},
{"url": "https://codeforces.com//problemset/problem/1313/C2", "name": "Skyscrapers (hard version)", "tags": ["data structures", "dp", "greedy"], "problem_rating": "1900", "solved_by": "x6396"},
{"url": "https://codeforces.com//problemset/problem/1313/C1", "name": "Skyscrapers (easy version)", "tags": ["brute force", "data structures", "dp", "greedy"], "problem_rating": "1500", "solved_by": "x10344"},
{"url": "https://codeforces.com//problemset/problem/1313/B", "name": "Different Rules", "tags": ["constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "1700", "solved_by": "x6652"},
{"url": "https://codeforces.com//problemset/problem/1313/A", "name": "Fast Food Restaurant", "tags": ["brute force", "greedy", "implementation"], "problem_rating": "900", "solved_by": "x15431"},
{"url": "https://codeforces.com//problemset/problem/1312/G", "name": "Autocompletion", "tags": ["data structures", "dfs and similar", "dp"], "problem_rating": "2600", "solved_by": "x970"},
{"url": "https://codeforces.com//problemset/problem/1312/F", "name": "Attack on Red Kingdom", "tags": ["games", "two pointers"], "problem_rating": "2500", "solved_by": "x892"},
{"url": "https://codeforces.com//problemset/problem/1312/E", "name": "Array Shrinking", "tags": ["dp", "greedy"], "problem_rating": "2100", "solved_by": "x5780"},
{"url": "https://codeforces.com//problemset/problem/1312/D", "name": "Count the Arrays", "tags": ["combinatorics", "math"], "problem_rating": "1700", "solved_by": "x9280"},
{"url": "https://codeforces.com//problemset/problem/1312/C", "name": "Adding Powers", "tags": ["bitmasks", "greedy", "implementation", "math", "number theory", "ternary search"], "problem_rating": "1400", "solved_by": "x16252"},
{"url": "https://codeforces.com//problemset/problem/1312/B", "name": "Bogosort", "tags": ["constructive algorithms", "sortings"], "problem_rating": "1000", "solved_by": "x25853"},
{"url": "https://codeforces.com//problemset/problem/1312/A", "name": "Two Regular Polygons", "tags": ["geometry", "greedy", "math", "number theory"], "problem_rating": "800", "solved_by": "x25753"},
{"url": "https://codeforces.com//problemset/problem/1311/F", "name": "Moving Points", "tags": ["data structures", "divide and conquer", "implementation", "sortings"], "problem_rating": "1900", "solved_by": "x4159"},
{"url": "https://codeforces.com//problemset/problem/1311/E", "name": "Construct the Binary Tree", "tags": ["brute force", "constructive algorithms", "trees"], "problem_rating": "2200", "solved_by": "x2323"},
{"url": "https://codeforces.com//problemset/problem/1311/D", "name": "Three Integers", "tags": ["brute force", "math"], "problem_rating": "2000", "solved_by": "x8941"},
{"url": "https://codeforces.com//problemset/problem/1311/C", "name": "Perform the Combo", "tags": ["brute force"], "problem_rating": "1300", "solved_by": "x15907"},
{"url": "https://codeforces.com//problemset/problem/1311/B", "name": "WeirdSort", "tags": ["dfs and similar", "sortings"], "problem_rating": "1200", "solved_by": "x18765"},
{"url": "https://codeforces.com//problemset/problem/1311/A", "name": "Add Odd or Subtract Even", "tags": ["greedy", "implementation", "math"], "problem_rating": "800", "solved_by": "x41407"},
{"url": "https://codeforces.com//problemset/problem/1310/F", "name": "Bad Cryptography", "tags": ["math", "number theory"], "problem_rating": "3400", "solved_by": "x72"},
{"url": "https://codeforces.com//problemset/problem/1310/E", "name": "Strange Function", "tags": ["dp"], "problem_rating": "2900", "solved_by": "x273"},
{"url": "https://codeforces.com//problemset/problem/1310/D", "name": "Tourism", "tags": ["dp", "graphs", "probabilities"], "problem_rating": "2300", "solved_by": "x1521"},
{"url": "https://codeforces.com//problemset/problem/1310/C", "name": "Au Pont Rouge", "tags": ["binary search", "dp", "strings"], "problem_rating": "2800", "solved_by": "x497"},
{"url": "https://codeforces.com//problemset/problem/1310/B", "name": "Double Elimination", "tags": ["dp", "implementation"], "problem_rating": "2500", "solved_by": "x493"},
{"url": "https://codeforces.com//problemset/problem/1310/A", "name": "Recommendations", "tags": ["data structures", "greedy", "sortings"], "problem_rating": "1700", "solved_by": "x5149"},
{"url": "https://codeforces.com//problemset/problem/1307/G", "name": "Cow and Exercise", "tags": ["flows", "graphs", "shortest paths"], "problem_rating": "3100", "solved_by": "x493"},
{"url": "https://codeforces.com//problemset/problem/1307/F", "name": "Cow and Vacation", "tags": ["dfs and similar", "dsu", "trees"], "problem_rating": "3300", "solved_by": "x575"},
{"url": "https://codeforces.com//problemset/problem/1307/E", "name": "Cow and Treats", "tags": ["binary search", "combinatorics", "dp", "greedy", "implementation", "math"], "problem_rating": "2500", "solved_by": "x1268"},
{"url": "https://codeforces.com//problemset/problem/1307/D", "name": "Cow and Fields", "tags": ["binary search", "data structures", "dfs and similar", "graphs", "greedy", "shortest paths", "sortings"], "problem_rating": "1900", "solved_by": "x6246"},
{"url": "https://codeforces.com//problemset/problem/1307/C", "name": "Cow and Message", "tags": ["brute force", "dp", "math", "strings"], "problem_rating": "1500", "solved_by": "x11752"},
{"url": "https://codeforces.com//problemset/problem/1307/B", "name": "Cow and Friend", "tags": ["geometry", "greedy", "math"], "problem_rating": "1300", "solved_by": "x13182"},
{"url": "https://codeforces.com//problemset/problem/1307/A", "name": "Cow and Haybales", "tags": ["greedy", "implementation"], "problem_rating": "800", "solved_by": "x14914"},
{"url": "https://codeforces.com//problemset/problem/1305/H", "name": "Kuroni the Private Tutor", "tags": ["binary search", "greedy"], "problem_rating": "3500", "solved_by": "x113"},
{"url": "https://codeforces.com//problemset/problem/1305/G", "name": "Kuroni and Antihype", "tags": ["bitmasks", "brute force", "dp", "dsu", "graphs"], "problem_rating": "3500", "solved_by": "x963"},
{"url": "https://codeforces.com//problemset/problem/1305/F", "name": "Kuroni and the Punishment", "tags": ["math", "number theory", "probabilities"], "problem_rating": "2500", "solved_by": "x2574"},
{"url": "https://codeforces.com//problemset/problem/1305/E", "name": "Kuroni and the Score Distribution", "tags": ["constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "2200", "solved_by": "x3067"},
{"url": "https://codeforces.com//problemset/problem/1305/D", "name": "Kuroni and the Celebration", "tags": ["constructive algorithms", "dfs and similar", "interactive", "trees"], "problem_rating": "1900", "solved_by": "x4931"},
{"url": "https://codeforces.com//problemset/problem/1305/C", "name": "Kuroni and Impossible Calculation", "tags": ["brute force", "combinatorics", "math", "number theory"], "problem_rating": "1600", "solved_by": "x14210"},
{"url": "https://codeforces.com//problemset/problem/1305/B", "name": "Kuroni and Simple Strings", "tags": ["constructive algorithms", "greedy", "strings", "two pointers"], "problem_rating": "1200", "solved_by": "x11668"},
{"url": "https://codeforces.com//problemset/problem/1305/A", "name": "Kuroni and the Gifts", "tags": ["brute force", "constructive algorithms", "greedy", "sortings"], "problem_rating": "800", "solved_by": "x13977"},
{"url": "https://codeforces.com//problemset/problem/1304/F2", "name": "Animal Observation (hard version)", "tags": ["data structures", "dp", "greedy"], "problem_rating": "2400", "solved_by": "x1497"},
{"url": "https://codeforces.com//problemset/problem/1304/F1", "name": "Animal Observation (easy version)", "tags": ["data structures", "dp"], "problem_rating": "2300", "solved_by": "x1732"},
{"url": "https://codeforces.com//problemset/problem/1304/E", "name": "1-Trees and Queries", "tags": ["data structures", "dfs and similar", "shortest paths", "trees"], "problem_rating": "2000", "solved_by": "x5141"},
{"url": "https://codeforces.com//problemset/problem/1304/D", "name": "Shortest and Longest LIS", "tags": ["constructive algorithms", "graphs", "greedy", "two pointers"], "problem_rating": "1800", "solved_by": "x6275"},
{"url": "https://codeforces.com//problemset/problem/1304/C", "name": "Air Conditioner", "tags": ["dp", "greedy", "implementation", "sortings", "two pointers"], "problem_rating": "1500", "solved_by": "x16189"},
{"url": "https://codeforces.com//problemset/problem/1304/B", "name": "Longest Palindrome", "tags": ["brute force", "constructive algorithms", "greedy", "implementation", "strings"], "problem_rating": "1100", "solved_by": "x17756"},
{"url": "https://codeforces.com//problemset/problem/1304/A", "name": "Two Rabbits", "tags": ["math"], "problem_rating": "800", "solved_by": "x25287"},
{"url": "https://codeforces.com//problemset/problem/1303/G", "name": "Sum of Prefix Sums", "tags": ["data structures", "divide and conquer", "geometry", "trees"], "problem_rating": "2700", "solved_by": "x774"},
{"url": "https://codeforces.com//problemset/problem/1303/F", "name": "Number of Components", "tags": ["dsu", "implementation"], "problem_rating": "2800", "solved_by": "x519"},
{"url": "https://codeforces.com//problemset/problem/1303/E", "name": "Erase Subsequences", "tags": ["dp", "strings"], "problem_rating": "2200", "solved_by": "x2749"},
{"url": "https://codeforces.com//problemset/problem/1303/D", "name": "Fill The Bag", "tags": ["bitmasks", "greedy"], "problem_rating": "1900", "solved_by": "x7025"},
{"url": "https://codeforces.com//problemset/problem/1303/C", "name": "Perfect Keyboard", "tags": ["dfs and similar", "greedy", "implementation"], "problem_rating": "1600", "solved_by": "x12084"},
{"url": "https://codeforces.com//problemset/problem/1303/B", "name": "National Project", "tags": ["math"], "problem_rating": "1400", "solved_by": "x15626"},
{"url": "https://codeforces.com//problemset/problem/1303/A", "name": "Erasing Zeroes", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x31519"},
{"url": "https://codeforces.com//problemset/problem/1302/J", "name": "Keep talking and nobody explodes -- hard", "tags": [], "problem_rating": [null], "solved_by": "x10"},
{"url": "https://codeforces.com//problemset/problem/1302/I", "name": "Deja vu", "tags": [], "problem_rating": [null], "solved_by": "x2"},
{"url": "https://codeforces.com//problemset/problem/1302/H", "name": "Who needs suffix structures?", "tags": [], "problem_rating": [null], "solved_by": "x8"},
{"url": "https://codeforces.com//problemset/problem/1302/G", "name": "Keep talking and nobody explodes -- medium", "tags": [], "problem_rating": [null], "solved_by": "x23"},
{"url": "https://codeforces.com//problemset/problem/1302/F", "name": "Keep talking and nobody explodes -- easy", "tags": ["bitmasks", "brute force", "expression parsing"], "problem_rating": [null], "solved_by": "x74"},
{"url": "https://codeforces.com//problemset/problem/1302/E", "name": "Amazing bitset", "tags": [], "problem_rating": [null], "solved_by": "x46"},
{"url": "https://codeforces.com//problemset/problem/1302/D", "name": "Dijkstra", "tags": [], "problem_rating": [null], "solved_by": "x94"},
{"url": "https://codeforces.com//problemset/problem/1302/C", "name": "Segment tree or Fenwick?", "tags": ["data structures"], "problem_rating": [null], "solved_by": "x380"},
{"url": "https://codeforces.com//problemset/problem/1302/B", "name": "DAG", "tags": ["constructive algorithms"], "problem_rating": [null], "solved_by": "x144"},
{"url": "https://codeforces.com//problemset/problem/1302/A", "name": "Nash equilibrium", "tags": [], "problem_rating": [null], "solved_by": "x295"},
{"url": "https://codeforces.com//problemset/problem/1301/F", "name": "Super Jaber", "tags": ["dfs and similar", "graphs", "implementation", "shortest paths"], "problem_rating": "2600", "solved_by": "x1235"},
{"url": "https://codeforces.com//problemset/problem/1301/E", "name": "Nanosoft", "tags": ["binary search", "data structures", "dp", "implementation"], "problem_rating": "2500", "solved_by": "x1490"},
{"url": "https://codeforces.com//problemset/problem/1301/D", "name": "Time to Run", "tags": ["constructive algorithms", "graphs", "implementation"], "problem_rating": "2000", "solved_by": "x3970"},
{"url": "https://codeforces.com//problemset/problem/1301/C", "name": "Ayoub's function", "tags": ["binary search", "combinatorics", "greedy", "math", "strings"], "problem_rating": "1700", "solved_by": "x9267"},
{"url": "https://codeforces.com//problemset/problem/1301/B", "name": "Motarack's Birthday", "tags": ["binary search", "greedy", "ternary search"], "problem_rating": "1500", "solved_by": "x14100"},
{"url": "https://codeforces.com//problemset/problem/1301/A", "name": "Three Strings", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x19281"},
{"url": "https://codeforces.com//problemset/problem/1300/B", "name": "Assigning to Classes", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "1000", "solved_by": "x22919"},
{"url": "https://codeforces.com//problemset/problem/1300/A", "name": "Non-zero", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x20928"},
{"url": "https://codeforces.com//problemset/problem/1299/E", "name": "So Mean", "tags": ["interactive", "math"], "problem_rating": "3400", "solved_by": "x155"},
{"url": "https://codeforces.com//problemset/problem/1299/D", "name": "Around the World", "tags": ["bitmasks", "combinatorics", "dfs and similar", "dp", "graphs", "graphs", "math", "trees"], "problem_rating": "3000", "solved_by": "x425"},
{"url": "https://codeforces.com//problemset/problem/1299/C", "name": "Water Balance", "tags": ["data structures", "geometry", "greedy"], "problem_rating": "2100", "solved_by": "x3862"},
{"url": "https://codeforces.com//problemset/problem/1299/B", "name": "Aerodynamic", "tags": ["geometry"], "problem_rating": "1800", "solved_by": "x5219"},
{"url": "https://codeforces.com//problemset/problem/1299/A", "name": "Anu Has a Function", "tags": ["brute force", "greedy", "math"], "problem_rating": "1500", "solved_by": "x11954"},
{"url": "https://codeforces.com//problemset/problem/1297/I", "name": "Falling Blocks", "tags": ["*special problem", "data structures"], "problem_rating": [null], "solved_by": "x31"},
{"url": "https://codeforces.com//problemset/problem/1297/H", "name": "Paint the String", "tags": ["*special problem", "dp", "strings"], "problem_rating": [null], "solved_by": "x43"},
{"url": "https://codeforces.com//problemset/problem/1297/G", "name": "M-numbers", "tags": ["*special problem", "dp", "math"], "problem_rating": [null], "solved_by": "x69"},
{"url": "https://codeforces.com//problemset/problem/1297/F", "name": "Movie Fan", "tags": ["*special problem", "data structures", "greedy", "implementation", "sortings"], "problem_rating": [null], "solved_by": "x117"},
{"url": "https://codeforces.com//problemset/problem/1297/E", "name": "Modernization of Treeland", "tags": ["*special problem", "dfs and similar", "trees"], "problem_rating": [null], "solved_by": "x205"},
{"url": "https://codeforces.com//problemset/problem/1297/D", "name": "Bonus Distribution", "tags": ["*special problem", "binary search", "greedy", "sortings"], "problem_rating": [null], "solved_by": "x262"},
{"url": "https://codeforces.com//problemset/problem/1297/C", "name": "Dream Team", "tags": ["*special problem", "greedy"], "problem_rating": [null], "solved_by": "x399"},
{"url": "https://codeforces.com//problemset/problem/1297/B", "name": "Cartoons", "tags": ["*special problem", "implementation", "sortings"], "problem_rating": [null], "solved_by": "x413"},
{"url": "https://codeforces.com//problemset/problem/1297/A", "name": "Likes Display", "tags": ["*special problem", "implementation"], "problem_rating": [null], "solved_by": "x941"},
{"url": "https://codeforces.com//problemset/problem/1296/F", "name": "Berland Beauty", "tags": ["constructive algorithms", "dfs and similar", "greedy", "sortings", "trees"], "problem_rating": "2100", "solved_by": "x2853"},
{"url": "https://codeforces.com//problemset/problem/1296/E2", "name": "String Coloring (hard version)", "tags": ["data structures", "dp"], "problem_rating": "2000", "solved_by": "x4973"},
{"url": "https://codeforces.com//problemset/problem/1296/E1", "name": "String Coloring (easy version)", "tags": ["constructive algorithms", "dp", "graphs", "greedy", "sortings"], "problem_rating": "1800", "solved_by": "x7382"},
{"url": "https://codeforces.com//problemset/problem/1296/D", "name": "Fight with Monsters", "tags": ["greedy", "sortings"], "problem_rating": "1500", "solved_by": "x14154"},
{"url": "https://codeforces.com//problemset/problem/1296/C", "name": "Yet Another Walking Robot", "tags": ["data structures", "implementation"], "problem_rating": "1500", "solved_by": "x14706"},
{"url": "https://codeforces.com//problemset/problem/1296/B", "name": "Food Buying", "tags": ["math"], "problem_rating": "900", "solved_by": "x29899"},
{"url": "https://codeforces.com//problemset/problem/1296/A", "name": "Array with Odd Sum", "tags": ["math"], "problem_rating": "800", "solved_by": "x40730"},
{"url": "https://codeforces.com//problemset/problem/1295/F", "name": "Good Contest", "tags": ["combinatorics", "dp", "probabilities"], "problem_rating": "2700", "solved_by": "x1175"},
{"url": "https://codeforces.com//problemset/problem/1295/E", "name": "Permutation Separation", "tags": ["data structures", "divide and conquer"], "problem_rating": "2200", "solved_by": "x2500"},
{"url": "https://codeforces.com//problemset/problem/1295/D", "name": "Same GCDs", "tags": ["math", "number theory"], "problem_rating": "1800", "solved_by": "x8718"},
{"url": "https://codeforces.com//problemset/problem/1295/C", "name": "Obtain The String", "tags": ["dp", "greedy", "strings"], "problem_rating": "1600", "solved_by": "x12802"},
{"url": "https://codeforces.com//problemset/problem/1295/B", "name": "Infinite Prefixes", "tags": ["math", "strings"], "problem_rating": "1700", "solved_by": "x9263"},
{"url": "https://codeforces.com//problemset/problem/1295/A", "name": "Display The Number", "tags": ["greedy"], "problem_rating": "900", "solved_by": "x22654"},
{"url": "https://codeforces.com//problemset/problem/1294/F", "name": "Three Paths on a Tree", "tags": ["dfs and similar", "dp", "greedy", "trees"], "problem_rating": "2000", "solved_by": "x5635"},
{"url": "https://codeforces.com//problemset/problem/1294/E", "name": "Obtain a Permutation", "tags": ["greedy", "implementation", "math"], "problem_rating": "1900", "solved_by": "x4869"},
{"url": "https://codeforces.com//problemset/problem/1294/D", "name": "MEX maximizing", "tags": ["data structures", "greedy", "implementation", "math"], "problem_rating": "1600", "solved_by": "x11606"},
{"url": "https://codeforces.com//problemset/problem/1294/C", "name": "Product of Three Numbers", "tags": ["greedy", "math", "number theory"], "problem_rating": "1300", "solved_by": "x33709"},
{"url": "https://codeforces.com//problemset/problem/1294/B", "name": "Collecting Packages", "tags": ["implementation", "sortings"], "problem_rating": "1200", "solved_by": "x21593"},
{"url": "https://codeforces.com//problemset/problem/1294/A", "name": "Collecting Coins", "tags": ["math"], "problem_rating": "800", "solved_by": "x45581"},
{"url": "https://codeforces.com//problemset/problem/1293/B", "name": "JOE is on TV!", "tags": ["combinatorics", "greedy", "math"], "problem_rating": "1000", "solved_by": "x21101"},
{"url": "https://codeforces.com//problemset/problem/1293/A", "name": "ConneR and the A.R.C. Markland-N", "tags": ["binary search", "brute force", "implementation"], "problem_rating": "1100", "solved_by": "x15309"},
{"url": "https://codeforces.com//problemset/problem/1292/F", "name": "Nora's Toy Boxes", "tags": ["bitmasks", "combinatorics", "dp"], "problem_rating": "3500", "solved_by": "x309"},
{"url": "https://codeforces.com//problemset/problem/1292/E", "name": "Rin and The Unknown Flower", "tags": ["constructive algorithms", "greedy", "interactive", "math"], "problem_rating": "3500", "solved_by": "x331"},
{"url": "https://codeforces.com//problemset/problem/1292/D", "name": "Chaotic V.", "tags": ["dp", "graphs", "greedy", "math", "number theory", "trees"], "problem_rating": "2700", "solved_by": "x790"},
{"url": "https://codeforces.com//problemset/problem/1292/C", "name": "Xenon's Attack on the Gangs", "tags": ["combinatorics", "dfs and similar", "dp", "greedy", "trees"], "problem_rating": "2300", "solved_by": "x2034"},
{"url": "https://codeforces.com//problemset/problem/1292/B", "name": "Aroma's Search", "tags": ["brute force", "constructive algorithms", "geometry", "greedy", "implementation"], "problem_rating": "1700", "solved_by": "x6285"},
{"url": "https://codeforces.com//problemset/problem/1292/A", "name": "NEKO's Maze Game", "tags": ["data structures", "dsu", "implementation"], "problem_rating": "1400", "solved_by": "x13151"},
{"url": "https://codeforces.com//problemset/problem/1291/F", "name": "Coffee Varieties (easy version)", "tags": ["graphs", "interactive"], "problem_rating": "2800", "solved_by": "x652"},
{"url": "https://codeforces.com//problemset/problem/1291/B", "name": "Array Sharpening", "tags": ["greedy", "implementation"], "problem_rating": "1300", "solved_by": "x14083"},
{"url": "https://codeforces.com//problemset/problem/1291/A", "name": "Even But Not Even", "tags": ["greedy", "math", "strings"], "problem_rating": "900", "solved_by": "x19446"},
{"url": "https://codeforces.com//problemset/problem/1290/F", "name": "Making Shapes", "tags": ["dp"], "problem_rating": "3500", "solved_by": "x359"},
{"url": "https://codeforces.com//problemset/problem/1290/E", "name": "Cartesian Tree", "tags": ["data structures"], "problem_rating": "3300", "solved_by": "x532"},
{"url": "https://codeforces.com//problemset/problem/1290/D", "name": "Coffee Varieties (hard version)", "tags": ["constructive algorithms", "graphs", "interactive"], "problem_rating": "3000", "solved_by": "x816"},
{"url": "https://codeforces.com//problemset/problem/1290/C", "name": "Prefix Enlightenment", "tags": ["dfs and similar", "dsu", "graphs"], "problem_rating": "2400", "solved_by": "x1715"},
{"url": "https://codeforces.com//problemset/problem/1290/B", "name": "Irreducible Anagrams", "tags": ["binary search", "constructive algorithms", "data structures", "strings", "two pointers"], "problem_rating": "1800", "solved_by": "x5251"},
{"url": "https://codeforces.com//problemset/problem/1290/A", "name": "Mind Control", "tags": ["brute force", "data structures", "implementation"], "problem_rating": "1600", "solved_by": "x8531"},
{"url": "https://codeforces.com//problemset/problem/1288/F", "name": "Red-Blue Graph", "tags": ["constructive algorithms", "flows"], "problem_rating": "2900", "solved_by": "x451"},
{"url": "https://codeforces.com//problemset/problem/1288/E", "name": "Messenger Simulator", "tags": ["data structures"], "problem_rating": "2000", "solved_by": "x3528"},
{"url": "https://codeforces.com//problemset/problem/1288/D", "name": "Minimax Problem", "tags": ["binary search", "bitmasks", "dp"], "problem_rating": "2000", "solved_by": "x7021"},
{"url": "https://codeforces.com//problemset/problem/1288/C", "name": "Two Arrays", "tags": ["combinatorics", "dp"], "problem_rating": "1600", "solved_by": "x12636"},
{"url": "https://codeforces.com//problemset/problem/1288/B", "name": "Yet Another Meme Problem", "tags": ["math"], "problem_rating": "1100", "solved_by": "x16970"},
{"url": "https://codeforces.com//problemset/problem/1288/A", "name": "Deadline", "tags": ["binary search", "brute force", "math", "ternary search"], "problem_rating": "1100", "solved_by": "x18169"},
{"url": "https://codeforces.com//problemset/problem/1287/B", "name": "Hyperset", "tags": ["brute force", "data structures", "implementation"], "problem_rating": "1500", "solved_by": "x9394"},
{"url": "https://codeforces.com//problemset/problem/1287/A", "name": "Angry Students", "tags": ["greedy", "implementation"], "problem_rating": "800", "solved_by": "x20464"},
{"url": "https://codeforces.com//problemset/problem/1286/F", "name": "Harry The Potter", "tags": ["brute force", "constructive algorithms", "dp", "fft", "implementation", "math"], "problem_rating": "3100", "solved_by": "x242"},
{"url": "https://codeforces.com//problemset/problem/1286/E", "name": "Fedya the Potter Strikes Back", "tags": ["data structures", "strings"], "problem_rating": "3200", "solved_by": "x497"},
{"url": "https://codeforces.com//problemset/problem/1286/D", "name": "LCC", "tags": ["data structures", "math", "matrices", "probabilities"], "problem_rating": "3100", "solved_by": "x571"},
{"url": "https://codeforces.com//problemset/problem/1286/C2", "name": "Madhouse (Hard version)", "tags": ["brute force", "constructive algorithms", "hashing", "interactive", "math"], "problem_rating": "2800", "solved_by": "x617"},
{"url": "https://codeforces.com//problemset/problem/1286/C1", "name": "Madhouse (Easy version)", "tags": ["brute force", "constructive algorithms", "interactive", "math"], "problem_rating": "2400", "solved_by": "x1410"},
{"url": "https://codeforces.com//problemset/problem/1286/B", "name": "Numbers on Tree", "tags": ["constructive algorithms", "data structures", "dfs and similar", "graphs", "greedy", "trees"], "problem_rating": "1800", "solved_by": "x4643"},
{"url": "https://codeforces.com//problemset/problem/1286/A", "name": "Garland", "tags": ["dp", "greedy", "sortings"], "problem_rating": "1800", "solved_by": "x8687"},
{"url": "https://codeforces.com//problemset/problem/1285/F", "name": "Classical?", "tags": ["binary search", "combinatorics", "number theory"], "problem_rating": "2900", "solved_by": "x1105"},
{"url": "https://codeforces.com//problemset/problem/1285/E", "name": "Delete a Segment", "tags": ["brute force", "constructive algorithms", "data structures", "dp", "graphs", "sortings", "trees", "two pointers"], "problem_rating": "2300", "solved_by": "x1814"},
{"url": "https://codeforces.com//problemset/problem/1285/D", "name": "Dr. Evil Underscores", "tags": ["bitmasks", "brute force", "dfs and similar", "divide and conquer", "dp", "greedy", "strings", "trees"], "problem_rating": "1900", "solved_by": "x7598"},
{"url": "https://codeforces.com//problemset/problem/1285/C", "name": "Fadi and LCM", "tags": ["brute force", "math", "number theory"], "problem_rating": "1400", "solved_by": "x22874"},
{"url": "https://codeforces.com//problemset/problem/1285/B", "name": "Just Eat It!", "tags": ["dp", "greedy", "implementation"], "problem_rating": "1300", "solved_by": "x21966"},
{"url": "https://codeforces.com//problemset/problem/1285/A", "name": "Mezo Playing Zoma", "tags": ["math"], "problem_rating": "800", "solved_by": "x27851"},
{"url": "https://codeforces.com//problemset/problem/1284/G", "name": "Seollal", "tags": ["graphs"], "problem_rating": "3300", "solved_by": "x168"},
{"url": "https://codeforces.com//problemset/problem/1284/F", "name": "New Year and Social Network", "tags": ["data structures", "graph matchings", "graphs", "math", "trees"], "problem_rating": "3200", "solved_by": "x315"},
{"url": "https://codeforces.com//problemset/problem/1284/E", "name": "New Year and Castle Construction", "tags": ["combinatorics", "geometry", "math", "sortings"], "problem_rating": "2500", "solved_by": "x1290"},
{"url": "https://codeforces.com//problemset/problem/1284/D", "name": "New Year and Conference", "tags": ["binary search", "data structures", "hashing", "sortings"], "problem_rating": "2100", "solved_by": "x3129"},
{"url": "https://codeforces.com//problemset/problem/1284/C", "name": "New Year and Permutation", "tags": ["combinatorics", "math"], "problem_rating": "1600", "solved_by": "x7955"},
{"url": "https://codeforces.com//problemset/problem/1284/B", "name": "New Year and Ascent Sequence", "tags": ["binary search", "combinatorics", "data structures", "dp", "implementation", "sortings"], "problem_rating": "1400", "solved_by": "x10785"},
{"url": "https://codeforces.com//problemset/problem/1284/A", "name": "New Year and Naming", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x17954"},
{"url": "https://codeforces.com//problemset/problem/1283/F", "name": "DIY Garland", "tags": ["constructive algorithms", "greedy", "trees"], "problem_rating": "2200", "solved_by": "x1816"},
{"url": "https://codeforces.com//problemset/problem/1283/E", "name": "New Year Parties", "tags": ["dp", "greedy"], "problem_rating": "1800", "solved_by": "x6490"},
{"url": "https://codeforces.com//problemset/problem/1283/D", "name": "Christmas Trees", "tags": ["graphs", "greedy", "shortest paths"], "problem_rating": "1800", "solved_by": "x7692"},
{"url": "https://codeforces.com//problemset/problem/1283/C", "name": "Friends and Gifts", "tags": ["constructive algorithms", "data structures", "math"], "problem_rating": "1500", "solved_by": "x13054"},
{"url": "https://codeforces.com//problemset/problem/1283/B", "name": "Candies Division", "tags": ["math"], "problem_rating": "900", "solved_by": "x21526"},
{"url": "https://codeforces.com//problemset/problem/1283/A", "name": "Minutes Before the New Year", "tags": ["math"], "problem_rating": "800", "solved_by": "x48209"},
{"url": "https://codeforces.com//problemset/problem/1282/E", "name": "The Cake Is a Lie", "tags": ["constructive algorithms", "data structures", "dfs and similar", "graphs"], "problem_rating": "2400", "solved_by": "x1139"},
{"url": "https://codeforces.com//problemset/problem/1282/D", "name": "Enchanted Artifact", "tags": ["constructive algorithms", "interactive", "strings"], "problem_rating": "2300", "solved_by": "x2223"},
{"url": "https://codeforces.com//problemset/problem/1282/C", "name": "Petya and Exam", "tags": ["greedy", "sortings", "two pointers"], "problem_rating": "1800", "solved_by": "x4270"},
{"url": "https://codeforces.com//problemset/problem/1282/B2", "name": "K for the Price of One (Hard Version)", "tags": ["dp", "greedy", "sortings"], "problem_rating": "1600", "solved_by": "x10092"},
{"url": "https://codeforces.com//problemset/problem/1282/B1", "name": "K for the Price of One (Easy Version)", "tags": ["dp", "greedy", "sortings"], "problem_rating": "1400", "solved_by": "x11408"},
{"url": "https://codeforces.com//problemset/problem/1282/A", "name": "Temporarily unavailable", "tags": ["implementation", "math"], "problem_rating": "900", "solved_by": "x14720"},
{"url": "https://codeforces.com//problemset/problem/1281/B", "name": "Azamon Web Services", "tags": ["greedy"], "problem_rating": "1600", "solved_by": "x8242"},
{"url": "https://codeforces.com//problemset/problem/1281/A", "name": "Suffix Three", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x17901"},
{"url": "https://codeforces.com//problemset/problem/1280/F", "name": "Intergalactic Sliding Puzzle", "tags": ["combinatorics", "constructive algorithms", "math"], "problem_rating": "3400", "solved_by": "x59"},
{"url": "https://codeforces.com//problemset/problem/1280/E", "name": "Kirchhoff's Current Loss", "tags": ["math"], "problem_rating": "2900", "solved_by": "x199"},
{"url": "https://codeforces.com//problemset/problem/1280/D", "name": "Miss Punyverse", "tags": ["dp", "greedy", "trees"], "problem_rating": "2500", "solved_by": "x978"},
{"url": "https://codeforces.com//problemset/problem/1280/C", "name": "Jeremy Bearimy", "tags": ["dfs and similar", "graphs", "greedy", "trees"], "problem_rating": "2000", "solved_by": "x2653"},
{"url": "https://codeforces.com//problemset/problem/1280/B", "name": "Beingawesomeism", "tags": ["implementation", "math"], "problem_rating": "1800", "solved_by": "x3913"},
{"url": "https://codeforces.com//problemset/problem/1280/A", "name": "Cut and Paste", "tags": ["implementation", "math"], "problem_rating": "1700", "solved_by": "x5350"},
{"url": "https://codeforces.com//problemset/problem/1279/F", "name": "New Year and Handle Change", "tags": ["binary search", "dp"], "problem_rating": "2800", "solved_by": "x850"},
{"url": "https://codeforces.com//problemset/problem/1279/E", "name": "New Year Permutations", "tags": ["combinatorics", "dp"], "problem_rating": "2700", "solved_by": "x360"},
{"url": "https://codeforces.com//problemset/problem/1279/D", "name": "Santa's Bot", "tags": ["combinatorics", "math", "probabilities"], "problem_rating": "1700", "solved_by": "x6167"},
{"url": "https://codeforces.com//problemset/problem/1279/C", "name": "Stack of Presents", "tags": ["data structures", "implementation"], "problem_rating": "1400", "solved_by": "x11621"},
{"url": "https://codeforces.com//problemset/problem/1279/B", "name": "Verse For Santa", "tags": ["binary search", "brute force", "implementation"], "problem_rating": "1300", "solved_by": "x13552"},
{"url": "https://codeforces.com//problemset/problem/1279/A", "name": "New Year Garland", "tags": ["math"], "problem_rating": "900", "solved_by": "x16815"},
{"url": "https://codeforces.com//problemset/problem/1278/F", "name": "Cards", "tags": ["combinatorics", "dp", "math", "number theory", "probabilities"], "problem_rating": "2600", "solved_by": "x1808"},
{"url": "https://codeforces.com//problemset/problem/1278/E", "name": "Tests for problem D", "tags": ["constructive algorithms", "dfs and similar", "divide and conquer", "trees"], "problem_rating": "2200", "solved_by": "x1899"},
{"url": "https://codeforces.com//problemset/problem/1278/D", "name": "Segment Tree", "tags": ["data structures", "dsu", "graphs", "trees"], "problem_rating": "2100", "solved_by": "x3921"},
{"url": "https://codeforces.com//problemset/problem/1278/C", "name": "Berry Jam", "tags": ["data structures", "dp", "greedy", "implementation"], "problem_rating": "1700", "solved_by": "x7918"},
{"url": "https://codeforces.com//problemset/problem/1278/B", "name": "A and B", "tags": ["greedy", "math"], "problem_rating": "1500", "solved_by": "x13155"},
{"url": "https://codeforces.com//problemset/problem/1278/A", "name": "Shuffle Hashing", "tags": ["brute force", "implementation", "strings"], "problem_rating": "1000", "solved_by": "x16387"},
{"url": "https://codeforces.com//problemset/problem/1277/D", "name": "Let's Play the Words?", "tags": ["data structures", "hashing", "implementation", "math"], "problem_rating": "1900", "solved_by": "x3101"},
{"url": "https://codeforces.com//problemset/problem/1277/B", "name": "Make Them Odd", "tags": ["greedy", "number theory"], "problem_rating": "1200", "solved_by": "x14983"},
{"url": "https://codeforces.com//problemset/problem/1277/A", "name": "Happy Birthday, Polycarp!", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x13227"},
{"url": "https://codeforces.com//problemset/problem/1276/F", "name": "Asterisk Substrings", "tags": ["string suffix structures"], "problem_rating": "3400", "solved_by": "x336"},
{"url": "https://codeforces.com//problemset/problem/1276/E", "name": "Four Stones", "tags": ["constructive algorithms"], "problem_rating": "3500", "solved_by": "x82"},
{"url": "https://codeforces.com//problemset/problem/1276/D", "name": "Tree Elimination", "tags": ["dp", "trees"], "problem_rating": "2900", "solved_by": "x523"},
{"url": "https://codeforces.com//problemset/problem/1276/C", "name": "Beautiful Rectangle", "tags": ["brute force", "combinatorics", "constructive algorithms", "data structures", "greedy", "math"], "problem_rating": "2300", "solved_by": "x1643"},
{"url": "https://codeforces.com//problemset/problem/1276/B", "name": "Two Fairs", "tags": ["combinatorics", "dfs and similar", "dsu", "graphs"], "problem_rating": "1900", "solved_by": "x4878"},
{"url": "https://codeforces.com//problemset/problem/1276/A", "name": "As Simple as One and Two", "tags": ["dp", "greedy"], "problem_rating": "1400", "solved_by": "x12245"},
{"url": "https://codeforces.com//problemset/problem/1275/F", "name": "Шардирование постов", "tags": ["*special problem", "binary search", "interactive"], "problem_rating": [null], "solved_by": "x92"},
{"url": "https://codeforces.com//problemset/problem/1275/E3", "name": "Контрольная сумма", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x56"},
{"url": "https://codeforces.com//problemset/problem/1275/E2", "name": "Контрольная сумма", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x130"},
{"url": "https://codeforces.com//problemset/problem/1275/E1", "name": "Контрольная сумма", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x254"},
{"url": "https://codeforces.com//problemset/problem/1275/D", "name": "Storage2", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x421"},
{"url": "https://codeforces.com//problemset/problem/1275/C", "name": "#define Задача B ...", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x668"},
{"url": "https://codeforces.com//problemset/problem/1275/B", "name": "Code Review", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x820"},
{"url": "https://codeforces.com//problemset/problem/1275/A", "name": "Скрытый друг", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x887"},
{"url": "https://codeforces.com//problemset/problem/1272/F", "name": "Two Bracket Sequences", "tags": ["dp", "strings", "two pointers"], "problem_rating": "2200", "solved_by": "x1921"},
{"url": "https://codeforces.com//problemset/problem/1272/E", "name": "Nearest Opposite Parity", "tags": ["dfs and similar", "graphs", "shortest paths"], "problem_rating": "1900", "solved_by": "x6157"},
{"url": "https://codeforces.com//problemset/problem/1272/D", "name": "Remove One Element", "tags": ["brute force", "dp"], "problem_rating": "1500", "solved_by": "x16302"},
{"url": "https://codeforces.com//problemset/problem/1272/C", "name": "Yet Another Broken Keyboard", "tags": ["combinatorics", "dp", "implementation"], "problem_rating": "1200", "solved_by": "x26002"},
{"url": "https://codeforces.com//problemset/problem/1272/B", "name": "Snow Walking Robot", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "1200", "solved_by": "x13809"},
{"url": "https://codeforces.com//problemset/problem/1272/A", "name": "Three Friends", "tags": ["brute force", "greedy", "math", "sortings"], "problem_rating": "900", "solved_by": "x20399"},
{"url": "https://codeforces.com//problemset/problem/1271/F", "name": "Divide The Students", "tags": ["brute force"], "problem_rating": "2700", "solved_by": "x190"},
{"url": "https://codeforces.com//problemset/problem/1271/E", "name": "Common Number", "tags": ["binary search", "combinatorics", "dp", "math"], "problem_rating": "2100", "solved_by": "x3341"},
{"url": "https://codeforces.com//problemset/problem/1271/D", "name": "Portals", "tags": ["data structures", "dp", "greedy", "implementation", "sortings"], "problem_rating": "2100", "solved_by": "x2980"},
{"url": "https://codeforces.com//problemset/problem/1271/C", "name": "Shawarma Tent", "tags": ["brute force", "geometry", "greedy", "implementation"], "problem_rating": "1300", "solved_by": "x10451"},
{"url": "https://codeforces.com//problemset/problem/1271/B", "name": "Blocks", "tags": ["greedy", "math"], "problem_rating": "1300", "solved_by": "x11289"},
{"url": "https://codeforces.com//problemset/problem/1271/A", "name": "Suits", "tags": ["brute force", "greedy", "math"], "problem_rating": "800", "solved_by": "x14897"},
{"url": "https://codeforces.com//problemset/problem/1270/I", "name": "Xor on Figures", "tags": ["constructive algorithms", "fft", "math"], "problem_rating": "3500", "solved_by": "x233"},
{"url": "https://codeforces.com//problemset/problem/1270/H", "name": "Number of Components", "tags": ["data structures"], "problem_rating": "3300", "solved_by": "x677"},
{"url": "https://codeforces.com//problemset/problem/1270/G", "name": "Subset with Zero Sum", "tags": ["constructive algorithms", "dfs and similar", "graphs", "math"], "problem_rating": "2700", "solved_by": "x2139"},
{"url": "https://codeforces.com//problemset/problem/1270/F", "name": "Awesome Substrings", "tags": ["math", "strings"], "problem_rating": "2600", "solved_by": "x1118"},
{"url": "https://codeforces.com//problemset/problem/1270/E", "name": "Divide Points", "tags": ["constructive algorithms", "geometry", "math"], "problem_rating": "2300", "solved_by": "x2361"},
{"url": "https://codeforces.com//problemset/problem/1270/D", "name": "Strange Device", "tags": ["constructive algorithms", "interactive", "math", "sortings"], "problem_rating": "1900", "solved_by": "x4653"},
{"url": "https://codeforces.com//problemset/problem/1270/C", "name": "Make Good", "tags": ["bitmasks", "constructive algorithms", "math"], "problem_rating": "1400", "solved_by": "x13935"},
{"url": "https://codeforces.com//problemset/problem/1270/B", "name": "Interesting Subarray", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1200", "solved_by": "x16263"},
{"url": "https://codeforces.com//problemset/problem/1270/A", "name": "Card Game", "tags": ["games", "greedy", "math"], "problem_rating": "800", "solved_by": "x16912"},
{"url": "https://codeforces.com//problemset/problem/1269/B", "name": "Modulo Equality", "tags": ["brute force", "sortings"], "problem_rating": "1500", "solved_by": "x9087"},
{"url": "https://codeforces.com//problemset/problem/1269/A", "name": "Equation", "tags": ["brute force", "math"], "problem_rating": "800", "solved_by": "x21309"},
{"url": "https://codeforces.com//problemset/problem/1268/E", "name": "Happy Cactus", "tags": ["dp"], "problem_rating": "3400", "solved_by": "x229"},
{"url": "https://codeforces.com//problemset/problem/1268/D", "name": "Invertation in Tournament", "tags": ["brute force", "divide and conquer", "graphs", "math"], "problem_rating": "3200", "solved_by": "x489"},
{"url": "https://codeforces.com//problemset/problem/1268/C", "name": "K Integers", "tags": ["binary search", "data structures"], "problem_rating": "2300", "solved_by": "x1689"},
{"url": "https://codeforces.com//problemset/problem/1268/B", "name": "Domino for Young", "tags": ["dp", "greedy", "math"], "problem_rating": "2000", "solved_by": "x5835"},
{"url": "https://codeforces.com//problemset/problem/1268/A", "name": "Long Beautiful Integer", "tags": ["constructive algorithms", "greedy", "implementation", "strings"], "problem_rating": "1700", "solved_by": "x8506"},
{"url": "https://codeforces.com//problemset/problem/1267/L", "name": "Lexicography", "tags": ["constructive algorithms", "strings"], "problem_rating": "1800", "solved_by": "x3006"},
{"url": "https://codeforces.com//problemset/problem/1267/K", "name": "Key Storage", "tags": ["combinatorics", "math"], "problem_rating": "2100", "solved_by": "x1881"},
{"url": "https://codeforces.com//problemset/problem/1267/J", "name": "Just Arrange the Icons", "tags": ["greedy", "implementation", "math"], "problem_rating": "1800", "solved_by": "x2783"},
{"url": "https://codeforces.com//problemset/problem/1267/I", "name": "Intriguing Selection", "tags": ["brute force", "constructive algorithms", "implementation", "interactive", "sortings"], "problem_rating": "2600", "solved_by": "x870"},
{"url": "https://codeforces.com//problemset/problem/1267/H", "name": "Help BerLine", "tags": ["constructive algorithms"], "problem_rating": "3200", "solved_by": "x141"},
{"url": "https://codeforces.com//problemset/problem/1267/G", "name": "Game Relics", "tags": ["math", "probabilities"], "problem_rating": "3000", "solved_by": "x637"},
{"url": "https://codeforces.com//problemset/problem/1267/F", "name": "Foolprüf Security", "tags": ["graphs"], "problem_rating": "2600", "solved_by": "x644"},
{"url": "https://codeforces.com//problemset/problem/1267/E", "name": "Elections", "tags": ["greedy"], "problem_rating": "1700", "solved_by": "x3153"},
{"url": "https://codeforces.com//problemset/problem/1267/D", "name": "DevOps Best Practices", "tags": ["constructive algorithms"], "problem_rating": "2800", "solved_by": "x209"},
{"url": "https://codeforces.com//problemset/problem/1267/C", "name": "Cactus Revenge", "tags": ["constructive algorithms"], "problem_rating": "3500", "solved_by": "x379"},
{"url": "https://codeforces.com//problemset/problem/1267/B", "name": "Balls of Buma", "tags": [], "problem_rating": "900", "solved_by": "x3953"},
{"url": "https://codeforces.com//problemset/problem/1267/A", "name": "Apprentice Learning Trajectory", "tags": [], "problem_rating": "2400", "solved_by": "x965"},
{"url": "https://codeforces.com//problemset/problem/1266/H", "name": "Red-Blue Graph", "tags": ["dp", "graphs", "math", "matrices", "meet-in-the-middle"], "problem_rating": "3400", "solved_by": "x102"},
{"url": "https://codeforces.com//problemset/problem/1266/G", "name": "Permutation Concatenation", "tags": ["string suffix structures"], "problem_rating": "3300", "solved_by": "x118"},
{"url": "https://codeforces.com//problemset/problem/1266/F", "name": "Almost Same Distance", "tags": ["dfs and similar", "graphs"], "problem_rating": "2900", "solved_by": "x333"},
{"url": "https://codeforces.com//problemset/problem/1266/E", "name": "Spaceship Solitaire", "tags": ["data structures", "greedy", "implementation"], "problem_rating": "2100", "solved_by": "x2216"},
{"url": "https://codeforces.com//problemset/problem/1266/D", "name": "Decreasing Debts", "tags": ["constructive algorithms", "data structures", "graphs", "greedy", "implementation", "math", "two pointers"], "problem_rating": "2000", "solved_by": "x3553"},
{"url": "https://codeforces.com//problemset/problem/1266/C", "name": "Diverse Matrix", "tags": ["constructive algorithms", "greedy", "math", "number theory"], "problem_rating": "1400", "solved_by": "x9588"},
{"url": "https://codeforces.com//problemset/problem/1266/B", "name": "Dice Tower", "tags": ["constructive algorithms", "math"], "problem_rating": "1000", "solved_by": "x14782"},
{"url": "https://codeforces.com//problemset/problem/1266/A", "name": "Competitive Programmer", "tags": ["chinese remainder theorem", "math"], "problem_rating": "1000", "solved_by": "x15469"},
{"url": "https://codeforces.com//problemset/problem/1265/E", "name": "Beautiful Mirrors", "tags": ["data structures", "dp", "math", "probabilities"], "problem_rating": "2100", "solved_by": "x3564"},
{"url": "https://codeforces.com//problemset/problem/1265/B", "name": "Beautiful Numbers", "tags": ["data structures", "implementation", "math", "two pointers"], "problem_rating": "1300", "solved_by": "x12525"},
{"url": "https://codeforces.com//problemset/problem/1265/A", "name": "Beautiful String", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1000", "solved_by": "x15006"},
{"url": "https://codeforces.com//problemset/problem/1264/F", "name": "Beautiful Fibonacci Problem", "tags": ["constructive algorithms", "number theory"], "problem_rating": "3500", "solved_by": "x903"},
{"url": "https://codeforces.com//problemset/problem/1264/E", "name": "Beautiful League", "tags": ["constructive algorithms", "flows", "graph matchings"], "problem_rating": "2700", "solved_by": "x776"},
{"url": "https://codeforces.com//problemset/problem/1264/D2", "name": "Beautiful Bracket Sequence (hard version)", "tags": ["combinatorics", "probabilities"], "problem_rating": "2900", "solved_by": "x880"},
{"url": "https://codeforces.com//problemset/problem/1264/D1", "name": "Beautiful Bracket Sequence (easy version)", "tags": ["combinatorics", "dp", "probabilities"], "problem_rating": "2600", "solved_by": "x1204"},
{"url": "https://codeforces.com//problemset/problem/1264/C", "name": "Beautiful Mirrors with queries", "tags": ["data structures", "probabilities"], "problem_rating": "2400", "solved_by": "x1133"},
{"url": "https://codeforces.com//problemset/problem/1264/B", "name": "Beautiful Sequence", "tags": ["brute force", "constructive algorithms", "greedy"], "problem_rating": "1900", "solved_by": "x5767"},
{"url": "https://codeforces.com//problemset/problem/1264/A", "name": "Beautiful Regional Contest", "tags": ["greedy", "implementation"], "problem_rating": "1500", "solved_by": "x10019"},
{"url": "https://codeforces.com//problemset/problem/1263/F", "name": "Economic Difficulties", "tags": ["data structures", "dfs and similar", "dp", "flows", "graphs", "trees"], "problem_rating": "2400", "solved_by": "x863"},
{"url": "https://codeforces.com//problemset/problem/1263/E", "name": "Editor", "tags": ["data structures", "implementation"], "problem_rating": "2100", "solved_by": "x2761"},
{"url": "https://codeforces.com//problemset/problem/1263/D", "name": "Secret Passwords", "tags": ["dfs and similar", "dsu", "graphs"], "problem_rating": "1500", "solved_by": "x13727"},
{"url": "https://codeforces.com//problemset/problem/1263/C", "name": "Everyone is a Winner!", "tags": ["binary search", "math", "meet-in-the-middle", "number theory"], "problem_rating": "1400", "solved_by": "x13581"},
{"url": "https://codeforces.com//problemset/problem/1263/B", "name": "PIN Codes", "tags": ["greedy", "implementation"], "problem_rating": "1400", "solved_by": "x11301"},
{"url": "https://codeforces.com//problemset/problem/1263/A", "name": "Sweet Problem", "tags": ["math"], "problem_rating": "1100", "solved_by": "x16245"},
{"url": "https://codeforces.com//problemset/problem/1261/F", "name": "Xor-Set", "tags": ["bitmasks", "divide and conquer", "math"], "problem_rating": "3100", "solved_by": "x378"},
{"url": "https://codeforces.com//problemset/problem/1260/F", "name": "Colored Tree", "tags": ["data structures", "trees"], "problem_rating": "2700", "solved_by": "x492"},
{"url": "https://codeforces.com//problemset/problem/1260/E", "name": "Tournament", "tags": ["brute force", "dp", "greedy"], "problem_rating": "2400", "solved_by": "x1691"},
{"url": "https://codeforces.com//problemset/problem/1260/D", "name": "A Game with Traps", "tags": ["binary search", "dp", "greedy", "sortings"], "problem_rating": "1900", "solved_by": "x3807"},
{"url": "https://codeforces.com//problemset/problem/1260/C", "name": "Infinite Fence", "tags": ["greedy", "math", "number theory"], "problem_rating": "1700", "solved_by": "x8182"},
{"url": "https://codeforces.com//problemset/problem/1260/B", "name": "Obtain Two Zeroes", "tags": ["binary search", "math"], "problem_rating": "1300", "solved_by": "x15600"},
{"url": "https://codeforces.com//problemset/problem/1260/A", "name": "Heating", "tags": ["math"], "problem_rating": "1000", "solved_by": "x14503"},
{"url": "https://codeforces.com//problemset/problem/1257/G", "name": "Divisor Set", "tags": ["divide and conquer", "fft", "greedy", "math", "number theory"], "problem_rating": "2600", "solved_by": "x593"},
{"url": "https://codeforces.com//problemset/problem/1257/F", "name": "Make Them Similar", "tags": ["bitmasks", "brute force", "hashing", "meet-in-the-middle"], "problem_rating": "2400", "solved_by": "x1982"},
{"url": "https://codeforces.com//problemset/problem/1257/E", "name": "The Contest", "tags": ["data structures", "dp", "greedy"], "problem_rating": "2000", "solved_by": "x4173"},
{"url": "https://codeforces.com//problemset/problem/1257/D", "name": "Yet Another Monster Killing Problem", "tags": ["binary search", "data structures", "dp", "greedy", "sortings", "two pointers"], "problem_rating": "1700", "solved_by": "x7486"},
{"url": "https://codeforces.com//problemset/problem/1257/C", "name": "Dominated Subarray", "tags": ["greedy", "implementation", "sortings", "strings", "two pointers"], "problem_rating": "1200", "solved_by": "x15822"},
{"url": "https://codeforces.com//problemset/problem/1257/B", "name": "Magic Stick", "tags": ["math"], "problem_rating": "1000", "solved_by": "x20125"},
{"url": "https://codeforces.com//problemset/problem/1257/A", "name": "Two Rival Students", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x20323"},
{"url": "https://codeforces.com//problemset/problem/1256/F", "name": "Equalizing Two Strings", "tags": ["constructive algorithms", "sortings", "strings"], "problem_rating": "2000", "solved_by": "x3265"},
{"url": "https://codeforces.com//problemset/problem/1256/E", "name": "Yet Another Division Into Teams", "tags": ["dp", "greedy", "sortings"], "problem_rating": "2000", "solved_by": "x4074"},
{"url": "https://codeforces.com//problemset/problem/1256/D", "name": "Binary String Minimizing", "tags": ["greedy"], "problem_rating": "1500", "solved_by": "x11940"},
{"url": "https://codeforces.com//problemset/problem/1256/C", "name": "Platforms Jumping", "tags": ["greedy"], "problem_rating": "1700", "solved_by": "x6834"},
{"url": "https://codeforces.com//problemset/problem/1256/B", "name": "Minimize the Permutation", "tags": ["greedy"], "problem_rating": "1400", "solved_by": "x13008"},
{"url": "https://codeforces.com//problemset/problem/1256/A", "name": "Payment Without Change", "tags": ["math"], "problem_rating": "1000", "solved_by": "x29053"},
{"url": "https://codeforces.com//problemset/problem/1255/C", "name": "League of Leesins", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1600", "solved_by": "x6668"},
{"url": "https://codeforces.com//problemset/problem/1255/B", "name": "Fridge Lockers", "tags": ["graphs", "implementation"], "problem_rating": "1100", "solved_by": "x11889"},
{"url": "https://codeforces.com//problemset/problem/1255/A", "name": "Changing Volume", "tags": ["math"], "problem_rating": "800", "solved_by": "x17089"},
{"url": "https://codeforces.com//problemset/problem/1254/E", "name": "Send Tree to Charlie", "tags": ["combinatorics", "dfs and similar", "dsu", "trees"], "problem_rating": "3300", "solved_by": "x263"},
{"url": "https://codeforces.com//problemset/problem/1254/D", "name": "Tree Queries", "tags": ["data structures", "probabilities", "trees"], "problem_rating": "2700", "solved_by": "x1187"},
{"url": "https://codeforces.com//problemset/problem/1254/C", "name": "Point Ordering", "tags": ["constructive algorithms", "geometry", "interactive", "math"], "problem_rating": "2300", "solved_by": "x1400"},
{"url": "https://codeforces.com//problemset/problem/1254/B2", "name": "Send Boxes to Alice (Hard Version)", "tags": ["constructive algorithms", "greedy", "math", "number theory", "ternary search", "two pointers"], "problem_rating": "2100", "solved_by": "x3124"},
{"url": "https://codeforces.com//problemset/problem/1254/B1", "name": "Send Boxes to Alice (Easy Version)", "tags": ["constructive algorithms", "greedy", "math", "number theory", "ternary search", "two pointers"], "problem_rating": "1800", "solved_by": "x4591"},
{"url": "https://codeforces.com//problemset/problem/1254/A", "name": "Feeding Chicken", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "1700", "solved_by": "x5144"},
{"url": "https://codeforces.com//problemset/problem/1253/F", "name": "Cheap Robot", "tags": ["binary search", "dsu", "graphs", "shortest paths", "trees"], "problem_rating": "2500", "solved_by": "x1643"},
{"url": "https://codeforces.com//problemset/problem/1253/E", "name": "Antenna Coverage", "tags": ["data structures", "dp", "greedy", "sortings"], "problem_rating": "2200", "solved_by": "x2788"},
{"url": "https://codeforces.com//problemset/problem/1253/D", "name": "Harmonious Graph", "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy", "sortings"], "problem_rating": "1700", "solved_by": "x9076"},
{"url": "https://codeforces.com//problemset/problem/1253/C", "name": "Sweets Eating", "tags": ["dp", "greedy", "math", "sortings"], "problem_rating": "1500", "solved_by": "x14107"},
{"url": "https://codeforces.com//problemset/problem/1253/B", "name": "Silly Mistake", "tags": ["greedy", "implementation"], "problem_rating": "1400", "solved_by": "x11118"},
{"url": "https://codeforces.com//problemset/problem/1253/A", "name": "Single Push", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x17946"},
{"url": "https://codeforces.com//problemset/problem/1252/L", "name": "Road Construction", "tags": ["flows", "graphs"], "problem_rating": "2300", "solved_by": "x577"},
{"url": "https://codeforces.com//problemset/problem/1252/K", "name": "Addition Robot", "tags": ["data structures", "math", "matrices"], "problem_rating": "2100", "solved_by": "x1828"},
{"url": "https://codeforces.com//problemset/problem/1252/J", "name": "Tiling Terrace", "tags": ["brute force", "dp"], "problem_rating": "2300", "solved_by": "x695"},
{"url": "https://codeforces.com//problemset/problem/1252/I", "name": "Mission Possible", "tags": [], "problem_rating": "3000", "solved_by": "x31"},
{"url": "https://codeforces.com//problemset/problem/1252/H", "name": "Twin Buildings", "tags": ["greedy", "implementation"], "problem_rating": "1800", "solved_by": "x2608"},
{"url": "https://codeforces.com//problemset/problem/1252/G", "name": "Performance Review", "tags": ["data structures"], "problem_rating": "2100", "solved_by": "x1388"},
{"url": "https://codeforces.com//problemset/problem/1252/F", "name": "Regular Forestation", "tags": ["hashing", "trees"], "problem_rating": "2400", "solved_by": "x908"},
{"url": "https://codeforces.com//problemset/problem/1252/E", "name": "Songwriter", "tags": ["greedy", "two pointers"], "problem_rating": "2200", "solved_by": "x1227"},
{"url": "https://codeforces.com//problemset/problem/1252/D", "name": "Find String in a Grid", "tags": ["data structures", "dp", "strings", "trees"], "problem_rating": "3000", "solved_by": "x333"},
{"url": "https://codeforces.com//problemset/problem/1252/C", "name": "Even Path", "tags": ["data structures", "implementation"], "problem_rating": "1600", "solved_by": "x3649"},
{"url": "https://codeforces.com//problemset/problem/1252/B", "name": "Cleaning Robots", "tags": ["dp", "trees"], "problem_rating": "2300", "solved_by": "x507"},
{"url": "https://codeforces.com//problemset/problem/1252/A", "name": "Copying Homework", "tags": [], "problem_rating": "1000", "solved_by": "x5612"},
{"url": "https://codeforces.com//problemset/problem/1251/F", "name": "Red-White Fence", "tags": ["combinatorics", "fft"], "problem_rating": "2500", "solved_by": "x807"},
{"url": "https://codeforces.com//problemset/problem/1251/E2", "name": "Voting (Hard Version)", "tags": ["binary search", "data structures", "greedy"], "problem_rating": "2400", "solved_by": "x2567"},
{"url": "https://codeforces.com//problemset/problem/1251/E1", "name": "Voting (Easy Version)", "tags": ["data structures", "dp", "greedy"], "problem_rating": "2300", "solved_by": "x2276"},
{"url": "https://codeforces.com//problemset/problem/1251/D", "name": "Salary Changing", "tags": ["binary search", "greedy", "sortings"], "problem_rating": "1900", "solved_by": "x5861"},
{"url": "https://codeforces.com//problemset/problem/1251/C", "name": "Minimize The Integer", "tags": ["greedy", "two pointers"], "problem_rating": "1600", "solved_by": "x12109"},
{"url": "https://codeforces.com//problemset/problem/1251/B", "name": "Binary Palindromes", "tags": ["greedy", "strings"], "problem_rating": "1400", "solved_by": "x10931"},
{"url": "https://codeforces.com//problemset/problem/1251/A", "name": "Broken Keyboard", "tags": ["brute force", "strings", "two pointers"], "problem_rating": "1000", "solved_by": "x19356"},
{"url": "https://codeforces.com//problemset/problem/1250/N", "name": "Wires", "tags": ["dfs and similar", "graphs", "greedy"], "problem_rating": "2000", "solved_by": "x1568"},
{"url": "https://codeforces.com//problemset/problem/1250/M", "name": "SmartGarden", "tags": ["constructive algorithms", "divide and conquer"], "problem_rating": "2500", "solved_by": "x355"},
{"url": "https://codeforces.com//problemset/problem/1250/L", "name": "Divide The Students", "tags": ["binary search", "greedy", "math"], "problem_rating": "1500", "solved_by": "x4058"},
{"url": "https://codeforces.com//problemset/problem/1250/K", "name": "Projectors", "tags": ["flows", "graphs"], "problem_rating": "3100", "solved_by": "x186"},
{"url": "https://codeforces.com//problemset/problem/1250/J", "name": "The Parade", "tags": ["binary search", "greedy"], "problem_rating": "1800", "solved_by": "x2895"},
{"url": "https://codeforces.com//problemset/problem/1250/I", "name": "Show Must Go On", "tags": ["binary search", "brute force", "greedy", "shortest paths"], "problem_rating": "3100", "solved_by": "x130"},
{"url": "https://codeforces.com//problemset/problem/1250/H", "name": "Happy Birthday", "tags": ["math"], "problem_rating": "1500", "solved_by": "x4014"},
{"url": "https://codeforces.com//problemset/problem/1250/G", "name": "Discarding Game", "tags": ["dp", "greedy", "two pointers"], "problem_rating": "2300", "solved_by": "x716"},
{"url": "https://codeforces.com//problemset/problem/1250/F", "name": "Data Center", "tags": ["brute force", "implementation"], "problem_rating": "800", "solved_by": "x7227"},
{"url": "https://codeforces.com//problemset/problem/1250/E", "name": "The Coronation", "tags": ["graphs", "implementation"], "problem_rating": "2300", "solved_by": "x807"},
{"url": "https://codeforces.com//problemset/problem/1250/D", "name": "Conference Problem", "tags": ["dp"], "problem_rating": "3000", "solved_by": "x173"},
{"url": "https://codeforces.com//problemset/problem/1250/C", "name": "Trip to Saint Petersburg", "tags": ["data structures"], "problem_rating": "2100", "solved_by": "x1300"},
{"url": "https://codeforces.com//problemset/problem/1250/B", "name": "The Feast and the Bus", "tags": ["brute force", "constructive algorithms", "greedy", "math"], "problem_rating": "1800", "solved_by": "x2587"},
{"url": "https://codeforces.com//problemset/problem/1250/A", "name": "Berstagram", "tags": ["implementation"], "problem_rating": "1400", "solved_by": "x4051"},
{"url": "https://codeforces.com//problemset/problem/1249/F", "name": "Maximum Weight Subset", "tags": ["dp", "trees"], "problem_rating": "2200", "solved_by": "x2294"},
{"url": "https://codeforces.com//problemset/problem/1249/E", "name": "By Elevator or Stairs?", "tags": ["dp", "shortest paths"], "problem_rating": "1700", "solved_by": "x9518"},
{"url": "https://codeforces.com//problemset/problem/1249/D2", "name": "Too Many Segments (hard version)", "tags": ["data structures", "greedy", "sortings"], "problem_rating": "1800", "solved_by": "x5165"},
{"url": "https://codeforces.com//problemset/problem/1249/D1", "name": "Too Many Segments (easy version)", "tags": ["greedy"], "problem_rating": "1800", "solved_by": "x5034"},
{"url": "https://codeforces.com//problemset/problem/1249/C2", "name": "Good Numbers (hard version)", "tags": ["binary search", "greedy", "math", "meet-in-the-middle"], "problem_rating": "1500", "solved_by": "x12498"},
{"url": "https://codeforces.com//problemset/problem/1249/C1", "name": "Good Numbers (easy version)", "tags": ["brute force", "greedy", "implementation"], "problem_rating": "1300", "solved_by": "x15392"},
{"url": "https://codeforces.com//problemset/problem/1249/B2", "name": "Books Exchange (hard version)", "tags": ["dfs and similar", "dsu", "math"], "problem_rating": "1300", "solved_by": "x16602"},
{"url": "https://codeforces.com//problemset/problem/1249/B1", "name": "Books Exchange (easy version)", "tags": ["dsu", "math"], "problem_rating": "1000", "solved_by": "x20486"},
{"url": "https://codeforces.com//problemset/problem/1249/A", "name": "Yet Another Dividing into Teams", "tags": ["math"], "problem_rating": "800", "solved_by": "x22144"},
{"url": "https://codeforces.com//problemset/problem/1248/D1", "name": "The World Is Just a Programming Task (Easy Version)", "tags": ["brute force", "dp", "greedy", "implementation"], "problem_rating": "2000", "solved_by": "x2367"},
{"url": "https://codeforces.com//problemset/problem/1248/B", "name": "Grow The Tree", "tags": ["greedy", "math", "sortings"], "problem_rating": "900", "solved_by": "x16758"},
{"url": "https://codeforces.com//problemset/problem/1248/A", "name": "Integer Points", "tags": ["geometry", "math"], "problem_rating": "1000", "solved_by": "x13995"},
{"url": "https://codeforces.com//problemset/problem/1246/F", "name": "Cursor Distance", "tags": [], "problem_rating": "3500", "solved_by": "x161"},
{"url": "https://codeforces.com//problemset/problem/1245/F", "name": "Daniel and Spring Cleaning", "tags": ["bitmasks", "brute force", "combinatorics", "dp"], "problem_rating": "2300", "solved_by": "x1814"},
{"url": "https://codeforces.com//problemset/problem/1245/E", "name": "Hyakugoku and Ladders", "tags": ["dp", "probabilities", "shortest paths"], "problem_rating": "2300", "solved_by": "x1252"},
{"url": "https://codeforces.com//problemset/problem/1245/D", "name": "Shichikuji and Power Grid", "tags": ["dsu", "graphs", "greedy", "shortest paths", "trees"], "problem_rating": "1900", "solved_by": "x7296"},
{"url": "https://codeforces.com//problemset/problem/1245/C", "name": "Constanze's Machine", "tags": ["dp"], "problem_rating": "1400", "solved_by": "x17275"},
{"url": "https://codeforces.com//problemset/problem/1245/B", "name": "Restricted RPS", "tags": ["constructive algorithms", "dp", "greedy"], "problem_rating": "1200", "solved_by": "x13688"},
{"url": "https://codeforces.com//problemset/problem/1245/A", "name": "Good ol' Numbers Coloring", "tags": ["math", "number theory"], "problem_rating": "1000", "solved_by": "x14100"},
{"url": "https://codeforces.com//problemset/problem/1244/G", "name": "Running in Pairs", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "2400", "solved_by": "x1325"},
{"url": "https://codeforces.com//problemset/problem/1244/F", "name": "Chips", "tags": ["constructive algorithms", "implementation"], "problem_rating": "2300", "solved_by": "x1515"},
{"url": "https://codeforces.com//problemset/problem/1244/E", "name": "Minimizing Difference", "tags": ["binary search", "constructive algorithms", "greedy", "sortings", "ternary search", "two pointers"], "problem_rating": "2000", "solved_by": "x4961"},
{"url": "https://codeforces.com//problemset/problem/1244/D", "name": "Paint the Tree", "tags": ["brute force", "constructive algorithms", "dp", "graphs", "implementation", "trees"], "problem_rating": "1800", "solved_by": "x7452"},
{"url": "https://codeforces.com//problemset/problem/1244/C", "name": "The Football Season", "tags": ["brute force", "math", "number theory"], "problem_rating": "2000", "solved_by": "x7506"},
{"url": "https://codeforces.com//problemset/problem/1244/B", "name": "Rooms and Staircases", "tags": ["brute force", "implementation"], "problem_rating": "1000", "solved_by": "x15522"},
{"url": "https://codeforces.com//problemset/problem/1244/A", "name": "Pens and Pencils", "tags": ["math"], "problem_rating": "800", "solved_by": "x19065"},
{"url": "https://codeforces.com//problemset/problem/1243/B2", "name": "Character Swap (Hard Version)", "tags": ["strings"], "problem_rating": "1600", "solved_by": "x7057"},
{"url": "https://codeforces.com//problemset/problem/1243/B1", "name": "Character Swap (Easy Version)", "tags": ["strings"], "problem_rating": "1000", "solved_by": "x14772"},
{"url": "https://codeforces.com//problemset/problem/1243/A", "name": "Maximum Square", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x15567"},
{"url": "https://codeforces.com//problemset/problem/1242/E", "name": "Planar Perimeter", "tags": ["constructive algorithms", "graphs"], "problem_rating": "3200", "solved_by": "x130"},
{"url": "https://codeforces.com//problemset/problem/1242/D", "name": "Number Discovery", "tags": ["math"], "problem_rating": "3400", "solved_by": "x187"},
{"url": "https://codeforces.com//problemset/problem/1242/C", "name": "Sum Balance", "tags": ["bitmasks", "dfs and similar", "dp", "graphs"], "problem_rating": "2400", "solved_by": "x1622"},
{"url": "https://codeforces.com//problemset/problem/1242/B", "name": "0-1 MST", "tags": ["dfs and similar", "dsu", "graphs", "sortings"], "problem_rating": "1900", "solved_by": "x7368"},
{"url": "https://codeforces.com//problemset/problem/1242/A", "name": "Tile Painting", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "1500", "solved_by": "x12508"},
{"url": "https://codeforces.com//problemset/problem/1240/F", "name": "Football", "tags": ["graphs"], "problem_rating": "3100", "solved_by": "x244"},
{"url": "https://codeforces.com//problemset/problem/1239/F", "name": "Swiper, no swiping!", "tags": ["graphs", "implementation"], "problem_rating": "3400", "solved_by": "x249"},
{"url": "https://codeforces.com//problemset/problem/1239/E", "name": "Turtle", "tags": ["dp", "implementation"], "problem_rating": "3100", "solved_by": "x927"},
{"url": "https://codeforces.com//problemset/problem/1239/D", "name": "Catowice City", "tags": ["2-sat", "dfs and similar", "graph matchings", "graphs"], "problem_rating": "2400", "solved_by": "x1941"},
{"url": "https://codeforces.com//problemset/problem/1239/C", "name": "Queue in the Train", "tags": ["data structures", "greedy", "implementation"], "problem_rating": "2300", "solved_by": "x1322"},
{"url": "https://codeforces.com//problemset/problem/1239/B", "name": "The World Is Just a Programming Task (Hard Version)", "tags": ["implementation"], "problem_rating": "2500", "solved_by": "x1029"},
{"url": "https://codeforces.com//problemset/problem/1239/A", "name": "Ivan the Fool and the Probability Theory", "tags": ["combinatorics", "dp", "math"], "problem_rating": "1700", "solved_by": "x7301"},
{"url": "https://codeforces.com//problemset/problem/1238/G", "name": "Adilbek and the Watering System", "tags": ["data structures", "greedy", "sortings"], "problem_rating": "2700", "solved_by": "x401"},
{"url": "https://codeforces.com//problemset/problem/1238/F", "name": "The Maximum Subtree", "tags": ["dfs and similar", "dp", "graphs", "trees"], "problem_rating": "2200", "solved_by": "x1842"},
{"url": "https://codeforces.com//problemset/problem/1238/E", "name": "Keyboard Purchase", "tags": ["bitmasks", "dp"], "problem_rating": "2200", "solved_by": "x2909"},
{"url": "https://codeforces.com//problemset/problem/1238/D", "name": "AB-string", "tags": ["binary search", "combinatorics", "dp", "strings"], "problem_rating": "1900", "solved_by": "x5917"},
{"url": "https://codeforces.com//problemset/problem/1238/C", "name": "Standard Free2play", "tags": ["dp", "greedy", "math"], "problem_rating": "1600", "solved_by": "x7348"},
{"url": "https://codeforces.com//problemset/problem/1238/B", "name": "Kill `Em All", "tags": ["greedy", "sortings"], "problem_rating": "1300", "solved_by": "x13458"},
{"url": "https://codeforces.com//problemset/problem/1238/A", "name": "Prime Subtraction", "tags": ["math", "number theory"], "problem_rating": "900", "solved_by": "x23851"},
{"url": "https://codeforces.com//problemset/problem/1237/H", "name": "Balanced Reversals", "tags": ["constructive algorithms"], "problem_rating": "3300", "solved_by": "x369"},
{"url": "https://codeforces.com//problemset/problem/1237/G", "name": "Balanced Distribution", "tags": ["data structures", "dp", "greedy"], "problem_rating": "3500", "solved_by": "x121"},
{"url": "https://codeforces.com//problemset/problem/1237/F", "name": "Balanced Domino Placements", "tags": ["combinatorics", "dp"], "problem_rating": "2600", "solved_by": "x848"},
{"url": "https://codeforces.com//problemset/problem/1237/E", "name": "Balanced Binary Search Trees", "tags": ["dp", "math"], "problem_rating": "2400", "solved_by": "x1277"},
{"url": "https://codeforces.com//problemset/problem/1237/D", "name": "Balanced Playlist", "tags": ["binary search", "data structures", "implementation"], "problem_rating": "2000", "solved_by": "x4135"},
{"url": "https://codeforces.com//problemset/problem/1237/C2", "name": "Balanced Removals (Harder)", "tags": ["binary search", "constructive algorithms", "divide and conquer", "greedy", "implementation", "sortings"], "problem_rating": "1900", "solved_by": "x4283"},
{"url": "https://codeforces.com//problemset/problem/1237/C1", "name": "Balanced Removals (Easier)", "tags": ["constructive algorithms", "geometry", "greedy"], "problem_rating": "1700", "solved_by": "x6046"},
{"url": "https://codeforces.com//problemset/problem/1237/B", "name": "Balanced Tunnel", "tags": ["data structures", "sortings", "two pointers"], "problem_rating": "1300", "solved_by": "x15439"},
{"url": "https://codeforces.com//problemset/problem/1237/A", "name": "Balanced Rating Changes", "tags": ["implementation", "math"], "problem_rating": "1000", "solved_by": "x19299"},
{"url": "https://codeforces.com//problemset/problem/1236/F", "name": "Alice and the Cactus", "tags": ["dfs and similar", "graphs", "math", "probabilities"], "problem_rating": "3000", "solved_by": "x173"},
{"url": "https://codeforces.com//problemset/problem/1236/E", "name": "Alice and the Unfair Game", "tags": ["binary search", "data structures", "dp", "dsu"], "problem_rating": "2500", "solved_by": "x644"},
{"url": "https://codeforces.com//problemset/problem/1236/D", "name": "Alice and the Doll", "tags": ["brute force", "data structures", "greedy", "implementation"], "problem_rating": "2300", "solved_by": "x1654"},
{"url": "https://codeforces.com//problemset/problem/1236/C", "name": "Labs", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "1300", "solved_by": "x10067"},
{"url": "https://codeforces.com//problemset/problem/1236/B", "name": "Alice and the List of Presents", "tags": ["combinatorics", "math"], "problem_rating": "1500", "solved_by": "x10938"},
{"url": "https://codeforces.com//problemset/problem/1236/A", "name": "Stones", "tags": ["brute force", "greedy", "math"], "problem_rating": "800", "solved_by": "x16169"},
{"url": "https://codeforces.com//problemset/problem/1234/F", "name": "Yet Another Substring Reverse", "tags": ["bitmasks", "dp"], "problem_rating": "2200", "solved_by": "x2413"},
{"url": "https://codeforces.com//problemset/problem/1234/E", "name": "Special Permutations", "tags": ["math"], "problem_rating": "2000", "solved_by": "x2754"},
{"url": "https://codeforces.com//problemset/problem/1234/D", "name": "Distinct Characters Queries", "tags": ["data structures"], "problem_rating": "1600", "solved_by": "x14637"},
{"url": "https://codeforces.com//problemset/problem/1234/C", "name": "Pipes", "tags": ["dp", "implementation"], "problem_rating": "1500", "solved_by": "x12456"},
{"url": "https://codeforces.com//problemset/problem/1234/B2", "name": "Social Network (hard version)", "tags": ["data structures", "implementation"], "problem_rating": "1300", "solved_by": "x16761"},
{"url": "https://codeforces.com//problemset/problem/1234/B1", "name": "Social Network (easy version)", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x18607"},
{"url": "https://codeforces.com//problemset/problem/1234/A", "name": "Equalize Prices Again", "tags": ["math"], "problem_rating": "800", "solved_by": "x27660"},
{"url": "https://codeforces.com//problemset/problem/1231/E", "name": "Middle-Out", "tags": ["constructive algorithms", "greedy", "strings"], "problem_rating": "2200", "solved_by": "x828"},
{"url": "https://codeforces.com//problemset/problem/1231/C", "name": "Increasing Matrix", "tags": ["greedy"], "problem_rating": "1100", "solved_by": "x3787"},
{"url": "https://codeforces.com//problemset/problem/1230/B", "name": "Ania and Minimizing", "tags": ["greedy", "implementation"], "problem_rating": "1000", "solved_by": "x18572"},
{"url": "https://codeforces.com//problemset/problem/1230/A", "name": "Dawid and Bags of Candies", "tags": ["brute force", "implementation"], "problem_rating": "800", "solved_by": "x21362"},
{"url": "https://codeforces.com//problemset/problem/1228/F", "name": "One Node is Gone", "tags": ["constructive algorithms", "implementation", "trees"], "problem_rating": "2500", "solved_by": "x421"},
{"url": "https://codeforces.com//problemset/problem/1228/E", "name": "Another Filling the Grid", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2300", "solved_by": "x2596"},
{"url": "https://codeforces.com//problemset/problem/1228/D", "name": "Complete Tripartite", "tags": ["brute force", "constructive algorithms", "graphs", "hashing", "implementation"], "problem_rating": "1900", "solved_by": "x5173"},
{"url": "https://codeforces.com//problemset/problem/1228/C", "name": "Primes and Multiplication", "tags": ["math", "number theory"], "problem_rating": "1700", "solved_by": "x8934"},
{"url": "https://codeforces.com//problemset/problem/1228/B", "name": "Filling the Grid", "tags": ["implementation", "math"], "problem_rating": "1400", "solved_by": "x11483"},
{"url": "https://codeforces.com//problemset/problem/1228/A", "name": "Distinct Digits", "tags": ["brute force", "implementation"], "problem_rating": "800", "solved_by": "x21495"},
{"url": "https://codeforces.com//problemset/problem/1227/G", "name": "Not Same", "tags": ["constructive algorithms"], "problem_rating": "2600", "solved_by": "x980"},
{"url": "https://codeforces.com//problemset/problem/1227/F2", "name": "Wrong Answer on test 233 (Hard Version)", "tags": ["combinatorics", "math"], "problem_rating": "2400", "solved_by": "x1479"},
{"url": "https://codeforces.com//problemset/problem/1227/F1", "name": "Wrong Answer on test 233 (Easy Version)", "tags": ["dp"], "problem_rating": "2200", "solved_by": "x1778"},
{"url": "https://codeforces.com//problemset/problem/1227/E", "name": "Arson In Berland Forest", "tags": ["binary search", "graphs", "graphs", "shortest paths"], "problem_rating": "2200", "solved_by": "x1463"},
{"url": "https://codeforces.com//problemset/problem/1227/D2", "name": "Optimal Subsequences (Hard Version)", "tags": ["data structures", "greedy"], "problem_rating": "1800", "solved_by": "x4286"},
{"url": "https://codeforces.com//problemset/problem/1227/D1", "name": "Optimal Subsequences (Easy Version)", "tags": ["data structures", "greedy"], "problem_rating": "1600", "solved_by": "x6350"},
{"url": "https://codeforces.com//problemset/problem/1227/C", "name": "Messy", "tags": ["constructive algorithms"], "problem_rating": "1700", "solved_by": "x5488"},
{"url": "https://codeforces.com//problemset/problem/1227/B", "name": "Box", "tags": ["constructive algorithms"], "problem_rating": "1200", "solved_by": "x9563"},
{"url": "https://codeforces.com//problemset/problem/1227/A", "name": "Math Problem", "tags": ["math"], "problem_rating": "1100", "solved_by": "x9745"},
{"url": "https://codeforces.com//problemset/problem/1225/G", "name": "To Make 1", "tags": ["bitmasks", "constructive algorithms", "dp", "greedy", "number theory"], "problem_rating": "3100", "solved_by": "x536"},
{"url": "https://codeforces.com//problemset/problem/1225/F", "name": "Tree Factory", "tags": ["constructive algorithms", "greedy", "trees"], "problem_rating": "2500", "solved_by": "x875"},
{"url": "https://codeforces.com//problemset/problem/1225/E", "name": "Rock Is Push", "tags": ["binary search", "dp"], "problem_rating": "2200", "solved_by": "x1857"},
{"url": "https://codeforces.com//problemset/problem/1225/D", "name": "Power Products", "tags": ["hashing", "math", "number theory"], "problem_rating": "1800", "solved_by": "x7780"},
{"url": "https://codeforces.com//problemset/problem/1225/C", "name": "p-binary", "tags": ["bitmasks", "brute force", "math"], "problem_rating": "1600", "solved_by": "x8872"},
{"url": "https://codeforces.com//problemset/problem/1225/B2", "name": "TV Subscriptions (Hard Version)", "tags": ["implementation", "two pointers"], "problem_rating": "1300", "solved_by": "x10395"},
{"url": "https://codeforces.com//problemset/problem/1225/B1", "name": "TV Subscriptions (Easy Version)", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x11802"},
{"url": "https://codeforces.com//problemset/problem/1225/A", "name": "Forgetting Things", "tags": ["math"], "problem_rating": "900", "solved_by": "x15732"},
{"url": "https://codeforces.com//problemset/problem/1223/G", "name": "Wooden Raft", "tags": ["binary search", "math", "number theory"], "problem_rating": "3200", "solved_by": "x229"},
{"url": "https://codeforces.com//problemset/problem/1223/F", "name": "Stack Exterminable Arrays", "tags": ["data structures", "divide and conquer", "dp", "hashing"], "problem_rating": "2600", "solved_by": "x1995"},
{"url": "https://codeforces.com//problemset/problem/1223/E", "name": "Paint the Tree", "tags": ["dp", "sortings", "trees"], "problem_rating": "2100", "solved_by": "x2557"},
{"url": "https://codeforces.com//problemset/problem/1223/D", "name": "Sequence Sorting", "tags": ["dp", "greedy", "two pointers"], "problem_rating": "2000", "solved_by": "x3974"},
{"url": "https://codeforces.com//problemset/problem/1223/C", "name": "Save the Nature", "tags": ["binary search", "greedy"], "problem_rating": "1600", "solved_by": "x8085"},
{"url": "https://codeforces.com//problemset/problem/1223/B", "name": "Strings Equalization", "tags": ["strings"], "problem_rating": "1000", "solved_by": "x14654"},
{"url": "https://codeforces.com//problemset/problem/1223/A", "name": "CME", "tags": ["math"], "problem_rating": "800", "solved_by": "x21534"},
{"url": "https://codeforces.com//problemset/problem/1221/G", "name": "Graph And Numbers", "tags": ["bitmasks", "brute force", "combinatorics", "dp", "meet-in-the-middle"], "problem_rating": "2900", "solved_by": "x572"},
{"url": "https://codeforces.com//problemset/problem/1221/F", "name": "Choose a Square", "tags": ["binary search", "data structures", "sortings"], "problem_rating": "2400", "solved_by": "x1025"},
{"url": "https://codeforces.com//problemset/problem/1221/E", "name": "Game With String", "tags": ["games"], "problem_rating": "2500", "solved_by": "x1029"},
{"url": "https://codeforces.com//problemset/problem/1221/D", "name": "Make The Fence Great Again", "tags": ["dp"], "problem_rating": "1800", "solved_by": "x8827"},
{"url": "https://codeforces.com//problemset/problem/1221/C", "name": "Perfect Team", "tags": ["binary search", "math"], "problem_rating": "1200", "solved_by": "x20562"},
{"url": "https://codeforces.com//problemset/problem/1221/B", "name": "Knights", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1100", "solved_by": "x11748"},
{"url": "https://codeforces.com//problemset/problem/1221/A", "name": "2048 Game", "tags": ["brute force", "greedy", "math"], "problem_rating": "1000", "solved_by": "x16488"},
{"url": "https://codeforces.com//problemset/problem/1220/G", "name": "Geolocation", "tags": ["geometry"], "problem_rating": "3400", "solved_by": "x49"},
{"url": "https://codeforces.com//problemset/problem/1220/F", "name": "Gardener Alex", "tags": ["binary search", "data structures"], "problem_rating": "2700", "solved_by": "x675"},
{"url": "https://codeforces.com//problemset/problem/1220/E", "name": "Tourism", "tags": ["dfs and similar", "dp", "dsu", "graphs", "greedy", "trees"], "problem_rating": "2200", "solved_by": "x2711"},
{"url": "https://codeforces.com//problemset/problem/1220/D", "name": "Alex and Julian", "tags": ["bitmasks", "math", "number theory"], "problem_rating": "1900", "solved_by": "x3865"},
{"url": "https://codeforces.com//problemset/problem/1220/C", "name": "Substring Game in the Lesson", "tags": ["games", "greedy", "strings"], "problem_rating": "1300", "solved_by": "x10132"},
{"url": "https://codeforces.com//problemset/problem/1220/B", "name": "Multiplication Table", "tags": ["math", "number theory"], "problem_rating": "1300", "solved_by": "x11541"},
{"url": "https://codeforces.com//problemset/problem/1220/A", "name": "Cards", "tags": ["implementation", "sortings", "strings"], "problem_rating": "800", "solved_by": "x29352"},
{"url": "https://codeforces.com//problemset/problem/1219/G", "name": "Harvester", "tags": ["implementation"], "problem_rating": "2000", "solved_by": "x646"},
{"url": "https://codeforces.com//problemset/problem/1219/C", "name": "Periodic integer number", "tags": ["implementation", "strings"], "problem_rating": "1700", "solved_by": "x1769"},
{"url": "https://codeforces.com//problemset/problem/1218/I", "name": "The Light Square", "tags": ["2-sat", "dfs and similar", "greedy"], "problem_rating": "2100", "solved_by": "x583"},
{"url": "https://codeforces.com//problemset/problem/1218/H", "name": "Function Composition", "tags": ["dfs and similar"], "problem_rating": "2900", "solved_by": "x110"},
{"url": "https://codeforces.com//problemset/problem/1218/G", "name": "Alpha planetary system", "tags": ["constructive algorithms", "graphs", "shortest paths"], "problem_rating": "3000", "solved_by": "x94"},
{"url": "https://codeforces.com//problemset/problem/1218/F", "name": "Workout plan", "tags": ["data structures", "greedy"], "problem_rating": "1500", "solved_by": "x2904"},
{"url": "https://codeforces.com//problemset/problem/1218/E", "name": "Product Tuples", "tags": ["divide and conquer", "fft"], "problem_rating": "2500", "solved_by": "x362"},
{"url": "https://codeforces.com//problemset/problem/1218/D", "name": "Xor Spanning Tree", "tags": ["divide and conquer", "fft", "graphs"], "problem_rating": "2400", "solved_by": "x493"},
{"url": "https://codeforces.com//problemset/problem/1218/C", "name": "Jumping Transformers", "tags": ["dp"], "problem_rating": "2600", "solved_by": "x173"},
{"url": "https://codeforces.com//problemset/problem/1218/B", "name": "Guarding warehouses", "tags": ["data structures", "geometry"], "problem_rating": "3000", "solved_by": "x70"},
{"url": "https://codeforces.com//problemset/problem/1218/A", "name": "BubbleReactor", "tags": ["dp", "graphs"], "problem_rating": "2800", "solved_by": "x124"},
{"url": "https://codeforces.com//problemset/problem/1217/F", "name": "Forced Online Queries Problem", "tags": ["data structures", "divide and conquer", "dsu", "graphs", "trees"], "problem_rating": "2600", "solved_by": "x562"},
{"url": "https://codeforces.com//problemset/problem/1217/E", "name": "Sum Queries?", "tags": ["data structures", "greedy", "implementation", "math"], "problem_rating": "2300", "solved_by": "x1851"},
{"url": "https://codeforces.com//problemset/problem/1217/D", "name": "Coloring Edges", "tags": ["constructive algorithms", "dfs and similar", "graphs"], "problem_rating": "2100", "solved_by": "x5169"},
{"url": "https://codeforces.com//problemset/problem/1217/C", "name": "The Number Of Good Substrings", "tags": ["binary search", "bitmasks", "brute force"], "problem_rating": "1700", "solved_by": "x7364"},
{"url": "https://codeforces.com//problemset/problem/1217/B", "name": "Zmei Gorynich", "tags": ["greedy", "math"], "problem_rating": "1600", "solved_by": "x11123"},
{"url": "https://codeforces.com//problemset/problem/1217/A", "name": "Creating a Character", "tags": ["binary search", "math"], "problem_rating": "1300", "solved_by": "x14851"},
{"url": "https://codeforces.com//problemset/problem/1216/F", "name": "Wi-Fi", "tags": ["data structures", "dp", "greedy"], "problem_rating": "2100", "solved_by": "x2561"},
{"url": "https://codeforces.com//problemset/problem/1216/E2", "name": "Numerical Sequence (hard version)", "tags": ["binary search", "math"], "problem_rating": "2200", "solved_by": "x1442"},
{"url": "https://codeforces.com//problemset/problem/1216/E1", "name": "Numerical Sequence (easy version)", "tags": ["binary search", "brute force", "math"], "problem_rating": "1900", "solved_by": "x3404"},
{"url": "https://codeforces.com//problemset/problem/1216/D", "name": "Swords", "tags": ["math"], "problem_rating": "1300", "solved_by": "x10998"},
{"url": "https://codeforces.com//problemset/problem/1216/C", "name": "White Sheet", "tags": ["geometry", "math"], "problem_rating": "1700", "solved_by": "x9097"},
{"url": "https://codeforces.com//problemset/problem/1216/B", "name": "Shooting", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "900", "solved_by": "x18252"},
{"url": "https://codeforces.com//problemset/problem/1216/A", "name": "Prefixes", "tags": ["strings"], "problem_rating": "800", "solved_by": "x18510"},
{"url": "https://codeforces.com//problemset/problem/1215/F", "name": "Radio Stations", "tags": ["2-sat"], "problem_rating": "2700", "solved_by": "x950"},
{"url": "https://codeforces.com//problemset/problem/1215/E", "name": "Marbles", "tags": ["bitmasks", "dp"], "problem_rating": "2200", "solved_by": "x2951"},
{"url": "https://codeforces.com//problemset/problem/1215/D", "name": "Ticket Game", "tags": ["games", "greedy", "math"], "problem_rating": "1700", "solved_by": "x6042"},
{"url": "https://codeforces.com//problemset/problem/1215/C", "name": "Swap Letters", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1500", "solved_by": "x11024"},
{"url": "https://codeforces.com//problemset/problem/1215/B", "name": "The Number of Products", "tags": ["combinatorics", "dp", "implementation"], "problem_rating": "1400", "solved_by": "x12585"},
{"url": "https://codeforces.com//problemset/problem/1215/A", "name": "Yellow Cards", "tags": ["greedy", "implementation", "math"], "problem_rating": "1000", "solved_by": "x11484"},
{"url": "https://codeforces.com//problemset/problem/1214/H", "name": "Tiles Placement", "tags": ["constructive algorithms", "dfs and similar", "trees"], "problem_rating": "2800", "solved_by": "x378"},
{"url": "https://codeforces.com//problemset/problem/1214/G", "name": "Feeling Good", "tags": ["bitmasks", "data structures"], "problem_rating": "3200", "solved_by": "x286"},
{"url": "https://codeforces.com//problemset/problem/1214/F", "name": "Employment", "tags": ["greedy", "sortings"], "problem_rating": "2700", "solved_by": "x426"},
{"url": "https://codeforces.com//problemset/problem/1214/E", "name": "Petya and Construction Set", "tags": ["constructive algorithms", "graphs", "math", "sortings", "trees"], "problem_rating": "2000", "solved_by": "x2664"},
{"url": "https://codeforces.com//problemset/problem/1214/D", "name": "Treasure Island", "tags": ["dfs and similar", "dp", "flows", "hashing"], "problem_rating": "1900", "solved_by": "x5131"},
{"url": "https://codeforces.com//problemset/problem/1214/C", "name": "Bad Sequence", "tags": ["data structures", "greedy"], "problem_rating": "1200", "solved_by": "x13134"},
{"url": "https://codeforces.com//problemset/problem/1214/B", "name": "Badges", "tags": ["brute force", "math"], "problem_rating": "1100", "solved_by": "x10771"},
{"url": "https://codeforces.com//problemset/problem/1214/A", "name": "Optimal Currency Exchange", "tags": ["brute force", "math"], "problem_rating": "1400", "solved_by": "x9032"},
{"url": "https://codeforces.com//problemset/problem/1213/G", "name": "Path Queries", "tags": ["divide and conquer", "dsu", "graphs", "sortings", "trees"], "problem_rating": "1800", "solved_by": "x7003"},
{"url": "https://codeforces.com//problemset/problem/1213/F", "name": "Unstable String Sort", "tags": ["data structures", "dfs and similar", "dsu", "graphs", "greedy", "implementation", "strings"], "problem_rating": "2100", "solved_by": "x2541"},
{"url": "https://codeforces.com//problemset/problem/1213/E", "name": "Two Small Strings", "tags": ["brute force", "constructive algorithms"], "problem_rating": "1900", "solved_by": "x5113"},
{"url": "https://codeforces.com//problemset/problem/1213/D2", "name": "Equalizing by Division (hard version)", "tags": ["brute force", "math", "sortings"], "problem_rating": "1600", "solved_by": "x11346"},
{"url": "https://codeforces.com//problemset/problem/1213/D1", "name": "Equalizing by Division (easy version)", "tags": ["brute force", "implementation"], "problem_rating": "1500", "solved_by": "x11299"},
{"url": "https://codeforces.com//problemset/problem/1213/C", "name": "Book Reading", "tags": ["math"], "problem_rating": "1200", "solved_by": "x18262"},
{"url": "https://codeforces.com//problemset/problem/1213/B", "name": "Bad Prices", "tags": ["data structures", "implementation"], "problem_rating": "1100", "solved_by": "x26186"},
{"url": "https://codeforces.com//problemset/problem/1213/A", "name": "Chips Moving", "tags": ["math"], "problem_rating": "900", "solved_by": "x23885"},
{"url": "https://codeforces.com//problemset/problem/1211/I", "name": "Unusual Graph", "tags": ["*special problem", "graphs"], "problem_rating": "3000", "solved_by": "x37"},
{"url": "https://codeforces.com//problemset/problem/1211/H", "name": "Road Repair in Treeland", "tags": ["*special problem", "binary search", "dp", "trees"], "problem_rating": "3100", "solved_by": "x45"},
{"url": "https://codeforces.com//problemset/problem/1211/G", "name": "King's Path", "tags": ["*special problem", "math", "trees"], "problem_rating": "2500", "solved_by": "x70"},
{"url": "https://codeforces.com//problemset/problem/1211/F", "name": "kotlinkotlinkotlinkotlin...", "tags": ["*special problem", "graphs", "implementation", "strings"], "problem_rating": "2300", "solved_by": "x121"},
{"url": "https://codeforces.com//problemset/problem/1211/E", "name": "Double Permutation Inc.", "tags": ["*special problem", "binary search", "greedy"], "problem_rating": "2000", "solved_by": "x191"},
{"url": "https://codeforces.com//problemset/problem/1211/D", "name": "Teams", "tags": ["*special problem", "binary search", "greedy", "math"], "problem_rating": "2000", "solved_by": "x227"},
{"url": "https://codeforces.com//problemset/problem/1211/C", "name": "Ice Cream", "tags": ["*special problem", "greedy", "sortings"], "problem_rating": "1700", "solved_by": "x483"},
{"url": "https://codeforces.com//problemset/problem/1211/B", "name": "Traveling Around the Golden Ring of Berland", "tags": ["*special problem", "implementation"], "problem_rating": "1500", "solved_by": "x760"},
{"url": "https://codeforces.com//problemset/problem/1211/A", "name": "Three Problems", "tags": ["*special problem", "implementation"], "problem_rating": "1000", "solved_by": "x1382"},
{"url": "https://codeforces.com//problemset/problem/1210/G", "name": "Mateusz and Escape Room", "tags": ["dp"], "problem_rating": "3500", "solved_by": "x159"},
{"url": "https://codeforces.com//problemset/problem/1210/F2", "name": "Marek and Matching (hard version)", "tags": ["brute force", "probabilities"], "problem_rating": "3200", "solved_by": "x194"},
{"url": "https://codeforces.com//problemset/problem/1210/F1", "name": "Marek and Matching (easy version)", "tags": ["brute force", "probabilities"], "problem_rating": "3100", "solved_by": "x191"},
{"url": "https://codeforces.com//problemset/problem/1210/E", "name": "Wojtek and Card Tricks", "tags": ["math"], "problem_rating": "2700", "solved_by": "x394"},
{"url": "https://codeforces.com//problemset/problem/1210/D", "name": "Konrad and Company Evaluation", "tags": ["graphs"], "problem_rating": "2400", "solved_by": "x1489"},
{"url": "https://codeforces.com//problemset/problem/1210/C", "name": "Kamil and Making a Stream", "tags": ["math", "number theory", "trees"], "problem_rating": "2000", "solved_by": "x3293"},
{"url": "https://codeforces.com//problemset/problem/1210/B", "name": "Marcin and Training Camp", "tags": ["brute force", "greedy"], "problem_rating": "1700", "solved_by": "x5739"},
{"url": "https://codeforces.com//problemset/problem/1210/A", "name": "Anadi and Domino", "tags": ["brute force", "graphs"], "problem_rating": "1700", "solved_by": "x5133"},
{"url": "https://codeforces.com//problemset/problem/1209/H", "name": "Moving Walkways", "tags": ["data structures", "greedy", "math"], "problem_rating": "3300", "solved_by": "x139"},
{"url": "https://codeforces.com//problemset/problem/1209/G2", "name": "Into Blocks (hard version)", "tags": ["data structures"], "problem_rating": "3200", "solved_by": "x419"},
{"url": "https://codeforces.com//problemset/problem/1209/G1", "name": "Into Blocks (easy version)", "tags": ["data structures", "dsu", "greedy", "implementation", "two pointers"], "problem_rating": "2000", "solved_by": "x3132"},
{"url": "https://codeforces.com//problemset/problem/1209/F", "name": "Koala and Notebook", "tags": ["data structures", "dfs and similar", "graphs", "shortest paths", "strings", "trees"], "problem_rating": "2600", "solved_by": "x1117"},
{"url": "https://codeforces.com//problemset/problem/1209/E2", "name": "Rotate Columns (hard version)", "tags": ["bitmasks", "dp", "greedy", "sortings"], "problem_rating": "2500", "solved_by": "x1896"},
{"url": "https://codeforces.com//problemset/problem/1209/E1", "name": "Rotate Columns (easy version)", "tags": ["bitmasks", "brute force", "dp", "greedy", "sortings"], "problem_rating": "2000", "solved_by": "x2911"},
{"url": "https://codeforces.com//problemset/problem/1209/D", "name": "Cow and Snacks", "tags": ["dfs and similar", "dsu", "graphs"], "problem_rating": "1700", "solved_by": "x9116"},
{"url": "https://codeforces.com//problemset/problem/1209/C", "name": "Paint the Digits", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "1500", "solved_by": "x7436"},
{"url": "https://codeforces.com//problemset/problem/1209/B", "name": "Koala and Lights", "tags": ["implementation", "math", "number theory"], "problem_rating": "1300", "solved_by": "x8128"},
{"url": "https://codeforces.com//problemset/problem/1209/A", "name": "Paint the Numbers", "tags": ["greedy", "implementation", "math"], "problem_rating": "800", "solved_by": "x12143"},
{"url": "https://codeforces.com//problemset/problem/1208/H", "name": "Red Blue Tree", "tags": ["data structures", "implementation", "trees"], "problem_rating": "3500", "solved_by": "x147"},
{"url": "https://codeforces.com//problemset/problem/1208/G", "name": "Polygons", "tags": ["greedy", "math", "number theory"], "problem_rating": "2800", "solved_by": "x739"},
{"url": "https://codeforces.com//problemset/problem/1208/F", "name": "Bits And Pieces", "tags": ["bitmasks", "dfs and similar", "dp", "greedy"], "problem_rating": "2600", "solved_by": "x2245"},
{"url": "https://codeforces.com//problemset/problem/1208/E", "name": "Let Them Slide", "tags": ["data structures", "implementation"], "problem_rating": "2200", "solved_by": "x2012"},
{"url": "https://codeforces.com//problemset/problem/1208/D", "name": "Restore Permutation", "tags": ["binary search", "data structures", "greedy", "implementation"], "problem_rating": "1900", "solved_by": "x4832"},
{"url": "https://codeforces.com//problemset/problem/1208/C", "name": "Magic Grid", "tags": ["constructive algorithms"], "problem_rating": "1800", "solved_by": "x5971"},
{"url": "https://codeforces.com//problemset/problem/1208/B", "name": "Uniqueness", "tags": ["binary search", "brute force", "implementation", "two pointers"], "problem_rating": "1500", "solved_by": "x10295"},
{"url": "https://codeforces.com//problemset/problem/1208/A", "name": "XORinacci", "tags": ["math"], "problem_rating": "900", "solved_by": "x16588"},
{"url": "https://codeforces.com//problemset/problem/1207/G", "name": "Indie Album", "tags": ["data structures", "dfs and similar", "hashing", "string suffix structures", "strings", "trees"], "problem_rating": "2700", "solved_by": "x990"},
{"url": "https://codeforces.com//problemset/problem/1207/F", "name": "Remainder Problem", "tags": ["brute force", "data structures", "implementation"], "problem_rating": "2100", "solved_by": "x5042"},
{"url": "https://codeforces.com//problemset/problem/1207/E", "name": "XOR Guessing", "tags": ["bitmasks", "interactive", "math"], "problem_rating": "1900", "solved_by": "x5838"},
{"url": "https://codeforces.com//problemset/problem/1207/D", "name": "Number Of Permutations", "tags": ["combinatorics"], "problem_rating": "1800", "solved_by": "x6021"},
{"url": "https://codeforces.com//problemset/problem/1207/C", "name": "Gas Pipeline", "tags": ["dp", "greedy"], "problem_rating": "1500", "solved_by": "x9766"},
{"url": "https://codeforces.com//problemset/problem/1207/B", "name": "Square Filling", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "1200", "solved_by": "x13145"},
{"url": "https://codeforces.com//problemset/problem/1207/A", "name": "There Are Two Types Of Burgers", "tags": ["brute force", "greedy", "implementation", "math"], "problem_rating": "800", "solved_by": "x21596"},
{"url": "https://codeforces.com//problemset/problem/1206/B", "name": "Make Product Equal One", "tags": ["dp", "implementation"], "problem_rating": "900", "solved_by": "x26594"},
{"url": "https://codeforces.com//problemset/problem/1206/A", "name": "Choose Two Numbers", "tags": ["math", "sortings"], "problem_rating": "800", "solved_by": "x23887"},
{"url": "https://codeforces.com//problemset/problem/1205/F", "name": "Beauty of a Permutation", "tags": ["constructive algorithms", "math"], "problem_rating": "3400", "solved_by": "x122"},
{"url": "https://codeforces.com//problemset/problem/1205/E", "name": "Expected Value Again", "tags": ["combinatorics", "strings"], "problem_rating": "3100", "solved_by": "x273"},
{"url": "https://codeforces.com//problemset/problem/1205/D", "name": "Almost All", "tags": ["constructive algorithms", "trees"], "problem_rating": "2700", "solved_by": "x633"},
{"url": "https://codeforces.com//problemset/problem/1205/C", "name": "Palindromic Paths", "tags": ["implementation", "interactive"], "problem_rating": "2400", "solved_by": "x1146"},
{"url": "https://codeforces.com//problemset/problem/1205/B", "name": "Shortest Cycle", "tags": ["bitmasks", "brute force", "graphs", "shortest paths"], "problem_rating": "1900", "solved_by": "x6554"},
{"url": "https://codeforces.com//problemset/problem/1205/A", "name": "Almost Equal", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1200", "solved_by": "x14023"},
{"url": "https://codeforces.com//problemset/problem/1204/E", "name": "Natasha, Sasha and the Prefix Sums", "tags": ["combinatorics", "dp", "math", "number theory"], "problem_rating": "2300", "solved_by": "x1635"},
{"url": "https://codeforces.com//problemset/problem/1204/D2", "name": "Kirk and a Binary String (hard version)", "tags": ["data structures", "greedy", "math", "strings"], "problem_rating": "2100", "solved_by": "x3211"},
{"url": "https://codeforces.com//problemset/problem/1204/D1", "name": "Kirk and a Binary String (easy version)", "tags": ["brute force", "greedy", "strings"], "problem_rating": "2000", "solved_by": "x3044"},
{"url": "https://codeforces.com//problemset/problem/1204/C", "name": "Anna, Svyatoslav and Maps", "tags": ["dp", "graphs", "greedy", "shortest paths"], "problem_rating": "1700", "solved_by": "x6640"},
{"url": "https://codeforces.com//problemset/problem/1204/B", "name": "Mislove Has Lost an Array", "tags": ["greedy", "math"], "problem_rating": "900", "solved_by": "x17403"},
{"url": "https://codeforces.com//problemset/problem/1204/A", "name": "BowWow and the Timetable", "tags": ["math"], "problem_rating": "1000", "solved_by": "x20461"},
{"url": "https://codeforces.com//problemset/problem/1203/F2", "name": "Complete the Projects (hard version)", "tags": ["dp", "greedy"], "problem_rating": "2300", "solved_by": "x2808"},
{"url": "https://codeforces.com//problemset/problem/1203/F1", "name": "Complete the Projects (easy version)", "tags": ["greedy"], "problem_rating": "2100", "solved_by": "x3469"},
{"url": "https://codeforces.com//problemset/problem/1203/E", "name": "Boxers", "tags": ["greedy", "sortings"], "problem_rating": "1500", "solved_by": "x13698"},
{"url": "https://codeforces.com//problemset/problem/1203/D2", "name": "Remove the Substring (hard version)", "tags": ["binary search", "greedy", "implementation", "two pointers"], "problem_rating": "1700", "solved_by": "x7254"},
{"url": "https://codeforces.com//problemset/problem/1203/D1", "name": "Remove the Substring (easy version)", "tags": ["greedy", "implementation"], "problem_rating": "1600", "solved_by": "x8663"},
{"url": "https://codeforces.com//problemset/problem/1203/C", "name": "Common Divisors", "tags": ["implementation", "math"], "problem_rating": "1300", "solved_by": "x20186"},
{"url": "https://codeforces.com//problemset/problem/1203/B", "name": "Equal Rectangles", "tags": ["greedy", "math"], "problem_rating": "1200", "solved_by": "x15796"},
{"url": "https://codeforces.com//problemset/problem/1203/A", "name": "Circle of Students", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x16624"},
{"url": "https://codeforces.com//problemset/problem/1202/F", "name": "You Are Given Some Letters...", "tags": ["binary search", "implementation", "math"], "problem_rating": "2700", "solved_by": "x387"},
{"url": "https://codeforces.com//problemset/problem/1202/E", "name": "You Are Given Some Strings...", "tags": ["brute force", "string suffix structures", "strings"], "problem_rating": "2400", "solved_by": "x2014"},
{"url": "https://codeforces.com//problemset/problem/1202/D", "name": "Print a 1337-string...", "tags": ["combinatorics", "constructive algorithms", "math", "strings"], "problem_rating": "1900", "solved_by": "x5052"},
{"url": "https://codeforces.com//problemset/problem/1202/C", "name": "You Are Given a WASD-string...", "tags": ["brute force", "data structures", "dp", "greedy", "implementation", "math", "strings"], "problem_rating": "2100", "solved_by": "x2506"},
{"url": "https://codeforces.com//problemset/problem/1202/B", "name": "You Are Given a Decimal String...", "tags": ["brute force", "dp", "shortest paths"], "problem_rating": "1700", "solved_by": "x4538"},
{"url": "https://codeforces.com//problemset/problem/1202/A", "name": "You Are Given Two Binary Strings...", "tags": ["bitmasks", "greedy"], "problem_rating": "1100", "solved_by": "x9139"},
{"url": "https://codeforces.com//problemset/problem/1201/E2", "name": "Knightmare (hard)", "tags": ["graphs", "interactive", "shortest paths"], "problem_rating": "3000", "solved_by": "x143"},
{"url": "https://codeforces.com//problemset/problem/1201/E1", "name": "Knightmare (easy)", "tags": ["graphs", "interactive", "shortest paths"], "problem_rating": "2900", "solved_by": "x127"},
{"url": "https://codeforces.com//problemset/problem/1201/D", "name": "Treasure Hunting", "tags": ["binary search", "dp", "greedy", "implementation"], "problem_rating": "2100", "solved_by": "x2330"},
{"url": "https://codeforces.com//problemset/problem/1201/C", "name": "Maximum Median", "tags": ["binary search", "greedy", "math", "sortings"], "problem_rating": "1400", "solved_by": "x22543"},
{"url": "https://codeforces.com//problemset/problem/1201/B", "name": "Zero Array", "tags": ["greedy", "math"], "problem_rating": "1500", "solved_by": "x18316"},
{"url": "https://codeforces.com//problemset/problem/1201/A", "name": "Important Exam", "tags": ["implementation", "strings"], "problem_rating": "900", "solved_by": "x15463"},
{"url": "https://codeforces.com//problemset/problem/1200/F", "name": "Graph Traveler", "tags": ["brute force", "data structures", "dfs and similar", "dp", "graphs", "implementation", "math", "number theory"], "problem_rating": "2300", "solved_by": "x1060"},
{"url": "https://codeforces.com//problemset/problem/1200/E", "name": "Compress Words", "tags": ["brute force", "hashing", "implementation", "string suffix structures", "strings"], "problem_rating": "2000", "solved_by": "x7348"},
{"url": "https://codeforces.com//problemset/problem/1200/D", "name": "White Lines", "tags": ["brute force", "data structures", "dp", "implementation", "two pointers"], "problem_rating": "1900", "solved_by": "x4097"},
{"url": "https://codeforces.com//problemset/problem/1200/C", "name": "Round Corridor", "tags": ["math", "number theory"], "problem_rating": "1400", "solved_by": "x9778"},
{"url": "https://codeforces.com//problemset/problem/1200/B", "name": "Block Adventure", "tags": ["dp", "greedy"], "problem_rating": "1200", "solved_by": "x13876"},
{"url": "https://codeforces.com//problemset/problem/1200/A", "name": "Hotelier", "tags": ["brute force", "data structures", "implementation"], "problem_rating": "800", "solved_by": "x20198"},
{"url": "https://codeforces.com//problemset/problem/1199/B", "name": "Water Lily", "tags": ["geometry", "math"], "problem_rating": "1000", "solved_by": "x20129"},
{"url": "https://codeforces.com//problemset/problem/1199/A", "name": "City Day", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x14502"},
{"url": "https://codeforces.com//problemset/problem/1198/F", "name": "GCD Groups 2", "tags": ["greedy", "number theory", "probabilities"], "problem_rating": "2900", "solved_by": "x846"},
{"url": "https://codeforces.com//problemset/problem/1198/E", "name": "Rectangle Painting 2", "tags": ["flows", "graph matchings", "graphs"], "problem_rating": "2500", "solved_by": "x1167"},
{"url": "https://codeforces.com//problemset/problem/1198/D", "name": "Rectangle Painting 1", "tags": ["dp"], "problem_rating": "2300", "solved_by": "x3152"},
{"url": "https://codeforces.com//problemset/problem/1198/C", "name": "Matching vs  Independent Set", "tags": ["constructive algorithms", "graphs", "greedy", "sortings"], "problem_rating": "2000", "solved_by": "x3499"},
{"url": "https://codeforces.com//problemset/problem/1198/B", "name": "Welfare State", "tags": ["binary search", "brute force", "data structures", "sortings"], "problem_rating": "1600", "solved_by": "x9389"},
{"url": "https://codeforces.com//problemset/problem/1198/A", "name": "MP3", "tags": ["sortings", "two pointers"], "problem_rating": "1600", "solved_by": "x8972"},
{"url": "https://codeforces.com//problemset/problem/1197/F", "name": "Coloring Game", "tags": ["dp", "games", "matrices"], "problem_rating": "2700", "solved_by": "x245"},
{"url": "https://codeforces.com//problemset/problem/1197/E", "name": "Culture Code", "tags": ["binary search", "combinatorics", "data structures", "dp", "shortest paths", "sortings"], "problem_rating": "2300", "solved_by": "x1619"},
{"url": "https://codeforces.com//problemset/problem/1197/D", "name": "Yet Another Subarray Problem", "tags": ["dp", "greedy", "math"], "problem_rating": "1900", "solved_by": "x5304"},
{"url": "https://codeforces.com//problemset/problem/1197/C", "name": "Array Splitting", "tags": ["greedy", "sortings"], "problem_rating": "1400", "solved_by": "x13779"},
{"url": "https://codeforces.com//problemset/problem/1197/B", "name": "Pillars", "tags": ["greedy", "implementation"], "problem_rating": "1000", "solved_by": "x13726"},
{"url": "https://codeforces.com//problemset/problem/1197/A", "name": "DIY Wooden Ladder", "tags": ["greedy", "math", "sortings"], "problem_rating": "900", "solved_by": "x13456"},
{"url": "https://codeforces.com//problemset/problem/1196/F", "name": "K-th Path", "tags": ["brute force", "constructive algorithms", "shortest paths", "sortings"], "problem_rating": "2200", "solved_by": "x2494"},
{"url": "https://codeforces.com//problemset/problem/1196/E", "name": "Connected Component on a Chessboard", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1800", "solved_by": "x3687"},
{"url": "https://codeforces.com//problemset/problem/1196/D2", "name": "RGB Substring (hard version)", "tags": ["data structures", "dp", "implementation", "two pointers"], "problem_rating": "1600", "solved_by": "x9632"},
{"url": "https://codeforces.com//problemset/problem/1196/D1", "name": "RGB Substring (easy version)", "tags": ["implementation"], "problem_rating": "1500", "solved_by": "x10446"},
{"url": "https://codeforces.com//problemset/problem/1196/C", "name": "Robot Breakout", "tags": ["implementation"], "problem_rating": "1500", "solved_by": "x9280"},
{"url": "https://codeforces.com//problemset/problem/1196/B", "name": "Odd Sum Segments", "tags": ["constructive algorithms", "math"], "problem_rating": "1200", "solved_by": "x16441"},
{"url": "https://codeforces.com//problemset/problem/1196/A", "name": "Three Piles of Candies", "tags": ["brute force", "constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x27515"},
{"url": "https://codeforces.com//problemset/problem/1195/F", "name": "Geometers Anonymous Club", "tags": ["data structures", "geometry", "math", "sortings"], "problem_rating": "2500", "solved_by": "x877"},
{"url": "https://codeforces.com//problemset/problem/1195/E", "name": "OpenStreetMap", "tags": ["data structures", "two pointers"], "problem_rating": "2100", "solved_by": "x2975"},
{"url": "https://codeforces.com//problemset/problem/1195/D2", "name": "Submarine in the Rybinsk Sea (hard edition)", "tags": ["combinatorics", "math", "number theory"], "problem_rating": "1800", "solved_by": "x4617"},
{"url": "https://codeforces.com//problemset/problem/1195/D1", "name": "Submarine in the Rybinsk Sea (easy edition)", "tags": ["combinatorics", "math", "number theory"], "problem_rating": "1500", "solved_by": "x7836"},
{"url": "https://codeforces.com//problemset/problem/1195/C", "name": "Basketball Exercise", "tags": ["dp"], "problem_rating": "1400", "solved_by": "x24976"},
{"url": "https://codeforces.com//problemset/problem/1195/B", "name": "Sport Mafia", "tags": ["binary search", "brute force", "math"], "problem_rating": "1000", "solved_by": "x19438"},
{"url": "https://codeforces.com//problemset/problem/1195/A", "name": "Drinks Choosing", "tags": ["greedy", "math"], "problem_rating": "1000", "solved_by": "x12741"},
{"url": "https://codeforces.com//problemset/problem/1194/G", "name": "Another Meme Problem", "tags": ["dp"], "problem_rating": "2700", "solved_by": "x239"},
{"url": "https://codeforces.com//problemset/problem/1194/F", "name": "Crossword Expert", "tags": ["combinatorics", "dp", "number theory", "probabilities", "two pointers"], "problem_rating": "2400", "solved_by": "x981"},
{"url": "https://codeforces.com//problemset/problem/1194/E", "name": "Count The Rectangles", "tags": ["bitmasks", "brute force", "data structures", "geometry", "sortings"], "problem_rating": "2200", "solved_by": "x1910"},
{"url": "https://codeforces.com//problemset/problem/1194/D", "name": "1-2-K Game", "tags": ["games", "math"], "problem_rating": "1700", "solved_by": "x6425"},
{"url": "https://codeforces.com//problemset/problem/1194/C", "name": "From S To T", "tags": ["implementation", "strings"], "problem_rating": "1300", "solved_by": "x13047"},
{"url": "https://codeforces.com//problemset/problem/1194/B", "name": "Yet Another Crosses Problem", "tags": ["implementation"], "problem_rating": "1300", "solved_by": "x10260"},
{"url": "https://codeforces.com//problemset/problem/1194/A", "name": "Remove a Progression", "tags": ["math"], "problem_rating": "800", "solved_by": "x16130"},
{"url": "https://codeforces.com//problemset/problem/1193/C", "name": "Scissors and Tape", "tags": ["*special problem", "constructive algorithms", "geometry"], "problem_rating": [null], "solved_by": "x38"},
{"url": "https://codeforces.com//problemset/problem/1193/B", "name": "Magic Tree", "tags": ["*special problem", "data structures", "dp", "trees"], "problem_rating": [null], "solved_by": "x427"},
{"url": "https://codeforces.com//problemset/problem/1193/A", "name": "Amusement Park", "tags": ["*special problem", "dp", "math"], "problem_rating": [null], "solved_by": "x258"},
{"url": "https://codeforces.com//problemset/problem/1192/C", "name": "Cubeword", "tags": ["*special problem", "brute force", "dp", "meet-in-the-middle"], "problem_rating": [null], "solved_by": "x326"},
{"url": "https://codeforces.com//problemset/problem/1192/B", "name": "Dynamic Diameter", "tags": ["*special problem", "data structures", "dfs and similar", "divide and conquer", "trees"], "problem_rating": [null], "solved_by": "x1108"},
{"url": "https://codeforces.com//problemset/problem/1192/A", "name": "Building Skyscrapers", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x62"},
{"url": "https://codeforces.com//problemset/problem/1191/B", "name": "Tokitsukaze and Mahjong", "tags": ["brute force", "implementation"], "problem_rating": "1200", "solved_by": "x9577"},
{"url": "https://codeforces.com//problemset/problem/1191/A", "name": "Tokitsukaze and Enhancement", "tags": ["brute force"], "problem_rating": "800", "solved_by": "x18014"},
{"url": "https://codeforces.com//problemset/problem/1190/F", "name": "Tokitsukaze and Powers", "tags": ["number theory", "probabilities"], "problem_rating": "3400", "solved_by": "x92"},
{"url": "https://codeforces.com//problemset/problem/1190/E", "name": "Tokitsukaze and Explosion", "tags": ["binary search", "greedy"], "problem_rating": "3100", "solved_by": "x225"},
{"url": "https://codeforces.com//problemset/problem/1190/D", "name": "Tokitsukaze and Strange Rectangle", "tags": ["data structures", "divide and conquer", "sortings", "two pointers"], "problem_rating": "2000", "solved_by": "x2237"},
{"url": "https://codeforces.com//problemset/problem/1190/C", "name": "Tokitsukaze and Duel", "tags": ["brute force", "games", "greedy"], "problem_rating": "2300", "solved_by": "x1951"},
{"url": "https://codeforces.com//problemset/problem/1190/B", "name": "Tokitsukaze, CSL and Stone Game", "tags": ["games"], "problem_rating": "1800", "solved_by": "x6374"},
{"url": "https://codeforces.com//problemset/problem/1190/A", "name": "Tokitsukaze and Discard Items", "tags": ["implementation", "two pointers"], "problem_rating": "1400", "solved_by": "x9306"},
{"url": "https://codeforces.com//problemset/problem/1189/C", "name": "Candies!", "tags": ["data structures", "dp", "implementation", "math"], "problem_rating": "1400", "solved_by": "x10492"},
{"url": "https://codeforces.com//problemset/problem/1189/B", "name": "Number Circle", "tags": ["greedy", "math", "sortings"], "problem_rating": "1100", "solved_by": "x14032"},
{"url": "https://codeforces.com//problemset/problem/1189/A", "name": "Keanu Reeves", "tags": ["strings"], "problem_rating": "800", "solved_by": "x15164"},
{"url": "https://codeforces.com//problemset/problem/1188/E", "name": "Problem from Red Panda", "tags": ["combinatorics"], "problem_rating": "3300", "solved_by": "x227"},
{"url": "https://codeforces.com//problemset/problem/1188/D", "name": "Make Equal", "tags": ["dp"], "problem_rating": "3100", "solved_by": "x676"},
{"url": "https://codeforces.com//problemset/problem/1188/C", "name": "Array Beauty", "tags": ["dp"], "problem_rating": "2500", "solved_by": "x1734"},
{"url": "https://codeforces.com//problemset/problem/1188/B", "name": "Count Pairs", "tags": ["math", "matrices", "number theory", "two pointers"], "problem_rating": "2300", "solved_by": "x4409"},
{"url": "https://codeforces.com//problemset/problem/1188/A2", "name": "Add on a Tree: Revolution", "tags": ["constructive algorithms", "dfs and similar", "implementation", "trees"], "problem_rating": "2500", "solved_by": "x1219"},
{"url": "https://codeforces.com//problemset/problem/1188/A1", "name": "Add on a Tree", "tags": ["trees"], "problem_rating": "1600", "solved_by": "x8351"},
{"url": "https://codeforces.com//problemset/problem/1187/G", "name": "Gang Up", "tags": ["flows", "graphs"], "problem_rating": "2500", "solved_by": "x507"},
{"url": "https://codeforces.com//problemset/problem/1187/F", "name": "Expected Square Beauty", "tags": ["dp", "math", "probabilities"], "problem_rating": "2500", "solved_by": "x856"},
{"url": "https://codeforces.com//problemset/problem/1187/E", "name": "Tree Painting", "tags": ["dfs and similar", "dp", "trees"], "problem_rating": "2100", "solved_by": "x7930"},
{"url": "https://codeforces.com//problemset/problem/1187/D", "name": "Subarray Sorting", "tags": ["data structures", "sortings"], "problem_rating": "2400", "solved_by": "x2517"},
{"url": "https://codeforces.com//problemset/problem/1187/C", "name": "Vasya And Array", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "1800", "solved_by": "x6298"},
{"url": "https://codeforces.com//problemset/problem/1187/B", "name": "Letters Shop", "tags": ["binary search", "implementation", "strings"], "problem_rating": "1300", "solved_by": "x12121"},
{"url": "https://codeforces.com//problemset/problem/1187/A", "name": "Stickers and Toys", "tags": ["math"], "problem_rating": "900", "solved_by": "x14782"},
{"url": "https://codeforces.com//problemset/problem/1186/F", "name": "Vus the Cossack and a Graph", "tags": ["dfs and similar", "graphs", "greedy", "implementation"], "problem_rating": "2400", "solved_by": "x762"},
{"url": "https://codeforces.com//problemset/problem/1186/E", "name": "Vus the Cossack and a Field", "tags": ["divide and conquer", "implementation", "math"], "problem_rating": "2500", "solved_by": "x619"},
{"url": "https://codeforces.com//problemset/problem/1186/D", "name": "Vus the Cossack and Numbers", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1500", "solved_by": "x8888"},
{"url": "https://codeforces.com//problemset/problem/1186/C", "name": "Vus the Cossack and Strings", "tags": ["implementation", "math"], "problem_rating": "1800", "solved_by": "x6042"},
{"url": "https://codeforces.com//problemset/problem/1186/A", "name": "Vus the Cossack and a Contest", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x36899"},
{"url": "https://codeforces.com//problemset/problem/1185/G2", "name": "Playlist for Polycarp (hard version)", "tags": ["combinatorics", "dp"], "problem_rating": "2600", "solved_by": "x748"},
{"url": "https://codeforces.com//problemset/problem/1185/G1", "name": "Playlist for Polycarp (easy version)", "tags": ["bitmasks", "combinatorics", "dp"], "problem_rating": "2100", "solved_by": "x2824"},
{"url": "https://codeforces.com//problemset/problem/1185/F", "name": "Two Pizzas", "tags": ["bitmasks", "brute force"], "problem_rating": "2100", "solved_by": "x2020"},
{"url": "https://codeforces.com//problemset/problem/1185/E", "name": "Polycarp and Snakes", "tags": ["brute force", "implementation"], "problem_rating": "2000", "solved_by": "x2637"},
{"url": "https://codeforces.com//problemset/problem/1185/D", "name": "Extra Element", "tags": ["implementation", "math"], "problem_rating": "1700", "solved_by": "x6667"},
{"url": "https://codeforces.com//problemset/problem/1185/C2", "name": "Exam in BerSU (hard version)", "tags": ["brute force", "data structures", "greedy", "math"], "problem_rating": "1700", "solved_by": "x7406"},
{"url": "https://codeforces.com//problemset/problem/1185/C1", "name": "Exam in BerSU (easy version)", "tags": ["greedy", "sortings"], "problem_rating": "1200", "solved_by": "x11312"},
{"url": "https://codeforces.com//problemset/problem/1185/B", "name": "Email from Polycarp", "tags": ["implementation", "strings"], "problem_rating": "1200", "solved_by": "x13241"},
{"url": "https://codeforces.com//problemset/problem/1185/A", "name": "Ropewalkers", "tags": ["math"], "problem_rating": "800", "solved_by": "x14805"},
{"url": "https://codeforces.com//problemset/problem/1184/E3", "name": "Daleks' Invasion (hard)", "tags": ["data structures", "dsu", "graphs", "trees"], "problem_rating": "2400", "solved_by": "x500"},
{"url": "https://codeforces.com//problemset/problem/1184/E2", "name": "Daleks' Invasion (medium)", "tags": ["dfs and similar", "graphs", "shortest paths", "trees"], "problem_rating": "2100", "solved_by": "x918"},
{"url": "https://codeforces.com//problemset/problem/1184/E1", "name": "Daleks' Invasion (easy)", "tags": ["graphs", "trees"], "problem_rating": "1900", "solved_by": "x1586"},
{"url": "https://codeforces.com//problemset/problem/1184/D2", "name": "Parallel Universes (Hard)", "tags": ["math", "matrices"], "problem_rating": "3100", "solved_by": "x104"},
{"url": "https://codeforces.com//problemset/problem/1184/D1", "name": "Parallel Universes (Easy)", "tags": ["implementation"], "problem_rating": "1600", "solved_by": "x2497"},
{"url": "https://codeforces.com//problemset/problem/1184/C3", "name": "Heidi and the Turing Test (Hard)", "tags": [], "problem_rating": "3200", "solved_by": "x41"},
{"url": "https://codeforces.com//problemset/problem/1184/C2", "name": "Heidi and the Turing Test (Medium)", "tags": ["data structures"], "problem_rating": "2200", "solved_by": "x606"},
{"url": "https://codeforces.com//problemset/problem/1184/C1", "name": "Heidi and the Turing Test (Easy)", "tags": ["implementation"], "problem_rating": "1600", "solved_by": "x2283"},
{"url": "https://codeforces.com//problemset/problem/1184/B3", "name": "The Doctor Meets Vader (Hard)", "tags": ["flows", "shortest paths"], "problem_rating": "2700", "solved_by": "x171"},
{"url": "https://codeforces.com//problemset/problem/1184/B2", "name": "The Doctor Meets Vader (Medium)", "tags": ["flows", "graph matchings", "graphs", "shortest paths", "sortings"], "problem_rating": "2200", "solved_by": "x571"},
{"url": "https://codeforces.com//problemset/problem/1184/B1", "name": "The Doctor Meets Vader (Easy)", "tags": ["binary search", "sortings"], "problem_rating": "1400", "solved_by": "x5181"},
{"url": "https://codeforces.com//problemset/problem/1184/A3", "name": "Heidi Learns Hashing (Hard)", "tags": ["fft", "math", "number theory"], "problem_rating": "3100", "solved_by": "x139"},
{"url": "https://codeforces.com//problemset/problem/1184/A2", "name": "Heidi Learns Hashing (Medium)", "tags": ["brute force", "number theory"], "problem_rating": "2100", "solved_by": "x947"},
{"url": "https://codeforces.com//problemset/problem/1184/A1", "name": "Heidi Learns Hashing (Easy)", "tags": ["brute force", "math", "number theory"], "problem_rating": "1200", "solved_by": "x5900"},
{"url": "https://codeforces.com//problemset/problem/1183/H", "name": "Subsequences (hard version)", "tags": ["dp", "strings"], "problem_rating": "1900", "solved_by": "x3103"},
{"url": "https://codeforces.com//problemset/problem/1183/G", "name": "Candy Box (hard version)", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "2000", "solved_by": "x2328"},
{"url": "https://codeforces.com//problemset/problem/1183/F", "name": "Topforces Strikes Back", "tags": ["brute force", "math", "sortings"], "problem_rating": "2100", "solved_by": "x1988"},
{"url": "https://codeforces.com//problemset/problem/1183/E", "name": "Subsequences (easy version)", "tags": ["dp", "graphs", "implementation", "shortest paths"], "problem_rating": "2000", "solved_by": "x4738"},
{"url": "https://codeforces.com//problemset/problem/1183/D", "name": "Candy Box (easy version)", "tags": ["greedy", "sortings"], "problem_rating": "1400", "solved_by": "x13803"},
{"url": "https://codeforces.com//problemset/problem/1183/C", "name": "Computer Game", "tags": ["binary search", "math"], "problem_rating": "1400", "solved_by": "x13836"},
{"url": "https://codeforces.com//problemset/problem/1183/B", "name": "Equalize Prices", "tags": ["math"], "problem_rating": "900", "solved_by": "x18334"},
{"url": "https://codeforces.com//problemset/problem/1183/A", "name": "Nearest Interesting Number", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x24505"},
{"url": "https://codeforces.com//problemset/problem/1182/F", "name": "Maximum Sine", "tags": ["binary search", "data structures", "number theory"], "problem_rating": "2700", "solved_by": "x334"},
{"url": "https://codeforces.com//problemset/problem/1182/E", "name": "Product Oriented Recurrence", "tags": ["dp", "math", "matrices", "number theory"], "problem_rating": "2300", "solved_by": "x2631"},
{"url": "https://codeforces.com//problemset/problem/1182/D", "name": "Complete Mirror", "tags": ["constructive algorithms", "dfs and similar", "dp", "hashing", "implementation", "trees"], "problem_rating": "2400", "solved_by": "x820"},
{"url": "https://codeforces.com//problemset/problem/1182/C", "name": "Beautiful Lyrics", "tags": ["data structures", "greedy", "strings"], "problem_rating": "1700", "solved_by": "x4401"},
{"url": "https://codeforces.com//problemset/problem/1182/B", "name": "Plus from Picture", "tags": ["dfs and similar", "implementation", "strings"], "problem_rating": "1300", "solved_by": "x11067"},
{"url": "https://codeforces.com//problemset/problem/1182/A", "name": "Filling Shapes", "tags": ["dp", "math"], "problem_rating": "1000", "solved_by": "x30266"},
{"url": "https://codeforces.com//problemset/problem/1181/E2", "name": "A Story of One Country (Hard)", "tags": ["brute force", "greedy", "sortings"], "problem_rating": "3000", "solved_by": "x277"},
{"url": "https://codeforces.com//problemset/problem/1181/E1", "name": "A Story of One Country (Easy)", "tags": ["brute force", "divide and conquer", "sortings"], "problem_rating": "2500", "solved_by": "x466"},
{"url": "https://codeforces.com//problemset/problem/1181/D", "name": "Irrigation", "tags": ["binary search", "data structures", "implementation", "sortings", "trees", "two pointers"], "problem_rating": "2200", "solved_by": "x2322"},
{"url": "https://codeforces.com//problemset/problem/1181/C", "name": "Flag", "tags": ["brute force", "combinatorics", "dp", "implementation"], "problem_rating": "1900", "solved_by": "x3102"},
{"url": "https://codeforces.com//problemset/problem/1181/B", "name": "Split a Number", "tags": ["greedy", "implementation", "strings"], "problem_rating": "1500", "solved_by": "x6240"},
{"url": "https://codeforces.com//problemset/problem/1181/A", "name": "Chunga-Changa", "tags": ["greedy", "math"], "problem_rating": "1000", "solved_by": "x13378"},
{"url": "https://codeforces.com//problemset/problem/1180/B", "name": "Nick and Array", "tags": ["greedy", "implementation"], "problem_rating": "1500", "solved_by": "x9484"},
{"url": "https://codeforces.com//problemset/problem/1180/A", "name": "Alex and a Rhombus", "tags": ["dp", "implementation", "math"], "problem_rating": "800", "solved_by": "x24804"},
{"url": "https://codeforces.com//problemset/problem/1179/E", "name": "Alesya and Discrete Math", "tags": ["divide and conquer", "interactive"], "problem_rating": "3200", "solved_by": "x173"},
{"url": "https://codeforces.com//problemset/problem/1179/D", "name": "Fedor Runs for President", "tags": ["data structures", "dp", "trees"], "problem_rating": "2700", "solved_by": "x799"},
{"url": "https://codeforces.com//problemset/problem/1179/C", "name": "Serge and Dining Room", "tags": ["binary search", "data structures", "graph matchings", "greedy", "implementation", "math", "trees"], "problem_rating": "2200", "solved_by": "x1991"},
{"url": "https://codeforces.com//problemset/problem/1179/B", "name": "Tolik and His Uncle", "tags": ["constructive algorithms"], "problem_rating": "1800", "solved_by": "x4325"},
{"url": "https://codeforces.com//problemset/problem/1179/A", "name": "Valeriy and Deque", "tags": ["data structures", "implementation"], "problem_rating": "1500", "solved_by": "x10322"},
{"url": "https://codeforces.com//problemset/problem/1178/H", "name": "Stock Exchange", "tags": ["binary search", "flows", "graphs"], "problem_rating": "3500", "solved_by": "x225"},
{"url": "https://codeforces.com//problemset/problem/1178/G", "name": "The Awesomest Vertex", "tags": ["data structures", "dfs and similar"], "problem_rating": "3000", "solved_by": "x432"},
{"url": "https://codeforces.com//problemset/problem/1178/F2", "name": "Long Colorful Strip", "tags": ["dp"], "problem_rating": "2600", "solved_by": "x871"},
{"url": "https://codeforces.com//problemset/problem/1178/F1", "name": "Short Colorful Strip", "tags": ["combinatorics", "dfs and similar", "dp"], "problem_rating": "2200", "solved_by": "x2077"},
{"url": "https://codeforces.com//problemset/problem/1178/E", "name": "Archaeology", "tags": ["brute force", "constructive algorithms", "greedy", "strings"], "problem_rating": "1900", "solved_by": "x4290"},
{"url": "https://codeforces.com//problemset/problem/1178/D", "name": "Prime Graph", "tags": ["constructive algorithms", "greedy", "math", "number theory"], "problem_rating": "1500", "solved_by": "x7345"},
{"url": "https://codeforces.com//problemset/problem/1178/C", "name": "Tiles", "tags": ["combinatorics", "greedy", "math"], "problem_rating": "1300", "solved_by": "x11742"},
{"url": "https://codeforces.com//problemset/problem/1178/B", "name": "WOW Factor", "tags": ["dp", "strings"], "problem_rating": "1300", "solved_by": "x14746"},
{"url": "https://codeforces.com//problemset/problem/1178/A", "name": "Prime Minister", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x10360"},
{"url": "https://codeforces.com//problemset/problem/1177/B", "name": "Digits Sequence (Hard Edition)", "tags": ["binary search", "divide and conquer", "implementation"], "problem_rating": "1800", "solved_by": "x2447"},
{"url": "https://codeforces.com//problemset/problem/1177/A", "name": "Digits Sequence (Easy Edition)", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x5552"},
{"url": "https://codeforces.com//problemset/problem/1176/F", "name": "Destroy it!", "tags": ["dp", "implementation", "sortings"], "problem_rating": "2100", "solved_by": "x1973"},
{"url": "https://codeforces.com//problemset/problem/1176/E", "name": "Cover it!", "tags": ["dfs and similar", "dsu", "graphs", "shortest paths", "trees"], "problem_rating": "1700", "solved_by": "x10790"},
{"url": "https://codeforces.com//problemset/problem/1176/D", "name": "Recover it!", "tags": ["dfs and similar", "graphs", "greedy", "number theory", "sortings"], "problem_rating": "1800", "solved_by": "x5214"},
{"url": "https://codeforces.com//problemset/problem/1176/C", "name": "Lose it!", "tags": ["dp", "greedy", "implementation"], "problem_rating": "1300", "solved_by": "x14008"},
{"url": "https://codeforces.com//problemset/problem/1176/B", "name": "Merge it!", "tags": ["math"], "problem_rating": "1100", "solved_by": "x16980"},
{"url": "https://codeforces.com//problemset/problem/1176/A", "name": "Divide it!", "tags": ["brute force", "greedy", "implementation"], "problem_rating": "800", "solved_by": "x22339"},
{"url": "https://codeforces.com//problemset/problem/1175/G", "name": "Yet Another Partiton Problem", "tags": ["data structures", "divide and conquer", "dp", "geometry", "two pointers"], "problem_rating": "3000", "solved_by": "x448"},
{"url": "https://codeforces.com//problemset/problem/1175/F", "name": "The Number of Subpermutations", "tags": ["brute force", "data structures", "divide and conquer", "hashing", "math"], "problem_rating": "2500", "solved_by": "x1673"},
{"url": "https://codeforces.com//problemset/problem/1175/E", "name": "Minimal Segment Cover", "tags": ["data structures", "dfs and similar", "divide and conquer", "dp", "greedy", "implementation", "trees"], "problem_rating": "2200", "solved_by": "x3472"},
{"url": "https://codeforces.com//problemset/problem/1175/D", "name": "Array Splitting", "tags": ["greedy", "sortings"], "problem_rating": "1900", "solved_by": "x6094"},
{"url": "https://codeforces.com//problemset/problem/1175/C", "name": "Electrification", "tags": ["binary search", "brute force", "greedy"], "problem_rating": "1600", "solved_by": "x6739"},
{"url": "https://codeforces.com//problemset/problem/1175/B", "name": "Catch Overflow!", "tags": ["data structures", "expression parsing", "implementation"], "problem_rating": "1600", "solved_by": "x10469"},
{"url": "https://codeforces.com//problemset/problem/1175/A", "name": "From Hero to Zero", "tags": ["implementation", "math"], "problem_rating": "900", "solved_by": "x18037"},
{"url": "https://codeforces.com//problemset/problem/1174/F", "name": "Ehab and the Big Finale", "tags": ["constructive algorithms", "divide and conquer", "graphs", "implementation", "interactive", "trees"], "problem_rating": "2400", "solved_by": "x1549"},
{"url": "https://codeforces.com//problemset/problem/1174/E", "name": "Ehab and the Expected GCD Problem", "tags": ["combinatorics", "dp", "math", "number theory"], "problem_rating": "2500", "solved_by": "x1382"},
{"url": "https://codeforces.com//problemset/problem/1174/D", "name": "Ehab and the Expected XOR Problem", "tags": ["bitmasks", "constructive algorithms"], "problem_rating": "1900", "solved_by": "x4651"},
{"url": "https://codeforces.com//problemset/problem/1174/C", "name": "Ehab and a Special Coloring Problem", "tags": ["constructive algorithms", "number theory"], "problem_rating": "1300", "solved_by": "x11903"},
{"url": "https://codeforces.com//problemset/problem/1174/B", "name": "Ehab Is an Odd Person", "tags": ["sortings"], "problem_rating": "1200", "solved_by": "x15278"},
{"url": "https://codeforces.com//problemset/problem/1174/A", "name": "Ehab Fails to Be Thanos", "tags": ["constructive algorithms", "greedy", "sortings"], "problem_rating": "1000", "solved_by": "x17424"},
{"url": "https://codeforces.com//problemset/problem/1173/B", "name": "Nauuo and Chess", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1100", "solved_by": "x9026"},
{"url": "https://codeforces.com//problemset/problem/1173/A", "name": "Nauuo and Votes", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x16143"},
{"url": "https://codeforces.com//problemset/problem/1172/F", "name": "Nauuo and Bug", "tags": ["data structures"], "problem_rating": "3300", "solved_by": "x422"},
{"url": "https://codeforces.com//problemset/problem/1172/E", "name": "Nauuo and ODT", "tags": ["data structures"], "problem_rating": "3300", "solved_by": "x302"},
{"url": "https://codeforces.com//problemset/problem/1172/D", "name": "Nauuo and Portals", "tags": ["constructive algorithms"], "problem_rating": "2900", "solved_by": "x488"},
{"url": "https://codeforces.com//problemset/problem/1172/C2", "name": "Nauuo and Pictures (hard version)", "tags": ["dp", "probabilities"], "problem_rating": "2600", "solved_by": "x829"},
{"url": "https://codeforces.com//problemset/problem/1172/C1", "name": "Nauuo and Pictures (easy version)", "tags": ["dp", "probabilities"], "problem_rating": "2300", "solved_by": "x1055"},
{"url": "https://codeforces.com//problemset/problem/1172/B", "name": "Nauuo and Circle", "tags": ["combinatorics", "dfs and similar", "dp", "trees"], "problem_rating": "1900", "solved_by": "x3974"},
{"url": "https://codeforces.com//problemset/problem/1172/A", "name": "Nauuo and Cards", "tags": ["greedy", "implementation"], "problem_rating": "1800", "solved_by": "x4920"},
{"url": "https://codeforces.com//problemset/problem/1170/I", "name": "Good Subsets", "tags": ["*special problem", "dp"], "problem_rating": [null], "solved_by": "x39"},
{"url": "https://codeforces.com//problemset/problem/1170/H", "name": "Longest Saw", "tags": ["*special problem", "constructive algorithms"], "problem_rating": [null], "solved_by": "x47"},
{"url": "https://codeforces.com//problemset/problem/1170/G", "name": "Graph Decomposition", "tags": ["*special problem", "graphs"], "problem_rating": [null], "solved_by": "x72"},
{"url": "https://codeforces.com//problemset/problem/1170/F", "name": "Wheels", "tags": ["*special problem", "binary search", "greedy"], "problem_rating": [null], "solved_by": "x119"},
{"url": "https://codeforces.com//problemset/problem/1170/E", "name": "Sliding Doors", "tags": ["*special problem", "binary search"], "problem_rating": [null], "solved_by": "x258"},
{"url": "https://codeforces.com//problemset/problem/1170/D", "name": "Decoding of Integer Sequences", "tags": ["*special problem", "data structures", "implementation"], "problem_rating": [null], "solved_by": "x424"},
{"url": "https://codeforces.com//problemset/problem/1170/C", "name": "Minus and Minus Give Plus", "tags": ["*special problem", "implementation", "strings"], "problem_rating": [null], "solved_by": "x788"},
{"url": "https://codeforces.com//problemset/problem/1170/B", "name": "Bad Days", "tags": ["*special problem", "implementation"], "problem_rating": [null], "solved_by": "x1077"},
{"url": "https://codeforces.com//problemset/problem/1170/A", "name": "Three Integers Again", "tags": ["*special problem", "math"], "problem_rating": [null], "solved_by": "x1454"},
{"url": "https://codeforces.com//problemset/problem/1169/B", "name": "Pairs", "tags": ["graphs", "implementation"], "problem_rating": "1500", "solved_by": "x9618"},
{"url": "https://codeforces.com//problemset/problem/1169/A", "name": "Circle Metro", "tags": ["implementation", "math"], "problem_rating": "900", "solved_by": "x11788"},
{"url": "https://codeforces.com//problemset/problem/1168/E", "name": "Xor Permutations", "tags": ["constructive algorithms", "math"], "problem_rating": "3100", "solved_by": "x363"},
{"url": "https://codeforces.com//problemset/problem/1168/D", "name": "Anagram Paths", "tags": ["dp", "implementation", "trees"], "problem_rating": "3000", "solved_by": "x342"},
{"url": "https://codeforces.com//problemset/problem/1168/C", "name": "And Reachability", "tags": ["bitmasks", "dp"], "problem_rating": "2200", "solved_by": "x2356"},
{"url": "https://codeforces.com//problemset/problem/1168/B", "name": "Good Triple", "tags": ["brute force", "two pointers"], "problem_rating": "1900", "solved_by": "x3536"},
{"url": "https://codeforces.com//problemset/problem/1168/A", "name": "Increasing by Modulo", "tags": ["binary search", "greedy"], "problem_rating": "1700", "solved_by": "x6664"},
{"url": "https://codeforces.com//problemset/problem/1167/G", "name": "Low Budget Inception", "tags": ["brute force", "geometry"], "problem_rating": "3100", "solved_by": "x149"},
{"url": "https://codeforces.com//problemset/problem/1167/F", "name": "Scalar Queries", "tags": ["combinatorics", "data structures", "math", "sortings"], "problem_rating": "2300", "solved_by": "x1602"},
{"url": "https://codeforces.com//problemset/problem/1167/E", "name": "Range Deleting", "tags": ["binary search", "combinatorics", "data structures", "two pointers"], "problem_rating": "2100", "solved_by": "x2631"},
{"url": "https://codeforces.com//problemset/problem/1167/D", "name": "Bicolored RBS", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1500", "solved_by": "x6895"},
{"url": "https://codeforces.com//problemset/problem/1167/C", "name": "News Distribution", "tags": ["dfs and similar", "dsu", "graphs"], "problem_rating": "1400", "solved_by": "x17731"},
{"url": "https://codeforces.com//problemset/problem/1167/B", "name": "Lost Numbers", "tags": ["brute force", "divide and conquer", "interactive", "math"], "problem_rating": "1400", "solved_by": "x11035"},
{"url": "https://codeforces.com//problemset/problem/1167/A", "name": "Telephone Number", "tags": ["brute force", "greedy", "strings"], "problem_rating": "800", "solved_by": "x19133"},
{"url": "https://codeforces.com//problemset/problem/1166/F", "name": "Vicky's Delivery Service", "tags": ["data structures", "dsu", "graphs", "hashing"], "problem_rating": "2400", "solved_by": "x691"},
{"url": "https://codeforces.com//problemset/problem/1166/E", "name": "The LCMs Must be Large", "tags": ["bitmasks", "brute force", "constructive algorithms", "math", "number theory"], "problem_rating": "2100", "solved_by": "x2801"},
{"url": "https://codeforces.com//problemset/problem/1166/D", "name": "Cute Sequences", "tags": ["binary search", "brute force", "greedy", "math"], "problem_rating": "2200", "solved_by": "x2147"},
{"url": "https://codeforces.com//problemset/problem/1166/C", "name": "A Tale of Two Lands", "tags": ["binary search", "sortings", "two pointers"], "problem_rating": "1500", "solved_by": "x9282"},
{"url": "https://codeforces.com//problemset/problem/1166/B", "name": "All the Vowels Please", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "1100", "solved_by": "x11398"},
{"url": "https://codeforces.com//problemset/problem/1166/A", "name": "Silent Classroom", "tags": ["combinatorics", "greedy"], "problem_rating": "900", "solved_by": "x14084"},
{"url": "https://codeforces.com//problemset/problem/1165/F2", "name": "Microtransactions (hard version)", "tags": ["binary search", "greedy", "implementation"], "problem_rating": "2000", "solved_by": "x2128"},
{"url": "https://codeforces.com//problemset/problem/1165/F1", "name": "Microtransactions (easy version)", "tags": ["binary search", "greedy"], "problem_rating": "2000", "solved_by": "x1857"},
{"url": "https://codeforces.com//problemset/problem/1165/E", "name": "Two Arrays and Sum of Functions", "tags": ["greedy", "math", "sortings"], "problem_rating": "1600", "solved_by": "x8158"},
{"url": "https://codeforces.com//problemset/problem/1165/D", "name": "Almost All Divisors", "tags": ["math", "number theory"], "problem_rating": "1600", "solved_by": "x15664"},
{"url": "https://codeforces.com//problemset/problem/1165/C", "name": "Good String", "tags": ["greedy"], "problem_rating": "1300", "solved_by": "x12803"},
{"url": "https://codeforces.com//problemset/problem/1165/B", "name": "Polycarp Training", "tags": ["data structures", "greedy", "sortings"], "problem_rating": "1000", "solved_by": "x20698"},
{"url": "https://codeforces.com//problemset/problem/1165/A", "name": "Remainder", "tags": ["implementation", "math"], "problem_rating": "1100", "solved_by": "x13685"},
{"url": "https://codeforces.com//problemset/problem/1163/F", "name": "Indecisive Taxi Fee", "tags": ["data structures", "graphs", "shortest paths"], "problem_rating": "3000", "solved_by": "x839"},
{"url": "https://codeforces.com//problemset/problem/1163/E", "name": "Magical Permutation", "tags": ["bitmasks", "brute force", "constructive algorithms", "data structures", "graphs", "math"], "problem_rating": "2400", "solved_by": "x651"},
{"url": "https://codeforces.com//problemset/problem/1163/D", "name": "Mysterious Code", "tags": ["dp", "strings"], "problem_rating": "2100", "solved_by": "x1241"},
{"url": "https://codeforces.com//problemset/problem/1163/C2", "name": "Power Transmission (Hard Edition)", "tags": ["data structures", "geometry", "implementation", "math"], "problem_rating": "1900", "solved_by": "x3560"},
{"url": "https://codeforces.com//problemset/problem/1163/C1", "name": "Power Transmission (Easy Edition)", "tags": ["brute force", "geometry"], "problem_rating": "1900", "solved_by": "x3279"},
{"url": "https://codeforces.com//problemset/problem/1163/B2", "name": "Cat Party (Hard Edition)", "tags": ["data structures", "implementation"], "problem_rating": "1600", "solved_by": "x7146"},
{"url": "https://codeforces.com//problemset/problem/1163/B1", "name": "Cat Party (Easy Edition)", "tags": ["data structures", "implementation"], "problem_rating": "1500", "solved_by": "x6913"},
{"url": "https://codeforces.com//problemset/problem/1163/A", "name": "Eating Soup", "tags": ["greedy", "math"], "problem_rating": "900", "solved_by": "x12850"},
{"url": "https://codeforces.com//problemset/problem/1162/B", "name": "Double Matrix", "tags": ["brute force", "greedy"], "problem_rating": "1400", "solved_by": "x5786"},
{"url": "https://codeforces.com//problemset/problem/1162/A", "name": "Zoning Restrictions Again", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x8235"},
{"url": "https://codeforces.com//problemset/problem/1160/A2", "name": "Collaboration", "tags": ["*special problem"], "problem_rating": [null], "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/1159/B", "name": "Expansion coefficient of the array", "tags": ["implementation", "math"], "problem_rating": "1300", "solved_by": "x7026"},
{"url": "https://codeforces.com//problemset/problem/1159/A", "name": "A pile of stones", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x12526"},
{"url": "https://codeforces.com//problemset/problem/1158/F", "name": "Density of subarrays", "tags": ["dp", "math"], "problem_rating": "3500", "solved_by": "x397"},
{"url": "https://codeforces.com//problemset/problem/1158/E", "name": "Strange device", "tags": ["binary search", "interactive", "math", "trees"], "problem_rating": "3400", "solved_by": "x150"},
{"url": "https://codeforces.com//problemset/problem/1158/D", "name": "Winding polygonal line", "tags": ["constructive algorithms", "geometry", "greedy", "math"], "problem_rating": "2600", "solved_by": "x720"},
{"url": "https://codeforces.com//problemset/problem/1158/C", "name": "Permutation recovery", "tags": ["constructive algorithms", "data structures", "dfs and similar", "graphs", "greedy", "math", "sortings"], "problem_rating": "2100", "solved_by": "x1911"},
{"url": "https://codeforces.com//problemset/problem/1158/B", "name": "The minimal unique substring", "tags": ["constructive algorithms", "math", "strings"], "problem_rating": "2200", "solved_by": "x2212"},
{"url": "https://codeforces.com//problemset/problem/1158/A", "name": "The Party and Sweets", "tags": ["binary search", "constructive algorithms", "greedy", "implementation", "math", "sortings", "two pointers"], "problem_rating": "1500", "solved_by": "x6984"},
{"url": "https://codeforces.com//problemset/problem/1157/G", "name": "Inverse of Rows and Columns", "tags": ["brute force", "constructive algorithms"], "problem_rating": "2200", "solved_by": "x903"},
{"url": "https://codeforces.com//problemset/problem/1157/F", "name": "Maximum Balanced Circle", "tags": ["constructive algorithms", "dp", "greedy", "two pointers"], "problem_rating": "2000", "solved_by": "x2584"},
{"url": "https://codeforces.com//problemset/problem/1157/E", "name": "Minimum Array", "tags": ["binary search", "data structures", "greedy"], "problem_rating": "1700", "solved_by": "x8275"},
{"url": "https://codeforces.com//problemset/problem/1157/D", "name": "N Problems During K Days", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1900", "solved_by": "x3701"},
{"url": "https://codeforces.com//problemset/problem/1157/C2", "name": "Increasing Subsequence (hard version)", "tags": ["greedy"], "problem_rating": "1700", "solved_by": "x7911"},
{"url": "https://codeforces.com//problemset/problem/1157/C1", "name": "Increasing Subsequence (easy version)", "tags": ["greedy"], "problem_rating": "1300", "solved_by": "x12511"},
{"url": "https://codeforces.com//problemset/problem/1157/B", "name": "Long Number", "tags": ["greedy"], "problem_rating": "1300", "solved_by": "x14576"},
{"url": "https://codeforces.com//problemset/problem/1157/A", "name": "Reachable Numbers", "tags": ["implementation"], "problem_rating": "1100", "solved_by": "x15524"},
{"url": "https://codeforces.com//problemset/problem/1156/G", "name": "Optimizer", "tags": ["graphs", "greedy", "hashing", "implementation"], "problem_rating": "2700", "solved_by": "x127"},
{"url": "https://codeforces.com//problemset/problem/1156/F", "name": "Card Bag", "tags": ["dp", "math", "probabilities"], "problem_rating": "2300", "solved_by": "x1362"},
{"url": "https://codeforces.com//problemset/problem/1156/E", "name": "Special Segments of Permutation", "tags": ["data structures", "divide and conquer", "dsu", "two pointers"], "problem_rating": "2200", "solved_by": "x2905"},
{"url": "https://codeforces.com//problemset/problem/1156/D", "name": "0-1-Tree", "tags": ["dfs and similar", "divide and conquer", "dp", "dsu", "trees"], "problem_rating": "2200", "solved_by": "x3794"},
{"url": "https://codeforces.com//problemset/problem/1156/C", "name": "Match Points", "tags": ["binary search", "greedy", "sortings", "ternary search", "two pointers"], "problem_rating": "2000", "solved_by": "x5992"},
{"url": "https://codeforces.com//problemset/problem/1156/B", "name": "Ugly Pairs", "tags": ["dfs and similar", "greedy", "implementation", "sortings", "strings"], "problem_rating": "1800", "solved_by": "x6172"},
{"url": "https://codeforces.com//problemset/problem/1156/A", "name": "Inscribed Figures", "tags": ["geometry"], "problem_rating": "1400", "solved_by": "x8160"},
{"url": "https://codeforces.com//problemset/problem/1155/F", "name": "Delivery Oligopoly", "tags": ["brute force", "dp", "graphs"], "problem_rating": "2800", "solved_by": "x408"},
{"url": "https://codeforces.com//problemset/problem/1155/E", "name": "Guess the Root", "tags": ["brute force", "interactive", "math"], "problem_rating": "2200", "solved_by": "x1402"},
{"url": "https://codeforces.com//problemset/problem/1155/D", "name": "Beautiful Array", "tags": ["brute force", "data structures", "divide and conquer", "dp", "greedy"], "problem_rating": "1900", "solved_by": "x6814"},
{"url": "https://codeforces.com//problemset/problem/1155/C", "name": "Alarm Clocks Everywhere", "tags": ["math", "number theory"], "problem_rating": "1300", "solved_by": "x9194"},
{"url": "https://codeforces.com//problemset/problem/1155/B", "name": "Game with Telephone Numbers", "tags": ["games", "greedy", "implementation"], "problem_rating": "1200", "solved_by": "x11819"},
{"url": "https://codeforces.com//problemset/problem/1155/A", "name": "Reverse a Substring", "tags": ["implementation", "sortings", "strings"], "problem_rating": "1000", "solved_by": "x14285"},
{"url": "https://codeforces.com//problemset/problem/1154/G", "name": "Minimum Possible LCM", "tags": ["brute force", "greedy", "math", "number theory"], "problem_rating": "2200", "solved_by": "x2677"},
{"url": "https://codeforces.com//problemset/problem/1154/F", "name": "Shovels Shop", "tags": ["dp", "greedy", "sortings"], "problem_rating": "2100", "solved_by": "x2797"},
{"url": "https://codeforces.com//problemset/problem/1154/E", "name": "Two Teams", "tags": ["data structures", "implementation", "sortings"], "problem_rating": "1800", "solved_by": "x6170"},
{"url": "https://codeforces.com//problemset/problem/1154/D", "name": "Walking Robot", "tags": ["greedy"], "problem_rating": "1500", "solved_by": "x9850"},
{"url": "https://codeforces.com//problemset/problem/1154/C", "name": "Gourmet Cat", "tags": ["implementation", "math"], "problem_rating": "1400", "solved_by": "x10311"},
{"url": "https://codeforces.com//problemset/problem/1154/B", "name": "Make Them Equal", "tags": ["math"], "problem_rating": "1200", "solved_by": "x16432"},
{"url": "https://codeforces.com//problemset/problem/1154/A", "name": "Restoring Three Numbers", "tags": ["math"], "problem_rating": "800", "solved_by": "x68488"},
{"url": "https://codeforces.com//problemset/problem/1153/F", "name": "Serval and Bonus Problem", "tags": ["combinatorics", "dp", "math", "probabilities"], "problem_rating": "2600", "solved_by": "x767"},
{"url": "https://codeforces.com//problemset/problem/1153/E", "name": "Serval and Snake", "tags": ["binary search", "brute force", "interactive"], "problem_rating": "2200", "solved_by": "x1458"},
{"url": "https://codeforces.com//problemset/problem/1153/D", "name": "Serval and Rooted Tree", "tags": ["binary search", "dfs and similar", "dp", "greedy", "trees"], "problem_rating": "1900", "solved_by": "x4884"},
{"url": "https://codeforces.com//problemset/problem/1153/C", "name": "Serval and Parenthesis Sequence", "tags": ["greedy", "strings"], "problem_rating": "1700", "solved_by": "x7351"},
{"url": "https://codeforces.com//problemset/problem/1153/B", "name": "Serval and Toy Bricks", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1200", "solved_by": "x9021"},
{"url": "https://codeforces.com//problemset/problem/1153/A", "name": "Serval and Bus", "tags": ["brute force", "math"], "problem_rating": "1000", "solved_by": "x11467"},
{"url": "https://codeforces.com//problemset/problem/1152/F2", "name": "Neko Rules the Catniverse (Large Version)", "tags": ["bitmasks", "dp", "matrices"], "problem_rating": "3000", "solved_by": "x616"},
{"url": "https://codeforces.com//problemset/problem/1152/F1", "name": "Neko Rules the Catniverse (Small Version)", "tags": ["bitmasks", "dp", "matrices"], "problem_rating": "2800", "solved_by": "x533"},
{"url": "https://codeforces.com//problemset/problem/1152/E", "name": "Neko and Flashback", "tags": ["constructive algorithms", "dfs and similar", "graphs"], "problem_rating": "2400", "solved_by": "x950"},
{"url": "https://codeforces.com//problemset/problem/1152/D", "name": "Neko and Aki's Prank", "tags": ["dp", "greedy", "trees"], "problem_rating": "2100", "solved_by": "x2394"},
{"url": "https://codeforces.com//problemset/problem/1152/C", "name": "Neko does Maths", "tags": ["brute force", "math", "number theory"], "problem_rating": "1800", "solved_by": "x6573"},
{"url": "https://codeforces.com//problemset/problem/1152/B", "name": "Neko Performs Cat Furrier Transform", "tags": ["bitmasks", "constructive algorithms", "dfs and similar", "math"], "problem_rating": "1300", "solved_by": "x8864"},
{"url": "https://codeforces.com//problemset/problem/1152/A", "name": "Neko Finds Grapes", "tags": ["greedy", "implementation", "math"], "problem_rating": "800", "solved_by": "x15057"},
{"url": "https://codeforces.com//problemset/problem/1151/F", "name": "Sonya and Informatics", "tags": ["combinatorics", "dp", "matrices", "probabilities"], "problem_rating": "2300", "solved_by": "x1174"},
{"url": "https://codeforces.com//problemset/problem/1151/E", "name": "Number of Components", "tags": ["combinatorics", "data structures", "dp", "math"], "problem_rating": "2100", "solved_by": "x3277"},
{"url": "https://codeforces.com//problemset/problem/1151/D", "name": "Stas and the Queue at the Buffet", "tags": ["greedy", "math", "sortings"], "problem_rating": "1600", "solved_by": "x8331"},
{"url": "https://codeforces.com//problemset/problem/1151/C", "name": "Problem for Nazar", "tags": ["constructive algorithms", "math"], "problem_rating": "1800", "solved_by": "x5300"},
{"url": "https://codeforces.com//problemset/problem/1151/B", "name": "Dima and a Bad XOR", "tags": ["bitmasks", "brute force", "constructive algorithms", "dp"], "problem_rating": "1600", "solved_by": "x10940"},
{"url": "https://codeforces.com//problemset/problem/1151/A", "name": "Maxim and Biology", "tags": ["brute force", "strings"], "problem_rating": "1000", "solved_by": "x11117"},
{"url": "https://codeforces.com//problemset/problem/1150/B", "name": "Tiling Challenge", "tags": ["greedy", "implementation"], "problem_rating": "900", "solved_by": "x11219"},
{"url": "https://codeforces.com//problemset/problem/1150/A", "name": "Stock Arbitraging", "tags": ["greedy", "implementation"], "problem_rating": "800", "solved_by": "x11767"},
{"url": "https://codeforces.com//problemset/problem/1149/E", "name": "Election Promises", "tags": ["games", "graphs"], "problem_rating": "3200", "solved_by": "x497"},
{"url": "https://codeforces.com//problemset/problem/1149/D", "name": "Abandoning Roads", "tags": ["brute force", "dp", "graphs", "greedy"], "problem_rating": "3000", "solved_by": "x718"},
{"url": "https://codeforces.com//problemset/problem/1149/C", "name": "Tree Generator™", "tags": ["data structures", "implementation", "trees"], "problem_rating": "2700", "solved_by": "x1199"},
{"url": "https://codeforces.com//problemset/problem/1149/B", "name": "Three Religions", "tags": ["dp", "implementation", "strings"], "problem_rating": "2200", "solved_by": "x1879"},
{"url": "https://codeforces.com//problemset/problem/1149/A", "name": "Prefix Sum Primes", "tags": ["constructive algorithms", "greedy", "math", "number theory"], "problem_rating": "1200", "solved_by": "x14995"},
{"url": "https://codeforces.com//problemset/problem/1148/H", "name": "Holy Diver", "tags": ["data structures"], "problem_rating": "3500", "solved_by": "x252"},
{"url": "https://codeforces.com//problemset/problem/1148/G", "name": "Gold Experience", "tags": ["constructive algorithms", "graphs", "math", "number theory", "probabilities"], "problem_rating": "3300", "solved_by": "x319"},
{"url": "https://codeforces.com//problemset/problem/1148/F", "name": "Foo Fighters", "tags": ["bitmasks", "constructive algorithms"], "problem_rating": "2700", "solved_by": "x991"},
{"url": "https://codeforces.com//problemset/problem/1148/E", "name": "Earth Wind and Fire", "tags": ["constructive algorithms", "greedy", "math", "sortings", "two pointers"], "problem_rating": "2300", "solved_by": "x1660"},
{"url": "https://codeforces.com//problemset/problem/1148/D", "name": "Dirty Deeds Done Dirt Cheap", "tags": ["greedy", "sortings"], "problem_rating": "1800", "solved_by": "x4933"},
{"url": "https://codeforces.com//problemset/problem/1148/C", "name": "Crazy Diamond", "tags": ["constructive algorithms", "sortings"], "problem_rating": "1700", "solved_by": "x5254"},
{"url": "https://codeforces.com//problemset/problem/1148/B", "name": "Born This Way", "tags": ["binary search", "brute force", "two pointers"], "problem_rating": "1600", "solved_by": "x7325"},
{"url": "https://codeforces.com//problemset/problem/1148/A", "name": "Another One Bites The Dust", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x14799"},
{"url": "https://codeforces.com//problemset/problem/1147/F", "name": "Zigzag Game", "tags": ["games", "interactive"], "problem_rating": "3500", "solved_by": "x246"},
{"url": "https://codeforces.com//problemset/problem/1147/E", "name": "Rainbow Coins", "tags": ["interactive"], "problem_rating": "3000", "solved_by": "x333"},
{"url": "https://codeforces.com//problemset/problem/1147/D", "name": "Palindrome XOR", "tags": ["dfs and similar", "graphs"], "problem_rating": "2400", "solved_by": "x736"},
{"url": "https://codeforces.com//problemset/problem/1147/C", "name": "Thanos Nim", "tags": ["games"], "problem_rating": "2000", "solved_by": "x3191"},
{"url": "https://codeforces.com//problemset/problem/1147/B", "name": "Chladni Figure", "tags": ["brute force", "strings"], "problem_rating": "1900", "solved_by": "x2830"},
{"url": "https://codeforces.com//problemset/problem/1147/A", "name": "Hide and Seek", "tags": ["graphs"], "problem_rating": "1500", "solved_by": "x5176"},
{"url": "https://codeforces.com//problemset/problem/1146/H", "name": "Satanic Panic", "tags": ["dp", "geometry"], "problem_rating": "2900", "solved_by": "x596"},
{"url": "https://codeforces.com//problemset/problem/1146/G", "name": "Zoning Restrictions", "tags": ["dp", "flows", "graphs"], "problem_rating": "2700", "solved_by": "x808"},
{"url": "https://codeforces.com//problemset/problem/1146/F", "name": "Leaf Partition", "tags": ["dp", "trees"], "problem_rating": "2500", "solved_by": "x1103"},
{"url": "https://codeforces.com//problemset/problem/1146/E", "name": "Hot is Cold", "tags": ["bitmasks", "data structures", "divide and conquer", "implementation"], "problem_rating": "2400", "solved_by": "x874"},
{"url": "https://codeforces.com//problemset/problem/1146/D", "name": "Frog Jumping", "tags": ["dfs and similar", "math", "number theory"], "problem_rating": "2100", "solved_by": "x1090"},
{"url": "https://codeforces.com//problemset/problem/1146/C", "name": "Tree Diameter", "tags": ["bitmasks", "graphs", "interactive"], "problem_rating": "1700", "solved_by": "x3644"},
{"url": "https://codeforces.com//problemset/problem/1146/B", "name": "Hate \"A\"", "tags": ["implementation", "strings"], "problem_rating": "1100", "solved_by": "x8474"},
{"url": "https://codeforces.com//problemset/problem/1146/A", "name": "Love \"A\"", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x21668"},
{"url": "https://codeforces.com//problemset/problem/1145/G", "name": "AI Takeover", "tags": ["interactive"], "problem_rating": [null], "solved_by": "x167"},
{"url": "https://codeforces.com//problemset/problem/1145/F", "name": "Neat Words", "tags": [], "problem_rating": [null], "solved_by": "x503"},
{"url": "https://codeforces.com//problemset/problem/1145/E", "name": "Fourier Doodles", "tags": [], "problem_rating": [null], "solved_by": "x419"},
{"url": "https://codeforces.com//problemset/problem/1145/D", "name": "Pigeon d'Or", "tags": ["implementation"], "problem_rating": [null], "solved_by": "x1148"},
{"url": "https://codeforces.com//problemset/problem/1145/C", "name": "Mystery Circuit", "tags": ["bitmasks", "brute force"], "problem_rating": [null], "solved_by": "x795"},
{"url": "https://codeforces.com//problemset/problem/1145/B", "name": "Kanban Numbers", "tags": ["brute force"], "problem_rating": [null], "solved_by": "x1441"},
{"url": "https://codeforces.com//problemset/problem/1145/A", "name": "Thanos Sort", "tags": ["implementation"], "problem_rating": [null], "solved_by": "x8553"},
{"url": "https://codeforces.com//problemset/problem/1144/G", "name": "Two Merged Sequences", "tags": ["dp", "greedy"], "problem_rating": "2400", "solved_by": "x1906"},
{"url": "https://codeforces.com//problemset/problem/1144/F", "name": "Graph Without Long Directed Paths", "tags": ["dfs and similar", "graphs"], "problem_rating": "1700", "solved_by": "x11273"},
{"url": "https://codeforces.com//problemset/problem/1144/E", "name": "Median String", "tags": ["bitmasks", "math", "number theory", "strings"], "problem_rating": "1900", "solved_by": "x4099"},
{"url": "https://codeforces.com//problemset/problem/1144/D", "name": "Equalize Them All", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1400", "solved_by": "x10154"},
{"url": "https://codeforces.com//problemset/problem/1144/C", "name": "Two Shuffled Sequences", "tags": ["constructive algorithms", "sortings"], "problem_rating": "1000", "solved_by": "x15158"},
{"url": "https://codeforces.com//problemset/problem/1144/B", "name": "Parity Alternated Deletions", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "900", "solved_by": "x16905"},
{"url": "https://codeforces.com//problemset/problem/1144/A", "name": "Diverse Strings", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x19044"},
{"url": "https://codeforces.com//problemset/problem/1143/C", "name": "Queen", "tags": ["dfs and similar", "trees"], "problem_rating": "1400", "solved_by": "x11900"},
{"url": "https://codeforces.com//problemset/problem/1143/B", "name": "Nirvana", "tags": ["brute force", "math", "number theory"], "problem_rating": "1200", "solved_by": "x10349"},
{"url": "https://codeforces.com//problemset/problem/1143/A", "name": "The Doors", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x13222"},
{"url": "https://codeforces.com//problemset/problem/1142/E", "name": "Pink Floyd", "tags": ["graphs", "interactive"], "problem_rating": "3200", "solved_by": "x497"},
{"url": "https://codeforces.com//problemset/problem/1142/D", "name": "Foreigner", "tags": ["dp"], "problem_rating": "2800", "solved_by": "x483"},
{"url": "https://codeforces.com//problemset/problem/1142/C", "name": "U2", "tags": ["geometry"], "problem_rating": "2400", "solved_by": "x1332"},
{"url": "https://codeforces.com//problemset/problem/1142/B", "name": "Lynyrd Skynyrd", "tags": ["data structures", "dfs and similar", "dp", "math", "trees"], "problem_rating": "2000", "solved_by": "x2851"},
{"url": "https://codeforces.com//problemset/problem/1142/A", "name": "The Beatles", "tags": ["brute force", "math"], "problem_rating": "1700", "solved_by": "x3403"},
{"url": "https://codeforces.com//problemset/problem/1141/G", "name": "Privatization of Roads in Treeland", "tags": ["binary search", "constructive algorithms", "dfs and similar", "graphs", "greedy", "trees"], "problem_rating": "1900", "solved_by": "x2225"},
{"url": "https://codeforces.com//problemset/problem/1141/F2", "name": "Same Sum Blocks (Hard)", "tags": ["data structures", "greedy"], "problem_rating": "1900", "solved_by": "x4128"},
{"url": "https://codeforces.com//problemset/problem/1141/F1", "name": "Same Sum Blocks (Easy)", "tags": ["greedy"], "problem_rating": "1900", "solved_by": "x3802"},
{"url": "https://codeforces.com//problemset/problem/1141/E", "name": "Superhero Battle", "tags": ["math"], "problem_rating": "1700", "solved_by": "x6674"},
{"url": "https://codeforces.com//problemset/problem/1141/D", "name": "Colored Boots", "tags": ["greedy", "implementation"], "problem_rating": "1500", "solved_by": "x8457"},
{"url": "https://codeforces.com//problemset/problem/1141/C", "name": "Polycarp Restores Permutation", "tags": ["math"], "problem_rating": "1500", "solved_by": "x11354"},
{"url": "https://codeforces.com//problemset/problem/1141/B", "name": "Maximal Continuous Rest", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x21025"},
{"url": "https://codeforces.com//problemset/problem/1141/A", "name": "Game 23", "tags": ["implementation", "math"], "problem_rating": "1000", "solved_by": "x30795"},
{"url": "https://codeforces.com//problemset/problem/1140/G", "name": "Double Tree", "tags": ["data structures", "divide and conquer", "shortest paths", "trees"], "problem_rating": "2700", "solved_by": "x478"},
{"url": "https://codeforces.com//problemset/problem/1140/F", "name": "Extending Set of Points", "tags": ["data structures", "divide and conquer", "dsu"], "problem_rating": "2600", "solved_by": "x1179"},
{"url": "https://codeforces.com//problemset/problem/1140/E", "name": "Palindrome-less Arrays", "tags": ["combinatorics", "divide and conquer", "dp"], "problem_rating": "2200", "solved_by": "x1904"},
{"url": "https://codeforces.com//problemset/problem/1140/D", "name": "Minimum Triangulation", "tags": ["dp", "greedy", "math"], "problem_rating": "1200", "solved_by": "x12484"},
{"url": "https://codeforces.com//problemset/problem/1140/C", "name": "Playlist", "tags": ["brute force", "data structures", "sortings"], "problem_rating": "1600", "solved_by": "x9434"},
{"url": "https://codeforces.com//problemset/problem/1140/B", "name": "Good String", "tags": ["implementation", "strings"], "problem_rating": "1200", "solved_by": "x11249"},
{"url": "https://codeforces.com//problemset/problem/1140/A", "name": "Detective Book", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x12202"},
{"url": "https://codeforces.com//problemset/problem/1139/F", "name": "Dish Shopping", "tags": ["data structures", "divide and conquer"], "problem_rating": "2500", "solved_by": "x401"},
{"url": "https://codeforces.com//problemset/problem/1139/E", "name": "Maximize Mex", "tags": ["flows", "graph matchings", "graphs"], "problem_rating": "2400", "solved_by": "x1745"},
{"url": "https://codeforces.com//problemset/problem/1139/D", "name": "Steps to One", "tags": ["dp", "math", "number theory", "probabilities"], "problem_rating": "2300", "solved_by": "x2226"},
{"url": "https://codeforces.com//problemset/problem/1139/C", "name": "Edgy Trees", "tags": ["dfs and similar", "dsu", "graphs", "math", "trees"], "problem_rating": "1500", "solved_by": "x12307"},
{"url": "https://codeforces.com//problemset/problem/1139/B", "name": "Chocolates", "tags": ["greedy", "implementation"], "problem_rating": "1000", "solved_by": "x16019"},
{"url": "https://codeforces.com//problemset/problem/1139/A", "name": "Even Substrings", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x16695"},
{"url": "https://codeforces.com//problemset/problem/1138/B", "name": "Circus", "tags": ["brute force", "greedy", "math", "strings"], "problem_rating": "1800", "solved_by": "x4000"},
{"url": "https://codeforces.com//problemset/problem/1138/A", "name": "Sushi for Two", "tags": ["binary search", "greedy", "implementation"], "problem_rating": "900", "solved_by": "x17773"},
{"url": "https://codeforces.com//problemset/problem/1137/F", "name": "Matches Are Not a Child's Play", "tags": ["data structures", "trees"], "problem_rating": "3400", "solved_by": "x466"},
{"url": "https://codeforces.com//problemset/problem/1137/E", "name": "Train Car Selection", "tags": ["data structures", "greedy"], "problem_rating": "2700", "solved_by": "x500"},
{"url": "https://codeforces.com//problemset/problem/1137/D", "name": "Cooperative Game", "tags": ["constructive algorithms", "interactive", "number theory"], "problem_rating": "2400", "solved_by": "x1530"},
{"url": "https://codeforces.com//problemset/problem/1137/C", "name": "Museums Tour", "tags": ["dp", "graphs", "implementation"], "problem_rating": "2500", "solved_by": "x1175"},
{"url": "https://codeforces.com//problemset/problem/1137/B", "name": "Camp Schedule", "tags": ["greedy", "hashing", "strings"], "problem_rating": "1600", "solved_by": "x6015"},
{"url": "https://codeforces.com//problemset/problem/1137/A", "name": "Skyscrapers", "tags": ["implementation", "sortings"], "problem_rating": "1600", "solved_by": "x4447"},
{"url": "https://codeforces.com//problemset/problem/1136/E", "name": "Nastya Hasn't Written a Legend", "tags": ["binary search", "data structures"], "problem_rating": "2200", "solved_by": "x1051"},
{"url": "https://codeforces.com//problemset/problem/1136/D", "name": "Nastya Is Buying Lunch", "tags": ["greedy"], "problem_rating": "1800", "solved_by": "x3764"},
{"url": "https://codeforces.com//problemset/problem/1136/C", "name": "Nastya Is Transposing Matrices", "tags": ["constructive algorithms", "sortings"], "problem_rating": "1500", "solved_by": "x7666"},
{"url": "https://codeforces.com//problemset/problem/1136/B", "name": "Nastya Is Playing Computer Games", "tags": ["constructive algorithms", "math"], "problem_rating": "1000", "solved_by": "x11608"},
{"url": "https://codeforces.com//problemset/problem/1136/A", "name": "Nastya Is Reading a Book", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x16223"},
{"url": "https://codeforces.com//problemset/problem/1133/F2", "name": "Spanning Tree with One Fixed Degree", "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy"], "problem_rating": "1900", "solved_by": "x3289"},
{"url": "https://codeforces.com//problemset/problem/1133/F1", "name": "Spanning Tree with Maximum Degree", "tags": ["graphs"], "problem_rating": "1600", "solved_by": "x7665"},
{"url": "https://codeforces.com//problemset/problem/1133/E", "name": "K Balanced Teams", "tags": ["dp", "sortings", "two pointers"], "problem_rating": "1800", "solved_by": "x5338"},
{"url": "https://codeforces.com//problemset/problem/1133/D", "name": "Zero Quantity Maximization", "tags": ["hashing", "math", "number theory"], "problem_rating": "1500", "solved_by": "x11429"},
{"url": "https://codeforces.com//problemset/problem/1133/C", "name": "Balanced Team", "tags": ["sortings", "two pointers"], "problem_rating": "1200", "solved_by": "x22003"},
{"url": "https://codeforces.com//problemset/problem/1133/B", "name": "Preparation for International Women's Day", "tags": ["math", "number theory"], "problem_rating": "1200", "solved_by": "x12562"},
{"url": "https://codeforces.com//problemset/problem/1133/A", "name": "Middle of the Contest", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x16854"},
{"url": "https://codeforces.com//problemset/problem/1132/G", "name": "Greedy Subsequences", "tags": ["data structures", "dp", "trees"], "problem_rating": "2400", "solved_by": "x983"},
{"url": "https://codeforces.com//problemset/problem/1132/F", "name": "Clear the String", "tags": ["dp"], "problem_rating": "2000", "solved_by": "x7783"},
{"url": "https://codeforces.com//problemset/problem/1132/E", "name": "Knapsack", "tags": ["dfs and similar", "dp", "greedy"], "problem_rating": "2300", "solved_by": "x1440"},
{"url": "https://codeforces.com//problemset/problem/1132/D", "name": "Stressful Training", "tags": ["binary search", "greedy"], "problem_rating": "2300", "solved_by": "x1876"},
{"url": "https://codeforces.com//problemset/problem/1132/C", "name": "Painting the Fence", "tags": ["brute force"], "problem_rating": "1700", "solved_by": "x5384"},
{"url": "https://codeforces.com//problemset/problem/1132/B", "name": "Discounts", "tags": ["greedy", "sortings"], "problem_rating": "900", "solved_by": "x12833"},
{"url": "https://codeforces.com//problemset/problem/1132/A", "name": "Regular Bracket Sequence", "tags": ["greedy", "implementation"], "problem_rating": "1100", "solved_by": "x9546"},
{"url": "https://codeforces.com//problemset/problem/1131/G", "name": "Most Dangerous Shark", "tags": ["data structures", "dp", "two pointers"], "problem_rating": "2700", "solved_by": "x408"},
{"url": "https://codeforces.com//problemset/problem/1131/F", "name": "Asya And Kittens", "tags": ["constructive algorithms", "dsu"], "problem_rating": "1700", "solved_by": "x6546"},
{"url": "https://codeforces.com//problemset/problem/1131/E", "name": "String Multiplication", "tags": ["dp", "greedy", "strings"], "problem_rating": "2300", "solved_by": "x1132"},
{"url": "https://codeforces.com//problemset/problem/1131/D", "name": "Gourmet choice", "tags": ["dfs and similar", "dp", "dsu", "graphs", "greedy"], "problem_rating": "2000", "solved_by": "x3196"},
{"url": "https://codeforces.com//problemset/problem/1131/C", "name": "Birthday", "tags": ["binary search", "greedy", "sortings"], "problem_rating": "1200", "solved_by": "x14683"},
{"url": "https://codeforces.com//problemset/problem/1131/B", "name": "Draw!", "tags": ["greedy", "implementation"], "problem_rating": "1400", "solved_by": "x9671"},
{"url": "https://codeforces.com//problemset/problem/1131/A", "name": "Sea Battle", "tags": ["math"], "problem_rating": "800", "solved_by": "x12369"},
{"url": "https://codeforces.com//problemset/problem/1130/C", "name": "Connect", "tags": ["brute force", "dfs and similar", "dsu"], "problem_rating": "1400", "solved_by": "x8417"},
{"url": "https://codeforces.com//problemset/problem/1130/B", "name": "Two Cakes", "tags": ["greedy"], "problem_rating": "1200", "solved_by": "x7879"},
{"url": "https://codeforces.com//problemset/problem/1130/A", "name": "Be Positive", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x11519"},
{"url": "https://codeforces.com//problemset/problem/1129/E", "name": "Legendary Tree", "tags": ["binary search", "interactive", "trees"], "problem_rating": "3100", "solved_by": "x421"},
{"url": "https://codeforces.com//problemset/problem/1129/D", "name": "Isolation", "tags": ["data structures", "dp"], "problem_rating": "2900", "solved_by": "x970"},
{"url": "https://codeforces.com//problemset/problem/1129/C", "name": "Morse Code", "tags": ["binary search", "data structures", "dp", "hashing", "sortings", "string suffix structures", "strings"], "problem_rating": "2400", "solved_by": "x911"},
{"url": "https://codeforces.com//problemset/problem/1129/B", "name": "Wrong Answer", "tags": ["constructive algorithms"], "problem_rating": "2000", "solved_by": "x2174"},
{"url": "https://codeforces.com//problemset/problem/1129/A2", "name": "Toy Train", "tags": ["brute force", "greedy"], "problem_rating": "1800", "solved_by": "x4068"},
{"url": "https://codeforces.com//problemset/problem/1129/A1", "name": "Toy Train (Simplified)", "tags": ["brute force", "greedy"], "problem_rating": "1700", "solved_by": "x3797"},
{"url": "https://codeforces.com//problemset/problem/1121/C", "name": "System Testing", "tags": ["implementation"], "problem_rating": "1600", "solved_by": "x1951"},
{"url": "https://codeforces.com//problemset/problem/1121/B", "name": "Mike and Children", "tags": ["brute force", "implementation"], "problem_rating": "1200", "solved_by": "x8792"},
{"url": "https://codeforces.com//problemset/problem/1121/A", "name": "Technogoblet of Fire", "tags": ["implementation", "sortings"], "problem_rating": "1100", "solved_by": "x7148"},
{"url": "https://codeforces.com//problemset/problem/1120/F", "name": "Secret Letters", "tags": ["data structures", "dp", "greedy"], "problem_rating": "3100", "solved_by": "x254"},
{"url": "https://codeforces.com//problemset/problem/1120/E", "name": "The very same Munchhausen", "tags": ["brute force"], "problem_rating": "2600", "solved_by": "x116"},
{"url": "https://codeforces.com//problemset/problem/1120/D", "name": "Power Tree", "tags": ["dfs and similar", "dp", "dsu", "graphs", "greedy", "trees"], "problem_rating": "2500", "solved_by": "x1299"},
{"url": "https://codeforces.com//problemset/problem/1120/C", "name": "Compress String", "tags": ["dp", "strings"], "problem_rating": "2100", "solved_by": "x2082"},
{"url": "https://codeforces.com//problemset/problem/1120/B", "name": "Once in a casino", "tags": ["constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "2700", "solved_by": "x411"},
{"url": "https://codeforces.com//problemset/problem/1120/A", "name": "Diana and Liana", "tags": ["greedy", "implementation", "two pointers"], "problem_rating": "1900", "solved_by": "x1627"},
{"url": "https://codeforces.com//problemset/problem/1119/H", "name": "Triple", "tags": ["fft", "math"], "problem_rating": "3200", "solved_by": "x535"},
{"url": "https://codeforces.com//problemset/problem/1119/G", "name": "Get Ready for the Battle", "tags": ["constructive algorithms", "implementation"], "problem_rating": "3100", "solved_by": "x483"},
{"url": "https://codeforces.com//problemset/problem/1119/F", "name": "Niyaz and Small Degrees", "tags": ["data structures", "dp", "trees"], "problem_rating": "3400", "solved_by": "x700"},
{"url": "https://codeforces.com//problemset/problem/1119/E", "name": "Pavel and Triangles", "tags": ["brute force", "dp", "fft", "greedy", "ternary search"], "problem_rating": "1900", "solved_by": "x4938"},
{"url": "https://codeforces.com//problemset/problem/1119/D", "name": "Frets On Fire", "tags": ["binary search", "sortings"], "problem_rating": "1800", "solved_by": "x4769"},
{"url": "https://codeforces.com//problemset/problem/1119/C", "name": "Ramesses and Corner Inversion", "tags": ["constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "1500", "solved_by": "x6804"},
{"url": "https://codeforces.com//problemset/problem/1119/B", "name": "Alyona and a Narrow Fridge", "tags": ["binary search", "flows", "greedy", "sortings"], "problem_rating": "1300", "solved_by": "x10569"},
{"url": "https://codeforces.com//problemset/problem/1119/A", "name": "Ilya and a Colorful Walk", "tags": ["greedy", "implementation"], "problem_rating": "1100", "solved_by": "x10664"},
{"url": "https://codeforces.com//problemset/problem/1118/F2", "name": "Tree Cutting (Hard Version)", "tags": ["combinatorics", "dfs and similar", "dp", "trees"], "problem_rating": "2700", "solved_by": "x527"},
{"url": "https://codeforces.com//problemset/problem/1118/F1", "name": "Tree Cutting (Easy Version)", "tags": ["dfs and similar", "trees"], "problem_rating": "1800", "solved_by": "x5811"},
{"url": "https://codeforces.com//problemset/problem/1118/E", "name": "Yet Another Ball Problem", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1700", "solved_by": "x4095"},
{"url": "https://codeforces.com//problemset/problem/1118/D2", "name": "Coffee and Coursework (Hard Version)", "tags": ["binary search", "greedy"], "problem_rating": "1700", "solved_by": "x6181"},
{"url": "https://codeforces.com//problemset/problem/1118/D1", "name": "Coffee and Coursework (Easy version)", "tags": ["brute force", "greedy"], "problem_rating": "1700", "solved_by": "x5604"},
{"url": "https://codeforces.com//problemset/problem/1118/C", "name": "Palindromic Matrix", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1700", "solved_by": "x5709"},
{"url": "https://codeforces.com//problemset/problem/1118/B", "name": "Tanya and Candies", "tags": ["implementation"], "problem_rating": "1200", "solved_by": "x11988"},
{"url": "https://codeforces.com//problemset/problem/1118/A", "name": "Water Buying", "tags": ["math"], "problem_rating": "800", "solved_by": "x19922"},
{"url": "https://codeforces.com//problemset/problem/1117/G", "name": "Recursive Queries", "tags": ["data structures"], "problem_rating": "2500", "solved_by": "x664"},
{"url": "https://codeforces.com//problemset/problem/1117/F", "name": "Crisp String", "tags": ["bitmasks", "dp"], "problem_rating": "2500", "solved_by": "x522"},
{"url": "https://codeforces.com//problemset/problem/1117/E", "name": "Decypher the String", "tags": ["bitmasks", "chinese remainder theorem", "constructive algorithms", "interactive", "math"], "problem_rating": "2200", "solved_by": "x1465"},
{"url": "https://codeforces.com//problemset/problem/1117/D", "name": "Magic Gems", "tags": ["dp", "math", "matrices"], "problem_rating": "2100", "solved_by": "x4104"},
{"url": "https://codeforces.com//problemset/problem/1117/C", "name": "Magic Ship", "tags": ["binary search"], "problem_rating": "1900", "solved_by": "x6746"},
{"url": "https://codeforces.com//problemset/problem/1117/B", "name": "Emotes", "tags": ["greedy", "math", "sortings"], "problem_rating": "1000", "solved_by": "x14105"},
{"url": "https://codeforces.com//problemset/problem/1117/A", "name": "Best Subsegment", "tags": ["implementation", "math"], "problem_rating": "1100", "solved_by": "x10964"},
{"url": "https://codeforces.com//problemset/problem/1116/D6", "name": "Hessenberg matrix", "tags": [], "problem_rating": [null], "solved_by": "x76"},
{"url": "https://codeforces.com//problemset/problem/1116/D5", "name": "Creeper", "tags": [], "problem_rating": [null], "solved_by": "x146"},
{"url": "https://codeforces.com//problemset/problem/1116/D4", "name": "TIE fighter", "tags": [], "problem_rating": [null], "solved_by": "x166"},
{"url": "https://codeforces.com//problemset/problem/1116/D3", "name": "X-wing fighter", "tags": [], "problem_rating": [null], "solved_by": "x200"},
{"url": "https://codeforces.com//problemset/problem/1116/D2", "name": "Pattern of increasing blocks", "tags": [], "problem_rating": [null], "solved_by": "x230"},
{"url": "https://codeforces.com//problemset/problem/1116/D1", "name": "Block diagonal matrix", "tags": [], "problem_rating": [null], "solved_by": "x273"},
{"url": "https://codeforces.com//problemset/problem/1116/C3", "name": "``Is the number of ones divisible by 3?'' oracle", "tags": [], "problem_rating": [null], "solved_by": "x181"},
{"url": "https://codeforces.com//problemset/problem/1116/C2", "name": "``Is the bit string periodic?'' oracle", "tags": [], "problem_rating": [null], "solved_by": "x183"},
{"url": "https://codeforces.com//problemset/problem/1116/C1", "name": "Alternating bits oracle", "tags": [], "problem_rating": [null], "solved_by": "x262"},
{"url": "https://codeforces.com//problemset/problem/1116/B2", "name": "Not A, not B or not C?", "tags": [], "problem_rating": [null], "solved_by": "x56"},
{"url": "https://codeforces.com//problemset/problem/1116/B1", "name": "Distinguish three-qubit states", "tags": [], "problem_rating": [null], "solved_by": "x130"},
{"url": "https://codeforces.com//problemset/problem/1116/A2", "name": "Generate equal superposition of four basis states", "tags": [], "problem_rating": [null], "solved_by": "x177"},
{"url": "https://codeforces.com//problemset/problem/1116/A1", "name": "Generate state |00⟩ + |01⟩ + |10⟩", "tags": [], "problem_rating": [null], "solved_by": "x321"},
{"url": "https://codeforces.com//problemset/problem/1115/U3", "name": "Block unitary", "tags": ["*special problem"], "problem_rating": "1700", "solved_by": "x197"},
{"url": "https://codeforces.com//problemset/problem/1115/U2", "name": "Chessboard unitary", "tags": ["*special problem"], "problem_rating": "1600", "solved_by": "x232"},
{"url": "https://codeforces.com//problemset/problem/1115/U1", "name": "Anti-diagonal unitary", "tags": ["*special problem"], "problem_rating": "1500", "solved_by": "x254"},
{"url": "https://codeforces.com//problemset/problem/1115/G3", "name": "Palindrome checker oracle", "tags": ["*special problem"], "problem_rating": "1600", "solved_by": "x229"},
{"url": "https://codeforces.com//problemset/problem/1115/G2", "name": "OR oracle", "tags": ["*special problem"], "problem_rating": "1600", "solved_by": "x310"},
{"url": "https://codeforces.com//problemset/problem/1115/G1", "name": "AND oracle", "tags": ["*special problem"], "problem_rating": "1100", "solved_by": "x385"},
{"url": "https://codeforces.com//problemset/problem/1114/F", "name": "Please, another Queries on Array?", "tags": ["bitmasks", "data structures", "divide and conquer", "math", "number theory"], "problem_rating": "2400", "solved_by": "x1882"},
{"url": "https://codeforces.com//problemset/problem/1114/E", "name": "Arithmetic Progression", "tags": ["binary search", "interactive", "number theory", "probabilities"], "problem_rating": "2200", "solved_by": "x2802"},
{"url": "https://codeforces.com//problemset/problem/1114/D", "name": "Flood Fill", "tags": ["dp"], "problem_rating": "1900", "solved_by": "x6666"},
{"url": "https://codeforces.com//problemset/problem/1114/C", "name": "Trailing Loves (or L'oeufs?)", "tags": ["brute force", "implementation", "math", "number theory"], "problem_rating": "1700", "solved_by": "x7305"},
{"url": "https://codeforces.com//problemset/problem/1114/B", "name": "Yet Another Array Partitioning Task", "tags": ["constructive algorithms", "greedy", "sortings"], "problem_rating": "1500", "solved_by": "x8903"},
{"url": "https://codeforces.com//problemset/problem/1114/A", "name": "Got Any Grapes?", "tags": ["brute force", "greedy", "implementation"], "problem_rating": "800", "solved_by": "x18448"},
{"url": "https://codeforces.com//problemset/problem/1113/B", "name": "Sasha and Magnetic Machines", "tags": ["greedy", "number theory"], "problem_rating": "1300", "solved_by": "x7698"},
{"url": "https://codeforces.com//problemset/problem/1113/A", "name": "Sasha and His Trip", "tags": ["dp", "greedy", "math"], "problem_rating": "900", "solved_by": "x17150"},
{"url": "https://codeforces.com//problemset/problem/1111/E", "name": "Tree", "tags": ["data structures", "dfs and similar", "dp", "graphs", "trees"], "problem_rating": "2500", "solved_by": "x893"},
{"url": "https://codeforces.com//problemset/problem/1111/D", "name": "Destroy the Colony", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2600", "solved_by": "x949"},
{"url": "https://codeforces.com//problemset/problem/1111/C", "name": "Creative Snap", "tags": ["binary search", "brute force", "divide and conquer", "math"], "problem_rating": "1700", "solved_by": "x6165"},
{"url": "https://codeforces.com//problemset/problem/1111/B", "name": "Average Superhero Gang Power", "tags": ["brute force", "implementation", "math"], "problem_rating": "1700", "solved_by": "x6218"},
{"url": "https://codeforces.com//problemset/problem/1111/A", "name": "Superhero Transformation", "tags": ["implementation", "strings"], "problem_rating": "1000", "solved_by": "x16749"},
{"url": "https://codeforces.com//problemset/problem/1110/H", "name": "Modest Substrings", "tags": ["dp", "strings"], "problem_rating": "3500", "solved_by": "x279"},
{"url": "https://codeforces.com//problemset/problem/1110/G", "name": "Tree-Tac-Toe", "tags": ["constructive algorithms", "games", "trees"], "problem_rating": "3100", "solved_by": "x613"},
{"url": "https://codeforces.com//problemset/problem/1110/F", "name": "Nearest Leaf", "tags": ["data structures", "trees"], "problem_rating": "2600", "solved_by": "x1700"},
{"url": "https://codeforces.com//problemset/problem/1110/E", "name": "Magic Stones", "tags": ["constructive algorithms", "math", "sortings"], "problem_rating": "2200", "solved_by": "x3897"},
{"url": "https://codeforces.com//problemset/problem/1110/D", "name": "Jongmah", "tags": ["dp"], "problem_rating": "2200", "solved_by": "x3335"},
{"url": "https://codeforces.com//problemset/problem/1110/C", "name": "Meaningless Operations", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "1500", "solved_by": "x9126"},
{"url": "https://codeforces.com//problemset/problem/1110/B", "name": "Tape", "tags": ["greedy", "sortings"], "problem_rating": "1400", "solved_by": "x11039"},
{"url": "https://codeforces.com//problemset/problem/1110/A", "name": "Parity", "tags": ["math"], "problem_rating": "900", "solved_by": "x14765"},
{"url": "https://codeforces.com//problemset/problem/1109/F", "name": "Sasha and Algorithm of Silence's Sounds", "tags": ["data structures", "trees"], "problem_rating": "3200", "solved_by": "x289"},
{"url": "https://codeforces.com//problemset/problem/1109/E", "name": "Sasha and a Very Easy Test", "tags": ["data structures", "number theory"], "problem_rating": "2700", "solved_by": "x498"},
{"url": "https://codeforces.com//problemset/problem/1109/D", "name": "Sasha and Interesting Fact from Graph Theory", "tags": ["brute force", "combinatorics", "dp", "math", "trees"], "problem_rating": "2400", "solved_by": "x1283"},
{"url": "https://codeforces.com//problemset/problem/1109/C", "name": "Sasha and a Patient Friend", "tags": ["binary search", "data structures", "implementation"], "problem_rating": "2800", "solved_by": "x249"},
{"url": "https://codeforces.com//problemset/problem/1109/B", "name": "Sasha and One More Name", "tags": ["constructive algorithms", "hashing", "strings"], "problem_rating": "1800", "solved_by": "x4297"},
{"url": "https://codeforces.com//problemset/problem/1109/A", "name": "Sasha and a Bit of Relax", "tags": ["dp", "implementation"], "problem_rating": "1600", "solved_by": "x8434"},
{"url": "https://codeforces.com//problemset/problem/1108/F", "name": "MST Unification", "tags": ["binary search", "dsu", "graphs", "greedy"], "problem_rating": "2100", "solved_by": "x2799"},
{"url": "https://codeforces.com//problemset/problem/1108/E2", "name": "Array and Segments (Hard version)", "tags": ["data structures", "implementation"], "problem_rating": "2100", "solved_by": "x2151"},
{"url": "https://codeforces.com//problemset/problem/1108/E1", "name": "Array and Segments (Easy version)", "tags": ["brute force", "greedy", "implementation"], "problem_rating": "1800", "solved_by": "x4458"},
{"url": "https://codeforces.com//problemset/problem/1108/D", "name": "Diverse Garland", "tags": ["constructive algorithms", "dp", "greedy"], "problem_rating": "1400", "solved_by": "x14890"},
{"url": "https://codeforces.com//problemset/problem/1108/C", "name": "Nice Garland", "tags": ["brute force", "greedy", "math"], "problem_rating": "1300", "solved_by": "x11863"},
{"url": "https://codeforces.com//problemset/problem/1108/B", "name": "Divisors of Two Integers", "tags": ["brute force", "greedy", "math", "number theory"], "problem_rating": "1100", "solved_by": "x22887"},
{"url": "https://codeforces.com//problemset/problem/1108/A", "name": "Two distinct points", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x21559"},
{"url": "https://codeforces.com//problemset/problem/1107/G", "name": "Vasya and Maximum Profit", "tags": ["binary search", "constructive algorithms", "data structures", "dp", "dsu"], "problem_rating": "2400", "solved_by": "x1027"},
{"url": "https://codeforces.com//problemset/problem/1107/F", "name": "Vasya and Endless Credits", "tags": ["dp", "flows", "graph matchings", "graphs", "sortings"], "problem_rating": "2600", "solved_by": "x748"},
{"url": "https://codeforces.com//problemset/problem/1107/E", "name": "Vasya and Binary String", "tags": ["dp"], "problem_rating": "2400", "solved_by": "x2231"},
{"url": "https://codeforces.com//problemset/problem/1107/D", "name": "Compression", "tags": ["dp", "implementation", "math", "number theory"], "problem_rating": "1800", "solved_by": "x3700"},
{"url": "https://codeforces.com//problemset/problem/1107/C", "name": "Brutality", "tags": ["greedy", "sortings", "two pointers"], "problem_rating": "1300", "solved_by": "x9871"},
{"url": "https://codeforces.com//problemset/problem/1107/B", "name": "Digital root", "tags": ["math", "number theory"], "problem_rating": "1000", "solved_by": "x15340"},
{"url": "https://codeforces.com//problemset/problem/1107/A", "name": "Digits Sequence Dividing", "tags": ["greedy", "strings"], "problem_rating": "900", "solved_by": "x11988"},
{"url": "https://codeforces.com//problemset/problem/1106/F", "name": "Lunar New Year and a Recursive Sequence", "tags": ["math", "matrices", "number theory"], "problem_rating": "2400", "solved_by": "x962"},
{"url": "https://codeforces.com//problemset/problem/1106/E", "name": "Lunar New Year and Red Envelopes", "tags": ["data structures", "dp"], "problem_rating": "2100", "solved_by": "x2513"},
{"url": "https://codeforces.com//problemset/problem/1106/D", "name": "Lunar New Year and a Wander", "tags": ["data structures", "dfs and similar", "graphs", "greedy", "shortest paths"], "problem_rating": "1500", "solved_by": "x14325"},
{"url": "https://codeforces.com//problemset/problem/1106/C", "name": "Lunar New Year and Number Division", "tags": ["greedy", "implementation", "math", "sortings"], "problem_rating": "900", "solved_by": "x14526"},
{"url": "https://codeforces.com//problemset/problem/1106/B", "name": "Lunar New Year and Food Ordering", "tags": ["data structures", "implementation"], "problem_rating": "1500", "solved_by": "x6717"},
{"url": "https://codeforces.com//problemset/problem/1106/A", "name": "Lunar New Year and Cross Counting", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x12310"},
{"url": "https://codeforces.com//problemset/problem/1105/E", "name": "Helping Hiasat", "tags": ["bitmasks", "brute force", "dp", "meet-in-the-middle"], "problem_rating": "2200", "solved_by": "x1615"},
{"url": "https://codeforces.com//problemset/problem/1105/D", "name": "Kilani and the Game", "tags": ["dfs and similar", "graphs", "implementation", "shortest paths"], "problem_rating": "1900", "solved_by": "x4023"},
{"url": "https://codeforces.com//problemset/problem/1105/C", "name": "Ayoub and Lost Array", "tags": ["combinatorics", "dp", "math"], "problem_rating": "1500", "solved_by": "x10256"},
{"url": "https://codeforces.com//problemset/problem/1105/B", "name": "Zuhair and Strings", "tags": ["brute force", "implementation", "strings"], "problem_rating": "1100", "solved_by": "x9846"},
{"url": "https://codeforces.com//problemset/problem/1105/A", "name": "Salem and Sticks", "tags": ["brute force", "implementation"], "problem_rating": "1100", "solved_by": "x10861"},
{"url": "https://codeforces.com//problemset/problem/1104/B", "name": "Game with string", "tags": ["data structures", "implementation", "math"], "problem_rating": "1200", "solved_by": "x14683"},
{"url": "https://codeforces.com//problemset/problem/1104/A", "name": "Splitting into digits", "tags": ["constructive algorithms", "implementation", "math"], "problem_rating": "800", "solved_by": "x15360"},
{"url": "https://codeforces.com//problemset/problem/1103/E", "name": "Radix sum", "tags": ["fft", "math", "number theory"], "problem_rating": "3400", "solved_by": "x224"},
{"url": "https://codeforces.com//problemset/problem/1103/D", "name": "Professional layer", "tags": ["bitmasks", "dp"], "problem_rating": "3100", "solved_by": "x404"},
{"url": "https://codeforces.com//problemset/problem/1103/C", "name": "Johnny Solving", "tags": ["constructive algorithms", "dfs and similar", "graphs", "math"], "problem_rating": "2700", "solved_by": "x823"},
{"url": "https://codeforces.com//problemset/problem/1103/B", "name": "Game with modulo", "tags": ["binary search", "constructive algorithms", "interactive"], "problem_rating": "2000", "solved_by": "x3243"},
{"url": "https://codeforces.com//problemset/problem/1103/A", "name": "Grid game", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1400", "solved_by": "x9670"},
{"url": "https://codeforces.com//problemset/problem/1102/F", "name": "Elongated Matrix", "tags": ["binary search", "bitmasks", "brute force", "dp", "graphs"], "problem_rating": "2000", "solved_by": "x1958"},
{"url": "https://codeforces.com//problemset/problem/1102/E", "name": "Monotonic Renumeration", "tags": ["combinatorics", "sortings"], "problem_rating": "1700", "solved_by": "x5800"},
{"url": "https://codeforces.com//problemset/problem/1102/D", "name": "Balanced Ternary String", "tags": ["greedy", "strings"], "problem_rating": "1500", "solved_by": "x7909"},
{"url": "https://codeforces.com//problemset/problem/1102/C", "name": "Doors Breaking and Repairing", "tags": ["games"], "problem_rating": "1200", "solved_by": "x12924"},
{"url": "https://codeforces.com//problemset/problem/1102/B", "name": "Array K-Coloring", "tags": ["greedy", "sortings"], "problem_rating": "1400", "solved_by": "x10293"},
{"url": "https://codeforces.com//problemset/problem/1102/A", "name": "Integer Sequence Dividing", "tags": ["math"], "problem_rating": "800", "solved_by": "x23972"},
{"url": "https://codeforces.com//problemset/problem/1101/G", "name": "(Zero XOR Subset)-less", "tags": ["math", "matrices"], "problem_rating": "2300", "solved_by": "x1656"},
{"url": "https://codeforces.com//problemset/problem/1101/F", "name": "Trucks and Cities", "tags": ["binary search", "dp"], "problem_rating": "2400", "solved_by": "x1302"},
{"url": "https://codeforces.com//problemset/problem/1101/E", "name": "Polycarp's New Job", "tags": ["implementation"], "problem_rating": "1500", "solved_by": "x7772"},
{"url": "https://codeforces.com//problemset/problem/1101/D", "name": "GCD Counting", "tags": ["data structures", "dfs and similar", "dp", "number theory", "trees"], "problem_rating": "2000", "solved_by": "x4504"},
{"url": "https://codeforces.com//problemset/problem/1101/C", "name": "Division and Union", "tags": ["sortings"], "problem_rating": "1500", "solved_by": "x7821"},
{"url": "https://codeforces.com//problemset/problem/1101/B", "name": "Accordion", "tags": ["greedy", "implementation"], "problem_rating": "1300", "solved_by": "x10423"},
{"url": "https://codeforces.com//problemset/problem/1101/A", "name": "Minimum Integer", "tags": ["math"], "problem_rating": "1000", "solved_by": "x16893"},
{"url": "https://codeforces.com//problemset/problem/1100/F", "name": "Ivan and Burgers", "tags": ["data structures", "divide and conquer", "greedy", "math"], "problem_rating": "2500", "solved_by": "x2192"},
{"url": "https://codeforces.com//problemset/problem/1100/E", "name": "Andrew and Taxi", "tags": ["binary search", "dfs and similar", "graphs"], "problem_rating": "2200", "solved_by": "x2319"},
{"url": "https://codeforces.com//problemset/problem/1100/D", "name": "Dasha and Chess", "tags": ["constructive algorithms", "games", "interactive"], "problem_rating": "2500", "solved_by": "x840"},
{"url": "https://codeforces.com//problemset/problem/1100/C", "name": "NN and the Optical Illusion", "tags": ["binary search", "geometry", "math"], "problem_rating": "1200", "solved_by": "x9894"},
{"url": "https://codeforces.com//problemset/problem/1100/B", "name": "Build a Contest", "tags": ["data structures", "implementation"], "problem_rating": "1300", "solved_by": "x11047"},
{"url": "https://codeforces.com//problemset/problem/1100/A", "name": "Roman and Browser", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x10109"},
{"url": "https://codeforces.com//problemset/problem/1099/F", "name": "Cookies", "tags": ["binary search", "data structures", "dfs and similar", "dp", "games", "trees"], "problem_rating": "2400", "solved_by": "x914"},
{"url": "https://codeforces.com//problemset/problem/1099/C", "name": "Postcard", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1200", "solved_by": "x9516"},
{"url": "https://codeforces.com//problemset/problem/1099/B", "name": "Squares and Segments", "tags": ["binary search", "constructive algorithms", "math"], "problem_rating": "1100", "solved_by": "x11068"},
{"url": "https://codeforces.com//problemset/problem/1099/A", "name": "Snowball", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x12835"},
{"url": "https://codeforces.com//problemset/problem/1098/F", "name": "Ж-function", "tags": ["string suffix structures", "strings"], "problem_rating": "3500", "solved_by": "x218"},
{"url": "https://codeforces.com//problemset/problem/1098/E", "name": "Fedya the Potter", "tags": ["binary search", "implementation", "math", "number theory"], "problem_rating": "3400", "solved_by": "x220"},
{"url": "https://codeforces.com//problemset/problem/1098/D", "name": "Eels", "tags": ["data structures"], "problem_rating": "2800", "solved_by": "x717"},
{"url": "https://codeforces.com//problemset/problem/1098/C", "name": "Construct a tree", "tags": ["binary search", "constructive algorithms", "dfs and similar", "graphs", "greedy", "trees"], "problem_rating": "2400", "solved_by": "x931"},
{"url": "https://codeforces.com//problemset/problem/1098/B", "name": "Nice table", "tags": ["brute force", "constructive algorithms", "greedy", "math"], "problem_rating": "2100", "solved_by": "x1670"},
{"url": "https://codeforces.com//problemset/problem/1098/A", "name": "Sum in the tree", "tags": ["constructive algorithms", "dfs and similar", "greedy", "trees"], "problem_rating": "1600", "solved_by": "x8661"},
{"url": "https://codeforces.com//problemset/problem/1097/H", "name": "Mateusz and an Infinite Sequence", "tags": ["bitmasks", "brute force", "dp", "strings"], "problem_rating": "3400", "solved_by": "x94"},
{"url": "https://codeforces.com//problemset/problem/1097/G", "name": "Vladislav and a Great Legend", "tags": ["combinatorics", "dp", "trees"], "problem_rating": "3000", "solved_by": "x694"},
{"url": "https://codeforces.com//problemset/problem/1097/F", "name": "Alex and a TV Show", "tags": ["bitmasks", "combinatorics", "number theory"], "problem_rating": "2500", "solved_by": "x1223"},
{"url": "https://codeforces.com//problemset/problem/1097/E", "name": "Egor and an RPG game", "tags": ["constructive algorithms", "greedy"], "problem_rating": "3400", "solved_by": "x479"},
{"url": "https://codeforces.com//problemset/problem/1097/D", "name": "Makoto and a Blackboard", "tags": ["dp", "math", "number theory", "probabilities"], "problem_rating": "2200", "solved_by": "x2781"},
{"url": "https://codeforces.com//problemset/problem/1097/C", "name": "Yuhao and a Parenthesis", "tags": ["greedy", "implementation"], "problem_rating": "1400", "solved_by": "x8406"},
{"url": "https://codeforces.com//problemset/problem/1097/B", "name": "Petr and a Combination Lock", "tags": ["bitmasks", "brute force", "dp"], "problem_rating": "1200", "solved_by": "x27742"},
{"url": "https://codeforces.com//problemset/problem/1097/A", "name": "Gennady and a Card Game", "tags": ["brute force", "implementation"], "problem_rating": "800", "solved_by": "x38042"},
{"url": "https://codeforces.com//problemset/problem/1096/G", "name": "Lucky Tickets", "tags": ["divide and conquer", "dp", "fft"], "problem_rating": "2400", "solved_by": "x1425"},
{"url": "https://codeforces.com//problemset/problem/1096/F", "name": "Inversion Expectation", "tags": ["dp", "math", "probabilities"], "problem_rating": "2300", "solved_by": "x1625"},
{"url": "https://codeforces.com//problemset/problem/1096/E", "name": "The Top Scorer", "tags": ["combinatorics", "dp", "math", "probabilities"], "problem_rating": "2500", "solved_by": "x941"},
{"url": "https://codeforces.com//problemset/problem/1096/D", "name": "Easy Problem", "tags": ["dp"], "problem_rating": "1800", "solved_by": "x7802"},
{"url": "https://codeforces.com//problemset/problem/1096/C", "name": "Polygon for the Angle", "tags": ["brute force", "geometry"], "problem_rating": "1600", "solved_by": "x6718"},
{"url": "https://codeforces.com//problemset/problem/1096/B", "name": "Substring Removal", "tags": ["combinatorics", "math", "strings"], "problem_rating": "1300", "solved_by": "x10477"},
{"url": "https://codeforces.com//problemset/problem/1096/A", "name": "Find Divisible", "tags": ["greedy", "implementation", "math"], "problem_rating": "800", "solved_by": "x18613"},
{"url": "https://codeforces.com//problemset/problem/1095/F", "name": "Make It Connected", "tags": ["dsu", "graphs", "greedy"], "problem_rating": "1900", "solved_by": "x6009"},
{"url": "https://codeforces.com//problemset/problem/1095/E", "name": "Almost Regular Bracket Sequence", "tags": ["implementation"], "problem_rating": "1900", "solved_by": "x4065"},
{"url": "https://codeforces.com//problemset/problem/1095/D", "name": "Circular Dance", "tags": ["implementation"], "problem_rating": "1600", "solved_by": "x7483"},
{"url": "https://codeforces.com//problemset/problem/1095/C", "name": "Powers Of Two", "tags": ["bitmasks", "greedy"], "problem_rating": "1400", "solved_by": "x16375"},
{"url": "https://codeforces.com//problemset/problem/1095/B", "name": "Array Stabilization", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x21601"},
{"url": "https://codeforces.com//problemset/problem/1095/A", "name": "Repeating Cipher", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x30651"},
{"url": "https://codeforces.com//problemset/problem/1093/G", "name": "Multidimensional Queries", "tags": ["bitmasks", "data structures"], "problem_rating": "2300", "solved_by": "x1853"},
{"url": "https://codeforces.com//problemset/problem/1093/F", "name": "Vasya and Array", "tags": ["dp"], "problem_rating": "2400", "solved_by": "x989"},
{"url": "https://codeforces.com//problemset/problem/1093/E", "name": "Intersection of Permutations", "tags": ["data structures"], "problem_rating": "2400", "solved_by": "x1558"},
{"url": "https://codeforces.com//problemset/problem/1093/D", "name": "Beautiful Graph", "tags": ["dfs and similar", "graphs"], "problem_rating": "1700", "solved_by": "x8752"},
{"url": "https://codeforces.com//problemset/problem/1093/C", "name": "Mishka and the Last Exam", "tags": ["greedy"], "problem_rating": "1300", "solved_by": "x9324"},
{"url": "https://codeforces.com//problemset/problem/1093/B", "name": "Letters Rearranging", "tags": ["constructive algorithms", "greedy", "sortings", "strings"], "problem_rating": "900", "solved_by": "x16354"},
{"url": "https://codeforces.com//problemset/problem/1093/A", "name": "Dice Rolling", "tags": ["math"], "problem_rating": "800", "solved_by": "x17627"},
{"url": "https://codeforces.com//problemset/problem/1092/F", "name": "Tree with Maximum Cost", "tags": ["dfs and similar", "dp", "trees"], "problem_rating": "1900", "solved_by": "x7642"},
{"url": "https://codeforces.com//problemset/problem/1092/E", "name": "Minimal Diameter Forest", "tags": ["constructive algorithms", "dfs and similar", "greedy", "trees"], "problem_rating": "2000", "solved_by": "x1669"},
{"url": "https://codeforces.com//problemset/problem/1092/D2", "name": "Great Vova Wall (Version 2)", "tags": ["data structures", "implementation"], "problem_rating": "2200", "solved_by": "x2927"},
{"url": "https://codeforces.com//problemset/problem/1092/D1", "name": "Great Vova Wall (Version 1)", "tags": ["greedy", "implementation", "math"], "problem_rating": "2200", "solved_by": "x4602"},
{"url": "https://codeforces.com//problemset/problem/1092/C", "name": "Prefixes and Suffixes", "tags": ["strings"], "problem_rating": "1700", "solved_by": "x5853"},
{"url": "https://codeforces.com//problemset/problem/1092/B", "name": "Teams Forming", "tags": ["sortings"], "problem_rating": "800", "solved_by": "x26021"},
{"url": "https://codeforces.com//problemset/problem/1092/A", "name": "Uniform String", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x16117"},
{"url": "https://codeforces.com//problemset/problem/1091/H", "name": "New Year and the Tricolore Recreation", "tags": ["games"], "problem_rating": "3200", "solved_by": "x427"},
{"url": "https://codeforces.com//problemset/problem/1091/G", "name": "New Year and the Factorisation Collaboration", "tags": ["interactive", "math", "number theory"], "problem_rating": "3200", "solved_by": "x201"},
{"url": "https://codeforces.com//problemset/problem/1091/F", "name": "New Year and the Mallard Expedition", "tags": ["constructive algorithms", "greedy"], "problem_rating": "2600", "solved_by": "x797"},
{"url": "https://codeforces.com//problemset/problem/1091/E", "name": "New Year and the Acquaintance Estimation", "tags": ["binary search", "data structures", "graphs", "greedy", "implementation", "math", "sortings"], "problem_rating": "2400", "solved_by": "x990"},
{"url": "https://codeforces.com//problemset/problem/1091/D", "name": "New Year and the Permutation Concatenation", "tags": ["combinatorics", "dp", "math"], "problem_rating": "1700", "solved_by": "x6675"},
{"url": "https://codeforces.com//problemset/problem/1091/C", "name": "New Year and the Sphere Transmission", "tags": ["math", "number theory"], "problem_rating": "1400", "solved_by": "x9906"},
{"url": "https://codeforces.com//problemset/problem/1091/B", "name": "New Year and the Treasure Geolocation", "tags": ["brute force", "constructive algorithms", "greedy", "implementation"], "problem_rating": "1200", "solved_by": "x10621"},
{"url": "https://codeforces.com//problemset/problem/1091/A", "name": "New Year and the Christmas Ornament", "tags": ["brute force", "implementation", "math"], "problem_rating": "800", "solved_by": "x17394"},
{"url": "https://codeforces.com//problemset/problem/1090/M", "name": "The Pleasant Walk", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x6092"},
{"url": "https://codeforces.com//problemset/problem/1090/L", "name": "Berland University", "tags": ["greedy", "math"], "problem_rating": "2000", "solved_by": "x1252"},
{"url": "https://codeforces.com//problemset/problem/1090/K", "name": "Right Expansion Of The Mind", "tags": ["math"], "problem_rating": "2000", "solved_by": "x1058"},
{"url": "https://codeforces.com//problemset/problem/1090/J", "name": "Two Prefixes", "tags": ["strings"], "problem_rating": "2600", "solved_by": "x422"},
{"url": "https://codeforces.com//problemset/problem/1090/I", "name": "Minimal Product", "tags": [], "problem_rating": "2000", "solved_by": "x1033"},
{"url": "https://codeforces.com//problemset/problem/1090/H", "name": "Linearization", "tags": ["graphs"], "problem_rating": "2900", "solved_by": "x90"},
{"url": "https://codeforces.com//problemset/problem/1090/G", "name": "Combostone", "tags": ["games", "implementation"], "problem_rating": "2500", "solved_by": "x105"},
{"url": "https://codeforces.com//problemset/problem/1090/F", "name": "How to Learn You Score", "tags": ["constructive algorithms", "interactive"], "problem_rating": "2600", "solved_by": "x315"},
{"url": "https://codeforces.com//problemset/problem/1090/E", "name": "Horseback Riding", "tags": ["flows", "graphs"], "problem_rating": "2300", "solved_by": "x586"},
{"url": "https://codeforces.com//problemset/problem/1090/D", "name": "Similar Arrays", "tags": ["constructive algorithms"], "problem_rating": "1800", "solved_by": "x2001"},
{"url": "https://codeforces.com//problemset/problem/1090/C", "name": "New Year Presents", "tags": ["constructive algorithms", "data structures"], "problem_rating": "2400", "solved_by": "x487"},
{"url": "https://codeforces.com//problemset/problem/1090/B", "name": "LaTeX Expert", "tags": [], "problem_rating": "1900", "solved_by": "x1385"},
{"url": "https://codeforces.com//problemset/problem/1090/A", "name": "Company Merging", "tags": ["greedy"], "problem_rating": "1300", "solved_by": "x4078"},
{"url": "https://codeforces.com//problemset/problem/1089/M", "name": "Minegraphed", "tags": ["constructive algorithms", "graphs"], "problem_rating": "2400", "solved_by": "x586"},
{"url": "https://codeforces.com//problemset/problem/1089/L", "name": "Lazyland", "tags": [], "problem_rating": "900", "solved_by": "x3870"},
{"url": "https://codeforces.com//problemset/problem/1089/K", "name": "King Kog's Reception", "tags": ["data structures"], "problem_rating": "2400", "solved_by": "x1088"},
{"url": "https://codeforces.com//problemset/problem/1089/J", "name": "JS Minification", "tags": ["greedy", "implementation"], "problem_rating": "3200", "solved_by": "x121"},
{"url": "https://codeforces.com//problemset/problem/1089/I", "name": "Interval-Free Permutations", "tags": ["combinatorics"], "problem_rating": "2600", "solved_by": "x370"},
{"url": "https://codeforces.com//problemset/problem/1089/H", "name": "Harder Satisfiability", "tags": ["2-sat", "dfs and similar", "graphs"], "problem_rating": "3400", "solved_by": "x110"},
{"url": "https://codeforces.com//problemset/problem/1089/G", "name": "Guest Student", "tags": ["math"], "problem_rating": "1500", "solved_by": "x2869"},
{"url": "https://codeforces.com//problemset/problem/1089/F", "name": "Fractions", "tags": ["math"], "problem_rating": "1900", "solved_by": "x1907"},
{"url": "https://codeforces.com//problemset/problem/1089/E", "name": "Easy Chess", "tags": ["constructive algorithms"], "problem_rating": "1700", "solved_by": "x1962"},
{"url": "https://codeforces.com//problemset/problem/1089/D", "name": "Distance Sum", "tags": ["graphs"], "problem_rating": "3100", "solved_by": "x99"},
{"url": "https://codeforces.com//problemset/problem/1089/C", "name": "Cactus Search", "tags": ["interactive"], "problem_rating": "2500", "solved_by": "x404"},
{"url": "https://codeforces.com//problemset/problem/1089/B", "name": "Bimatching", "tags": ["graphs"], "problem_rating": "3200", "solved_by": "x216"},
{"url": "https://codeforces.com//problemset/problem/1089/A", "name": "Alice the Fan", "tags": ["dp"], "problem_rating": "2200", "solved_by": "x1114"},
{"url": "https://codeforces.com//problemset/problem/1088/F", "name": "Ehab and a weird weight formula", "tags": ["data structures", "trees"], "problem_rating": "2800", "solved_by": "x505"},
{"url": "https://codeforces.com//problemset/problem/1088/E", "name": "Ehab and a component choosing problem", "tags": ["dp", "greedy", "math", "trees"], "problem_rating": "2400", "solved_by": "x1462"},
{"url": "https://codeforces.com//problemset/problem/1088/D", "name": "Ehab and another another xor problem", "tags": ["bitmasks", "constructive algorithms", "implementation", "interactive"], "problem_rating": "2000", "solved_by": "x2796"},
{"url": "https://codeforces.com//problemset/problem/1088/C", "name": "Ehab and a 2-operation task", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1400", "solved_by": "x8014"},
{"url": "https://codeforces.com//problemset/problem/1088/B", "name": "Ehab and subtraction", "tags": ["implementation", "sortings"], "problem_rating": "1000", "solved_by": "x12491"},
{"url": "https://codeforces.com//problemset/problem/1088/A", "name": "Ehab and another construction problem", "tags": ["brute force", "constructive algorithms"], "problem_rating": "800", "solved_by": "x16629"},
{"url": "https://codeforces.com//problemset/problem/1086/F", "name": "Forest Fires", "tags": ["math"], "problem_rating": "3500", "solved_by": "x231"},
{"url": "https://codeforces.com//problemset/problem/1085/G", "name": "Beautiful Matrix", "tags": ["combinatorics", "data structures", "dp"], "problem_rating": "2900", "solved_by": "x511"},
{"url": "https://codeforces.com//problemset/problem/1085/F", "name": "Rock-Paper-Scissors Champion", "tags": [], "problem_rating": "2500", "solved_by": "x581"},
{"url": "https://codeforces.com//problemset/problem/1085/E", "name": "Vasya and Templates", "tags": ["greedy", "implementation", "strings"], "problem_rating": "2300", "solved_by": "x930"},
{"url": "https://codeforces.com//problemset/problem/1085/D", "name": "Minimum Diameter Tree", "tags": ["constructive algorithms", "implementation", "trees"], "problem_rating": "1700", "solved_by": "x5382"},
{"url": "https://codeforces.com//problemset/problem/1085/C", "name": "Connect Three", "tags": ["implementation", "math"], "problem_rating": "1600", "solved_by": "x5390"},
{"url": "https://codeforces.com//problemset/problem/1085/B", "name": "Div Times Mod", "tags": ["math"], "problem_rating": "1100", "solved_by": "x9233"},
{"url": "https://codeforces.com//problemset/problem/1085/A", "name": "Right-Left Cipher", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x12097"},
{"url": "https://codeforces.com//problemset/problem/1084/C", "name": "The Fair Nut and String", "tags": ["combinatorics", "dp", "implementation"], "problem_rating": "1500", "solved_by": "x7864"},
{"url": "https://codeforces.com//problemset/problem/1084/B", "name": "Kvass and the Fair Nut", "tags": ["greedy", "implementation"], "problem_rating": "1200", "solved_by": "x7771"},
{"url": "https://codeforces.com//problemset/problem/1084/A", "name": "The Fair Nut and Elevator", "tags": ["brute force", "implementation"], "problem_rating": "1000", "solved_by": "x7857"},
{"url": "https://codeforces.com//problemset/problem/1083/F", "name": "The Fair Nut and Amusing Xor", "tags": ["data structures"], "problem_rating": "3300", "solved_by": "x270"},
{"url": "https://codeforces.com//problemset/problem/1083/E", "name": "The Fair Nut and Rectangles", "tags": ["data structures", "dp", "geometry"], "problem_rating": "2400", "solved_by": "x4083"},
{"url": "https://codeforces.com//problemset/problem/1083/D", "name": "The Fair Nut's getting crazy", "tags": ["data structures", "implementation"], "problem_rating": "3500", "solved_by": "x234"},
{"url": "https://codeforces.com//problemset/problem/1083/C", "name": "Max Mex", "tags": ["data structures", "trees"], "problem_rating": "2900", "solved_by": "x860"},
{"url": "https://codeforces.com//problemset/problem/1083/B", "name": "The Fair Nut and Strings", "tags": ["greedy", "strings"], "problem_rating": "2000", "solved_by": "x1890"},
{"url": "https://codeforces.com//problemset/problem/1083/A", "name": "The Fair Nut and the Best Path", "tags": ["data structures", "dp", "trees"], "problem_rating": "1800", "solved_by": "x5313"},
{"url": "https://codeforces.com//problemset/problem/1082/G", "name": "Petya and Graph", "tags": ["flows", "graphs"], "problem_rating": "2400", "solved_by": "x2015"},
{"url": "https://codeforces.com//problemset/problem/1082/F", "name": "Speed Dial", "tags": ["dp", "strings", "trees"], "problem_rating": "2800", "solved_by": "x414"},
{"url": "https://codeforces.com//problemset/problem/1082/E", "name": "Increasing Frequency", "tags": ["binary search", "dp", "greedy"], "problem_rating": "2000", "solved_by": "x4257"},
{"url": "https://codeforces.com//problemset/problem/1082/D", "name": "Maximum Diameter Graph", "tags": ["constructive algorithms", "graphs", "implementation"], "problem_rating": "1800", "solved_by": "x3768"},
{"url": "https://codeforces.com//problemset/problem/1082/C", "name": "Multi-Subject Competition", "tags": ["greedy", "sortings"], "problem_rating": "1600", "solved_by": "x5668"},
{"url": "https://codeforces.com//problemset/problem/1082/B", "name": "Vova and Trophies", "tags": ["greedy"], "problem_rating": "1600", "solved_by": "x7462"},
{"url": "https://codeforces.com//problemset/problem/1082/A", "name": "Vasya and Book", "tags": ["implementation", "math"], "problem_rating": "1200", "solved_by": "x8493"},
{"url": "https://codeforces.com//problemset/problem/1081/H", "name": "Palindromic Magic", "tags": ["data structures", "hashing", "strings"], "problem_rating": "3500", "solved_by": "x102"},
{"url": "https://codeforces.com//problemset/problem/1081/G", "name": "Mergesort Strikes Back", "tags": ["math", "probabilities"], "problem_rating": "3200", "solved_by": "x344"},
{"url": "https://codeforces.com//problemset/problem/1081/F", "name": "Tricky Interactor", "tags": ["constructive algorithms", "implementation", "interactive"], "problem_rating": "2600", "solved_by": "x456"},
{"url": "https://codeforces.com//problemset/problem/1081/E", "name": "Missing Numbers", "tags": ["binary search", "constructive algorithms", "greedy", "math", "number theory"], "problem_rating": "1900", "solved_by": "x2553"},
{"url": "https://codeforces.com//problemset/problem/1081/D", "name": "Maximum Distance", "tags": ["dsu", "graphs", "shortest paths", "sortings"], "problem_rating": "1800", "solved_by": "x3953"},
{"url": "https://codeforces.com//problemset/problem/1081/C", "name": "Colorful Bricks", "tags": ["combinatorics", "dp", "math"], "problem_rating": "1500", "solved_by": "x7172"},
{"url": "https://codeforces.com//problemset/problem/1081/B", "name": "Farewell Party", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1500", "solved_by": "x4418"},
{"url": "https://codeforces.com//problemset/problem/1081/A", "name": "Definite Game", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x11981"},
{"url": "https://codeforces.com//problemset/problem/1080/F", "name": "Katya and Segments Sets", "tags": ["data structures", "interactive", "sortings"], "problem_rating": "2400", "solved_by": "x693"},
{"url": "https://codeforces.com//problemset/problem/1080/E", "name": "Sonya and Matrix Beauty", "tags": ["strings"], "problem_rating": "2400", "solved_by": "x953"},
{"url": "https://codeforces.com//problemset/problem/1080/D", "name": "Olya and magical square", "tags": ["constructive algorithms", "implementation", "math"], "problem_rating": "2000", "solved_by": "x1531"},
{"url": "https://codeforces.com//problemset/problem/1080/C", "name": "Masha and two friends", "tags": ["implementation"], "problem_rating": "1500", "solved_by": "x4009"},
{"url": "https://codeforces.com//problemset/problem/1080/B", "name": "Margarite and the best present", "tags": ["math"], "problem_rating": "900", "solved_by": "x11701"},
{"url": "https://codeforces.com//problemset/problem/1080/A", "name": "Petya and Origami", "tags": ["math"], "problem_rating": "800", "solved_by": "x17945"},
{"url": "https://codeforces.com//problemset/problem/1078/E", "name": "Negative Time Summation", "tags": ["constructive algorithms"], "problem_rating": "3400", "solved_by": "x87"},
{"url": "https://codeforces.com//problemset/problem/1077/F2", "name": "Pictures with Kittens (hard version)", "tags": ["data structures", "dp"], "problem_rating": "2100", "solved_by": "x3186"},
{"url": "https://codeforces.com//problemset/problem/1077/F1", "name": "Pictures with Kittens (easy version)", "tags": ["dp"], "problem_rating": "1900", "solved_by": "x4306"},
{"url": "https://codeforces.com//problemset/problem/1077/E", "name": "Thematic Contests", "tags": ["greedy", "sortings"], "problem_rating": "1800", "solved_by": "x4619"},
{"url": "https://codeforces.com//problemset/problem/1077/D", "name": "Cutting Out", "tags": ["binary search", "sortings"], "problem_rating": "1600", "solved_by": "x8712"},
{"url": "https://codeforces.com//problemset/problem/1077/C", "name": "Good Array", "tags": [], "problem_rating": "1300", "solved_by": "x16513"},
{"url": "https://codeforces.com//problemset/problem/1077/B", "name": "Disturbed People", "tags": ["greedy"], "problem_rating": "1000", "solved_by": "x18790"},
{"url": "https://codeforces.com//problemset/problem/1077/A", "name": "Frog Jumping", "tags": ["math"], "problem_rating": "800", "solved_by": "x29620"},
{"url": "https://codeforces.com//problemset/problem/1076/G", "name": "Array Game", "tags": ["data structures", "games"], "problem_rating": "3000", "solved_by": "x496"},
{"url": "https://codeforces.com//problemset/problem/1076/F", "name": "Summer Practice Report", "tags": ["dp", "greedy"], "problem_rating": "2500", "solved_by": "x629"},
{"url": "https://codeforces.com//problemset/problem/1076/E", "name": "Vasya and a Tree", "tags": ["data structures", "trees"], "problem_rating": "1900", "solved_by": "x3653"},
{"url": "https://codeforces.com//problemset/problem/1076/D", "name": "Edge Deletion", "tags": ["graphs", "greedy", "shortest paths"], "problem_rating": "1800", "solved_by": "x5020"},
{"url": "https://codeforces.com//problemset/problem/1076/C", "name": "Meme Problem", "tags": ["binary search", "math"], "problem_rating": "1300", "solved_by": "x12265"},
{"url": "https://codeforces.com//problemset/problem/1076/B", "name": "Divisor Subtraction", "tags": ["implementation", "math", "number theory"], "problem_rating": "1200", "solved_by": "x12753"},
{"url": "https://codeforces.com//problemset/problem/1076/A", "name": "Minimizing the String", "tags": ["greedy", "strings"], "problem_rating": "1200", "solved_by": "x12977"},
{"url": "https://codeforces.com//problemset/problem/1075/B", "name": "Taxi drivers and Lyft", "tags": ["implementation", "sortings"], "problem_rating": "1200", "solved_by": "x4208"},
{"url": "https://codeforces.com//problemset/problem/1075/A", "name": "The King's Race", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x8386"},
{"url": "https://codeforces.com//problemset/problem/1073/G", "name": "Yet Another LCP Problem", "tags": ["data structures", "string suffix structures"], "problem_rating": "2600", "solved_by": "x897"},
{"url": "https://codeforces.com//problemset/problem/1073/F", "name": "Choosing Two Paths", "tags": ["dfs and similar", "dp", "greedy", "trees"], "problem_rating": "2500", "solved_by": "x529"},
{"url": "https://codeforces.com//problemset/problem/1073/E", "name": "Segment Sum", "tags": ["bitmasks", "combinatorics", "dp", "math"], "problem_rating": "2300", "solved_by": "x2490"},
{"url": "https://codeforces.com//problemset/problem/1073/D", "name": "Berland Fair", "tags": ["binary search", "brute force", "data structures", "greedy"], "problem_rating": "1700", "solved_by": "x6363"},
{"url": "https://codeforces.com//problemset/problem/1073/C", "name": "Vasya and Robot", "tags": ["binary search", "two pointers"], "problem_rating": "1800", "solved_by": "x4624"},
{"url": "https://codeforces.com//problemset/problem/1073/B", "name": "Vasya and Books", "tags": ["implementation", "math"], "problem_rating": "1000", "solved_by": "x10505"},
{"url": "https://codeforces.com//problemset/problem/1073/A", "name": "Diverse Substring", "tags": ["implementation", "strings"], "problem_rating": "1000", "solved_by": "x15203"},
{"url": "https://codeforces.com//problemset/problem/1071/E", "name": "Rain Protection", "tags": ["binary search", "geometry"], "problem_rating": "3500", "solved_by": "x113"},
{"url": "https://codeforces.com//problemset/problem/1070/M", "name": "Algoland and Berland", "tags": ["constructive algorithms", "divide and conquer", "geometry"], "problem_rating": "3000", "solved_by": "x66"},
{"url": "https://codeforces.com//problemset/problem/1070/L", "name": "Odd Federalization", "tags": ["constructive algorithms"], "problem_rating": "2600", "solved_by": "x293"},
{"url": "https://codeforces.com//problemset/problem/1070/K", "name": "Video Posts", "tags": ["implementation"], "problem_rating": "1100", "solved_by": "x4861"},
{"url": "https://codeforces.com//problemset/problem/1070/J", "name": "Streets and Avenues in Berhattan", "tags": ["dp"], "problem_rating": "2300", "solved_by": "x684"},
{"url": "https://codeforces.com//problemset/problem/1070/I", "name": "Privatization of Roads in Berland", "tags": ["flows", "graph matchings", "graphs"], "problem_rating": "2400", "solved_by": "x583"},
{"url": "https://codeforces.com//problemset/problem/1070/H", "name": "BerOS File Suggestion", "tags": ["brute force", "implementation"], "problem_rating": "1500", "solved_by": "x3632"},
{"url": "https://codeforces.com//problemset/problem/1070/G", "name": "Monsters and Potions", "tags": ["brute force", "dp", "greedy", "implementation"], "problem_rating": "2300", "solved_by": "x824"},
{"url": "https://codeforces.com//problemset/problem/1070/F", "name": "Debate", "tags": ["greedy"], "problem_rating": "1500", "solved_by": "x3579"},
{"url": "https://codeforces.com//problemset/problem/1070/E", "name": "Getting Deals Done", "tags": ["binary search", "data structures"], "problem_rating": "2100", "solved_by": "x1373"},
{"url": "https://codeforces.com//problemset/problem/1070/D", "name": "Garbage Disposal", "tags": ["greedy"], "problem_rating": "1300", "solved_by": "x4875"},
{"url": "https://codeforces.com//problemset/problem/1070/C", "name": "Cloud Computing", "tags": ["data structures", "greedy"], "problem_rating": "2000", "solved_by": "x2010"},
{"url": "https://codeforces.com//problemset/problem/1070/B", "name": "Berkomnadzor", "tags": ["data structures", "greedy"], "problem_rating": "2400", "solved_by": "x518"},
{"url": "https://codeforces.com//problemset/problem/1070/A", "name": "Find a Number", "tags": ["dp", "graphs", "number theory", "shortest paths"], "problem_rating": "2200", "solved_by": "x2289"},
{"url": "https://codeforces.com//problemset/problem/1068/C", "name": "Colored Rooks", "tags": ["constructive algorithms", "graphs"], "problem_rating": "1700", "solved_by": "x3133"},
{"url": "https://codeforces.com//problemset/problem/1068/B", "name": "LCM", "tags": ["math", "number theory"], "problem_rating": "1200", "solved_by": "x11294"},
{"url": "https://codeforces.com//problemset/problem/1068/A", "name": "Birthday", "tags": ["math"], "problem_rating": "1400", "solved_by": "x6731"},
{"url": "https://codeforces.com//problemset/problem/1067/E", "name": "Random Forest Rank", "tags": ["dp", "graph matchings", "math", "trees"], "problem_rating": "2800", "solved_by": "x433"},
{"url": "https://codeforces.com//problemset/problem/1067/D", "name": "Computer Game", "tags": ["dp", "greedy", "math", "probabilities"], "problem_rating": "3100", "solved_by": "x376"},
{"url": "https://codeforces.com//problemset/problem/1067/C", "name": "Knights", "tags": ["constructive algorithms"], "problem_rating": "2600", "solved_by": "x617"},
{"url": "https://codeforces.com//problemset/problem/1067/B", "name": "Multihedgehog", "tags": ["dfs and similar", "graphs", "shortest paths"], "problem_rating": "1800", "solved_by": "x2629"},
{"url": "https://codeforces.com//problemset/problem/1067/A", "name": "Array Without Local Maximums", "tags": ["dp"], "problem_rating": "1900", "solved_by": "x2815"},
{"url": "https://codeforces.com//problemset/problem/1066/F", "name": "Yet another 2D Walking", "tags": ["dp"], "problem_rating": "2100", "solved_by": "x2009"},
{"url": "https://codeforces.com//problemset/problem/1066/E", "name": "Binary Numbers AND Sum", "tags": ["data structures", "implementation", "math"], "problem_rating": "1700", "solved_by": "x6078"},
{"url": "https://codeforces.com//problemset/problem/1066/D", "name": "Boxes Packing", "tags": ["binary search", "implementation"], "problem_rating": "1800", "solved_by": "x5389"},
{"url": "https://codeforces.com//problemset/problem/1066/C", "name": "Books Queries", "tags": ["implementation"], "problem_rating": "1400", "solved_by": "x9532"},
{"url": "https://codeforces.com//problemset/problem/1066/B", "name": "Heaters", "tags": ["greedy", "two pointers"], "problem_rating": "1500", "solved_by": "x8206"},
{"url": "https://codeforces.com//problemset/problem/1066/A", "name": "Vova and Train", "tags": ["math"], "problem_rating": "1100", "solved_by": "x14412"},
{"url": "https://codeforces.com//problemset/problem/1065/G", "name": "Fibonacci Suffix", "tags": ["strings"], "problem_rating": "2700", "solved_by": "x244"},
{"url": "https://codeforces.com//problemset/problem/1065/F", "name": "Up and Down the Tree", "tags": ["dfs and similar", "dp", "trees"], "problem_rating": "2500", "solved_by": "x1152"},
{"url": "https://codeforces.com//problemset/problem/1065/E", "name": "Side Transmutations", "tags": ["combinatorics", "strings"], "problem_rating": "2300", "solved_by": "x1041"},
{"url": "https://codeforces.com//problemset/problem/1065/D", "name": "Three Pieces", "tags": ["dfs and similar", "dp", "shortest paths"], "problem_rating": "2200", "solved_by": "x1286"},
{"url": "https://codeforces.com//problemset/problem/1065/C", "name": "Make It Equal", "tags": ["greedy"], "problem_rating": "1600", "solved_by": "x7727"},
{"url": "https://codeforces.com//problemset/problem/1065/B", "name": "Vasya and Isolated Vertices", "tags": ["constructive algorithms", "graphs"], "problem_rating": "1300", "solved_by": "x10851"},
{"url": "https://codeforces.com//problemset/problem/1065/A", "name": "Vasya and Chocolate", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x14588"},
{"url": "https://codeforces.com//problemset/problem/1064/B", "name": "Equations of Mathematical Magic", "tags": ["math"], "problem_rating": "1200", "solved_by": "x7493"},
{"url": "https://codeforces.com//problemset/problem/1064/A", "name": "Make a triangle!", "tags": ["brute force", "geometry", "math"], "problem_rating": "800", "solved_by": "x22102"},
{"url": "https://codeforces.com//problemset/problem/1063/F", "name": "String Journey", "tags": ["data structures", "dp", "string suffix structures"], "problem_rating": "3300", "solved_by": "x827"},
{"url": "https://codeforces.com//problemset/problem/1063/E", "name": "Lasers and Mirrors", "tags": ["constructive algorithms", "math"], "problem_rating": "3000", "solved_by": "x341"},
{"url": "https://codeforces.com//problemset/problem/1063/D", "name": "Candies for Children", "tags": ["brute force", "math"], "problem_rating": "2600", "solved_by": "x428"},
{"url": "https://codeforces.com//problemset/problem/1063/C", "name": "Dwarves, Hats and Extrasensory Abilities", "tags": ["binary search", "constructive algorithms", "geometry", "interactive"], "problem_rating": "1900", "solved_by": "x2853"},
{"url": "https://codeforces.com//problemset/problem/1063/B", "name": "Labyrinth", "tags": ["graphs", "shortest paths"], "problem_rating": "1800", "solved_by": "x7250"},
{"url": "https://codeforces.com//problemset/problem/1063/A", "name": "Oh Those Palindromes", "tags": ["constructive algorithms", "strings"], "problem_rating": "1300", "solved_by": "x10294"},
{"url": "https://codeforces.com//problemset/problem/1062/F", "name": "Upgrading Cities", "tags": ["dfs and similar", "graphs"], "problem_rating": "2900", "solved_by": "x572"},
{"url": "https://codeforces.com//problemset/problem/1062/E", "name": "Company", "tags": ["binary search", "data structures", "dfs and similar", "greedy", "trees"], "problem_rating": "2300", "solved_by": "x1745"},
{"url": "https://codeforces.com//problemset/problem/1062/D", "name": "Fun with Integers", "tags": ["dfs and similar", "graphs", "implementation", "math"], "problem_rating": "1800", "solved_by": "x3912"},
{"url": "https://codeforces.com//problemset/problem/1062/C", "name": "Banh-mi", "tags": ["greedy", "implementation", "math"], "problem_rating": "1600", "solved_by": "x5364"},
{"url": "https://codeforces.com//problemset/problem/1062/B", "name": "Math", "tags": ["greedy", "math", "number theory"], "problem_rating": "1500", "solved_by": "x8566"},
{"url": "https://codeforces.com//problemset/problem/1062/A", "name": "A Prank", "tags": ["greedy", "implementation"], "problem_rating": "1300", "solved_by": "x8738"},
{"url": "https://codeforces.com//problemset/problem/1061/F", "name": "Lost Root", "tags": ["interactive", "probabilities"], "problem_rating": "2400", "solved_by": "x722"},
{"url": "https://codeforces.com//problemset/problem/1061/E", "name": "Politics", "tags": ["flows", "graphs"], "problem_rating": "2600", "solved_by": "x524"},
{"url": "https://codeforces.com//problemset/problem/1061/D", "name": "TV Shows", "tags": ["data structures", "greedy", "implementation", "sortings"], "problem_rating": "2000", "solved_by": "x2309"},
{"url": "https://codeforces.com//problemset/problem/1061/C", "name": "Multiplicity", "tags": ["data structures", "dp", "implementation", "math", "number theory"], "problem_rating": "1700", "solved_by": "x8601"},
{"url": "https://codeforces.com//problemset/problem/1061/B", "name": "Views Matter", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "1400", "solved_by": "x7262"},
{"url": "https://codeforces.com//problemset/problem/1061/A", "name": "Coins", "tags": ["greedy", "implementation", "math"], "problem_rating": "800", "solved_by": "x21557"},
{"url": "https://codeforces.com//problemset/problem/1060/H", "name": "Sophisticated Device", "tags": ["constructive algorithms"], "problem_rating": "3300", "solved_by": "x212"},
{"url": "https://codeforces.com//problemset/problem/1060/G", "name": "Balls and Pockets", "tags": ["data structures"], "problem_rating": "3400", "solved_by": "x145"},
{"url": "https://codeforces.com//problemset/problem/1060/F", "name": "Shrinking Tree", "tags": ["combinatorics", "dp"], "problem_rating": "2900", "solved_by": "x583"},
{"url": "https://codeforces.com//problemset/problem/1060/E", "name": "Sergey and Subway", "tags": ["dfs and similar", "dp", "trees"], "problem_rating": "2000", "solved_by": "x3096"},
{"url": "https://codeforces.com//problemset/problem/1060/D", "name": "Social Circles", "tags": ["greedy", "math"], "problem_rating": "1900", "solved_by": "x3599"},
{"url": "https://codeforces.com//problemset/problem/1060/C", "name": "Maximum Subrectangle", "tags": ["binary search", "implementation", "two pointers"], "problem_rating": "1600", "solved_by": "x4851"},
{"url": "https://codeforces.com//problemset/problem/1060/B", "name": "Maximum Sum of Digits", "tags": ["greedy"], "problem_rating": "1100", "solved_by": "x8831"},
{"url": "https://codeforces.com//problemset/problem/1060/A", "name": "Phone Numbers", "tags": ["brute force"], "problem_rating": "800", "solved_by": "x13945"},
{"url": "https://codeforces.com//problemset/problem/1059/E", "name": "Split the Tree", "tags": ["binary search", "data structures", "dp", "greedy", "trees"], "problem_rating": "2400", "solved_by": "x1374"},
{"url": "https://codeforces.com//problemset/problem/1059/D", "name": "Nature Reserve", "tags": ["binary search", "geometry", "ternary search"], "problem_rating": "2200", "solved_by": "x2610"},
{"url": "https://codeforces.com//problemset/problem/1059/C", "name": "Sequence Transformation", "tags": ["constructive algorithms", "math"], "problem_rating": "1600", "solved_by": "x7061"},
{"url": "https://codeforces.com//problemset/problem/1059/B", "name": "Forgery", "tags": ["implementation"], "problem_rating": "1300", "solved_by": "x6961"},
{"url": "https://codeforces.com//problemset/problem/1059/A", "name": "Cashier", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x12689"},
{"url": "https://codeforces.com//problemset/problem/1057/C", "name": "Tanya and Colored Candies", "tags": ["*special problem", "dp"], "problem_rating": "2000", "solved_by": "x890"},
{"url": "https://codeforces.com//problemset/problem/1057/B", "name": "DDoS", "tags": ["*special problem", "brute force"], "problem_rating": "1400", "solved_by": "x1811"},
{"url": "https://codeforces.com//problemset/problem/1057/A", "name": "Bmail Computer Network", "tags": ["*special problem", "dfs and similar", "trees"], "problem_rating": "900", "solved_by": "x5918"},
{"url": "https://codeforces.com//problemset/problem/1056/H", "name": "Detect Robots", "tags": ["data structures", "strings"], "problem_rating": "3200", "solved_by": "x154"},
{"url": "https://codeforces.com//problemset/problem/1056/G", "name": "Take Metro", "tags": ["brute force", "data structures", "graphs"], "problem_rating": "2900", "solved_by": "x247"},
{"url": "https://codeforces.com//problemset/problem/1056/F", "name": "Write The Contest", "tags": ["binary search", "dp", "math"], "problem_rating": "2500", "solved_by": "x518"},
{"url": "https://codeforces.com//problemset/problem/1056/E", "name": "Check Transcription", "tags": ["brute force", "data structures", "hashing", "strings"], "problem_rating": "2100", "solved_by": "x2201"},
{"url": "https://codeforces.com//problemset/problem/1056/D", "name": "Decorate Apple Tree", "tags": ["constructive algorithms", "dfs and similar", "dp", "graphs", "greedy", "sortings", "trees"], "problem_rating": "1600", "solved_by": "x5777"},
{"url": "https://codeforces.com//problemset/problem/1056/C", "name": "Pick Heroes", "tags": ["greedy", "implementation", "interactive", "sortings"], "problem_rating": "1700", "solved_by": "x2345"},
{"url": "https://codeforces.com//problemset/problem/1056/B", "name": "Divide Candies", "tags": ["math", "number theory"], "problem_rating": "1600", "solved_by": "x4173"},
{"url": "https://codeforces.com//problemset/problem/1056/A", "name": "Determine Line", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x6578"},
{"url": "https://codeforces.com//problemset/problem/1055/G", "name": "Jellyfish Nightmare", "tags": [], "problem_rating": "3500", "solved_by": "x79"},
{"url": "https://codeforces.com//problemset/problem/1055/F", "name": "Tree and XOR", "tags": ["strings", "trees"], "problem_rating": "2900", "solved_by": "x453"},
{"url": "https://codeforces.com//problemset/problem/1055/E", "name": "Segments on the Line", "tags": ["binary search", "dp"], "problem_rating": "2500", "solved_by": "x721"},
{"url": "https://codeforces.com//problemset/problem/1055/D", "name": "Refactoring", "tags": ["greedy", "implementation", "strings"], "problem_rating": "2400", "solved_by": "x619"},
{"url": "https://codeforces.com//problemset/problem/1055/C", "name": "Lucky Days", "tags": ["math", "number theory"], "problem_rating": "1900", "solved_by": "x1856"},
{"url": "https://codeforces.com//problemset/problem/1055/B", "name": "Alice and Hairdresser", "tags": ["dsu", "implementation"], "problem_rating": "1300", "solved_by": "x4960"},
{"url": "https://codeforces.com//problemset/problem/1055/A", "name": "Metro", "tags": ["graphs"], "problem_rating": "900", "solved_by": "x10526"},
{"url": "https://codeforces.com//problemset/problem/1054/H", "name": "Epic Convolution", "tags": ["chinese remainder theorem", "fft", "math", "number theory"], "problem_rating": "3500", "solved_by": "x177"},
{"url": "https://codeforces.com//problemset/problem/1054/G", "name": "New Road Network", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "3300", "solved_by": "x271"},
{"url": "https://codeforces.com//problemset/problem/1054/F", "name": "Electric Scheme", "tags": ["flows", "graph matchings"], "problem_rating": "2700", "solved_by": "x310"},
{"url": "https://codeforces.com//problemset/problem/1054/E", "name": "Chips Puzzle", "tags": ["constructive algorithms", "implementation", "math"], "problem_rating": "2400", "solved_by": "x481"},
{"url": "https://codeforces.com//problemset/problem/1054/D", "name": "Changing Array", "tags": ["greedy", "implementation"], "problem_rating": "1900", "solved_by": "x2227"},
{"url": "https://codeforces.com//problemset/problem/1054/C", "name": "Candies Distribution", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1500", "solved_by": "x4252"},
{"url": "https://codeforces.com//problemset/problem/1054/B", "name": "Appending Mex", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x6522"},
{"url": "https://codeforces.com//problemset/problem/1054/A", "name": "Elevator or Stairs?", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x9013"},
{"url": "https://codeforces.com//problemset/problem/1053/E", "name": "Euler tour", "tags": ["constructive algorithms", "trees"], "problem_rating": "3500", "solved_by": "x198"},
{"url": "https://codeforces.com//problemset/problem/1051/G", "name": "Distinctification", "tags": ["data structures", "dsu", "greedy"], "problem_rating": "2900", "solved_by": "x383"},
{"url": "https://codeforces.com//problemset/problem/1051/F", "name": "The Shortest Statement", "tags": ["graphs", "shortest paths", "trees"], "problem_rating": "2400", "solved_by": "x2767"},
{"url": "https://codeforces.com//problemset/problem/1051/E", "name": "Vasya and Big Integers", "tags": ["binary search", "data structures", "dp", "hashing", "strings"], "problem_rating": "2600", "solved_by": "x916"},
{"url": "https://codeforces.com//problemset/problem/1051/D", "name": "Bicolorings", "tags": ["bitmasks", "dp"], "problem_rating": "1700", "solved_by": "x7313"},
{"url": "https://codeforces.com//problemset/problem/1051/C", "name": "Vasya and Multisets", "tags": ["brute force", "dp", "greedy", "implementation", "math"], "problem_rating": "1500", "solved_by": "x9214"},
{"url": "https://codeforces.com//problemset/problem/1051/B", "name": "Relatively Prime Pairs", "tags": ["greedy", "math", "number theory"], "problem_rating": "1000", "solved_by": "x16853"},
{"url": "https://codeforces.com//problemset/problem/1051/A", "name": "Vasya And Password", "tags": ["greedy", "implementation", "strings"], "problem_rating": "1200", "solved_by": "x8361"},
{"url": "https://codeforces.com//problemset/problem/1047/B", "name": "Cover Points", "tags": ["geometry", "math"], "problem_rating": "900", "solved_by": "x17040"},
{"url": "https://codeforces.com//problemset/problem/1047/A", "name": "Little C Loves 3 I", "tags": ["math"], "problem_rating": "800", "solved_by": "x19732"},
{"url": "https://codeforces.com//problemset/problem/1046/I", "name": "Say Hello", "tags": ["geometry"], "problem_rating": "2300", "solved_by": "x358"},
{"url": "https://codeforces.com//problemset/problem/1046/F", "name": "Splitting money", "tags": ["implementation"], "problem_rating": "1400", "solved_by": "x2742"},
{"url": "https://codeforces.com//problemset/problem/1046/C", "name": "Space Formula", "tags": ["greedy"], "problem_rating": "1400", "solved_by": "x3058"},
{"url": "https://codeforces.com//problemset/problem/1045/J", "name": "Moonwalk challenge", "tags": ["data structures", "strings", "trees"], "problem_rating": "2600", "solved_by": "x169"},
{"url": "https://codeforces.com//problemset/problem/1045/I", "name": "Palindrome Pairs", "tags": ["hashing", "strings"], "problem_rating": "1600", "solved_by": "x4293"},
{"url": "https://codeforces.com//problemset/problem/1045/H", "name": "Self-exploration", "tags": ["math"], "problem_rating": "2400", "solved_by": "x366"},
{"url": "https://codeforces.com//problemset/problem/1045/G", "name": "AI robots", "tags": ["data structures"], "problem_rating": "2200", "solved_by": "x1596"},
{"url": "https://codeforces.com//problemset/problem/1045/F", "name": "Shady Lady", "tags": ["geometry", "math"], "problem_rating": "3400", "solved_by": "x99"},
{"url": "https://codeforces.com//problemset/problem/1045/E", "name": "Ancient civilizations", "tags": ["constructive algorithms", "geometry"], "problem_rating": "3200", "solved_by": "x175"},
{"url": "https://codeforces.com//problemset/problem/1045/D", "name": "Interstellar battle", "tags": ["math", "probabilities", "trees"], "problem_rating": "2200", "solved_by": "x663"},
{"url": "https://codeforces.com//problemset/problem/1045/C", "name": "Hyperspace Highways", "tags": ["dfs and similar", "graphs", "trees"], "problem_rating": "2300", "solved_by": "x682"},
{"url": "https://codeforces.com//problemset/problem/1045/B", "name": "Space Isaac", "tags": ["hashing", "number theory"], "problem_rating": "2400", "solved_by": "x506"},
{"url": "https://codeforces.com//problemset/problem/1045/A", "name": "Last chance", "tags": ["data structures", "flows", "graph matchings", "graphs", "trees"], "problem_rating": "2500", "solved_by": "x388"},
{"url": "https://codeforces.com//problemset/problem/1044/F", "name": "DFS", "tags": ["data structures"], "problem_rating": "2700", "solved_by": "x552"},
{"url": "https://codeforces.com//problemset/problem/1044/E", "name": "Grid Sort", "tags": ["implementation"], "problem_rating": "3100", "solved_by": "x116"},
{"url": "https://codeforces.com//problemset/problem/1044/D", "name": "Deduction Queries", "tags": ["data structures", "dsu"], "problem_rating": "2400", "solved_by": "x990"},
{"url": "https://codeforces.com//problemset/problem/1044/C", "name": "Optimal Polygon Perimeter", "tags": ["dp", "geometry"], "problem_rating": "2100", "solved_by": "x1334"},
{"url": "https://codeforces.com//problemset/problem/1044/B", "name": "Intersecting Subtrees", "tags": ["dfs and similar", "interactive", "trees"], "problem_rating": "1900", "solved_by": "x1559"},
{"url": "https://codeforces.com//problemset/problem/1044/A", "name": "The Tower is Going Home", "tags": ["binary search", "two pointers"], "problem_rating": "1700", "solved_by": "x2876"},
{"url": "https://codeforces.com//problemset/problem/1043/G", "name": "Speckled Band", "tags": ["data structures", "divide and conquer", "hashing", "string suffix structures", "strings"], "problem_rating": "3500", "solved_by": "x223"},
{"url": "https://codeforces.com//problemset/problem/1043/F", "name": "Make It One", "tags": ["bitmasks", "combinatorics", "dp", "math", "number theory", "shortest paths"], "problem_rating": "2500", "solved_by": "x2293"},
{"url": "https://codeforces.com//problemset/problem/1043/E", "name": "Train Hard, Win Easy", "tags": ["constructive algorithms", "greedy", "math", "sortings"], "problem_rating": "1900", "solved_by": "x2698"},
{"url": "https://codeforces.com//problemset/problem/1043/D", "name": "Mysterious Crime", "tags": ["brute force", "combinatorics", "math", "meet-in-the-middle", "two pointers"], "problem_rating": "1700", "solved_by": "x4400"},
{"url": "https://codeforces.com//problemset/problem/1043/C", "name": "Smallest Word", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "1500", "solved_by": "x6824"},
{"url": "https://codeforces.com//problemset/problem/1043/B", "name": "Lost Array", "tags": ["implementation"], "problem_rating": "1200", "solved_by": "x6229"},
{"url": "https://codeforces.com//problemset/problem/1043/A", "name": "Elections", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x10735"},
{"url": "https://codeforces.com//problemset/problem/1042/F", "name": "Leaf Sets", "tags": ["data structures", "dfs and similar", "dsu", "graphs", "greedy", "sortings", "trees"], "problem_rating": "2400", "solved_by": "x1257"},
{"url": "https://codeforces.com//problemset/problem/1042/E", "name": "Vasya and Magic Matrix", "tags": ["dp", "math", "probabilities"], "problem_rating": "2300", "solved_by": "x1716"},
{"url": "https://codeforces.com//problemset/problem/1042/D", "name": "Petya and Array", "tags": ["data structures", "divide and conquer", "two pointers"], "problem_rating": "1800", "solved_by": "x5939"},
{"url": "https://codeforces.com//problemset/problem/1042/C", "name": "Array Product", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1700", "solved_by": "x4649"},
{"url": "https://codeforces.com//problemset/problem/1042/B", "name": "Vitamins", "tags": ["bitmasks", "brute force", "dp", "implementation"], "problem_rating": "1200", "solved_by": "x15668"},
{"url": "https://codeforces.com//problemset/problem/1042/A", "name": "Benches", "tags": ["binary search", "implementation"], "problem_rating": "1100", "solved_by": "x12652"},
{"url": "https://codeforces.com//problemset/problem/1041/F", "name": "Ray in the tube", "tags": ["data structures", "divide and conquer", "dp", "math"], "problem_rating": "2500", "solved_by": "x1465"},
{"url": "https://codeforces.com//problemset/problem/1041/E", "name": "Tree Reconstruction", "tags": ["constructive algorithms", "data structures", "graphs", "greedy"], "problem_rating": "1900", "solved_by": "x3551"},
{"url": "https://codeforces.com//problemset/problem/1041/D", "name": "Glider", "tags": ["binary search", "data structures", "two pointers"], "problem_rating": "1700", "solved_by": "x5883"},
{"url": "https://codeforces.com//problemset/problem/1041/C", "name": "Coffee Break", "tags": ["binary search", "data structures", "greedy", "two pointers"], "problem_rating": "1600", "solved_by": "x9364"},
{"url": "https://codeforces.com//problemset/problem/1041/B", "name": "Buying a TV Set", "tags": ["math"], "problem_rating": "1000", "solved_by": "x13837"},
{"url": "https://codeforces.com//problemset/problem/1041/A", "name": "Heist", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "800", "solved_by": "x24767"},
{"url": "https://codeforces.com//problemset/problem/1040/B", "name": "Shashlik Cooking", "tags": ["dp", "greedy", "math"], "problem_rating": "1300", "solved_by": "x7042"},
{"url": "https://codeforces.com//problemset/problem/1040/A", "name": "Palindrome Dance", "tags": ["greedy"], "problem_rating": "1000", "solved_by": "x9414"},
{"url": "https://codeforces.com//problemset/problem/1039/E", "name": "Summer Oenothera Exhibition", "tags": ["data structures"], "problem_rating": "3400", "solved_by": "x269"},
{"url": "https://codeforces.com//problemset/problem/1039/D", "name": "You Are Given a Tree", "tags": ["data structures", "dp", "trees"], "problem_rating": "2800", "solved_by": "x1715"},
{"url": "https://codeforces.com//problemset/problem/1039/C", "name": "Network Safety", "tags": ["dfs and similar", "dsu", "graphs", "math", "sortings"], "problem_rating": "2200", "solved_by": "x1316"},
{"url": "https://codeforces.com//problemset/problem/1039/B", "name": "Subway Pursuit", "tags": ["binary search", "interactive", "probabilities"], "problem_rating": "2100", "solved_by": "x2336"},
{"url": "https://codeforces.com//problemset/problem/1039/A", "name": "Timetable", "tags": ["constructive algorithms", "data structures", "greedy", "math"], "problem_rating": "2300", "solved_by": "x773"},
{"url": "https://codeforces.com//problemset/problem/1038/F", "name": "Wrap Around", "tags": ["dp", "strings"], "problem_rating": "2900", "solved_by": "x316"},
{"url": "https://codeforces.com//problemset/problem/1038/E", "name": "Maximum Matching", "tags": ["bitmasks", "brute force", "dfs and similar", "dp", "graphs"], "problem_rating": "2400", "solved_by": "x962"},
{"url": "https://codeforces.com//problemset/problem/1038/D", "name": "Slime", "tags": ["dp", "greedy", "implementation"], "problem_rating": "1800", "solved_by": "x8251"},
{"url": "https://codeforces.com//problemset/problem/1038/C", "name": "Gambling", "tags": ["greedy", "sortings"], "problem_rating": "1300", "solved_by": "x9378"},
{"url": "https://codeforces.com//problemset/problem/1038/B", "name": "Non-Coprime Partition", "tags": ["constructive algorithms", "math"], "problem_rating": "1100", "solved_by": "x13337"},
{"url": "https://codeforces.com//problemset/problem/1038/A", "name": "Equality", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x14778"},
{"url": "https://codeforces.com//problemset/problem/1037/H", "name": "Security", "tags": ["data structures", "string suffix structures"], "problem_rating": "3200", "solved_by": "x1006"},
{"url": "https://codeforces.com//problemset/problem/1037/G", "name": "A Game on Strings", "tags": ["games"], "problem_rating": "3200", "solved_by": "x299"},
{"url": "https://codeforces.com//problemset/problem/1037/F", "name": "Maximum Reduction", "tags": ["combinatorics", "data structures", "math"], "problem_rating": "2500", "solved_by": "x990"},
{"url": "https://codeforces.com//problemset/problem/1037/E", "name": "Trips", "tags": ["graphs"], "problem_rating": "2200", "solved_by": "x2854"},
{"url": "https://codeforces.com//problemset/problem/1037/D", "name": "Valid BFS?", "tags": ["dfs and similar", "graphs", "shortest paths", "trees"], "problem_rating": "1700", "solved_by": "x14337"},
{"url": "https://codeforces.com//problemset/problem/1037/C", "name": "Equalize", "tags": ["dp", "greedy", "strings"], "problem_rating": "1300", "solved_by": "x18508"},
{"url": "https://codeforces.com//problemset/problem/1037/B", "name": "Reach Median", "tags": ["greedy"], "problem_rating": "1300", "solved_by": "x10257"},
{"url": "https://codeforces.com//problemset/problem/1037/A", "name": "Packets", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1300", "solved_by": "x11038"},
{"url": "https://codeforces.com//problemset/problem/1036/G", "name": "Sources and Sinks", "tags": ["bitmasks", "brute force", "dfs and similar"], "problem_rating": "2700", "solved_by": "x367"},
{"url": "https://codeforces.com//problemset/problem/1036/F", "name": "Relatively Prime Powers", "tags": ["combinatorics", "math", "number theory"], "problem_rating": "2400", "solved_by": "x1572"},
{"url": "https://codeforces.com//problemset/problem/1036/E", "name": "Covered Points", "tags": ["fft", "geometry", "number theory"], "problem_rating": "2400", "solved_by": "x1624"},
{"url": "https://codeforces.com//problemset/problem/1036/D", "name": "Vasya and Arrays", "tags": ["greedy", "two pointers"], "problem_rating": "1600", "solved_by": "x9140"},
{"url": "https://codeforces.com//problemset/problem/1036/C", "name": "Classy Numbers", "tags": ["combinatorics", "dp"], "problem_rating": "1900", "solved_by": "x9071"},
{"url": "https://codeforces.com//problemset/problem/1036/B", "name": "Diagonal Walking v.2", "tags": ["math"], "problem_rating": "1600", "solved_by": "x5663"},
{"url": "https://codeforces.com//problemset/problem/1036/A", "name": "Function Height", "tags": ["math"], "problem_rating": "1000", "solved_by": "x10079"},
{"url": "https://codeforces.com//problemset/problem/1034/E", "name": "Little C Loves 3 III", "tags": ["bitmasks", "dp", "math"], "problem_rating": "3200", "solved_by": "x619"},
{"url": "https://codeforces.com//problemset/problem/1034/D", "name": "Intervals of Intervals", "tags": ["binary search", "data structures", "two pointers"], "problem_rating": "3500", "solved_by": "x444"},
{"url": "https://codeforces.com//problemset/problem/1034/C", "name": "Region Separation", "tags": ["combinatorics", "dp", "number theory", "trees"], "problem_rating": "2700", "solved_by": "x866"},
{"url": "https://codeforces.com//problemset/problem/1034/B", "name": "Little C Loves 3 II", "tags": ["brute force", "constructive algorithms", "flows", "graph matchings"], "problem_rating": "2200", "solved_by": "x2097"},
{"url": "https://codeforces.com//problemset/problem/1034/A", "name": "Enlarge GCD", "tags": ["number theory"], "problem_rating": "1800", "solved_by": "x8487"},
{"url": "https://codeforces.com//problemset/problem/1033/G", "name": "Chip Game", "tags": ["games"], "problem_rating": "3500", "solved_by": "x381"},
{"url": "https://codeforces.com//problemset/problem/1033/F", "name": "Boolean Computer", "tags": ["bitmasks", "brute force", "fft", "math"], "problem_rating": "2800", "solved_by": "x369"},
{"url": "https://codeforces.com//problemset/problem/1033/E", "name": "Hidden Bipartite Graph", "tags": ["binary search", "constructive algorithms", "dfs and similar", "graphs", "interactive"], "problem_rating": "2800", "solved_by": "x592"},
{"url": "https://codeforces.com//problemset/problem/1033/D", "name": "Divisors", "tags": ["interactive", "math", "number theory"], "problem_rating": "2000", "solved_by": "x2360"},
{"url": "https://codeforces.com//problemset/problem/1033/C", "name": "Permutation Game", "tags": ["brute force", "dp", "games"], "problem_rating": "1600", "solved_by": "x5489"},
{"url": "https://codeforces.com//problemset/problem/1033/B", "name": "Square Difference", "tags": ["math", "number theory"], "problem_rating": "1100", "solved_by": "x9447"},
{"url": "https://codeforces.com//problemset/problem/1033/A", "name": "King Escape", "tags": ["dfs and similar", "graphs", "implementation"], "problem_rating": "1000", "solved_by": "x13393"},
{"url": "https://codeforces.com//problemset/problem/1032/G", "name": "Chattering", "tags": [], "problem_rating": "2900", "solved_by": "x429"},
{"url": "https://codeforces.com//problemset/problem/1032/F", "name": "Vasya and Maximum Matching", "tags": ["dp", "trees"], "problem_rating": "2400", "solved_by": "x916"},
{"url": "https://codeforces.com//problemset/problem/1032/E", "name": "The Unbearable Lightness of Weights", "tags": ["dp", "math"], "problem_rating": "2100", "solved_by": "x1655"},
{"url": "https://codeforces.com//problemset/problem/1032/D", "name": "Barcelonian Distance", "tags": ["geometry", "implementation"], "problem_rating": "1900", "solved_by": "x2789"},
{"url": "https://codeforces.com//problemset/problem/1032/C", "name": "Playing Piano", "tags": ["constructive algorithms", "dp"], "problem_rating": "1700", "solved_by": "x3930"},
{"url": "https://codeforces.com//problemset/problem/1032/B", "name": "Personalized Cup", "tags": [], "problem_rating": "1200", "solved_by": "x4971"},
{"url": "https://codeforces.com//problemset/problem/1032/A", "name": "Kitchen Utensils", "tags": [], "problem_rating": "900", "solved_by": "x6821"},
{"url": "https://codeforces.com//problemset/problem/1031/F", "name": "Familiar Operations", "tags": ["brute force", "graphs", "math"], "problem_rating": "2800", "solved_by": "x272"},
{"url": "https://codeforces.com//problemset/problem/1031/E", "name": "Triple Flips", "tags": ["constructive algorithms"], "problem_rating": "2600", "solved_by": "x477"},
{"url": "https://codeforces.com//problemset/problem/1031/D", "name": "Minimum path", "tags": ["greedy"], "problem_rating": "1900", "solved_by": "x2685"},
{"url": "https://codeforces.com//problemset/problem/1031/C", "name": "Cram Time", "tags": ["greedy"], "problem_rating": "1600", "solved_by": "x5240"},
{"url": "https://codeforces.com//problemset/problem/1031/B", "name": "Curiosity Has No Limits", "tags": [], "problem_rating": "1500", "solved_by": "x3896"},
{"url": "https://codeforces.com//problemset/problem/1031/A", "name": "Golden Plate", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x12777"},
{"url": "https://codeforces.com//problemset/problem/1030/G", "name": "Linear Congruential Generator", "tags": ["number theory"], "problem_rating": "2900", "solved_by": "x352"},
{"url": "https://codeforces.com//problemset/problem/1030/F", "name": "Putting Boxes Together", "tags": ["data structures"], "problem_rating": "2500", "solved_by": "x796"},
{"url": "https://codeforces.com//problemset/problem/1030/E", "name": "Vasya and Good Sequences", "tags": ["bitmasks", "dp"], "problem_rating": "2000", "solved_by": "x3035"},
{"url": "https://codeforces.com//problemset/problem/1030/D", "name": "Vasya and Triangle", "tags": ["geometry", "number theory"], "problem_rating": "1800", "solved_by": "x5761"},
{"url": "https://codeforces.com//problemset/problem/1030/C", "name": "Vasya and Golden Ticket", "tags": ["implementation"], "problem_rating": "1300", "solved_by": "x9379"},
{"url": "https://codeforces.com//problemset/problem/1030/B", "name": "Vasya and Cornfield", "tags": ["geometry"], "problem_rating": "1100", "solved_by": "x12041"},
{"url": "https://codeforces.com//problemset/problem/1030/A", "name": "In Search of an Easy Problem", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x124775"},
{"url": "https://codeforces.com//problemset/problem/1029/F", "name": "Multicolored Markers", "tags": ["binary search", "brute force", "math", "number theory"], "problem_rating": "2000", "solved_by": "x2522"},
{"url": "https://codeforces.com//problemset/problem/1029/E", "name": "Tree with Small Distances", "tags": ["dp", "graphs", "greedy"], "problem_rating": "2100", "solved_by": "x2863"},
{"url": "https://codeforces.com//problemset/problem/1029/D", "name": "Concatenated Multiples", "tags": ["implementation", "math"], "problem_rating": "1900", "solved_by": "x3808"},
{"url": "https://codeforces.com//problemset/problem/1029/C", "name": "Maximal Intersection", "tags": ["greedy", "math", "sortings"], "problem_rating": "1600", "solved_by": "x7426"},
{"url": "https://codeforces.com//problemset/problem/1029/B", "name": "Creating the Contest", "tags": ["dp", "greedy", "math"], "problem_rating": "1200", "solved_by": "x16700"},
{"url": "https://codeforces.com//problemset/problem/1029/A", "name": "Many Equal Substrings", "tags": ["implementation", "strings"], "problem_rating": "1300", "solved_by": "x12171"},
{"url": "https://codeforces.com//problemset/problem/1028/H", "name": "Make Square", "tags": ["math"], "problem_rating": "2900", "solved_by": "x483"},
{"url": "https://codeforces.com//problemset/problem/1028/G", "name": "Guess the number", "tags": ["dp", "interactive"], "problem_rating": "3000", "solved_by": "x547"},
{"url": "https://codeforces.com//problemset/problem/1028/F", "name": "Make Symmetrical", "tags": ["brute force"], "problem_rating": "2900", "solved_by": "x513"},
{"url": "https://codeforces.com//problemset/problem/1028/E", "name": "Restore Array", "tags": ["constructive algorithms"], "problem_rating": "2400", "solved_by": "x1135"},
{"url": "https://codeforces.com//problemset/problem/1028/D", "name": "Order book", "tags": ["combinatorics", "data structures", "greedy"], "problem_rating": "2100", "solved_by": "x1730"},
{"url": "https://codeforces.com//problemset/problem/1028/C", "name": "Rectangles", "tags": ["geometry", "implementation", "sortings"], "problem_rating": "1600", "solved_by": "x4453"},
{"url": "https://codeforces.com//problemset/problem/1028/B", "name": "Unnatural Conditions", "tags": ["constructive algorithms", "math"], "problem_rating": "1200", "solved_by": "x8930"},
{"url": "https://codeforces.com//problemset/problem/1028/A", "name": "Find Square", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x10700"},
{"url": "https://codeforces.com//problemset/problem/1027/G", "name": "X-mouse in the Campus", "tags": ["bitmasks", "math", "number theory"], "problem_rating": "2600", "solved_by": "x302"},
{"url": "https://codeforces.com//problemset/problem/1027/F", "name": "Session in BSU", "tags": ["binary search", "dfs and similar", "dsu", "graph matchings", "graphs"], "problem_rating": "2400", "solved_by": "x1525"},
{"url": "https://codeforces.com//problemset/problem/1027/E", "name": "Inverse Coloring", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2100", "solved_by": "x2082"},
{"url": "https://codeforces.com//problemset/problem/1027/D", "name": "Mouse Hunt", "tags": ["dfs and similar", "graphs"], "problem_rating": "1700", "solved_by": "x7317"},
{"url": "https://codeforces.com//problemset/problem/1027/C", "name": "Minimum Value Rectangle", "tags": ["greedy"], "problem_rating": "1600", "solved_by": "x6809"},
{"url": "https://codeforces.com//problemset/problem/1027/B", "name": "Numbers on the Chessboard", "tags": ["implementation", "math"], "problem_rating": "1200", "solved_by": "x8319"},
{"url": "https://codeforces.com//problemset/problem/1027/A", "name": "Palindromic Twist", "tags": ["implementation", "strings"], "problem_rating": "1000", "solved_by": "x15933"},
{"url": "https://codeforces.com//problemset/problem/1025/G", "name": "Company Acquisitions", "tags": ["constructive algorithms", "math"], "problem_rating": "3200", "solved_by": "x702"},
{"url": "https://codeforces.com//problemset/problem/1025/F", "name": "Disjoint Triangles", "tags": ["geometry"], "problem_rating": "2700", "solved_by": "x646"},
{"url": "https://codeforces.com//problemset/problem/1025/E", "name": "Colored Cubes", "tags": ["constructive algorithms", "implementation", "matrices"], "problem_rating": "2700", "solved_by": "x562"},
{"url": "https://codeforces.com//problemset/problem/1025/D", "name": "Recovering BST", "tags": ["brute force", "dp", "math", "number theory", "trees"], "problem_rating": "2100", "solved_by": "x3582"},
{"url": "https://codeforces.com//problemset/problem/1025/C", "name": "Plasticine zebra", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1600", "solved_by": "x6054"},
{"url": "https://codeforces.com//problemset/problem/1025/B", "name": "Weakened Common Divisor", "tags": ["brute force", "greedy", "number theory"], "problem_rating": "1600", "solved_by": "x7837"},
{"url": "https://codeforces.com//problemset/problem/1025/A", "name": "Doggo Recoloring", "tags": ["implementation", "sortings"], "problem_rating": "900", "solved_by": "x14895"},
{"url": "https://codeforces.com//problemset/problem/1023/G", "name": "Pisces", "tags": ["data structures", "flows", "trees"], "problem_rating": "3400", "solved_by": "x114"},
{"url": "https://codeforces.com//problemset/problem/1023/F", "name": "Mobile Phone Network", "tags": ["dfs and similar", "dsu", "graphs", "trees"], "problem_rating": "2600", "solved_by": "x871"},
{"url": "https://codeforces.com//problemset/problem/1023/E", "name": "Down or Right", "tags": ["constructive algorithms", "interactive", "matrices"], "problem_rating": "2100", "solved_by": "x2001"},
{"url": "https://codeforces.com//problemset/problem/1023/D", "name": "Array Restoration", "tags": ["constructive algorithms", "data structures"], "problem_rating": "1700", "solved_by": "x3965"},
{"url": "https://codeforces.com//problemset/problem/1023/C", "name": "Bracket Subsequence", "tags": ["greedy"], "problem_rating": "1200", "solved_by": "x9761"},
{"url": "https://codeforces.com//problemset/problem/1023/B", "name": "Pair of Toys", "tags": ["math"], "problem_rating": "1000", "solved_by": "x10760"},
{"url": "https://codeforces.com//problemset/problem/1023/A", "name": "Single Wildcard Pattern Matching", "tags": ["brute force", "implementation", "strings"], "problem_rating": "1200", "solved_by": "x8611"},
{"url": "https://codeforces.com//problemset/problem/1020/B", "name": "Badge", "tags": ["brute force", "dfs and similar", "graphs"], "problem_rating": "1000", "solved_by": "x20628"},
{"url": "https://codeforces.com//problemset/problem/1020/A", "name": "New Building for SIS", "tags": ["math"], "problem_rating": "1000", "solved_by": "x8943"},
{"url": "https://codeforces.com//problemset/problem/1019/E", "name": "Raining season", "tags": ["data structures", "divide and conquer", "trees"], "problem_rating": "3200", "solved_by": "x332"},
{"url": "https://codeforces.com//problemset/problem/1019/D", "name": "Large Triangle", "tags": ["binary search", "geometry", "sortings"], "problem_rating": "2700", "solved_by": "x633"},
{"url": "https://codeforces.com//problemset/problem/1019/C", "name": "Sergey's problem", "tags": ["constructive algorithms", "graphs"], "problem_rating": "3000", "solved_by": "x1096"},
{"url": "https://codeforces.com//problemset/problem/1019/B", "name": "The hat", "tags": ["binary search", "interactive"], "problem_rating": "2000", "solved_by": "x1899"},
{"url": "https://codeforces.com//problemset/problem/1019/A", "name": "Elections", "tags": ["brute force", "greedy"], "problem_rating": "1700", "solved_by": "x4602"},
{"url": "https://codeforces.com//problemset/problem/1017/H", "name": "The Films", "tags": ["brute force"], "problem_rating": "3300", "solved_by": "x142"},
{"url": "https://codeforces.com//problemset/problem/1017/G", "name": "The Tree", "tags": ["data structures"], "problem_rating": "3200", "solved_by": "x858"},
{"url": "https://codeforces.com//problemset/problem/1017/F", "name": "The Neutral Zone", "tags": ["brute force", "math"], "problem_rating": "2500", "solved_by": "x805"},
{"url": "https://codeforces.com//problemset/problem/1017/E", "name": "The Supersonic Rocket", "tags": ["geometry", "hashing", "strings"], "problem_rating": "2400", "solved_by": "x1010"},
{"url": "https://codeforces.com//problemset/problem/1017/D", "name": "The Wu", "tags": ["bitmasks", "brute force", "data structures"], "problem_rating": "1900", "solved_by": "x3408"},
{"url": "https://codeforces.com//problemset/problem/1017/C", "name": "The Phone Number", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1600", "solved_by": "x5963"},
{"url": "https://codeforces.com//problemset/problem/1017/B", "name": "The Bits", "tags": ["implementation", "math"], "problem_rating": "1200", "solved_by": "x9085"},
{"url": "https://codeforces.com//problemset/problem/1017/A", "name": "The Rank", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x20208"},
{"url": "https://codeforces.com//problemset/problem/1016/G", "name": "Appropriate Team", "tags": ["bitmasks", "math", "number theory"], "problem_rating": "2700", "solved_by": "x261"},
{"url": "https://codeforces.com//problemset/problem/1016/F", "name": "Road Projects", "tags": ["dfs and similar", "dp", "trees"], "problem_rating": "2600", "solved_by": "x787"},
{"url": "https://codeforces.com//problemset/problem/1016/E", "name": "Rest In The Shades", "tags": ["binary search", "geometry"], "problem_rating": "2400", "solved_by": "x1124"},
{"url": "https://codeforces.com//problemset/problem/1016/D", "name": "Vasya And The Matrix", "tags": ["constructive algorithms", "flows", "math"], "problem_rating": "1800", "solved_by": "x4651"},
{"url": "https://codeforces.com//problemset/problem/1016/C", "name": "Vasya And The Mushrooms", "tags": ["dp", "implementation"], "problem_rating": "1800", "solved_by": "x3669"},
{"url": "https://codeforces.com//problemset/problem/1016/B", "name": "Segment Occurrences", "tags": ["brute force", "implementation"], "problem_rating": "1300", "solved_by": "x9357"},
{"url": "https://codeforces.com//problemset/problem/1016/A", "name": "Death Note", "tags": ["greedy", "implementation", "math"], "problem_rating": "900", "solved_by": "x14771"},
{"url": "https://codeforces.com//problemset/problem/1015/F", "name": "Bracket Substring", "tags": ["dp", "strings"], "problem_rating": "2300", "solved_by": "x1081"},
{"url": "https://codeforces.com//problemset/problem/1015/E2", "name": "Stars Drawing (Hard Edition)", "tags": ["binary search", "dp", "greedy"], "problem_rating": "1900", "solved_by": "x3536"},
{"url": "https://codeforces.com//problemset/problem/1015/E1", "name": "Stars Drawing (Easy Edition)", "tags": ["brute force", "dp", "greedy"], "problem_rating": "1700", "solved_by": "x5598"},
{"url": "https://codeforces.com//problemset/problem/1015/D", "name": "Walking Between Houses", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1600", "solved_by": "x8076"},
{"url": "https://codeforces.com//problemset/problem/1015/C", "name": "Songs Compression", "tags": ["sortings"], "problem_rating": "1100", "solved_by": "x17645"},
{"url": "https://codeforces.com//problemset/problem/1015/B", "name": "Obtaining the String", "tags": ["implementation"], "problem_rating": "1200", "solved_by": "x11475"},
{"url": "https://codeforces.com//problemset/problem/1015/A", "name": "Points in Segments", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x20741"},
{"url": "https://codeforces.com//problemset/problem/1013/B", "name": "And", "tags": ["greedy"], "problem_rating": "1200", "solved_by": "x7537"},
{"url": "https://codeforces.com//problemset/problem/1013/A", "name": "Piles With Stones", "tags": ["math"], "problem_rating": "800", "solved_by": "x10873"},
{"url": "https://codeforces.com//problemset/problem/1012/F", "name": "Passports", "tags": ["dp", "implementation"], "problem_rating": "3400", "solved_by": "x153"},
{"url": "https://codeforces.com//problemset/problem/1012/E", "name": "Cycle sort", "tags": ["dsu", "math"], "problem_rating": "3100", "solved_by": "x297"},
{"url": "https://codeforces.com//problemset/problem/1012/D", "name": "AB-Strings", "tags": ["constructive algorithms", "strings"], "problem_rating": "2800", "solved_by": "x319"},
{"url": "https://codeforces.com//problemset/problem/1012/C", "name": "Hills", "tags": ["dp"], "problem_rating": "1900", "solved_by": "x3307"},
{"url": "https://codeforces.com//problemset/problem/1012/B", "name": "Chemical table", "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs", "matrices"], "problem_rating": "1900", "solved_by": "x3752"},
{"url": "https://codeforces.com//problemset/problem/1012/A", "name": "Photo of The Sky", "tags": ["brute force", "implementation", "math", "sortings"], "problem_rating": "1500", "solved_by": "x6222"},
{"url": "https://codeforces.com//problemset/problem/1011/B", "name": "Planning The Expedition", "tags": ["binary search", "brute force", "implementation"], "problem_rating": "1200", "solved_by": "x9968"},
{"url": "https://codeforces.com//problemset/problem/1011/A", "name": "Stages", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "900", "solved_by": "x12089"},
{"url": "https://codeforces.com//problemset/problem/1010/F", "name": "Tree", "tags": ["fft", "graphs", "trees"], "problem_rating": "3400", "solved_by": "x212"},
{"url": "https://codeforces.com//problemset/problem/1010/E", "name": "Store", "tags": ["data structures"], "problem_rating": "2700", "solved_by": "x326"},
{"url": "https://codeforces.com//problemset/problem/1010/D", "name": "Mars rover", "tags": ["dfs and similar", "graphs", "implementation", "trees"], "problem_rating": "2000", "solved_by": "x2361"},
{"url": "https://codeforces.com//problemset/problem/1010/C", "name": "Border", "tags": ["number theory"], "problem_rating": "1800", "solved_by": "x4732"},
{"url": "https://codeforces.com//problemset/problem/1010/B", "name": "Rocket", "tags": ["binary search", "interactive"], "problem_rating": "1800", "solved_by": "x5103"},
{"url": "https://codeforces.com//problemset/problem/1010/A", "name": "Fly", "tags": ["binary search", "math"], "problem_rating": "1500", "solved_by": "x8023"},
{"url": "https://codeforces.com//problemset/problem/1009/G", "name": "Allowed Letters", "tags": ["bitmasks", "flows", "graph matchings", "graphs", "greedy"], "problem_rating": "2400", "solved_by": "x787"},
{"url": "https://codeforces.com//problemset/problem/1009/F", "name": "Dominant Indices", "tags": ["data structures", "dsu", "trees"], "problem_rating": "2300", "solved_by": "x5373"},
{"url": "https://codeforces.com//problemset/problem/1009/E", "name": "Intercity Travelling", "tags": ["combinatorics", "math", "probabilities"], "problem_rating": "2000", "solved_by": "x2946"},
{"url": "https://codeforces.com//problemset/problem/1009/D", "name": "Relatively Prime Graph", "tags": ["brute force", "constructive algorithms", "graphs", "greedy", "math"], "problem_rating": "1700", "solved_by": "x6192"},
{"url": "https://codeforces.com//problemset/problem/1009/C", "name": "Annoying Present", "tags": ["greedy", "math"], "problem_rating": "1700", "solved_by": "x5207"},
{"url": "https://codeforces.com//problemset/problem/1009/B", "name": "Minimum Ternary String", "tags": ["greedy", "implementation"], "problem_rating": "1400", "solved_by": "x9987"},
{"url": "https://codeforces.com//problemset/problem/1009/A", "name": "Game Shopping", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x11690"},
{"url": "https://codeforces.com//problemset/problem/1008/B", "name": "Turn the Rectangles", "tags": ["greedy", "sortings"], "problem_rating": "1000", "solved_by": "x11326"},
{"url": "https://codeforces.com//problemset/problem/1008/A", "name": "Romaji", "tags": ["implementation", "strings"], "problem_rating": "900", "solved_by": "x14903"},
{"url": "https://codeforces.com//problemset/problem/1007/E", "name": "Mini Metro", "tags": ["dp"], "problem_rating": "3400", "solved_by": "x207"},
{"url": "https://codeforces.com//problemset/problem/1007/D", "name": "Ants", "tags": ["2-sat", "data structures", "trees"], "problem_rating": "3200", "solved_by": "x264"},
{"url": "https://codeforces.com//problemset/problem/1007/C", "name": "Guess two numbers", "tags": ["binary search", "interactive"], "problem_rating": "3000", "solved_by": "x409"},
{"url": "https://codeforces.com//problemset/problem/1007/B", "name": "Pave the Parallelepiped", "tags": ["bitmasks", "brute force", "combinatorics", "math", "number theory"], "problem_rating": "2400", "solved_by": "x944"},
{"url": "https://codeforces.com//problemset/problem/1007/A", "name": "Reorder the Array", "tags": ["combinatorics", "data structures", "math", "sortings", "two pointers"], "problem_rating": "1300", "solved_by": "x12064"},
{"url": "https://codeforces.com//problemset/problem/1006/F", "name": "Xor-Paths", "tags": ["bitmasks", "brute force", "dp", "meet-in-the-middle"], "problem_rating": "2100", "solved_by": "x5091"},
{"url": "https://codeforces.com//problemset/problem/1006/E", "name": "Military Problem", "tags": ["dfs and similar", "graphs", "trees"], "problem_rating": "1600", "solved_by": "x9655"},
{"url": "https://codeforces.com//problemset/problem/1006/D", "name": "Two Strings Swaps", "tags": ["implementation"], "problem_rating": "1700", "solved_by": "x5914"},
{"url": "https://codeforces.com//problemset/problem/1006/C", "name": "Three Parts of the Array", "tags": ["binary search", "data structures", "two pointers"], "problem_rating": "1200", "solved_by": "x20695"},
{"url": "https://codeforces.com//problemset/problem/1006/B", "name": "Polycarp's Practice", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "1200", "solved_by": "x13018"},
{"url": "https://codeforces.com//problemset/problem/1006/A", "name": "Adjacent Replacements", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x21420"},
{"url": "https://codeforces.com//problemset/problem/1005/F", "name": "Berland and the Shortest Paths", "tags": ["brute force", "dfs and similar", "graphs", "shortest paths"], "problem_rating": "2100", "solved_by": "x1645"},
{"url": "https://codeforces.com//problemset/problem/1005/E2", "name": "Median on Segments (General Case Edition)", "tags": ["sortings"], "problem_rating": "2400", "solved_by": "x1244"},
{"url": "https://codeforces.com//problemset/problem/1005/E1", "name": "Median on Segments (Permutations Edition)", "tags": ["sortings"], "problem_rating": "1800", "solved_by": "x3828"},
{"url": "https://codeforces.com//problemset/problem/1005/D", "name": "Polycarp and Div 3", "tags": ["dp", "greedy", "number theory"], "problem_rating": "1500", "solved_by": "x9988"},
{"url": "https://codeforces.com//problemset/problem/1005/C", "name": "Summarize to the Power of Two", "tags": ["brute force", "greedy", "implementation"], "problem_rating": "1300", "solved_by": "x11484"},
{"url": "https://codeforces.com//problemset/problem/1005/B", "name": "Delete from the Left", "tags": ["brute force", "implementation", "strings"], "problem_rating": "900", "solved_by": "x22897"},
{"url": "https://codeforces.com//problemset/problem/1005/A", "name": "Tanya and Stairways", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x23348"},
{"url": "https://codeforces.com//problemset/problem/1004/F", "name": "Sonya and Bitwise OR", "tags": ["bitmasks", "data structures", "divide and conquer"], "problem_rating": "2600", "solved_by": "x720"},
{"url": "https://codeforces.com//problemset/problem/1004/E", "name": "Sonya and Ice Cream", "tags": ["binary search", "data structures", "dp", "greedy", "shortest paths", "trees"], "problem_rating": "2400", "solved_by": "x1030"},
{"url": "https://codeforces.com//problemset/problem/1004/D", "name": "Sonya and Matrix", "tags": ["brute force", "constructive algorithms", "implementation"], "problem_rating": "2300", "solved_by": "x1397"},
{"url": "https://codeforces.com//problemset/problem/1004/C", "name": "Sonya and Robots", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1400", "solved_by": "x7482"},
{"url": "https://codeforces.com//problemset/problem/1004/B", "name": "Sonya and Exhibition", "tags": ["constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "1300", "solved_by": "x9430"},
{"url": "https://codeforces.com//problemset/problem/1004/A", "name": "Sonya and Hotels", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x11135"},
{"url": "https://codeforces.com//problemset/problem/1003/F", "name": "Abbreviation", "tags": ["dp", "hashing", "strings"], "problem_rating": "2200", "solved_by": "x1330"},
{"url": "https://codeforces.com//problemset/problem/1003/E", "name": "Tree Constructing", "tags": ["constructive algorithms", "graphs"], "problem_rating": "2100", "solved_by": "x2670"},
{"url": "https://codeforces.com//problemset/problem/1003/D", "name": "Coins and Queries", "tags": ["greedy"], "problem_rating": "1600", "solved_by": "x7624"},
{"url": "https://codeforces.com//problemset/problem/1003/C", "name": "Intense Heat", "tags": ["brute force", "implementation", "math"], "problem_rating": "1300", "solved_by": "x10441"},
{"url": "https://codeforces.com//problemset/problem/1003/B", "name": "Binary String Constructing", "tags": ["constructive algorithms"], "problem_rating": "1300", "solved_by": "x11182"},
{"url": "https://codeforces.com//problemset/problem/1003/A", "name": "Polycarp's Pockets", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x26816"},
{"url": "https://codeforces.com//problemset/problem/1002/E2", "name": "Another array reconstruction algorithm", "tags": [], "problem_rating": "1900", "solved_by": "x201"},
{"url": "https://codeforces.com//problemset/problem/1002/E1", "name": "Bernstein-Vazirani algorithm", "tags": [], "problem_rating": "1500", "solved_by": "x320"},
{"url": "https://codeforces.com//problemset/problem/1002/D3", "name": "Oracle for majority function", "tags": [], "problem_rating": "1600", "solved_by": "x331"},
{"url": "https://codeforces.com//problemset/problem/1002/D2", "name": "Oracle for f(x) = b * x + (1 - b) * (1 - x) mod 2", "tags": [], "problem_rating": "1300", "solved_by": "x374"},
{"url": "https://codeforces.com//problemset/problem/1002/D1", "name": "Oracle for f(x) = b * x mod 2", "tags": [], "problem_rating": "1200", "solved_by": "x401"},
{"url": "https://codeforces.com//problemset/problem/1002/C2", "name": "Distinguish zero state and plus state without errors", "tags": [], "problem_rating": "1800", "solved_by": "x265"},
{"url": "https://codeforces.com//problemset/problem/1002/C1", "name": "Distinguish zero state and plus state with minimum error", "tags": [], "problem_rating": "1700", "solved_by": "x300"},
{"url": "https://codeforces.com//problemset/problem/1002/B4", "name": "Distinguish four 2-qubit states - 2", "tags": [], "problem_rating": "1700", "solved_by": "x307"},
{"url": "https://codeforces.com//problemset/problem/1002/B3", "name": "Distinguish four 2-qubit states", "tags": [], "problem_rating": "1600", "solved_by": "x409"},
{"url": "https://codeforces.com//problemset/problem/1002/B2", "name": "Distinguish GHZ state and W state", "tags": [], "problem_rating": "1600", "solved_by": "x444"},
{"url": "https://codeforces.com//problemset/problem/1002/B1", "name": "Distinguish zero state and W state", "tags": [], "problem_rating": "1300", "solved_by": "x474"},
{"url": "https://codeforces.com//problemset/problem/1002/A4", "name": "Generate W state", "tags": [], "problem_rating": "1900", "solved_by": "x265"},
{"url": "https://codeforces.com//problemset/problem/1002/A3", "name": "Generate superposition of two basis states", "tags": [], "problem_rating": "1500", "solved_by": "x473"},
{"url": "https://codeforces.com//problemset/problem/1002/A2", "name": "Generate superposition of zero state and a basis state", "tags": [], "problem_rating": "1300", "solved_by": "x555"},
{"url": "https://codeforces.com//problemset/problem/1002/A1", "name": "Generate superposition of all basis states", "tags": [], "problem_rating": "800", "solved_by": "x831"},
{"url": "https://codeforces.com//problemset/problem/1001/I", "name": "Deutsch-Jozsa algorithm", "tags": ["*special problem"], "problem_rating": "1700", "solved_by": "x399"},
{"url": "https://codeforces.com//problemset/problem/1001/H", "name": "Oracle for f(x) = parity of the number of 1s in x", "tags": ["*special problem"], "problem_rating": "1200", "solved_by": "x529"},
{"url": "https://codeforces.com//problemset/problem/1001/G", "name": "Oracle for f(x) = k-th element of x", "tags": ["*special problem"], "problem_rating": "1400", "solved_by": "x535"},
{"url": "https://codeforces.com//problemset/problem/1001/F", "name": "Distinguish multi-qubit basis states", "tags": ["*special problem"], "problem_rating": "1300", "solved_by": "x534"},
{"url": "https://codeforces.com//problemset/problem/1001/E", "name": "Distinguish Bell states", "tags": ["*special problem"], "problem_rating": "1600", "solved_by": "x556"},
{"url": "https://codeforces.com//problemset/problem/1001/D", "name": "Distinguish plus state and minus state", "tags": ["*special problem"], "problem_rating": "1400", "solved_by": "x680"},
{"url": "https://codeforces.com//problemset/problem/1001/C", "name": "Generate GHZ state", "tags": ["*special problem"], "problem_rating": "1400", "solved_by": "x651"},
{"url": "https://codeforces.com//problemset/problem/1001/B", "name": "Generate Bell state", "tags": ["*special problem"], "problem_rating": "1400", "solved_by": "x709"},
{"url": "https://codeforces.com//problemset/problem/1001/A", "name": "Generate plus state or minus state", "tags": ["*special problem"], "problem_rating": "1100", "solved_by": "x1006"},
{"url": "https://codeforces.com//problemset/problem/1000/G", "name": "Two-Paths", "tags": ["data structures", "dp", "trees"], "problem_rating": "2700", "solved_by": "x572"},
{"url": "https://codeforces.com//problemset/problem/1000/F", "name": "One Occurrence", "tags": ["data structures", "divide and conquer"], "problem_rating": "2400", "solved_by": "x3699"},
{"url": "https://codeforces.com//problemset/problem/1000/E", "name": "We Need More Bosses", "tags": ["dfs and similar", "graphs", "trees"], "problem_rating": "2100", "solved_by": "x4440"},
{"url": "https://codeforces.com//problemset/problem/1000/D", "name": "Yet Another Problem On a Subsequence", "tags": ["combinatorics", "dp"], "problem_rating": "1900", "solved_by": "x4069"},
{"url": "https://codeforces.com//problemset/problem/1000/C", "name": "Covered Points Count", "tags": ["data structures", "implementation", "sortings"], "problem_rating": "1700", "solved_by": "x6577"},
{"url": "https://codeforces.com//problemset/problem/1000/B", "name": "Light It Up", "tags": ["greedy"], "problem_rating": "1500", "solved_by": "x5736"},
{"url": "https://codeforces.com//problemset/problem/1000/A", "name": "Codehorses T-shirts", "tags": ["greedy", "implementation"], "problem_rating": "1200", "solved_by": "x8652"},
{"url": "https://codeforces.com//problemset/problem/999/F", "name": "Cards and Joy", "tags": ["dp"], "problem_rating": "2000", "solved_by": "x2602"},
{"url": "https://codeforces.com//problemset/problem/999/E", "name": "Reachability from the Capital", "tags": ["dfs and similar", "graphs", "greedy"], "problem_rating": "2000", "solved_by": "x6491"},
{"url": "https://codeforces.com//problemset/problem/999/D", "name": "Equalize the Remainders", "tags": ["data structures", "greedy", "implementation"], "problem_rating": "1900", "solved_by": "x4294"},
{"url": "https://codeforces.com//problemset/problem/999/C", "name": "Alphabetic Removals", "tags": ["implementation"], "problem_rating": "1200", "solved_by": "x17814"},
{"url": "https://codeforces.com//problemset/problem/999/B", "name": "Reversing Encryption", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x17364"},
{"url": "https://codeforces.com//problemset/problem/999/A", "name": "Mishka and Contest", "tags": ["brute force", "implementation"], "problem_rating": "800", "solved_by": "x22681"},
{"url": "https://codeforces.com//problemset/problem/998/B", "name": "Cutting", "tags": ["dp", "greedy", "sortings"], "problem_rating": "1200", "solved_by": "x12914"},
{"url": "https://codeforces.com//problemset/problem/998/A", "name": "Balloons", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1000", "solved_by": "x9407"},
{"url": "https://codeforces.com//problemset/problem/997/E", "name": "Good Subsegments", "tags": ["data structures"], "problem_rating": "3000", "solved_by": "x1108"},
{"url": "https://codeforces.com//problemset/problem/997/D", "name": "Cycles in product", "tags": ["combinatorics", "divide and conquer", "trees"], "problem_rating": "2900", "solved_by": "x429"},
{"url": "https://codeforces.com//problemset/problem/997/C", "name": "Sky Full of Stars", "tags": ["combinatorics", "math"], "problem_rating": "2500", "solved_by": "x1677"},
{"url": "https://codeforces.com//problemset/problem/997/B", "name": "Roman Digits", "tags": ["brute force", "combinatorics", "dp", "greedy", "math"], "problem_rating": "2000", "solved_by": "x2879"},
{"url": "https://codeforces.com//problemset/problem/997/A", "name": "Convert to Ones", "tags": ["brute force", "greedy", "implementation", "math"], "problem_rating": "1500", "solved_by": "x8266"},
{"url": "https://codeforces.com//problemset/problem/996/B", "name": "World Cup", "tags": ["binary search", "math"], "problem_rating": "1300", "solved_by": "x8948"},
{"url": "https://codeforces.com//problemset/problem/996/A", "name": "Hit the Lottery", "tags": ["dp", "greedy"], "problem_rating": "800", "solved_by": "x87345"},
{"url": "https://codeforces.com//problemset/problem/995/F", "name": "Cowmpany Cowmpensation", "tags": ["combinatorics", "dp", "math", "trees"], "problem_rating": "2700", "solved_by": "x1197"},
{"url": "https://codeforces.com//problemset/problem/995/E", "name": "Number Clicker", "tags": ["divide and conquer", "graphs", "meet-in-the-middle", "number theory"], "problem_rating": "2700", "solved_by": "x647"},
{"url": "https://codeforces.com//problemset/problem/995/D", "name": "Game", "tags": ["math"], "problem_rating": "2500", "solved_by": "x752"},
{"url": "https://codeforces.com//problemset/problem/995/C", "name": "Leaving the Bar", "tags": ["brute force", "data structures", "geometry", "greedy", "math", "sortings"], "problem_rating": "2300", "solved_by": "x1866"},
{"url": "https://codeforces.com//problemset/problem/995/B", "name": "Suit and Tie", "tags": ["greedy", "implementation", "math"], "problem_rating": "1400", "solved_by": "x7048"},
{"url": "https://codeforces.com//problemset/problem/995/A", "name": "Tesla", "tags": ["constructive algorithms", "implementation"], "problem_rating": "2100", "solved_by": "x1680"},
{"url": "https://codeforces.com//problemset/problem/994/B", "name": "Knights of a Polygonal Table", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "1400", "solved_by": "x5607"},
{"url": "https://codeforces.com//problemset/problem/994/A", "name": "Fingerprints", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x14009"},
{"url": "https://codeforces.com//problemset/problem/993/F", "name": "The Moral Dilemma", "tags": [], "problem_rating": "3200", "solved_by": "x60"},
{"url": "https://codeforces.com//problemset/problem/993/E", "name": "Nikita and Order Statistics", "tags": ["chinese remainder theorem", "fft", "math"], "problem_rating": "2300", "solved_by": "x1383"},
{"url": "https://codeforces.com//problemset/problem/993/D", "name": "Compute Power", "tags": ["binary search", "dp", "greedy"], "problem_rating": "2500", "solved_by": "x634"},
{"url": "https://codeforces.com//problemset/problem/993/C", "name": "Careful Maneuvering", "tags": ["bitmasks", "brute force", "geometry"], "problem_rating": "2100", "solved_by": "x1682"},
{"url": "https://codeforces.com//problemset/problem/993/B", "name": "Open Communication", "tags": ["bitmasks", "brute force"], "problem_rating": "1900", "solved_by": "x1937"},
{"url": "https://codeforces.com//problemset/problem/993/A", "name": "Two Squares", "tags": ["geometry", "implementation"], "problem_rating": "1600", "solved_by": "x3954"},
{"url": "https://codeforces.com//problemset/problem/992/E", "name": "Nastya and King-Shamans", "tags": ["binary search", "data structures"], "problem_rating": "2500", "solved_by": "x1344"},
{"url": "https://codeforces.com//problemset/problem/992/D", "name": "Nastya and a Game", "tags": ["brute force", "implementation", "math"], "problem_rating": "2100", "solved_by": "x1637"},
{"url": "https://codeforces.com//problemset/problem/992/C", "name": "Nastya and a Wardrobe", "tags": ["math"], "problem_rating": "1600", "solved_by": "x4533"},
{"url": "https://codeforces.com//problemset/problem/992/B", "name": "Nastya Studies Informatics", "tags": ["math", "number theory"], "problem_rating": "1600", "solved_by": "x6212"},
{"url": "https://codeforces.com//problemset/problem/992/A", "name": "Nastya and an Array", "tags": ["implementation", "sortings"], "problem_rating": "800", "solved_by": "x13003"},
{"url": "https://codeforces.com//problemset/problem/991/F", "name": "Concise and clear", "tags": ["brute force", "greedy", "implementation", "math"], "problem_rating": "2700", "solved_by": "x300"},
{"url": "https://codeforces.com//problemset/problem/991/E", "name": "Bus Number", "tags": ["brute force", "combinatorics", "math"], "problem_rating": "1800", "solved_by": "x3438"},
{"url": "https://codeforces.com//problemset/problem/991/D", "name": "Bishwock", "tags": ["dp", "greedy"], "problem_rating": "1500", "solved_by": "x7085"},
{"url": "https://codeforces.com//problemset/problem/991/C", "name": "Candies", "tags": ["binary search", "implementation"], "problem_rating": "1500", "solved_by": "x10176"},
{"url": "https://codeforces.com//problemset/problem/991/B", "name": "Getting an A", "tags": ["greedy", "sortings"], "problem_rating": "900", "solved_by": "x12487"},
{"url": "https://codeforces.com//problemset/problem/991/A", "name": "If at first you don't succeed...", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x10457"},
{"url": "https://codeforces.com//problemset/problem/990/G", "name": "GCD Counting", "tags": ["divide and conquer", "dp", "dsu", "number theory", "trees"], "problem_rating": "2400", "solved_by": "x1782"},
{"url": "https://codeforces.com//problemset/problem/990/F", "name": "Flow Control", "tags": ["dfs and similar", "dp", "greedy", "trees"], "problem_rating": "2400", "solved_by": "x878"},
{"url": "https://codeforces.com//problemset/problem/990/E", "name": "Post Lamps", "tags": ["brute force", "greedy"], "problem_rating": "2100", "solved_by": "x1994"},
{"url": "https://codeforces.com//problemset/problem/990/D", "name": "Graph And Its Complement", "tags": ["constructive algorithms", "graphs", "implementation"], "problem_rating": "1700", "solved_by": "x3772"},
{"url": "https://codeforces.com//problemset/problem/990/C", "name": "Bracket Sequences Concatenation Problem", "tags": ["implementation"], "problem_rating": "1500", "solved_by": "x5837"},
{"url": "https://codeforces.com//problemset/problem/990/B", "name": "Micro-World", "tags": ["greedy", "sortings"], "problem_rating": "1200", "solved_by": "x8019"},
{"url": "https://codeforces.com//problemset/problem/990/A", "name": "Commentary Boxes", "tags": ["implementation", "math"], "problem_rating": "1000", "solved_by": "x10506"},
{"url": "https://codeforces.com//problemset/problem/989/E", "name": "A Trance of Nightfall", "tags": ["dp", "geometry", "matrices", "probabilities"], "problem_rating": "2700", "solved_by": "x230"},
{"url": "https://codeforces.com//problemset/problem/989/D", "name": "A Shade of Moonlight", "tags": ["binary search", "geometry", "math", "sortings", "two pointers"], "problem_rating": "2500", "solved_by": "x509"},
{"url": "https://codeforces.com//problemset/problem/989/C", "name": "A Mist of Florescence", "tags": ["constructive algorithms", "graphs"], "problem_rating": "1800", "solved_by": "x3755"},
{"url": "https://codeforces.com//problemset/problem/989/B", "name": "A Tide of Riverscape", "tags": ["constructive algorithms", "strings"], "problem_rating": "1200", "solved_by": "x7016"},
{"url": "https://codeforces.com//problemset/problem/989/A", "name": "A Blend of Springtime", "tags": ["implementation", "strings"], "problem_rating": "900", "solved_by": "x10239"},
{"url": "https://codeforces.com//problemset/problem/988/F", "name": "Rain and Umbrellas", "tags": ["dp"], "problem_rating": "2100", "solved_by": "x2264"},
{"url": "https://codeforces.com//problemset/problem/988/E", "name": "Divisibility by 25", "tags": ["brute force", "greedy"], "problem_rating": "2100", "solved_by": "x3886"},
{"url": "https://codeforces.com//problemset/problem/988/D", "name": "Points and Powers of Two", "tags": ["brute force", "math"], "problem_rating": "1800", "solved_by": "x7047"},
{"url": "https://codeforces.com//problemset/problem/988/C", "name": "Equal Sums", "tags": ["implementation", "sortings"], "problem_rating": "1400", "solved_by": "x10046"},
{"url": "https://codeforces.com//problemset/problem/988/B", "name": "Substrings Sort", "tags": ["sortings", "strings"], "problem_rating": "1100", "solved_by": "x18203"},
{"url": "https://codeforces.com//problemset/problem/988/A", "name": "Diverse Team", "tags": ["brute force", "implementation"], "problem_rating": "800", "solved_by": "x24437"},
{"url": "https://codeforces.com//problemset/problem/987/C", "name": "Three displays", "tags": ["brute force", "dp", "implementation"], "problem_rating": "1400", "solved_by": "x13263"},
{"url": "https://codeforces.com//problemset/problem/987/B", "name": "High School: Become Human", "tags": ["math"], "problem_rating": "1100", "solved_by": "x11543"},
{"url": "https://codeforces.com//problemset/problem/987/A", "name": "Infinity Gauntlet", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x16399"},
{"url": "https://codeforces.com//problemset/problem/986/F", "name": "Oppa Funcan Style Remastered", "tags": ["graphs", "math", "number theory", "shortest paths"], "problem_rating": "3300", "solved_by": "x571"},
{"url": "https://codeforces.com//problemset/problem/986/E", "name": "Prince's Problem", "tags": ["brute force", "data structures", "math", "number theory", "trees"], "problem_rating": "2800", "solved_by": "x783"},
{"url": "https://codeforces.com//problemset/problem/986/D", "name": "Perfect Encoding", "tags": ["fft", "math"], "problem_rating": "3100", "solved_by": "x326"},
{"url": "https://codeforces.com//problemset/problem/986/C", "name": "AND Graph", "tags": ["bitmasks", "dfs and similar", "dsu", "graphs"], "problem_rating": "2500", "solved_by": "x2270"},
{"url": "https://codeforces.com//problemset/problem/986/B", "name": "Petr and Permutations", "tags": ["combinatorics", "math"], "problem_rating": "1800", "solved_by": "x4608"},
{"url": "https://codeforces.com//problemset/problem/986/A", "name": "Fair", "tags": ["graphs", "greedy", "number theory", "shortest paths"], "problem_rating": "1600", "solved_by": "x6733"},
{"url": "https://codeforces.com//problemset/problem/985/G", "name": "Team Players", "tags": ["combinatorics"], "problem_rating": "2700", "solved_by": "x472"},
{"url": "https://codeforces.com//problemset/problem/985/F", "name": "Isomorphic Strings", "tags": ["hashing", "strings"], "problem_rating": "2300", "solved_by": "x1797"},
{"url": "https://codeforces.com//problemset/problem/985/E", "name": "Pencils and Boxes", "tags": ["binary search", "data structures", "dp", "greedy", "two pointers"], "problem_rating": "2100", "solved_by": "x3502"},
{"url": "https://codeforces.com//problemset/problem/985/D", "name": "Sand Fortress", "tags": ["binary search", "constructive algorithms", "math"], "problem_rating": "2100", "solved_by": "x2520"},
{"url": "https://codeforces.com//problemset/problem/985/C", "name": "Liebig's Barrels", "tags": ["greedy"], "problem_rating": "1500", "solved_by": "x5732"},
{"url": "https://codeforces.com//problemset/problem/985/B", "name": "Switches and Lamps", "tags": ["implementation"], "problem_rating": "1200", "solved_by": "x7353"},
{"url": "https://codeforces.com//problemset/problem/985/A", "name": "Chess Placing", "tags": ["implementation"], "problem_rating": "1100", "solved_by": "x8103"},
{"url": "https://codeforces.com//problemset/problem/984/B", "name": "Minesweeper", "tags": ["implementation"], "problem_rating": "1100", "solved_by": "x7319"},
{"url": "https://codeforces.com//problemset/problem/984/A", "name": "Game", "tags": ["sortings"], "problem_rating": "800", "solved_by": "x19243"},
{"url": "https://codeforces.com//problemset/problem/983/E", "name": "NN country", "tags": ["binary search", "data structures", "trees"], "problem_rating": "2800", "solved_by": "x916"},
{"url": "https://codeforces.com//problemset/problem/983/D", "name": "Arkady and Rectangles", "tags": ["data structures"], "problem_rating": "3300", "solved_by": "x365"},
{"url": "https://codeforces.com//problemset/problem/983/C", "name": "Elevator", "tags": ["dp", "graphs", "shortest paths"], "problem_rating": "2400", "solved_by": "x805"},
{"url": "https://codeforces.com//problemset/problem/983/B", "name": "XOR-pyramid", "tags": ["dp"], "problem_rating": "1800", "solved_by": "x5377"},
{"url": "https://codeforces.com//problemset/problem/983/A", "name": "Finite or not?", "tags": ["implementation", "math"], "problem_rating": "1700", "solved_by": "x4475"},
{"url": "https://codeforces.com//problemset/problem/982/F", "name": "The Meeting Place Cannot Be Changed", "tags": ["dfs and similar", "graphs"], "problem_rating": "2700", "solved_by": "x189"},
{"url": "https://codeforces.com//problemset/problem/982/E", "name": "Billiard", "tags": ["geometry", "number theory"], "problem_rating": "2600", "solved_by": "x694"},
{"url": "https://codeforces.com//problemset/problem/982/D", "name": "Shark", "tags": ["brute force", "data structures", "dsu", "trees"], "problem_rating": "1900", "solved_by": "x2270"},
{"url": "https://codeforces.com//problemset/problem/982/C", "name": "Cut 'em all!", "tags": ["dfs and similar", "dp", "graphs", "greedy", "trees"], "problem_rating": "1500", "solved_by": "x11166"},
{"url": "https://codeforces.com//problemset/problem/982/B", "name": "Bus of Characters", "tags": ["data structures", "greedy", "implementation"], "problem_rating": "1300", "solved_by": "x8234"},
{"url": "https://codeforces.com//problemset/problem/982/A", "name": "Row", "tags": ["brute force", "constructive algorithms"], "problem_rating": "1200", "solved_by": "x9020"},
{"url": "https://codeforces.com//problemset/problem/981/H", "name": "K Paths", "tags": ["combinatorics", "data structures", "dp", "fft", "math"], "problem_rating": "3100", "solved_by": "x268"},
{"url": "https://codeforces.com//problemset/problem/981/G", "name": "Magic multisets", "tags": ["data structures"], "problem_rating": "2500", "solved_by": "x631"},
{"url": "https://codeforces.com//problemset/problem/981/F", "name": "Round Marriage", "tags": ["binary search", "graph matchings", "greedy"], "problem_rating": "2500", "solved_by": "x704"},
{"url": "https://codeforces.com//problemset/problem/981/E", "name": "Addition on Segments", "tags": ["bitmasks", "data structures", "divide and conquer", "dp"], "problem_rating": "2200", "solved_by": "x2054"},
{"url": "https://codeforces.com//problemset/problem/981/D", "name": "Bookshelves", "tags": ["bitmasks", "dp", "greedy"], "problem_rating": "1900", "solved_by": "x3211"},
{"url": "https://codeforces.com//problemset/problem/981/C", "name": "Useful Decomposition", "tags": ["implementation", "trees"], "problem_rating": "1400", "solved_by": "x5282"},
{"url": "https://codeforces.com//problemset/problem/981/B", "name": "Businessmen Problems", "tags": ["sortings"], "problem_rating": "1000", "solved_by": "x6869"},
{"url": "https://codeforces.com//problemset/problem/981/A", "name": "Antipalindrome", "tags": ["brute force", "implementation", "strings"], "problem_rating": "900", "solved_by": "x9210"},
{"url": "https://codeforces.com//problemset/problem/980/F", "name": "Cactus to Tree", "tags": ["dp", "graphs", "trees"], "problem_rating": "2900", "solved_by": "x194"},
{"url": "https://codeforces.com//problemset/problem/980/E", "name": "The Number Games", "tags": ["data structures", "greedy", "trees"], "problem_rating": "2200", "solved_by": "x1897"},
{"url": "https://codeforces.com//problemset/problem/980/D", "name": "Perfect Groups", "tags": ["dp", "math", "number theory"], "problem_rating": "2100", "solved_by": "x2627"},
{"url": "https://codeforces.com//problemset/problem/980/C", "name": "Posterized", "tags": ["games", "greedy"], "problem_rating": "1700", "solved_by": "x3756"},
{"url": "https://codeforces.com//problemset/problem/980/B", "name": "Marlin", "tags": ["constructive algorithms"], "problem_rating": "1600", "solved_by": "x4656"},
{"url": "https://codeforces.com//problemset/problem/980/A", "name": "Links and Pearls", "tags": ["implementation", "math"], "problem_rating": "900", "solved_by": "x10386"},
{"url": "https://codeforces.com//problemset/problem/979/E", "name": "Kuro and Topological Parity", "tags": ["dp"], "problem_rating": "2400", "solved_by": "x606"},
{"url": "https://codeforces.com//problemset/problem/979/D", "name": "Kuro and GCD and XOR and SUM", "tags": ["binary search", "bitmasks", "brute force", "data structures", "dp", "dsu", "greedy", "math", "number theory", "strings", "trees"], "problem_rating": "2200", "solved_by": "x1746"},
{"url": "https://codeforces.com//problemset/problem/979/C", "name": "Kuro and Walking Route", "tags": ["dfs and similar", "trees"], "problem_rating": "1600", "solved_by": "x6160"},
{"url": "https://codeforces.com//problemset/problem/979/B", "name": "Treasure Hunt", "tags": ["greedy"], "problem_rating": "1800", "solved_by": "x4383"},
{"url": "https://codeforces.com//problemset/problem/979/A", "name": "Pizza, Pizza, Pizza!!!", "tags": ["math"], "problem_rating": "1000", "solved_by": "x13602"},
{"url": "https://codeforces.com//problemset/problem/978/G", "name": "Petya's Exams", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "1700", "solved_by": "x4286"},
{"url": "https://codeforces.com//problemset/problem/978/F", "name": "Mentors", "tags": ["binary search", "data structures", "implementation"], "problem_rating": "1500", "solved_by": "x8156"},
{"url": "https://codeforces.com//problemset/problem/978/E", "name": "Bus Video System", "tags": ["combinatorics", "math"], "problem_rating": "1400", "solved_by": "x9397"},
{"url": "https://codeforces.com//problemset/problem/978/D", "name": "Almost Arithmetic Progression", "tags": ["brute force", "implementation", "math"], "problem_rating": "1500", "solved_by": "x8568"},
{"url": "https://codeforces.com//problemset/problem/978/C", "name": "Letters", "tags": ["binary search", "implementation", "two pointers"], "problem_rating": "1000", "solved_by": "x24994"},
{"url": "https://codeforces.com//problemset/problem/978/B", "name": "File Name", "tags": ["greedy", "strings"], "problem_rating": "800", "solved_by": "x35631"},
{"url": "https://codeforces.com//problemset/problem/978/A", "name": "Remove Duplicates", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x26561"},
{"url": "https://codeforces.com//problemset/problem/977/F", "name": "Consecutive Subsequence", "tags": ["dp"], "problem_rating": "1700", "solved_by": "x17696"},
{"url": "https://codeforces.com//problemset/problem/977/E", "name": "Cyclic Components", "tags": ["dfs and similar", "dsu", "graphs"], "problem_rating": "1500", "solved_by": "x19921"},
{"url": "https://codeforces.com//problemset/problem/977/D", "name": "Divide by three, multiply by two", "tags": ["dfs and similar", "math", "sortings"], "problem_rating": "1400", "solved_by": "x17978"},
{"url": "https://codeforces.com//problemset/problem/977/C", "name": "Less or Equal", "tags": ["sortings"], "problem_rating": "1200", "solved_by": "x33441"},
{"url": "https://codeforces.com//problemset/problem/977/B", "name": "Two-gram", "tags": ["implementation", "strings"], "problem_rating": "900", "solved_by": "x38056"},
{"url": "https://codeforces.com//problemset/problem/977/A", "name": "Wrong Subtraction", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x160606"},
{"url": "https://codeforces.com//problemset/problem/976/F", "name": "Minimal k-covering", "tags": ["flows", "graphs"], "problem_rating": "2500", "solved_by": "x564"},
{"url": "https://codeforces.com//problemset/problem/976/E", "name": "Well played!", "tags": ["greedy", "sortings"], "problem_rating": "2100", "solved_by": "x2366"},
{"url": "https://codeforces.com//problemset/problem/976/D", "name": "Degree Set", "tags": ["constructive algorithms", "graphs", "implementation"], "problem_rating": "2500", "solved_by": "x674"},
{"url": "https://codeforces.com//problemset/problem/976/C", "name": "Nested Segments", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "1500", "solved_by": "x6676"},
{"url": "https://codeforces.com//problemset/problem/976/B", "name": "Lara Croft and the New Game", "tags": ["implementation", "math"], "problem_rating": "1300", "solved_by": "x5682"},
{"url": "https://codeforces.com//problemset/problem/976/A", "name": "Minimum Binary Number", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x10474"},
{"url": "https://codeforces.com//problemset/problem/975/E", "name": "Hag's Khashba", "tags": ["geometry"], "problem_rating": "2600", "solved_by": "x302"},
{"url": "https://codeforces.com//problemset/problem/975/D", "name": "Ghosts", "tags": ["geometry", "math"], "problem_rating": "2000", "solved_by": "x2122"},
{"url": "https://codeforces.com//problemset/problem/975/C", "name": "Valhalla Siege", "tags": ["binary search"], "problem_rating": "1400", "solved_by": "x9477"},
{"url": "https://codeforces.com//problemset/problem/975/B", "name": "Mancala", "tags": ["brute force", "implementation"], "problem_rating": "1100", "solved_by": "x6791"},
{"url": "https://codeforces.com//problemset/problem/975/A", "name": "Aramic script", "tags": ["implementation", "strings"], "problem_rating": "900", "solved_by": "x9106"},
{"url": "https://codeforces.com//problemset/problem/967/B", "name": "Watering System", "tags": ["math", "sortings"], "problem_rating": "1000", "solved_by": "x6977"},
{"url": "https://codeforces.com//problemset/problem/967/A", "name": "Mind the Gap", "tags": ["implementation"], "problem_rating": "1100", "solved_by": "x4333"},
{"url": "https://codeforces.com//problemset/problem/965/E", "name": "Short Code", "tags": ["data structures", "dp", "greedy", "strings", "trees"], "problem_rating": "2200", "solved_by": "x1420"},
{"url": "https://codeforces.com//problemset/problem/965/D", "name": "Single-use Stones", "tags": ["binary search", "flows", "greedy", "two pointers"], "problem_rating": "1900", "solved_by": "x3047"},
{"url": "https://codeforces.com//problemset/problem/965/C", "name": "Greedy Arkady", "tags": ["math"], "problem_rating": "2000", "solved_by": "x2074"},
{"url": "https://codeforces.com//problemset/problem/965/B", "name": "Battleship", "tags": ["implementation"], "problem_rating": "1300", "solved_by": "x4504"},
{"url": "https://codeforces.com//problemset/problem/965/A", "name": "Paper Airplanes", "tags": ["math"], "problem_rating": "800", "solved_by": "x9412"},
{"url": "https://codeforces.com//problemset/problem/964/B", "name": "Messages", "tags": ["math"], "problem_rating": "1300", "solved_by": "x4333"},
{"url": "https://codeforces.com//problemset/problem/964/A", "name": "Splits", "tags": ["math"], "problem_rating": "800", "solved_by": "x9184"},
{"url": "https://codeforces.com//problemset/problem/963/E", "name": "Circles of Waiting", "tags": ["math"], "problem_rating": "3100", "solved_by": "x540"},
{"url": "https://codeforces.com//problemset/problem/963/D", "name": "Frequency of String", "tags": ["hashing", "string suffix structures", "strings"], "problem_rating": "2500", "solved_by": "x1885"},
{"url": "https://codeforces.com//problemset/problem/963/C", "name": "Cutting Rectangle", "tags": ["brute force", "math", "number theory"], "problem_rating": "2600", "solved_by": "x563"},
{"url": "https://codeforces.com//problemset/problem/963/B", "name": "Destruction of a Tree", "tags": ["constructive algorithms", "dfs and similar", "dp", "greedy", "trees"], "problem_rating": "2000", "solved_by": "x2735"},
{"url": "https://codeforces.com//problemset/problem/963/A", "name": "Alternating Sum", "tags": ["math", "number theory"], "problem_rating": "1800", "solved_by": "x3262"},
{"url": "https://codeforces.com//problemset/problem/962/G", "name": "Visible Black Areas", "tags": ["data structures", "dsu", "geometry", "trees"], "problem_rating": "2800", "solved_by": "x177"},
{"url": "https://codeforces.com//problemset/problem/962/F", "name": "Simple Cycles Edges", "tags": ["dfs and similar", "graphs", "trees"], "problem_rating": "2400", "solved_by": "x1268"},
{"url": "https://codeforces.com//problemset/problem/962/E", "name": "Byteland, Berland and Disputed Cities", "tags": ["constructive algorithms", "greedy"], "problem_rating": "2200", "solved_by": "x1051"},
{"url": "https://codeforces.com//problemset/problem/962/D", "name": "Merge Equals", "tags": ["data structures", "implementation"], "problem_rating": "1600", "solved_by": "x6763"},
{"url": "https://codeforces.com//problemset/problem/962/C", "name": "Make a Square", "tags": ["brute force", "implementation", "math"], "problem_rating": "1400", "solved_by": "x7781"},
{"url": "https://codeforces.com//problemset/problem/962/B", "name": "Students in Railway Carriage", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "1300", "solved_by": "x7624"},
{"url": "https://codeforces.com//problemset/problem/962/A", "name": "Equator", "tags": ["implementation"], "problem_rating": "1300", "solved_by": "x12691"},
{"url": "https://codeforces.com//problemset/problem/961/G", "name": "Partitions", "tags": ["combinatorics", "math", "number theory"], "problem_rating": "2700", "solved_by": "x1325"},
{"url": "https://codeforces.com//problemset/problem/961/F", "name": "k-substrings", "tags": ["binary search", "hashing", "string suffix structures"], "problem_rating": "2700", "solved_by": "x701"},
{"url": "https://codeforces.com//problemset/problem/961/E", "name": "Tufurama", "tags": ["data structures"], "problem_rating": "1900", "solved_by": "x3490"},
{"url": "https://codeforces.com//problemset/problem/961/D", "name": "Pair Of Lines", "tags": ["geometry"], "problem_rating": "2000", "solved_by": "x4183"},
{"url": "https://codeforces.com//problemset/problem/961/C", "name": "Chessboard", "tags": ["bitmasks", "brute force", "implementation"], "problem_rating": "1400", "solved_by": "x5266"},
{"url": "https://codeforces.com//problemset/problem/961/B", "name": "Lecture Sleep", "tags": ["data structures", "dp", "implementation", "two pointers"], "problem_rating": "1200", "solved_by": "x20110"},
{"url": "https://codeforces.com//problemset/problem/961/A", "name": "Tetris", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x9985"},
{"url": "https://codeforces.com//problemset/problem/960/H", "name": "Santa's Gift", "tags": ["data structures", "trees"], "problem_rating": "3100", "solved_by": "x260"},
{"url": "https://codeforces.com//problemset/problem/960/G", "name": "Bandit Blues", "tags": ["combinatorics", "dp", "fft", "math"], "problem_rating": "2900", "solved_by": "x1053"},
{"url": "https://codeforces.com//problemset/problem/960/F", "name": "Pathwalks", "tags": ["data structures", "dp", "graphs"], "problem_rating": "2100", "solved_by": "x2900"},
{"url": "https://codeforces.com//problemset/problem/960/E", "name": "Alternating Tree", "tags": ["combinatorics", "dfs and similar", "divide and conquer", "dp", "probabilities", "trees"], "problem_rating": "2300", "solved_by": "x1884"},
{"url": "https://codeforces.com//problemset/problem/960/D", "name": "Full Binary Tree Queries", "tags": ["brute force", "implementation", "trees"], "problem_rating": "2100", "solved_by": "x1868"},
{"url": "https://codeforces.com//problemset/problem/960/C", "name": "Subsequence Counting", "tags": ["bitmasks", "constructive algorithms", "greedy", "implementation"], "problem_rating": "1700", "solved_by": "x3899"},
{"url": "https://codeforces.com//problemset/problem/960/B", "name": "Minimize the error", "tags": ["data structures", "greedy", "sortings"], "problem_rating": "1500", "solved_by": "x7659"},
{"url": "https://codeforces.com//problemset/problem/960/A", "name": "Check the string", "tags": ["implementation"], "problem_rating": "1200", "solved_by": "x8129"},
{"url": "https://codeforces.com//problemset/problem/959/F", "name": "Mahmoud and Ehab and yet another xor task", "tags": ["bitmasks", "dp", "math", "matrices"], "problem_rating": "2400", "solved_by": "x2016"},
{"url": "https://codeforces.com//problemset/problem/959/E", "name": "Mahmoud and Ehab and the xor-MST", "tags": ["bitmasks", "dp", "graphs", "implementation", "math"], "problem_rating": "1900", "solved_by": "x3346"},
{"url": "https://codeforces.com//problemset/problem/959/D", "name": "Mahmoud and Ehab and another array construction task", "tags": ["constructive algorithms", "greedy", "math", "number theory"], "problem_rating": "1900", "solved_by": "x3068"},
{"url": "https://codeforces.com//problemset/problem/959/C", "name": "Mahmoud and Ehab and the wrong algorithm", "tags": ["constructive algorithms", "trees"], "problem_rating": "1500", "solved_by": "x5730"},
{"url": "https://codeforces.com//problemset/problem/959/B", "name": "Mahmoud and Ehab and the message", "tags": ["dsu", "greedy", "implementation"], "problem_rating": "1200", "solved_by": "x9435"},
{"url": "https://codeforces.com//problemset/problem/959/A", "name": "Mahmoud and Ehab and the even-odd game", "tags": ["games", "math"], "problem_rating": "800", "solved_by": "x45646"},
{"url": "https://codeforces.com//problemset/problem/958/F3", "name": "Lightsabers (hard)", "tags": ["fft"], "problem_rating": "2600", "solved_by": "x680"},
{"url": "https://codeforces.com//problemset/problem/958/F2", "name": "Lightsabers (medium)", "tags": ["binary search", "two pointers"], "problem_rating": "1800", "solved_by": "x1215"},
{"url": "https://codeforces.com//problemset/problem/958/F1", "name": "Lightsabers (easy)", "tags": ["implementation"], "problem_rating": "1500", "solved_by": "x1596"},
{"url": "https://codeforces.com//problemset/problem/958/E3", "name": "Guard Duty (hard)", "tags": ["geometry"], "problem_rating": "2700", "solved_by": "x182"},
{"url": "https://codeforces.com//problemset/problem/958/E2", "name": "Guard Duty (medium)", "tags": ["binary search", "dp", "greedy", "sortings"], "problem_rating": "2200", "solved_by": "x918"},
{"url": "https://codeforces.com//problemset/problem/958/E1", "name": "Guard Duty (easy)", "tags": ["brute force", "geometry", "greedy", "math"], "problem_rating": "1600", "solved_by": "x1493"},
{"url": "https://codeforces.com//problemset/problem/958/D2", "name": "Hyperspace Jump (hard)", "tags": [], "problem_rating": "2700", "solved_by": "x87"},
{"url": "https://codeforces.com//problemset/problem/958/D1", "name": "Hyperspace Jump (easy)", "tags": ["expression parsing", "math"], "problem_rating": "1400", "solved_by": "x2055"},
{"url": "https://codeforces.com//problemset/problem/958/C3", "name": "Encryption (hard)", "tags": ["data structures", "dp"], "problem_rating": "2500", "solved_by": "x530"},
{"url": "https://codeforces.com//problemset/problem/958/C2", "name": "Encryption (medium)", "tags": ["dp"], "problem_rating": "2000", "solved_by": "x1202"},
{"url": "https://codeforces.com//problemset/problem/958/C1", "name": "Encryption (easy)", "tags": ["brute force"], "problem_rating": "1200", "solved_by": "x2847"},
{"url": "https://codeforces.com//problemset/problem/958/B2", "name": "Maximum Control (medium)", "tags": ["data structures", "dfs and similar", "graphs", "greedy", "trees"], "problem_rating": "2200", "solved_by": "x625"},
{"url": "https://codeforces.com//problemset/problem/958/B1", "name": "Maximum Control (easy)", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x3360"},
{"url": "https://codeforces.com//problemset/problem/958/A3", "name": "Death Stars (hard)", "tags": [], "problem_rating": "3100", "solved_by": "x45"},
{"url": "https://codeforces.com//problemset/problem/958/A2", "name": "Death Stars (medium)", "tags": ["hashing", "strings"], "problem_rating": "2000", "solved_by": "x884"},
{"url": "https://codeforces.com//problemset/problem/958/A1", "name": "Death Stars (easy)", "tags": ["implementation"], "problem_rating": "1400", "solved_by": "x1642"},
{"url": "https://codeforces.com//problemset/problem/957/A", "name": "Tritonic Iridescence", "tags": ["implementation"], "problem_rating": "1300", "solved_by": "x5721"},
{"url": "https://codeforces.com//problemset/problem/955/F", "name": "Heaps", "tags": ["dp", "trees"], "problem_rating": "2600", "solved_by": "x366"},
{"url": "https://codeforces.com//problemset/problem/955/E", "name": "Icicles", "tags": [], "problem_rating": "2900", "solved_by": "x91"},
{"url": "https://codeforces.com//problemset/problem/955/D", "name": "Scissors", "tags": ["brute force", "strings"], "problem_rating": "2600", "solved_by": "x462"},
{"url": "https://codeforces.com//problemset/problem/955/C", "name": "Sad powers", "tags": ["binary search", "math", "number theory"], "problem_rating": "2100", "solved_by": "x2673"},
{"url": "https://codeforces.com//problemset/problem/955/B", "name": "Not simply beatiful strings", "tags": ["implementation"], "problem_rating": "1400", "solved_by": "x4778"},
{"url": "https://codeforces.com//problemset/problem/955/A", "name": "Feed the cat", "tags": ["greedy", "math"], "problem_rating": "1100", "solved_by": "x6622"},
{"url": "https://codeforces.com//problemset/problem/954/I", "name": "Yet Another String Matching Problem", "tags": ["fft", "math"], "problem_rating": "2200", "solved_by": "x995"},
{"url": "https://codeforces.com//problemset/problem/954/H", "name": "Path Counting", "tags": ["combinatorics", "dp"], "problem_rating": "2500", "solved_by": "x576"},
{"url": "https://codeforces.com//problemset/problem/954/G", "name": "Castle Defense", "tags": ["binary search", "data structures", "greedy", "two pointers"], "problem_rating": "2000", "solved_by": "x2113"},
{"url": "https://codeforces.com//problemset/problem/954/F", "name": "Runner's Problem", "tags": ["dp", "matrices", "sortings"], "problem_rating": "2100", "solved_by": "x1185"},
{"url": "https://codeforces.com//problemset/problem/954/E", "name": "Water Taps", "tags": ["binary search", "greedy", "sortings"], "problem_rating": "2000", "solved_by": "x1857"},
{"url": "https://codeforces.com//problemset/problem/954/D", "name": "Fight Against Traffic", "tags": ["dfs and similar", "graphs", "shortest paths"], "problem_rating": "1600", "solved_by": "x6429"},
{"url": "https://codeforces.com//problemset/problem/954/C", "name": "Matrix Walk", "tags": ["implementation"], "problem_rating": "1700", "solved_by": "x3753"},
{"url": "https://codeforces.com//problemset/problem/954/B", "name": "String Typing", "tags": ["implementation", "strings"], "problem_rating": "1400", "solved_by": "x7133"},
{"url": "https://codeforces.com//problemset/problem/954/A", "name": "Diagonal Walking", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x10434"},
{"url": "https://codeforces.com//problemset/problem/952/G", "name": "Puzzling Language", "tags": ["constructive algorithms"], "problem_rating": "2200", "solved_by": "x233"},
{"url": "https://codeforces.com//problemset/problem/952/F", "name": "2 + 2 != 4", "tags": [], "problem_rating": "2400", "solved_by": "x378"},
{"url": "https://codeforces.com//problemset/problem/952/E", "name": "Cheese Board", "tags": [], "problem_rating": "2000", "solved_by": "x631"},
{"url": "https://codeforces.com//problemset/problem/952/D", "name": "I'm Feeling Lucky!", "tags": ["probabilities"], "problem_rating": "1800", "solved_by": "x2422"},
{"url": "https://codeforces.com//problemset/problem/952/C", "name": "Ravioli Sort", "tags": ["implementation"], "problem_rating": "1600", "solved_by": "x2891"},
{"url": "https://codeforces.com//problemset/problem/952/B", "name": "A Map of the Cat", "tags": ["brute force", "interactive"], "problem_rating": "1900", "solved_by": "x2031"},
{"url": "https://codeforces.com//problemset/problem/952/A", "name": "Quirky Quantifiers", "tags": ["math"], "problem_rating": "800", "solved_by": "x11178"},
{"url": "https://codeforces.com//problemset/problem/950/B", "name": "Intercepted Message", "tags": ["greedy", "implementation"], "problem_rating": "1100", "solved_by": "x7543"},
{"url": "https://codeforces.com//problemset/problem/950/A", "name": "Left-handers, Right-handers and Ambidexters", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x15096"},
{"url": "https://codeforces.com//problemset/problem/949/F", "name": "Astronomy", "tags": ["geometry", "probabilities"], "problem_rating": "3300", "solved_by": "x58"},
{"url": "https://codeforces.com//problemset/problem/949/E", "name": "Binary Cards", "tags": ["brute force"], "problem_rating": "2700", "solved_by": "x630"},
{"url": "https://codeforces.com//problemset/problem/949/D", "name": "Curfew", "tags": ["binary search", "brute force", "greedy", "sortings"], "problem_rating": "2300", "solved_by": "x818"},
{"url": "https://codeforces.com//problemset/problem/949/C", "name": "Data Center Maintenance", "tags": ["dfs and similar", "graphs"], "problem_rating": "1900", "solved_by": "x2003"},
{"url": "https://codeforces.com//problemset/problem/949/B", "name": "A Leapfrog in the Array", "tags": ["constructive algorithms", "math"], "problem_rating": "1700", "solved_by": "x3703"},
{"url": "https://codeforces.com//problemset/problem/949/A", "name": "Zebras", "tags": ["greedy"], "problem_rating": "1600", "solved_by": "x5278"},
{"url": "https://codeforces.com//problemset/problem/948/A", "name": "Protect Sheep", "tags": ["brute force", "dfs and similar", "graphs", "implementation"], "problem_rating": "900", "solved_by": "x13579"},
{"url": "https://codeforces.com//problemset/problem/946/G", "name": "Almost Increasing Array", "tags": ["data structures", "dp"], "problem_rating": "2500", "solved_by": "x661"},
{"url": "https://codeforces.com//problemset/problem/946/F", "name": "Fibonacci String Subsequences", "tags": ["combinatorics", "dp", "matrices"], "problem_rating": "2400", "solved_by": "x537"},
{"url": "https://codeforces.com//problemset/problem/946/E", "name": "Largest Beautiful Number", "tags": ["greedy", "implementation"], "problem_rating": "2200", "solved_by": "x1083"},
{"url": "https://codeforces.com//problemset/problem/946/D", "name": "Timetable", "tags": ["dp"], "problem_rating": "1800", "solved_by": "x4317"},
{"url": "https://codeforces.com//problemset/problem/946/C", "name": "String Transformation", "tags": ["greedy", "strings"], "problem_rating": "1300", "solved_by": "x8810"},
{"url": "https://codeforces.com//problemset/problem/946/B", "name": "Weird Subtraction Process", "tags": ["math", "number theory"], "problem_rating": "1100", "solved_by": "x10759"},
{"url": "https://codeforces.com//problemset/problem/946/A", "name": "Partition", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x16203"},
{"url": "https://codeforces.com//problemset/problem/940/F", "name": "Machine Learning", "tags": ["brute force", "data structures"], "problem_rating": "2600", "solved_by": "x2517"},
{"url": "https://codeforces.com//problemset/problem/940/E", "name": "Cashback", "tags": ["data structures", "dp", "greedy", "math"], "problem_rating": "2000", "solved_by": "x3598"},
{"url": "https://codeforces.com//problemset/problem/940/D", "name": "Alena And The Heater", "tags": ["binary search", "implementation"], "problem_rating": "1600", "solved_by": "x3599"},
{"url": "https://codeforces.com//problemset/problem/940/C", "name": "Phone Numbers", "tags": ["constructive algorithms", "implementation", "strings"], "problem_rating": "1500", "solved_by": "x5739"},
{"url": "https://codeforces.com//problemset/problem/940/B", "name": "Our Tanya is Crying Out Loud", "tags": ["dp", "greedy"], "problem_rating": "1400", "solved_by": "x8909"},
{"url": "https://codeforces.com//problemset/problem/940/A", "name": "Points on the line", "tags": ["brute force", "greedy", "sortings"], "problem_rating": "1200", "solved_by": "x8220"},
{"url": "https://codeforces.com//problemset/problem/939/F", "name": "Cutlet", "tags": ["data structures", "dp"], "problem_rating": "2400", "solved_by": "x909"},
{"url": "https://codeforces.com//problemset/problem/939/E", "name": "Maximize!", "tags": ["binary search", "greedy", "ternary search", "two pointers"], "problem_rating": "1800", "solved_by": "x3063"},
{"url": "https://codeforces.com//problemset/problem/939/D", "name": "Love Rescue", "tags": ["dfs and similar", "dsu", "graphs", "greedy", "strings"], "problem_rating": "1600", "solved_by": "x7207"},
{"url": "https://codeforces.com//problemset/problem/939/C", "name": "Convenient For Everybody", "tags": ["binary search", "two pointers"], "problem_rating": "1600", "solved_by": "x4607"},
{"url": "https://codeforces.com//problemset/problem/939/B", "name": "Hamster Farm", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x10429"},
{"url": "https://codeforces.com//problemset/problem/939/A", "name": "Love Triangle", "tags": ["graphs"], "problem_rating": "800", "solved_by": "x24706"},
{"url": "https://codeforces.com//problemset/problem/938/G", "name": "Shortest Path Queries", "tags": ["bitmasks", "data structures", "dsu", "graphs"], "problem_rating": "2900", "solved_by": "x873"},
{"url": "https://codeforces.com//problemset/problem/938/F", "name": "Erasing Substrings", "tags": ["bitmasks", "dp", "greedy"], "problem_rating": "2700", "solved_by": "x474"},
{"url": "https://codeforces.com//problemset/problem/938/E", "name": "Max History", "tags": ["combinatorics", "math"], "problem_rating": "2300", "solved_by": "x1263"},
{"url": "https://codeforces.com//problemset/problem/938/D", "name": "Buy a Ticket", "tags": ["data structures", "graphs", "shortest paths"], "problem_rating": "2000", "solved_by": "x5494"},
{"url": "https://codeforces.com//problemset/problem/938/C", "name": "Constructing Tests", "tags": ["binary search", "brute force", "constructive algorithms"], "problem_rating": "1700", "solved_by": "x3289"},
{"url": "https://codeforces.com//problemset/problem/938/B", "name": "Run For Your Prize", "tags": ["brute force", "greedy"], "problem_rating": "1100", "solved_by": "x8782"},
{"url": "https://codeforces.com//problemset/problem/938/A", "name": "Word Correction", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x11386"},
{"url": "https://codeforces.com//problemset/problem/937/B", "name": "Vile Grasshoppers", "tags": ["brute force", "math", "number theory"], "problem_rating": "1400", "solved_by": "x6826"},
{"url": "https://codeforces.com//problemset/problem/937/A", "name": "Olympiad", "tags": ["implementation", "sortings"], "problem_rating": "800", "solved_by": "x14948"},
{"url": "https://codeforces.com//problemset/problem/936/E", "name": "Iqea", "tags": ["data structures", "dfs and similar", "divide and conquer", "dsu", "shortest paths", "trees"], "problem_rating": "3400", "solved_by": "x186"},
{"url": "https://codeforces.com//problemset/problem/936/D", "name": "World of Tank", "tags": ["dp", "greedy"], "problem_rating": "3000", "solved_by": "x328"},
{"url": "https://codeforces.com//problemset/problem/936/C", "name": "Lock Puzzle", "tags": ["constructive algorithms", "implementation", "strings"], "problem_rating": "2300", "solved_by": "x1159"},
{"url": "https://codeforces.com//problemset/problem/936/B", "name": "Sleepy Game", "tags": ["dfs and similar", "dp", "games", "graphs"], "problem_rating": "2100", "solved_by": "x3221"},
{"url": "https://codeforces.com//problemset/problem/936/A", "name": "Save Energy!", "tags": ["binary search", "implementation", "math"], "problem_rating": "1700", "solved_by": "x4340"},
{"url": "https://codeforces.com//problemset/problem/935/F", "name": "Fafa and Array", "tags": ["data structures", "greedy"], "problem_rating": "2600", "solved_by": "x361"},
{"url": "https://codeforces.com//problemset/problem/935/E", "name": "Fafa and Ancient Mathematics", "tags": ["dfs and similar", "dp", "trees"], "problem_rating": "2300", "solved_by": "x873"},
{"url": "https://codeforces.com//problemset/problem/935/D", "name": "Fafa and Ancient Alphabet", "tags": ["math", "probabilities"], "problem_rating": "1900", "solved_by": "x2542"},
{"url": "https://codeforces.com//problemset/problem/935/C", "name": "Fifa and Fafa", "tags": ["geometry"], "problem_rating": "1600", "solved_by": "x4705"},
{"url": "https://codeforces.com//problemset/problem/935/B", "name": "Fafa and the Gates", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x11474"},
{"url": "https://codeforces.com//problemset/problem/935/A", "name": "Fafa and his Company", "tags": ["brute force", "implementation"], "problem_rating": "800", "solved_by": "x42265"},
{"url": "https://codeforces.com//problemset/problem/934/B", "name": "A Prosperous Lot", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1200", "solved_by": "x8582"},
{"url": "https://codeforces.com//problemset/problem/934/A", "name": "A Compatible Pair", "tags": ["brute force", "games"], "problem_rating": "1400", "solved_by": "x6784"},
{"url": "https://codeforces.com//problemset/problem/933/E", "name": "A Preponderant Reunion", "tags": ["constructive algorithms", "dp"], "problem_rating": "3200", "solved_by": "x186"},
{"url": "https://codeforces.com//problemset/problem/933/D", "name": "A Creative Cutout", "tags": ["brute force", "combinatorics", "math"], "problem_rating": "2900", "solved_by": "x282"},
{"url": "https://codeforces.com//problemset/problem/933/C", "name": "A Colourful Prospect", "tags": ["geometry", "graphs"], "problem_rating": "2700", "solved_by": "x557"},
{"url": "https://codeforces.com//problemset/problem/933/B", "name": "A Determined Cleanup", "tags": ["math"], "problem_rating": "2000", "solved_by": "x1902"},
{"url": "https://codeforces.com//problemset/problem/933/A", "name": "A Twisty Movement", "tags": ["dp"], "problem_rating": "1800", "solved_by": "x4875"},
{"url": "https://codeforces.com//problemset/problem/932/G", "name": "Palindrome Partition", "tags": ["dp", "string suffix structures", "strings"], "problem_rating": "2900", "solved_by": "x904"},
{"url": "https://codeforces.com//problemset/problem/932/F", "name": "Escape Through Leaf", "tags": ["data structures", "dp", "geometry"], "problem_rating": "2700", "solved_by": "x2793"},
{"url": "https://codeforces.com//problemset/problem/932/E", "name": "Team Work", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2400", "solved_by": "x2762"},
{"url": "https://codeforces.com//problemset/problem/932/D", "name": "Tree", "tags": ["binary search", "dp", "trees"], "problem_rating": "2200", "solved_by": "x1675"},
{"url": "https://codeforces.com//problemset/problem/932/C", "name": "Permutation Cycle", "tags": ["brute force", "constructive algorithms"], "problem_rating": "1600", "solved_by": "x3992"},
{"url": "https://codeforces.com//problemset/problem/932/B", "name": "Recursive Queries", "tags": ["binary search", "data structures", "dfs and similar"], "problem_rating": "1300", "solved_by": "x7960"},
{"url": "https://codeforces.com//problemset/problem/932/A", "name": "Palindromic Supersequence", "tags": ["constructive algorithms"], "problem_rating": "800", "solved_by": "x10177"},
{"url": "https://codeforces.com//problemset/problem/931/C", "name": "Laboratory Work", "tags": ["implementation", "math"], "problem_rating": "1700", "solved_by": "x3333"},
{"url": "https://codeforces.com//problemset/problem/931/B", "name": "World Cup", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1200", "solved_by": "x7069"},
{"url": "https://codeforces.com//problemset/problem/931/A", "name": "Friends Meeting", "tags": ["brute force", "greedy", "implementation", "math"], "problem_rating": "800", "solved_by": "x11799"},
{"url": "https://codeforces.com//problemset/problem/930/E", "name": "Coins Exhibition", "tags": ["data structures", "dp", "math"], "problem_rating": "2900", "solved_by": "x416"},
{"url": "https://codeforces.com//problemset/problem/930/D", "name": "Game with Tokens", "tags": ["data structures", "games", "implementation"], "problem_rating": "2500", "solved_by": "x403"},
{"url": "https://codeforces.com//problemset/problem/930/C", "name": "Teodor is not a liar!", "tags": ["data structures", "dp"], "problem_rating": "1900", "solved_by": "x2093"},
{"url": "https://codeforces.com//problemset/problem/930/B", "name": "Game with String", "tags": ["implementation", "probabilities", "strings"], "problem_rating": "1600", "solved_by": "x2633"},
{"url": "https://codeforces.com//problemset/problem/930/A", "name": "Peculiar apple-tree", "tags": ["dfs and similar", "graphs", "trees"], "problem_rating": "1500", "solved_by": "x6935"},
{"url": "https://codeforces.com//problemset/problem/929/D", "name": "Пограничные врата", "tags": [], "problem_rating": "2400", "solved_by": "x151"},
{"url": "https://codeforces.com//problemset/problem/929/C", "name": "Красивая команда", "tags": ["*special problem", "combinatorics", "math"], "problem_rating": "1700", "solved_by": "x1150"},
{"url": "https://codeforces.com//problemset/problem/929/B", "name": "Места в самолёте", "tags": ["*special problem", "implementation"], "problem_rating": "1300", "solved_by": "x2038"},
{"url": "https://codeforces.com//problemset/problem/929/A", "name": "Прокат велосипедов", "tags": ["*special problem", "greedy", "implementation"], "problem_rating": "1400", "solved_by": "x2493"},
{"url": "https://codeforces.com//problemset/problem/928/D", "name": "Autocompletion", "tags": ["*special problem", "strings", "trees"], "problem_rating": "1900", "solved_by": "x804"},
{"url": "https://codeforces.com//problemset/problem/928/C", "name": "Dependency management", "tags": ["*special problem", "graphs", "implementation"], "problem_rating": "1900", "solved_by": "x883"},
{"url": "https://codeforces.com//problemset/problem/928/B", "name": "Chat", "tags": ["*special problem", "dp"], "problem_rating": "1400", "solved_by": "x2519"},
{"url": "https://codeforces.com//problemset/problem/928/A", "name": "Login Verification", "tags": ["*special problem", "strings"], "problem_rating": "1200", "solved_by": "x3362"},
{"url": "https://codeforces.com//problemset/problem/927/A", "name": "BuberPool Taxi Optimization", "tags": ["*special problem", "interactive"], "problem_rating": "2900", "solved_by": "x1"},
{"url": "https://codeforces.com//problemset/problem/926/J", "name": "Segments", "tags": ["data structures"], "problem_rating": "2100", "solved_by": "x379"},
{"url": "https://codeforces.com//problemset/problem/926/I", "name": "A Vital Problem", "tags": [], "problem_rating": "1700", "solved_by": "x654"},
{"url": "https://codeforces.com//problemset/problem/926/H", "name": "Endless Roses Most Beautiful", "tags": [], "problem_rating": "2200", "solved_by": "x211"},
{"url": "https://codeforces.com//problemset/problem/926/G", "name": "Large Bouquets", "tags": [], "problem_rating": "1500", "solved_by": "x1467"},
{"url": "https://codeforces.com//problemset/problem/926/F", "name": "Mobile Communications", "tags": [], "problem_rating": "2000", "solved_by": "x225"},
{"url": "https://codeforces.com//problemset/problem/926/E", "name": "Merge Equal Elements", "tags": ["constructive algorithms", "data structures"], "problem_rating": "1900", "solved_by": "x919"},
{"url": "https://codeforces.com//problemset/problem/926/D", "name": "Choose Place", "tags": [], "problem_rating": "1600", "solved_by": "x905"},
{"url": "https://codeforces.com//problemset/problem/926/C", "name": "Is This a Zebra?", "tags": ["implementation"], "problem_rating": "1700", "solved_by": "x1874"},
{"url": "https://codeforces.com//problemset/problem/926/B", "name": "Add Points", "tags": ["math", "number theory"], "problem_rating": "1800", "solved_by": "x1630"},
{"url": "https://codeforces.com//problemset/problem/926/A", "name": "2-3-numbers", "tags": ["implementation", "math"], "problem_rating": "1300", "solved_by": "x3714"},
{"url": "https://codeforces.com//problemset/problem/925/F", "name": "Parametric Circulation", "tags": ["binary search", "flows"], "problem_rating": "3100", "solved_by": "x109"},
{"url": "https://codeforces.com//problemset/problem/925/E", "name": "May Holidays", "tags": ["data structures", "trees"], "problem_rating": "2900", "solved_by": "x379"},
{"url": "https://codeforces.com//problemset/problem/925/D", "name": "Aztec Catacombs", "tags": ["constructive algorithms"], "problem_rating": "2600", "solved_by": "x481"},
{"url": "https://codeforces.com//problemset/problem/925/C", "name": "Big Secret", "tags": ["constructive algorithms", "math"], "problem_rating": "2200", "solved_by": "x1290"},
{"url": "https://codeforces.com//problemset/problem/925/B", "name": "Resource Distribution", "tags": ["binary search", "implementation", "sortings"], "problem_rating": "1700", "solved_by": "x2185"},
{"url": "https://codeforces.com//problemset/problem/925/A", "name": "Stairs and Elevators", "tags": ["binary search"], "problem_rating": "1600", "solved_by": "x3380"},
{"url": "https://codeforces.com//problemset/problem/924/F", "name": "Minimal Subset Difference", "tags": ["dp"], "problem_rating": "3200", "solved_by": "x164"},
{"url": "https://codeforces.com//problemset/problem/924/E", "name": "Wardrobe", "tags": ["dp", "greedy"], "problem_rating": "2700", "solved_by": "x510"},
{"url": "https://codeforces.com//problemset/problem/924/D", "name": "Contact ATC", "tags": [], "problem_rating": "2500", "solved_by": "x827"},
{"url": "https://codeforces.com//problemset/problem/924/C", "name": "Riverside Curio", "tags": ["data structures", "dp", "greedy"], "problem_rating": "1700", "solved_by": "x3737"},
{"url": "https://codeforces.com//problemset/problem/924/B", "name": "Three-level Laser", "tags": ["binary search", "greedy", "two pointers"], "problem_rating": "1600", "solved_by": "x5159"},
{"url": "https://codeforces.com//problemset/problem/924/A", "name": "Mystical Mosaic", "tags": ["greedy", "implementation"], "problem_rating": "1300", "solved_by": "x4984"},
{"url": "https://codeforces.com//problemset/problem/923/F", "name": "Public Service", "tags": ["constructive algorithms", "graphs", "trees"], "problem_rating": "3200", "solved_by": "x74"},
{"url": "https://codeforces.com//problemset/problem/923/E", "name": "Perpetual Subtraction", "tags": ["fft", "math", "matrices"], "problem_rating": "3100", "solved_by": "x444"},
{"url": "https://codeforces.com//problemset/problem/923/D", "name": "Picking Strings", "tags": ["constructive algorithms", "implementation", "strings"], "problem_rating": "2500", "solved_by": "x1179"},
{"url": "https://codeforces.com//problemset/problem/923/C", "name": "Perfect Security", "tags": ["data structures", "greedy", "strings", "trees"], "problem_rating": "1800", "solved_by": "x4214"},
{"url": "https://codeforces.com//problemset/problem/923/B", "name": "Producing Snow", "tags": ["binary search", "data structures"], "problem_rating": "1600", "solved_by": "x7235"},
{"url": "https://codeforces.com//problemset/problem/923/A", "name": "Primal Sport", "tags": ["math", "number theory"], "problem_rating": "1700", "solved_by": "x4997"},
{"url": "https://codeforces.com//problemset/problem/922/F", "name": "Divisibility", "tags": ["constructive algorithms", "dp", "greedy", "number theory"], "problem_rating": "2400", "solved_by": "x629"},
{"url": "https://codeforces.com//problemset/problem/922/E", "name": "Birds", "tags": ["dp"], "problem_rating": "2200", "solved_by": "x2065"},
{"url": "https://codeforces.com//problemset/problem/922/D", "name": "Robot Vacuum Cleaner", "tags": ["greedy", "sortings"], "problem_rating": "1800", "solved_by": "x4314"},
{"url": "https://codeforces.com//problemset/problem/922/C", "name": "Cave Painting", "tags": ["brute force", "number theory"], "problem_rating": "1600", "solved_by": "x6971"},
{"url": "https://codeforces.com//problemset/problem/922/B", "name": "Magic Forest", "tags": ["brute force"], "problem_rating": "1300", "solved_by": "x8388"},
{"url": "https://codeforces.com//problemset/problem/922/A", "name": "Cloning Toys", "tags": ["implementation"], "problem_rating": "1300", "solved_by": "x11449"},
{"url": "https://codeforces.com//problemset/problem/921/14", "name": "Labyrinth-14", "tags": [], "problem_rating": "3200", "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/921/13", "name": "Labyrinth-13", "tags": [], "problem_rating": "3200", "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/921/12", "name": "Labyrinth-12", "tags": [], "problem_rating": "3200", "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/921/11", "name": "Labyrinth-11", "tags": [], "problem_rating": "3200", "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/921/10", "name": "Labyrinth-10", "tags": [], "problem_rating": "3200", "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/921/09", "name": "Labyrinth-9", "tags": [], "problem_rating": "3200", "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/921/08", "name": "Labyrinth-8", "tags": [], "problem_rating": "3200", "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/921/07", "name": "Labyrinth-7", "tags": [], "problem_rating": "3200", "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/921/06", "name": "Labyrinth-6", "tags": [], "problem_rating": "3200", "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/921/05", "name": "Labyrinth-5", "tags": [], "problem_rating": "3200", "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/921/04", "name": "Labyrinth-4", "tags": [], "problem_rating": "3200", "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/921/03", "name": "Labyrinth-3", "tags": [], "problem_rating": "3200", "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/921/02", "name": "Labyrinth-2", "tags": [], "problem_rating": "3200", "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/921/01", "name": "Labyrinth-1", "tags": [], "problem_rating": "3200", "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/920/G", "name": "List Of Integers", "tags": ["binary search", "bitmasks", "brute force", "combinatorics", "math", "number theory"], "problem_rating": "2200", "solved_by": "x1714"},
{"url": "https://codeforces.com//problemset/problem/920/F", "name": "SUM and REPLACE", "tags": ["brute force", "data structures", "dsu", "number theory"], "problem_rating": "2000", "solved_by": "x6472"},
{"url": "https://codeforces.com//problemset/problem/920/E", "name": "Connected Components?", "tags": ["data structures", "dfs and similar", "dsu", "graphs"], "problem_rating": "2100", "solved_by": "x6126"},
{"url": "https://codeforces.com//problemset/problem/920/D", "name": "Tanks", "tags": ["dp", "greedy", "implementation"], "problem_rating": "2400", "solved_by": "x693"},
{"url": "https://codeforces.com//problemset/problem/920/C", "name": "Swap Adjacent Elements", "tags": ["dfs and similar", "greedy", "math", "sortings", "two pointers"], "problem_rating": "1400", "solved_by": "x9082"},
{"url": "https://codeforces.com//problemset/problem/920/B", "name": "Tea Queue", "tags": ["implementation"], "problem_rating": "1200", "solved_by": "x7205"},
{"url": "https://codeforces.com//problemset/problem/920/A", "name": "Water The Garden", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x7646"},
{"url": "https://codeforces.com//problemset/problem/919/F", "name": "A Game With Numbers", "tags": ["games", "graphs", "shortest paths"], "problem_rating": "2600", "solved_by": "x329"},
{"url": "https://codeforces.com//problemset/problem/919/E", "name": "Congruence Equation", "tags": ["chinese remainder theorem", "math", "number theory"], "problem_rating": "2100", "solved_by": "x2050"},
{"url": "https://codeforces.com//problemset/problem/919/D", "name": "Substring", "tags": ["dfs and similar", "dp", "graphs"], "problem_rating": "1700", "solved_by": "x9662"},
{"url": "https://codeforces.com//problemset/problem/919/C", "name": "Seat Arrangements", "tags": ["brute force", "implementation"], "problem_rating": "1300", "solved_by": "x8899"},
{"url": "https://codeforces.com//problemset/problem/919/B", "name": "Perfect Number", "tags": ["binary search", "brute force", "dp", "implementation", "number theory"], "problem_rating": "1100", "solved_by": "x27554"},
{"url": "https://codeforces.com//problemset/problem/919/A", "name": "Supermarket", "tags": ["brute force", "greedy", "implementation"], "problem_rating": "800", "solved_by": "x16032"},
{"url": "https://codeforces.com//problemset/problem/918/B", "name": "Radio Station", "tags": ["implementation", "strings"], "problem_rating": "900", "solved_by": "x16020"},
{"url": "https://codeforces.com//problemset/problem/918/A", "name": "Eleven", "tags": ["brute force", "implementation"], "problem_rating": "800", "solved_by": "x16892"},
{"url": "https://codeforces.com//problemset/problem/917/E", "name": "Upside Down", "tags": ["data structures", "string suffix structures", "strings", "trees"], "problem_rating": "3400", "solved_by": "x125"},
{"url": "https://codeforces.com//problemset/problem/917/D", "name": "Stranger Trees", "tags": ["dp", "math", "matrices", "trees"], "problem_rating": "2600", "solved_by": "x1108"},
{"url": "https://codeforces.com//problemset/problem/917/C", "name": "Pollywog", "tags": ["combinatorics", "dp", "matrices"], "problem_rating": "2900", "solved_by": "x390"},
{"url": "https://codeforces.com//problemset/problem/917/B", "name": "MADMAX", "tags": ["dfs and similar", "dp", "games", "graphs"], "problem_rating": "1700", "solved_by": "x3504"},
{"url": "https://codeforces.com//problemset/problem/917/A", "name": "The Monster", "tags": ["dp", "greedy", "implementation", "math"], "problem_rating": "1800", "solved_by": "x3494"},
{"url": "https://codeforces.com//problemset/problem/916/E", "name": "Jamie and Tree", "tags": ["data structures", "trees"], "problem_rating": "2400", "solved_by": "x1619"},
{"url": "https://codeforces.com//problemset/problem/916/D", "name": "Jamie and To-do List", "tags": ["data structures", "interactive", "trees"], "problem_rating": "2200", "solved_by": "x505"},
{"url": "https://codeforces.com//problemset/problem/916/C", "name": "Jamie and Interesting Graph", "tags": ["constructive algorithms", "graphs", "shortest paths"], "problem_rating": "1600", "solved_by": "x5050"},
{"url": "https://codeforces.com//problemset/problem/916/B", "name": "Jamie and Binary Sequence (changed after round)", "tags": ["bitmasks", "greedy", "math"], "problem_rating": "2000", "solved_by": "x1862"},
{"url": "https://codeforces.com//problemset/problem/916/A", "name": "Jamie and Alarm Snooze", "tags": ["brute force", "implementation", "math"], "problem_rating": "900", "solved_by": "x8542"},
{"url": "https://codeforces.com//problemset/problem/915/G", "name": "Coprime Arrays", "tags": ["math", "number theory"], "problem_rating": "2300", "solved_by": "x1165"},
{"url": "https://codeforces.com//problemset/problem/915/F", "name": "Imbalance Value of a Tree", "tags": ["data structures", "dsu", "graphs", "trees"], "problem_rating": "2400", "solved_by": "x2400"},
{"url": "https://codeforces.com//problemset/problem/915/E", "name": "Physical Education Lessons", "tags": ["data structures", "implementation", "sortings"], "problem_rating": "2300", "solved_by": "x4167"},
{"url": "https://codeforces.com//problemset/problem/915/D", "name": "Almost Acyclic Graph", "tags": ["dfs and similar", "graphs"], "problem_rating": "2200", "solved_by": "x3363"},
{"url": "https://codeforces.com//problemset/problem/915/C", "name": "Permute Digits", "tags": ["dp", "greedy"], "problem_rating": "1700", "solved_by": "x6964"},
{"url": "https://codeforces.com//problemset/problem/915/B", "name": "Browser", "tags": ["implementation"], "problem_rating": "1300", "solved_by": "x7688"},
{"url": "https://codeforces.com//problemset/problem/915/A", "name": "Garden", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x14550"},
{"url": "https://codeforces.com//problemset/problem/914/H", "name": "Ember and Storm's Tree Game", "tags": ["combinatorics", "dp", "games", "trees"], "problem_rating": "3400", "solved_by": "x235"},
{"url": "https://codeforces.com//problemset/problem/914/G", "name": "Sum the Fibonacci", "tags": ["bitmasks", "divide and conquer", "dp", "fft", "math"], "problem_rating": "2600", "solved_by": "x909"},
{"url": "https://codeforces.com//problemset/problem/914/F", "name": "Substrings in a String", "tags": ["bitmasks", "brute force", "data structures", "string suffix structures", "strings"], "problem_rating": "3000", "solved_by": "x1572"},
{"url": "https://codeforces.com//problemset/problem/914/E", "name": "Palindromes in a Tree", "tags": ["bitmasks", "data structures", "divide and conquer", "trees"], "problem_rating": "2400", "solved_by": "x1441"},
{"url": "https://codeforces.com//problemset/problem/914/D", "name": "Bash and a Tough Math Puzzle", "tags": ["data structures", "number theory"], "problem_rating": "1900", "solved_by": "x5181"},
{"url": "https://codeforces.com//problemset/problem/914/C", "name": "Travelling Salesman and Special Numbers", "tags": ["brute force", "combinatorics", "dp"], "problem_rating": "1800", "solved_by": "x3680"},
{"url": "https://codeforces.com//problemset/problem/914/B", "name": "Conan and Agasa play a Card Game", "tags": ["games", "greedy", "implementation"], "problem_rating": "1200", "solved_by": "x8560"},
{"url": "https://codeforces.com//problemset/problem/914/A", "name": "Perfect Squares", "tags": ["brute force", "implementation", "math"], "problem_rating": "900", "solved_by": "x13937"},
{"url": "https://codeforces.com//problemset/problem/913/H", "name": "Don't Exceed", "tags": ["math", "probabilities"], "problem_rating": "3400", "solved_by": "x124"},
{"url": "https://codeforces.com//problemset/problem/913/G", "name": "Power Substring", "tags": ["math", "number theory"], "problem_rating": "3200", "solved_by": "x198"},
{"url": "https://codeforces.com//problemset/problem/913/F", "name": "Strongly Connected Tournament", "tags": ["dp", "graphs", "math", "probabilities"], "problem_rating": "2800", "solved_by": "x633"},
{"url": "https://codeforces.com//problemset/problem/913/E", "name": "Logical Expression", "tags": ["bitmasks", "dp", "shortest paths"], "problem_rating": "2400", "solved_by": "x762"},
{"url": "https://codeforces.com//problemset/problem/913/D", "name": "Too Easy Problems", "tags": ["binary search", "brute force", "data structures", "greedy", "sortings"], "problem_rating": "1800", "solved_by": "x4653"},
{"url": "https://codeforces.com//problemset/problem/913/C", "name": "Party Lemonade", "tags": ["bitmasks", "dp", "greedy"], "problem_rating": "1600", "solved_by": "x7815"},
{"url": "https://codeforces.com//problemset/problem/913/B", "name": "Christmas Spruce", "tags": ["implementation", "trees"], "problem_rating": "1200", "solved_by": "x15722"},
{"url": "https://codeforces.com//problemset/problem/913/A", "name": "Modular Exponentiation", "tags": ["implementation", "math"], "problem_rating": "900", "solved_by": "x20925"},
{"url": "https://codeforces.com//problemset/problem/912/E", "name": "Prime Gift", "tags": ["binary search", "dfs and similar", "math", "meet-in-the-middle", "number theory", "two pointers"], "problem_rating": "2400", "solved_by": "x1525"},
{"url": "https://codeforces.com//problemset/problem/912/D", "name": "Fishes", "tags": ["data structures", "graphs", "greedy", "probabilities", "shortest paths"], "problem_rating": "2100", "solved_by": "x1973"},
{"url": "https://codeforces.com//problemset/problem/912/C", "name": "Perun, Ult!", "tags": ["brute force", "greedy", "sortings"], "problem_rating": "2500", "solved_by": "x513"},
{"url": "https://codeforces.com//problemset/problem/912/B", "name": "New Year's Eve", "tags": ["bitmasks", "constructive algorithms", "number theory"], "problem_rating": "1300", "solved_by": "x11759"},
{"url": "https://codeforces.com//problemset/problem/912/A", "name": "Tricky Alchemy", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x13379"},
{"url": "https://codeforces.com//problemset/problem/911/G", "name": "Mass Change Queries", "tags": ["data structures"], "problem_rating": "2500", "solved_by": "x2742"},
{"url": "https://codeforces.com//problemset/problem/911/F", "name": "Tree Destruction", "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy", "trees"], "problem_rating": "2400", "solved_by": "x1613"},
{"url": "https://codeforces.com//problemset/problem/911/E", "name": "Stack Sorting", "tags": ["constructive algorithms", "data structures", "greedy", "implementation"], "problem_rating": "2000", "solved_by": "x2498"},
{"url": "https://codeforces.com//problemset/problem/911/D", "name": "Inversion Counting", "tags": ["brute force", "math"], "problem_rating": "1800", "solved_by": "x4532"},
{"url": "https://codeforces.com//problemset/problem/911/C", "name": "Three Garlands", "tags": ["brute force", "constructive algorithms"], "problem_rating": "1400", "solved_by": "x6993"},
{"url": "https://codeforces.com//problemset/problem/911/B", "name": "Two Cakes", "tags": ["binary search", "brute force", "implementation"], "problem_rating": "1200", "solved_by": "x11223"},
{"url": "https://codeforces.com//problemset/problem/911/A", "name": "Nearest Minimums", "tags": ["implementation"], "problem_rating": "1100", "solved_by": "x11375"},
{"url": "https://codeforces.com//problemset/problem/910/C", "name": "Minimum Sum", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1700", "solved_by": "x1760"},
{"url": "https://codeforces.com//problemset/problem/910/B", "name": "Door Frames", "tags": ["greedy", "implementation"], "problem_rating": "1600", "solved_by": "x1687"},
{"url": "https://codeforces.com//problemset/problem/910/A", "name": "The Way to Home", "tags": ["dfs and similar", "dp", "greedy", "implementation"], "problem_rating": "800", "solved_by": "x11632"},
{"url": "https://codeforces.com//problemset/problem/909/F", "name": "AND-permutations", "tags": ["constructive algorithms"], "problem_rating": "2500", "solved_by": "x522"},
{"url": "https://codeforces.com//problemset/problem/909/E", "name": "Coprocessor", "tags": ["dfs and similar", "dp", "graphs", "greedy"], "problem_rating": "1900", "solved_by": "x2025"},
{"url": "https://codeforces.com//problemset/problem/909/D", "name": "Colorful Points", "tags": ["data structures", "greedy", "implementation"], "problem_rating": "2100", "solved_by": "x1920"},
{"url": "https://codeforces.com//problemset/problem/909/C", "name": "Python Indentation", "tags": ["dp"], "problem_rating": "1800", "solved_by": "x4820"},
{"url": "https://codeforces.com//problemset/problem/909/B", "name": "Segments", "tags": ["constructive algorithms", "math"], "problem_rating": "1300", "solved_by": "x6296"},
{"url": "https://codeforces.com//problemset/problem/909/A", "name": "Generate Login", "tags": ["brute force", "greedy", "sortings"], "problem_rating": "1000", "solved_by": "x9251"},
{"url": "https://codeforces.com//problemset/problem/908/H", "name": "New Year and Boolean Bridges", "tags": [], "problem_rating": "3100", "solved_by": "x376"},
{"url": "https://codeforces.com//problemset/problem/908/G", "name": "New Year and Original Order", "tags": ["dp", "math"], "problem_rating": "2800", "solved_by": "x1322"},
{"url": "https://codeforces.com//problemset/problem/908/F", "name": "New Year and Rainbow Roads", "tags": ["graphs", "greedy", "implementation"], "problem_rating": "2400", "solved_by": "x1385"},
{"url": "https://codeforces.com//problemset/problem/908/E", "name": "New Year and Entity Enumeration", "tags": ["bitmasks", "combinatorics", "dp", "math"], "problem_rating": "2500", "solved_by": "x752"},
{"url": "https://codeforces.com//problemset/problem/908/D", "name": "New Year and Arbitrary Arrangement", "tags": ["dp", "math", "probabilities"], "problem_rating": "2200", "solved_by": "x2298"},
{"url": "https://codeforces.com//problemset/problem/908/C", "name": "New Year and Curling", "tags": ["brute force", "geometry", "implementation", "math"], "problem_rating": "1500", "solved_by": "x6810"},
{"url": "https://codeforces.com//problemset/problem/908/B", "name": "New Year and Buggy Bot", "tags": ["brute force", "implementation"], "problem_rating": "1200", "solved_by": "x7613"},
{"url": "https://codeforces.com//problemset/problem/908/A", "name": "New Year and Counting Cards", "tags": ["brute force", "implementation"], "problem_rating": "800", "solved_by": "x14681"},
{"url": "https://codeforces.com//problemset/problem/907/B", "name": "Tic-Tac-Toe", "tags": ["implementation"], "problem_rating": "1400", "solved_by": "x4046"},
{"url": "https://codeforces.com//problemset/problem/907/A", "name": "Masha and Bears", "tags": ["brute force", "implementation"], "problem_rating": "1300", "solved_by": "x5596"},
{"url": "https://codeforces.com//problemset/problem/906/E", "name": "Reverses", "tags": ["dp", "string suffix structures", "strings"], "problem_rating": "3300", "solved_by": "x437"},
{"url": "https://codeforces.com//problemset/problem/906/D", "name": "Power Tower", "tags": ["chinese remainder theorem", "math", "number theory"], "problem_rating": "2700", "solved_by": "x2034"},
{"url": "https://codeforces.com//problemset/problem/906/C", "name": "Party", "tags": ["bitmasks", "brute force", "dp", "graphs"], "problem_rating": "2400", "solved_by": "x1278"},
{"url": "https://codeforces.com//problemset/problem/906/B", "name": "Seating of Students", "tags": ["brute force", "constructive algorithms", "math"], "problem_rating": "2200", "solved_by": "x1128"},
{"url": "https://codeforces.com//problemset/problem/906/A", "name": "Shockers", "tags": ["implementation", "strings"], "problem_rating": "1600", "solved_by": "x4113"},
{"url": "https://codeforces.com//problemset/problem/903/G", "name": "Yet Another Maxflow Problem", "tags": ["data structures", "flows", "graphs"], "problem_rating": "2700", "solved_by": "x520"},
{"url": "https://codeforces.com//problemset/problem/903/F", "name": "Clear The Matrix", "tags": ["bitmasks", "dp"], "problem_rating": "2200", "solved_by": "x629"},
{"url": "https://codeforces.com//problemset/problem/903/E", "name": "Swapping Characters", "tags": ["brute force", "hashing", "implementation", "strings"], "problem_rating": "2200", "solved_by": "x1451"},
{"url": "https://codeforces.com//problemset/problem/903/D", "name": "Almost Difference", "tags": ["data structures", "math"], "problem_rating": "2200", "solved_by": "x3737"},
{"url": "https://codeforces.com//problemset/problem/903/C", "name": "Boxes Packing", "tags": ["greedy"], "problem_rating": "1200", "solved_by": "x16867"},
{"url": "https://codeforces.com//problemset/problem/903/B", "name": "The Modcrab", "tags": ["greedy", "implementation"], "problem_rating": "1200", "solved_by": "x7695"},
{"url": "https://codeforces.com//problemset/problem/903/A", "name": "Hungry Student Problem", "tags": ["greedy", "implementation"], "problem_rating": "900", "solved_by": "x14496"},
{"url": "https://codeforces.com//problemset/problem/902/B", "name": "Coloring a Tree", "tags": ["dfs and similar", "dsu", "greedy"], "problem_rating": "1200", "solved_by": "x10702"},
{"url": "https://codeforces.com//problemset/problem/902/A", "name": "Visiting a Friend", "tags": ["greedy", "implementation"], "problem_rating": "1100", "solved_by": "x9732"},
{"url": "https://codeforces.com//problemset/problem/901/E", "name": "Cyclic Cipher", "tags": ["fft", "math"], "problem_rating": "3300", "solved_by": "x85"},
{"url": "https://codeforces.com//problemset/problem/901/D", "name": "Weighting a Tree", "tags": ["constructive algorithms", "dfs and similar", "graphs"], "problem_rating": "2700", "solved_by": "x438"},
{"url": "https://codeforces.com//problemset/problem/901/C", "name": "Bipartite Segments", "tags": ["binary search", "data structures", "dfs and similar", "dsu", "graphs", "two pointers"], "problem_rating": "2300", "solved_by": "x1157"},
{"url": "https://codeforces.com//problemset/problem/901/B", "name": "GCD of Polynomials", "tags": ["constructive algorithms", "math"], "problem_rating": "2200", "solved_by": "x1575"},
{"url": "https://codeforces.com//problemset/problem/901/A", "name": "Hashing Trees", "tags": ["constructive algorithms", "trees"], "problem_rating": "1500", "solved_by": "x5042"},
{"url": "https://codeforces.com//problemset/problem/900/E", "name": "Maximum Questions", "tags": ["data structures", "dp", "strings"], "problem_rating": "2100", "solved_by": "x1219"},
{"url": "https://codeforces.com//problemset/problem/900/D", "name": "Unusual Sequences", "tags": ["bitmasks", "combinatorics", "dp", "math", "number theory"], "problem_rating": "2000", "solved_by": "x3120"},
{"url": "https://codeforces.com//problemset/problem/900/C", "name": "Remove Extra One", "tags": ["brute force", "data structures", "math"], "problem_rating": "1700", "solved_by": "x4514"},
{"url": "https://codeforces.com//problemset/problem/900/B", "name": "Position in Fraction", "tags": ["math", "number theory"], "problem_rating": "1300", "solved_by": "x7766"},
{"url": "https://codeforces.com//problemset/problem/900/A", "name": "Find Extra One", "tags": ["geometry", "implementation"], "problem_rating": "800", "solved_by": "x13485"},
{"url": "https://codeforces.com//problemset/problem/899/F", "name": "Letters Removing", "tags": ["data structures", "strings"], "problem_rating": "2100", "solved_by": "x1792"},
{"url": "https://codeforces.com//problemset/problem/899/E", "name": "Segments Removal", "tags": ["data structures", "dsu", "flows", "implementation", "two pointers"], "problem_rating": "2000", "solved_by": "x2987"},
{"url": "https://codeforces.com//problemset/problem/899/D", "name": "Shovel Sale", "tags": ["constructive algorithms", "math"], "problem_rating": "1800", "solved_by": "x2728"},
{"url": "https://codeforces.com//problemset/problem/899/C", "name": "Dividing the numbers", "tags": ["constructive algorithms", "graphs", "math"], "problem_rating": "1300", "solved_by": "x8354"},
{"url": "https://codeforces.com//problemset/problem/899/B", "name": "Months and Years", "tags": ["implementation"], "problem_rating": "1200", "solved_by": "x5825"},
{"url": "https://codeforces.com//problemset/problem/899/A", "name": "Splitting in Teams", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "800", "solved_by": "x10130"},
{"url": "https://codeforces.com//problemset/problem/898/F", "name": "Restoring the Expression", "tags": ["brute force", "hashing", "math"], "problem_rating": "2300", "solved_by": "x1175"},
{"url": "https://codeforces.com//problemset/problem/898/E", "name": "Squares and not squares", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1600", "solved_by": "x4530"},
{"url": "https://codeforces.com//problemset/problem/898/D", "name": "Alarm Clock", "tags": ["greedy"], "problem_rating": "1600", "solved_by": "x3843"},
{"url": "https://codeforces.com//problemset/problem/898/C", "name": "Phone Numbers", "tags": ["implementation", "strings"], "problem_rating": "1400", "solved_by": "x5214"},
{"url": "https://codeforces.com//problemset/problem/898/B", "name": "Proper Nutrition", "tags": ["brute force", "implementation", "number theory"], "problem_rating": "1100", "solved_by": "x9412"},
{"url": "https://codeforces.com//problemset/problem/898/A", "name": "Rounding", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x15839"},
{"url": "https://codeforces.com//problemset/problem/897/B", "name": "Chtholly's request", "tags": ["brute force"], "problem_rating": "1300", "solved_by": "x7121"},
{"url": "https://codeforces.com//problemset/problem/897/A", "name": "Scarborough Fair", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x14046"},
{"url": "https://codeforces.com//problemset/problem/896/E", "name": "Welcome home, Chtholly", "tags": ["data structures", "dsu"], "problem_rating": "3100", "solved_by": "x2074"},
{"url": "https://codeforces.com//problemset/problem/896/D", "name": "Nephren Runs a Cinema", "tags": ["chinese remainder theorem", "combinatorics", "math", "number theory"], "problem_rating": "2900", "solved_by": "x522"},
{"url": "https://codeforces.com//problemset/problem/896/C", "name": "Willem, Chtholly and Seniorious", "tags": ["data structures", "probabilities"], "problem_rating": "2600", "solved_by": "x3267"},
{"url": "https://codeforces.com//problemset/problem/896/B", "name": "Ithea Plays With Chtholly", "tags": ["binary search", "constructive algorithms", "games", "greedy", "interactive"], "problem_rating": "2000", "solved_by": "x2081"},
{"url": "https://codeforces.com//problemset/problem/896/A", "name": "Nephren gives a riddle", "tags": ["binary search", "dfs and similar"], "problem_rating": "1700", "solved_by": "x3427"},
{"url": "https://codeforces.com//problemset/problem/895/E", "name": "Eyes Closed", "tags": ["data structures", "probabilities"], "problem_rating": "2300", "solved_by": "x978"},
{"url": "https://codeforces.com//problemset/problem/895/D", "name": "String Mark", "tags": ["combinatorics", "math", "strings"], "problem_rating": "2100", "solved_by": "x1099"},
{"url": "https://codeforces.com//problemset/problem/895/C", "name": "Square Subsets", "tags": ["bitmasks", "combinatorics", "dp", "math"], "problem_rating": "2000", "solved_by": "x5279"},
{"url": "https://codeforces.com//problemset/problem/895/B", "name": "XK Segments", "tags": ["binary search", "math", "sortings", "two pointers"], "problem_rating": "1700", "solved_by": "x3449"},
{"url": "https://codeforces.com//problemset/problem/895/A", "name": "Pizza Separation", "tags": ["brute force", "implementation"], "problem_rating": "1200", "solved_by": "x6495"},
{"url": "https://codeforces.com//problemset/problem/894/E", "name": "Ralph and Mushrooms", "tags": ["dp", "graphs"], "problem_rating": "2100", "solved_by": "x2225"},
{"url": "https://codeforces.com//problemset/problem/894/D", "name": "Ralph And His Tour in Binary Country", "tags": ["brute force", "data structures", "trees"], "problem_rating": "2200", "solved_by": "x1121"},
{"url": "https://codeforces.com//problemset/problem/894/C", "name": "Marco and GCD Sequence", "tags": ["constructive algorithms", "math"], "problem_rating": "1900", "solved_by": "x4332"},
{"url": "https://codeforces.com//problemset/problem/894/B", "name": "Ralph And His Magic Field", "tags": ["combinatorics", "constructive algorithms", "math", "number theory"], "problem_rating": "1800", "solved_by": "x4418"},
{"url": "https://codeforces.com//problemset/problem/894/A", "name": "QAQ", "tags": ["brute force", "dp"], "problem_rating": "800", "solved_by": "x33615"},
{"url": "https://codeforces.com//problemset/problem/893/F", "name": "Subtree Minimum Query", "tags": ["data structures", "trees"], "problem_rating": "2300", "solved_by": "x1891"},
{"url": "https://codeforces.com//problemset/problem/893/E", "name": "Counting Arrays", "tags": ["combinatorics", "dp", "math", "number theory"], "problem_rating": "2000", "solved_by": "x3459"},
{"url": "https://codeforces.com//problemset/problem/893/D", "name": "Credit Card", "tags": ["data structures", "dp", "greedy", "implementation"], "problem_rating": "1900", "solved_by": "x3001"},
{"url": "https://codeforces.com//problemset/problem/893/C", "name": "Rumor", "tags": ["dfs and similar", "graphs", "greedy"], "problem_rating": "1300", "solved_by": "x22360"},
{"url": "https://codeforces.com//problemset/problem/893/B", "name": "Beautiful Divisors", "tags": ["brute force", "implementation"], "problem_rating": "1000", "solved_by": "x11151"},
{"url": "https://codeforces.com//problemset/problem/893/A", "name": "Chess For Three", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x10092"},
{"url": "https://codeforces.com//problemset/problem/892/B", "name": "Wrath", "tags": ["greedy", "implementation", "two pointers"], "problem_rating": "1200", "solved_by": "x8791"},
{"url": "https://codeforces.com//problemset/problem/892/A", "name": "Greed", "tags": ["greedy", "implementation"], "problem_rating": "900", "solved_by": "x13361"},
{"url": "https://codeforces.com//problemset/problem/891/E", "name": "Lust", "tags": ["combinatorics", "math", "matrices"], "problem_rating": "3000", "solved_by": "x898"},
{"url": "https://codeforces.com//problemset/problem/891/D", "name": "Sloth", "tags": ["dfs and similar", "dp", "graph matchings", "trees"], "problem_rating": "3100", "solved_by": "x179"},
{"url": "https://codeforces.com//problemset/problem/891/C", "name": "Envy", "tags": ["data structures", "dsu", "graphs"], "problem_rating": "2300", "solved_by": "x2314"},
{"url": "https://codeforces.com//problemset/problem/891/B", "name": "Gluttony", "tags": ["constructive algorithms", "greedy"], "problem_rating": "2000", "solved_by": "x2933"},
{"url": "https://codeforces.com//problemset/problem/891/A", "name": "Pride", "tags": ["brute force", "dp", "greedy", "math", "number theory"], "problem_rating": "1500", "solved_by": "x9905"},
{"url": "https://codeforces.com//problemset/problem/889/E", "name": "Mod Mod Mod", "tags": ["binary search", "dp", "math"], "problem_rating": "3000", "solved_by": "x521"},
{"url": "https://codeforces.com//problemset/problem/888/G", "name": "Xor-MST", "tags": ["bitmasks", "constructive algorithms", "data structures"], "problem_rating": "2300", "solved_by": "x4129"},
{"url": "https://codeforces.com//problemset/problem/888/F", "name": "Connecting Vertices", "tags": ["dp", "graphs"], "problem_rating": "2500", "solved_by": "x775"},
{"url": "https://codeforces.com//problemset/problem/888/E", "name": "Maximum Subsequence", "tags": ["bitmasks", "divide and conquer", "meet-in-the-middle"], "problem_rating": "1800", "solved_by": "x6978"},
{"url": "https://codeforces.com//problemset/problem/888/D", "name": "Almost Identity Permutations", "tags": ["combinatorics", "dp", "math"], "problem_rating": "1600", "solved_by": "x7976"},
{"url": "https://codeforces.com//problemset/problem/888/C", "name": "K-Dominant Character", "tags": ["binary search", "implementation", "two pointers"], "problem_rating": "1400", "solved_by": "x8151"},
{"url": "https://codeforces.com//problemset/problem/888/B", "name": "Buggy Robot", "tags": ["greedy"], "problem_rating": "1000", "solved_by": "x9627"},
{"url": "https://codeforces.com//problemset/problem/888/A", "name": "Local Extrema", "tags": ["brute force", "implementation"], "problem_rating": "800", "solved_by": "x10766"},
{"url": "https://codeforces.com//problemset/problem/887/F", "name": "Row of Models", "tags": ["greedy", "sortings"], "problem_rating": "2500", "solved_by": "x163"},
{"url": "https://codeforces.com//problemset/problem/887/E", "name": "Little Brother", "tags": ["binary search", "geometry", "sortings"], "problem_rating": "2800", "solved_by": "x163"},
{"url": "https://codeforces.com//problemset/problem/887/D", "name": "Ratings and Reality Shows", "tags": ["data structures", "two pointers"], "problem_rating": "2400", "solved_by": "x474"},
{"url": "https://codeforces.com//problemset/problem/887/C", "name": "Solution for Cube", "tags": ["brute force", "implementation"], "problem_rating": "1500", "solved_by": "x2878"},
{"url": "https://codeforces.com//problemset/problem/887/B", "name": "Cubes for Masha", "tags": ["brute force", "implementation"], "problem_rating": "1300", "solved_by": "x5591"},
{"url": "https://codeforces.com//problemset/problem/887/A", "name": "Div. 64", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x11128"},
{"url": "https://codeforces.com//problemset/problem/886/F", "name": "Symmetric Projections", "tags": ["geometry"], "problem_rating": "2900", "solved_by": "x265"},
{"url": "https://codeforces.com//problemset/problem/886/E", "name": "Maximum Element", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2400", "solved_by": "x993"},
{"url": "https://codeforces.com//problemset/problem/886/D", "name": "Restoration of string", "tags": ["constructive algorithms", "graphs", "implementation"], "problem_rating": "2000", "solved_by": "x1730"},
{"url": "https://codeforces.com//problemset/problem/886/C", "name": "Petya and Catacombs", "tags": ["dsu", "greedy", "implementation", "trees"], "problem_rating": "1300", "solved_by": "x5449"},
{"url": "https://codeforces.com//problemset/problem/886/B", "name": "Vlad and Cafes", "tags": [], "problem_rating": "1000", "solved_by": "x7819"},
{"url": "https://codeforces.com//problemset/problem/886/A", "name": "ACM ICPC", "tags": ["brute force"], "problem_rating": "1000", "solved_by": "x10177"},
{"url": "https://codeforces.com//problemset/problem/884/F", "name": "Anti-Palindromize", "tags": ["flows", "graphs", "greedy"], "problem_rating": "2500", "solved_by": "x1031"},
{"url": "https://codeforces.com//problemset/problem/884/E", "name": "Binary Matrix", "tags": ["dsu"], "problem_rating": "2500", "solved_by": "x677"},
{"url": "https://codeforces.com//problemset/problem/884/D", "name": "Boxes And Balls", "tags": ["data structures", "greedy"], "problem_rating": "2300", "solved_by": "x1905"},
{"url": "https://codeforces.com//problemset/problem/884/C", "name": "Bertown Subway", "tags": ["dfs and similar", "greedy", "math"], "problem_rating": "1500", "solved_by": "x4651"},
{"url": "https://codeforces.com//problemset/problem/884/B", "name": "Japanese Crosswords Strike Back", "tags": ["implementation"], "problem_rating": "1100", "solved_by": "x6837"},
{"url": "https://codeforces.com//problemset/problem/884/A", "name": "Book Reading", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x10385"},
{"url": "https://codeforces.com//problemset/problem/883/M", "name": "Quadcopter Competition", "tags": ["greedy", "math"], "problem_rating": "1100", "solved_by": "x3528"},
{"url": "https://codeforces.com//problemset/problem/883/L", "name": "Berland.Taxi", "tags": ["data structures"], "problem_rating": "2500", "solved_by": "x230"},
{"url": "https://codeforces.com//problemset/problem/883/K", "name": "Road Widening", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "1800", "solved_by": "x1083"},
{"url": "https://codeforces.com//problemset/problem/883/J", "name": "Renovation", "tags": ["constructive algorithms", "greedy", "sortings"], "problem_rating": "2400", "solved_by": "x575"},
{"url": "https://codeforces.com//problemset/problem/883/I", "name": "Photo Processing", "tags": ["binary search", "dp"], "problem_rating": "1900", "solved_by": "x1918"},
{"url": "https://codeforces.com//problemset/problem/883/H", "name": "Palindromic Cut", "tags": ["brute force", "implementation", "strings"], "problem_rating": "1800", "solved_by": "x1597"},
{"url": "https://codeforces.com//problemset/problem/883/G", "name": "Orientation of Edges", "tags": ["dfs and similar", "graphs"], "problem_rating": "1900", "solved_by": "x1400"},
{"url": "https://codeforces.com//problemset/problem/883/F", "name": "Lost in Transliteration", "tags": ["implementation"], "problem_rating": "1300", "solved_by": "x2253"},
{"url": "https://codeforces.com//problemset/problem/883/E", "name": "Field of Wonders", "tags": ["implementation", "strings"], "problem_rating": "1500", "solved_by": "x1889"},
{"url": "https://codeforces.com//problemset/problem/883/D", "name": "Packmen Strike Back", "tags": ["binary search", "dp", "math"], "problem_rating": "2500", "solved_by": "x366"},
{"url": "https://codeforces.com//problemset/problem/883/C", "name": "Downloading B++", "tags": ["binary search", "implementation"], "problem_rating": "2300", "solved_by": "x618"},
{"url": "https://codeforces.com//problemset/problem/883/B", "name": "Berland Army", "tags": ["constructive algorithms", "graphs", "greedy"], "problem_rating": "2600", "solved_by": "x342"},
{"url": "https://codeforces.com//problemset/problem/883/A", "name": "Automatic Door", "tags": ["implementation"], "problem_rating": "2200", "solved_by": "x583"},
{"url": "https://codeforces.com//problemset/problem/879/B", "name": "Table Tennis", "tags": ["data structures", "implementation"], "problem_rating": "1200", "solved_by": "x12158"},
{"url": "https://codeforces.com//problemset/problem/879/A", "name": "Borya's Diagnosis", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x9036"},
{"url": "https://codeforces.com//problemset/problem/878/E", "name": "Numbers on the blackboard", "tags": ["combinatorics", "dp"], "problem_rating": "3300", "solved_by": "x499"},
{"url": "https://codeforces.com//problemset/problem/878/D", "name": "Magic Breeding", "tags": ["bitmasks"], "problem_rating": "2900", "solved_by": "x645"},
{"url": "https://codeforces.com//problemset/problem/878/C", "name": "Tournament", "tags": ["data structures", "graphs"], "problem_rating": "2700", "solved_by": "x899"},
{"url": "https://codeforces.com//problemset/problem/878/B", "name": "Teams Formation", "tags": ["data structures", "implementation"], "problem_rating": "2300", "solved_by": "x1038"},
{"url": "https://codeforces.com//problemset/problem/878/A", "name": "Short Program", "tags": ["bitmasks", "constructive algorithms"], "problem_rating": "1600", "solved_by": "x5345"},
{"url": "https://codeforces.com//problemset/problem/877/F", "name": "Ann and Books", "tags": ["data structures", "flows", "hashing"], "problem_rating": "2300", "solved_by": "x1692"},
{"url": "https://codeforces.com//problemset/problem/877/E", "name": "Danil and a Part-time Job", "tags": ["bitmasks", "data structures", "trees"], "problem_rating": "2000", "solved_by": "x4339"},
{"url": "https://codeforces.com//problemset/problem/877/D", "name": "Olya and Energy Drinks", "tags": ["data structures", "dfs and similar", "graphs", "shortest paths"], "problem_rating": "2100", "solved_by": "x4244"},
{"url": "https://codeforces.com//problemset/problem/877/C", "name": "Slava and tanks", "tags": ["constructive algorithms"], "problem_rating": "1600", "solved_by": "x5640"},
{"url": "https://codeforces.com//problemset/problem/877/B", "name": "Nikita and string", "tags": ["brute force", "dp"], "problem_rating": "1500", "solved_by": "x10212"},
{"url": "https://codeforces.com//problemset/problem/877/A", "name": "Alex and broken contest", "tags": ["implementation", "strings"], "problem_rating": "1100", "solved_by": "x10800"},
{"url": "https://codeforces.com//problemset/problem/876/B", "name": "Divisiblity of Differences", "tags": ["implementation", "math", "number theory"], "problem_rating": "1300", "solved_by": "x8933"},
{"url": "https://codeforces.com//problemset/problem/876/A", "name": "Trip For Meal", "tags": ["math"], "problem_rating": "900", "solved_by": "x9300"},
{"url": "https://codeforces.com//problemset/problem/875/F", "name": "Royal Questions", "tags": ["dsu", "graphs", "greedy"], "problem_rating": "2500", "solved_by": "x1295"},
{"url": "https://codeforces.com//problemset/problem/875/E", "name": "Delivery Club", "tags": ["binary search", "data structures", "dp"], "problem_rating": "2600", "solved_by": "x868"},
{"url": "https://codeforces.com//problemset/problem/875/D", "name": "High Cry", "tags": ["binary search", "bitmasks", "combinatorics", "data structures", "divide and conquer"], "problem_rating": "2200", "solved_by": "x2215"},
{"url": "https://codeforces.com//problemset/problem/875/C", "name": "National Property", "tags": ["2-sat", "dfs and similar", "graphs", "implementation"], "problem_rating": "2100", "solved_by": "x2105"},
{"url": "https://codeforces.com//problemset/problem/875/B", "name": "Sorting the Coins", "tags": ["dsu", "implementation", "sortings", "two pointers"], "problem_rating": "1500", "solved_by": "x5175"},
{"url": "https://codeforces.com//problemset/problem/875/A", "name": "Classroom Watch", "tags": ["brute force", "math"], "problem_rating": "1200", "solved_by": "x9528"},
{"url": "https://codeforces.com//problemset/problem/873/F", "name": "Forbidden Indices", "tags": ["dsu", "string suffix structures", "strings"], "problem_rating": "2400", "solved_by": "x1320"},
{"url": "https://codeforces.com//problemset/problem/873/E", "name": "Awards For Contestants", "tags": ["brute force", "data structures", "dp"], "problem_rating": "2300", "solved_by": "x556"},
{"url": "https://codeforces.com//problemset/problem/873/D", "name": "Merge Sort", "tags": ["constructive algorithms", "divide and conquer"], "problem_rating": "1800", "solved_by": "x3046"},
{"url": "https://codeforces.com//problemset/problem/873/C", "name": "Strange Game On Matrix", "tags": ["greedy", "two pointers"], "problem_rating": "1600", "solved_by": "x3228"},
{"url": "https://codeforces.com//problemset/problem/873/B", "name": "Balanced Substring", "tags": ["dp", "implementation"], "problem_rating": "1500", "solved_by": "x7615"},
{"url": "https://codeforces.com//problemset/problem/873/A", "name": "Chores", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x8112"},
{"url": "https://codeforces.com//problemset/problem/871/E", "name": "Restore the Tree", "tags": ["graphs", "greedy", "trees"], "problem_rating": "2900", "solved_by": "x148"},
{"url": "https://codeforces.com//problemset/problem/870/F", "name": "Paths", "tags": ["data structures", "number theory"], "problem_rating": "2700", "solved_by": "x604"},
{"url": "https://codeforces.com//problemset/problem/870/E", "name": "Points, Lines and Ready-made Titles", "tags": ["dfs and similar", "dsu", "graphs", "trees"], "problem_rating": "2300", "solved_by": "x1190"},
{"url": "https://codeforces.com//problemset/problem/870/D", "name": "Something with XOR Queries", "tags": ["brute force", "interactive", "probabilities"], "problem_rating": "2000", "solved_by": "x1199"},
{"url": "https://codeforces.com//problemset/problem/870/C", "name": "Maximum splitting", "tags": ["dp", "greedy", "math", "number theory"], "problem_rating": "1300", "solved_by": "x9019"},
{"url": "https://codeforces.com//problemset/problem/870/B", "name": "Maximum of Maximums of Minimums", "tags": ["greedy"], "problem_rating": "1200", "solved_by": "x9335"},
{"url": "https://codeforces.com//problemset/problem/870/A", "name": "Search for Pretty Integers", "tags": ["brute force", "implementation"], "problem_rating": "900", "solved_by": "x10048"},
{"url": "https://codeforces.com//problemset/problem/869/E", "name": "The Untended Antiquity", "tags": ["data structures", "hashing"], "problem_rating": "2400", "solved_by": "x1570"},
{"url": "https://codeforces.com//problemset/problem/869/D", "name": "The Overdosing Ubiquity", "tags": ["brute force", "dfs and similar", "graphs"], "problem_rating": "2800", "solved_by": "x240"},
{"url": "https://codeforces.com//problemset/problem/869/C", "name": "The Intriguing Obsession", "tags": ["combinatorics", "dp", "math"], "problem_rating": "1800", "solved_by": "x4496"},
{"url": "https://codeforces.com//problemset/problem/869/B", "name": "The Eternal Immortality", "tags": ["math"], "problem_rating": "1100", "solved_by": "x13316"},
{"url": "https://codeforces.com//problemset/problem/869/A", "name": "The Artful Expedient", "tags": ["brute force", "implementation"], "problem_rating": "1100", "solved_by": "x9415"},
{"url": "https://codeforces.com//problemset/problem/868/G", "name": "El Toll Caves", "tags": ["math"], "problem_rating": "3300", "solved_by": "x130"},
{"url": "https://codeforces.com//problemset/problem/868/F", "name": "Yet Another Minimization Problem", "tags": ["divide and conquer", "dp"], "problem_rating": "2500", "solved_by": "x3617"},
{"url": "https://codeforces.com//problemset/problem/868/E", "name": "Policeman and a Tree", "tags": ["dp", "graphs", "trees"], "problem_rating": "2700", "solved_by": "x483"},
{"url": "https://codeforces.com//problemset/problem/868/D", "name": "Huge Strings", "tags": ["bitmasks", "brute force", "dp", "implementation", "strings"], "problem_rating": "2200", "solved_by": "x897"},
{"url": "https://codeforces.com//problemset/problem/868/C", "name": "Qualification Rounds", "tags": ["bitmasks", "brute force", "constructive algorithms", "dp"], "problem_rating": "1500", "solved_by": "x4583"},
{"url": "https://codeforces.com//problemset/problem/868/B", "name": "Race Against Time", "tags": ["implementation"], "problem_rating": "1400", "solved_by": "x3658"},
{"url": "https://codeforces.com//problemset/problem/868/A", "name": "Bark to Unlock", "tags": ["brute force", "implementation", "strings"], "problem_rating": "900", "solved_by": "x8594"},
{"url": "https://codeforces.com//problemset/problem/867/A", "name": "Between the Offices", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x18994"},
{"url": "https://codeforces.com//problemset/problem/865/G", "name": "Flowers and Chocolate", "tags": ["combinatorics", "math", "matrices"], "problem_rating": "3300", "solved_by": "x134"},
{"url": "https://codeforces.com//problemset/problem/865/F", "name": "Egg Roulette", "tags": ["bitmasks", "brute force", "divide and conquer", "math", "meet-in-the-middle"], "problem_rating": "3300", "solved_by": "x68"},
{"url": "https://codeforces.com//problemset/problem/865/E", "name": "Hex Dyslexia", "tags": ["bitmasks", "brute force", "dp", "graphs"], "problem_rating": "3300", "solved_by": "x120"},
{"url": "https://codeforces.com//problemset/problem/865/D", "name": "Buy Low Sell High", "tags": ["constructive algorithms", "data structures", "greedy"], "problem_rating": "2400", "solved_by": "x5113"},
{"url": "https://codeforces.com//problemset/problem/865/C", "name": "Gotta Go Fast", "tags": ["binary search", "dp"], "problem_rating": "2400", "solved_by": "x819"},
{"url": "https://codeforces.com//problemset/problem/865/B", "name": "Ordering Pizza", "tags": ["binary search", "sortings", "ternary search"], "problem_rating": "1900", "solved_by": "x1713"},
{"url": "https://codeforces.com//problemset/problem/865/A", "name": "Save the problem!", "tags": ["constructive algorithms"], "problem_rating": "1400", "solved_by": "x4213"},
{"url": "https://codeforces.com//problemset/problem/864/F", "name": "Cities Excursions", "tags": ["dfs and similar", "graphs", "trees"], "problem_rating": "2700", "solved_by": "x582"},
{"url": "https://codeforces.com//problemset/problem/864/E", "name": "Fire", "tags": ["dp", "sortings"], "problem_rating": "2000", "solved_by": "x4189"},
{"url": "https://codeforces.com//problemset/problem/864/D", "name": "Make a Permutation!", "tags": ["greedy", "implementation", "math"], "problem_rating": "1500", "solved_by": "x5973"},
{"url": "https://codeforces.com//problemset/problem/864/C", "name": "Bus", "tags": ["greedy", "implementation", "math"], "problem_rating": "1500", "solved_by": "x5842"},
{"url": "https://codeforces.com//problemset/problem/864/B", "name": "Polycarp and Letters", "tags": ["brute force", "implementation", "strings"], "problem_rating": "1000", "solved_by": "x9019"},
{"url": "https://codeforces.com//problemset/problem/864/A", "name": "Fair Game", "tags": ["implementation", "sortings"], "problem_rating": "1000", "solved_by": "x11594"},
{"url": "https://codeforces.com//problemset/problem/863/G", "name": "Graphic Settings", "tags": [], "problem_rating": "3200", "solved_by": "x54"},
{"url": "https://codeforces.com//problemset/problem/863/F", "name": "Almost Permutation", "tags": ["flows"], "problem_rating": "2200", "solved_by": "x1211"},
{"url": "https://codeforces.com//problemset/problem/863/E", "name": "Turn Off The TV", "tags": ["data structures", "sortings"], "problem_rating": "2000", "solved_by": "x3020"},
{"url": "https://codeforces.com//problemset/problem/863/D", "name": "Yet Another Array Queries Problem", "tags": ["data structures", "implementation"], "problem_rating": "1800", "solved_by": "x3187"},
{"url": "https://codeforces.com//problemset/problem/863/C", "name": "1-2-3", "tags": ["graphs", "implementation"], "problem_rating": "1800", "solved_by": "x2462"},
{"url": "https://codeforces.com//problemset/problem/863/B", "name": "Kayaking", "tags": ["brute force", "greedy", "sortings"], "problem_rating": "1500", "solved_by": "x7931"},
{"url": "https://codeforces.com//problemset/problem/863/A", "name": "Quasi-palindrome", "tags": ["brute force", "implementation"], "problem_rating": "900", "solved_by": "x10063"},
{"url": "https://codeforces.com//problemset/problem/862/F", "name": "Mahmoud and Ehab and the final stage", "tags": ["data structures", "strings"], "problem_rating": "2900", "solved_by": "x199"},
{"url": "https://codeforces.com//problemset/problem/862/E", "name": "Mahmoud and Ehab and the function", "tags": ["binary search", "data structures", "sortings"], "problem_rating": "2100", "solved_by": "x1593"},
{"url": "https://codeforces.com//problemset/problem/862/D", "name": "Mahmoud and Ehab and the binary string", "tags": ["binary search", "divide and conquer", "interactive"], "problem_rating": "2000", "solved_by": "x1833"},
{"url": "https://codeforces.com//problemset/problem/862/C", "name": "Mahmoud and Ehab and the xor", "tags": ["constructive algorithms"], "problem_rating": "1900", "solved_by": "x4019"},
{"url": "https://codeforces.com//problemset/problem/862/B", "name": "Mahmoud and Ehab and the bipartiteness", "tags": ["dfs and similar", "graphs", "trees"], "problem_rating": "1300", "solved_by": "x16753"},
{"url": "https://codeforces.com//problemset/problem/862/A", "name": "Mahmoud and Ehab and the MEX", "tags": ["greedy", "implementation"], "problem_rating": "1000", "solved_by": "x9431"},
{"url": "https://codeforces.com//problemset/problem/860/E", "name": "Arkady and a Nobody-men", "tags": ["data structures", "dfs and similar", "trees"], "problem_rating": "2700", "solved_by": "x429"},
{"url": "https://codeforces.com//problemset/problem/859/G", "name": "Circle of Numbers", "tags": ["math"], "problem_rating": "3000", "solved_by": "x155"},
{"url": "https://codeforces.com//problemset/problem/859/F", "name": "Ordering T-Shirts", "tags": ["greedy"], "problem_rating": "2800", "solved_by": "x180"},
{"url": "https://codeforces.com//problemset/problem/859/E", "name": "Desk Disorder", "tags": ["combinatorics", "dfs and similar", "dsu", "graphs", "trees"], "problem_rating": "2100", "solved_by": "x1842"},
{"url": "https://codeforces.com//problemset/problem/859/D", "name": "Third Month Insanity", "tags": ["dp", "probabilities", "trees"], "problem_rating": "2100", "solved_by": "x1040"},
{"url": "https://codeforces.com//problemset/problem/859/C", "name": "Pie Rules", "tags": ["dp", "games"], "problem_rating": "1500", "solved_by": "x5322"},
{"url": "https://codeforces.com//problemset/problem/859/B", "name": "Lazy Security Guard", "tags": ["brute force", "geometry", "math"], "problem_rating": "1000", "solved_by": "x6932"},
{"url": "https://codeforces.com//problemset/problem/859/A", "name": "Declined Finalists", "tags": ["greedy", "implementation"], "problem_rating": "800", "solved_by": "x7655"},
{"url": "https://codeforces.com//problemset/problem/858/F", "name": "Wizard's Tour", "tags": ["constructive algorithms", "dfs and similar", "graphs"], "problem_rating": "2300", "solved_by": "x1523"},
{"url": "https://codeforces.com//problemset/problem/858/E", "name": "Tests Renumeration", "tags": ["greedy", "implementation"], "problem_rating": "2200", "solved_by": "x500"},
{"url": "https://codeforces.com//problemset/problem/858/D", "name": "Polycarp's phone book", "tags": ["data structures", "implementation", "sortings"], "problem_rating": "1600", "solved_by": "x3749"},
{"url": "https://codeforces.com//problemset/problem/858/C", "name": "Did you mean...", "tags": ["dp", "greedy", "implementation"], "problem_rating": "1500", "solved_by": "x5595"},
{"url": "https://codeforces.com//problemset/problem/858/B", "name": "Which floor?", "tags": ["brute force", "implementation"], "problem_rating": "1500", "solved_by": "x3709"},
{"url": "https://codeforces.com//problemset/problem/858/A", "name": "k-rounding", "tags": ["brute force", "math", "number theory"], "problem_rating": "1100", "solved_by": "x7928"},
{"url": "https://codeforces.com//problemset/problem/856/F", "name": "To Play or not to Play", "tags": ["greedy"], "problem_rating": "3000", "solved_by": "x104"},
{"url": "https://codeforces.com//problemset/problem/856/E", "name": "Satellites", "tags": [], "problem_rating": "3100", "solved_by": "x68"},
{"url": "https://codeforces.com//problemset/problem/856/D", "name": "Masha and Cactus", "tags": ["dp", "trees"], "problem_rating": "2400", "solved_by": "x378"},
{"url": "https://codeforces.com//problemset/problem/856/C", "name": "Eleventh Birthday", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2400", "solved_by": "x565"},
{"url": "https://codeforces.com//problemset/problem/856/B", "name": "Similar Words", "tags": ["dp", "hashing", "strings", "trees"], "problem_rating": "2300", "solved_by": "x486"},
{"url": "https://codeforces.com//problemset/problem/856/A", "name": "Set Theory", "tags": ["brute force", "constructive algorithms"], "problem_rating": "1600", "solved_by": "x1401"},
{"url": "https://codeforces.com//problemset/problem/855/G", "name": "Harry Vs Voldemort", "tags": ["dfs and similar", "dp", "graphs", "trees"], "problem_rating": "3300", "solved_by": "x205"},
{"url": "https://codeforces.com//problemset/problem/855/F", "name": "Nagini", "tags": ["binary search", "data structures"], "problem_rating": "3100", "solved_by": "x433"},
{"url": "https://codeforces.com//problemset/problem/855/E", "name": "Salazar Slytherin's Locket", "tags": ["bitmasks", "dp"], "problem_rating": "2200", "solved_by": "x1694"},
{"url": "https://codeforces.com//problemset/problem/855/D", "name": "Rowena Ravenclaw's Diadem", "tags": ["trees"], "problem_rating": "2500", "solved_by": "x479"},
{"url": "https://codeforces.com//problemset/problem/855/C", "name": "Helga Hufflepuff's Cup", "tags": ["dp", "trees"], "problem_rating": "2000", "solved_by": "x2024"},
{"url": "https://codeforces.com//problemset/problem/855/B", "name": "Marvolo Gaunt's Ring", "tags": ["brute force", "data structures", "dp"], "problem_rating": "1500", "solved_by": "x8474"},
{"url": "https://codeforces.com//problemset/problem/855/A", "name": "Tom Riddle's Diary", "tags": ["brute force", "implementation", "strings"], "problem_rating": "800", "solved_by": "x20680"},
{"url": "https://codeforces.com//problemset/problem/854/B", "name": "Maxim Buys an Apartment", "tags": ["constructive algorithms", "math"], "problem_rating": "1200", "solved_by": "x8159"},
{"url": "https://codeforces.com//problemset/problem/854/A", "name": "Fraction", "tags": ["brute force", "constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x13514"},
{"url": "https://codeforces.com//problemset/problem/853/E", "name": "Lada Malina", "tags": ["data structures", "geometry"], "problem_rating": "3400", "solved_by": "x65"},
{"url": "https://codeforces.com//problemset/problem/853/D", "name": "Michael and Charging Stations", "tags": ["binary search", "dp", "greedy"], "problem_rating": "2400", "solved_by": "x658"},
{"url": "https://codeforces.com//problemset/problem/853/C", "name": "Boredom", "tags": ["data structures"], "problem_rating": "2100", "solved_by": "x1466"},
{"url": "https://codeforces.com//problemset/problem/853/B", "name": "Jury Meeting", "tags": ["greedy", "sortings", "two pointers"], "problem_rating": "1800", "solved_by": "x2505"},
{"url": "https://codeforces.com//problemset/problem/853/A", "name": "Planning", "tags": ["greedy"], "problem_rating": "1500", "solved_by": "x5815"},
{"url": "https://codeforces.com//problemset/problem/852/I", "name": "Dating", "tags": ["brute force", "dfs and similar", "graphs", "trees"], "problem_rating": "2300", "solved_by": "x564"},
{"url": "https://codeforces.com//problemset/problem/852/H", "name": "Bob and stages", "tags": ["dp", "geometry"], "problem_rating": "3000", "solved_by": "x150"},
{"url": "https://codeforces.com//problemset/problem/852/G", "name": "Bathroom terminal", "tags": ["implementation"], "problem_rating": "1700", "solved_by": "x1278"},
{"url": "https://codeforces.com//problemset/problem/852/F", "name": "Product transformation", "tags": ["combinatorics", "math", "number theory"], "problem_rating": "2200", "solved_by": "x565"},
{"url": "https://codeforces.com//problemset/problem/852/E", "name": "Casinos and travel", "tags": ["dp"], "problem_rating": "2100", "solved_by": "x996"},
{"url": "https://codeforces.com//problemset/problem/852/D", "name": "Exploration plan", "tags": ["binary search", "flows", "graph matchings", "shortest paths"], "problem_rating": "2100", "solved_by": "x971"},
{"url": "https://codeforces.com//problemset/problem/852/C", "name": "Property", "tags": ["greedy", "sortings"], "problem_rating": "2100", "solved_by": "x556"},
{"url": "https://codeforces.com//problemset/problem/852/B", "name": "Neural Network country", "tags": ["dp", "matrices"], "problem_rating": "2000", "solved_by": "x1409"},
{"url": "https://codeforces.com//problemset/problem/852/A", "name": "Digits", "tags": ["brute force", "implementation", "math"], "problem_rating": "2500", "solved_by": "x385"},
{"url": "https://codeforces.com//problemset/problem/851/B", "name": "Arpa and an exam about geometry", "tags": ["geometry", "math"], "problem_rating": "1400", "solved_by": "x5468"},
{"url": "https://codeforces.com//problemset/problem/851/A", "name": "Arpa and a research in Mexican wave", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x9556"},
{"url": "https://codeforces.com//problemset/problem/850/F", "name": "Rainbow Balls", "tags": ["math"], "problem_rating": "2800", "solved_by": "x636"},
{"url": "https://codeforces.com//problemset/problem/850/E", "name": "Random Elections", "tags": ["bitmasks", "brute force", "divide and conquer", "fft", "math"], "problem_rating": "2800", "solved_by": "x384"},
{"url": "https://codeforces.com//problemset/problem/850/D", "name": "Tournament Construction", "tags": ["constructive algorithms", "dp", "graphs", "greedy", "math"], "problem_rating": "2800", "solved_by": "x377"},
{"url": "https://codeforces.com//problemset/problem/850/C", "name": "Arpa and a game with Mojtaba", "tags": ["bitmasks", "dp", "games"], "problem_rating": "2200", "solved_by": "x1429"},
{"url": "https://codeforces.com//problemset/problem/850/B", "name": "Arpa and a list of numbers", "tags": ["implementation", "number theory"], "problem_rating": "2100", "solved_by": "x1988"},
{"url": "https://codeforces.com//problemset/problem/850/A", "name": "Five Dimensional Points", "tags": ["brute force", "geometry", "math"], "problem_rating": "1700", "solved_by": "x3053"},
{"url": "https://codeforces.com//problemset/problem/849/B", "name": "Tell Your World", "tags": ["brute force", "geometry"], "problem_rating": "1600", "solved_by": "x3566"},
{"url": "https://codeforces.com//problemset/problem/849/A", "name": "Odds and Ends", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x8994"},
{"url": "https://codeforces.com//problemset/problem/848/E", "name": "Days of Floral Colours", "tags": ["combinatorics", "divide and conquer", "dp", "fft", "math"], "problem_rating": "3400", "solved_by": "x203"},
{"url": "https://codeforces.com//problemset/problem/848/D", "name": "Shake It!", "tags": ["combinatorics", "dp", "flows", "graphs"], "problem_rating": "2900", "solved_by": "x380"},
{"url": "https://codeforces.com//problemset/problem/848/C", "name": "Goodbye Souvenir", "tags": ["data structures", "divide and conquer"], "problem_rating": "2600", "solved_by": "x1327"},
{"url": "https://codeforces.com//problemset/problem/848/B", "name": "Rooter's Song", "tags": ["constructive algorithms", "data structures", "geometry", "implementation", "sortings", "two pointers"], "problem_rating": "1900", "solved_by": "x1876"},
{"url": "https://codeforces.com//problemset/problem/848/A", "name": "From Y to Y", "tags": ["constructive algorithms"], "problem_rating": "1600", "solved_by": "x5100"},
{"url": "https://codeforces.com//problemset/problem/847/M", "name": "Weather Tomorrow", "tags": ["implementation", "math"], "problem_rating": "1000", "solved_by": "x6236"},
{"url": "https://codeforces.com//problemset/problem/847/L", "name": "Berland SU Computer Network", "tags": ["constructive algorithms", "dfs and similar", "graphs", "hashing", "trees"], "problem_rating": "2400", "solved_by": "x319"},
{"url": "https://codeforces.com//problemset/problem/847/K", "name": "Travel Cards", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "1800", "solved_by": "x1662"},
{"url": "https://codeforces.com//problemset/problem/847/J", "name": "Students Initiation", "tags": ["binary search", "flows", "graphs"], "problem_rating": "2400", "solved_by": "x621"},
{"url": "https://codeforces.com//problemset/problem/847/I", "name": "Noise Level", "tags": ["dfs and similar", "implementation", "math"], "problem_rating": "1900", "solved_by": "x1512"},
{"url": "https://codeforces.com//problemset/problem/847/H", "name": "Load Testing", "tags": ["greedy"], "problem_rating": "1600", "solved_by": "x2377"},
{"url": "https://codeforces.com//problemset/problem/847/G", "name": "University Classes", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x6596"},
{"url": "https://codeforces.com//problemset/problem/847/F", "name": "Berland Elections", "tags": ["greedy", "sortings"], "problem_rating": "2100", "solved_by": "x855"},
{"url": "https://codeforces.com//problemset/problem/847/E", "name": "Packmen", "tags": ["binary search", "dp"], "problem_rating": "1800", "solved_by": "x2828"},
{"url": "https://codeforces.com//problemset/problem/847/D", "name": "Dog Show", "tags": ["constructive algorithms", "data structures", "greedy"], "problem_rating": "2200", "solved_by": "x1195"},
{"url": "https://codeforces.com//problemset/problem/847/C", "name": "Sum of Nestings", "tags": ["constructive algorithms"], "problem_rating": "1800", "solved_by": "x2348"},
{"url": "https://codeforces.com//problemset/problem/847/B", "name": "Preparing for Merge Sort", "tags": ["binary search", "data structures"], "problem_rating": "1600", "solved_by": "x4767"},
{"url": "https://codeforces.com//problemset/problem/847/A", "name": "Union of Doubly Linked Lists", "tags": ["implementation"], "problem_rating": "1500", "solved_by": "x3337"},
{"url": "https://codeforces.com//problemset/problem/846/F", "name": "Random Query", "tags": ["data structures", "math", "probabilities", "two pointers"], "problem_rating": "1800", "solved_by": "x2228"},
{"url": "https://codeforces.com//problemset/problem/846/E", "name": "Chemistry in Berland", "tags": ["dfs and similar", "greedy", "trees"], "problem_rating": "2300", "solved_by": "x870"},
{"url": "https://codeforces.com//problemset/problem/846/D", "name": "Monitor", "tags": ["binary search", "data structures"], "problem_rating": "1900", "solved_by": "x2404"},
{"url": "https://codeforces.com//problemset/problem/846/C", "name": "Four Segments", "tags": ["brute force", "data structures", "dp"], "problem_rating": "1800", "solved_by": "x2642"},
{"url": "https://codeforces.com//problemset/problem/846/B", "name": "Math Show", "tags": ["brute force", "greedy"], "problem_rating": "1800", "solved_by": "x2480"},
{"url": "https://codeforces.com//problemset/problem/846/A", "name": "Curriculum Vitae", "tags": ["brute force", "implementation"], "problem_rating": "1500", "solved_by": "x4188"},
{"url": "https://codeforces.com//problemset/problem/845/G", "name": "Shortest Path Problem?", "tags": ["dfs and similar", "graphs", "math"], "problem_rating": "2300", "solved_by": "x1539"},
{"url": "https://codeforces.com//problemset/problem/845/F", "name": "Guards In The Storehouse", "tags": ["bitmasks", "dp"], "problem_rating": "2500", "solved_by": "x429"},
{"url": "https://codeforces.com//problemset/problem/845/E", "name": "Fire in the City", "tags": ["binary search", "data structures"], "problem_rating": "2400", "solved_by": "x586"},
{"url": "https://codeforces.com//problemset/problem/845/D", "name": "Driving Test", "tags": ["data structures", "dp", "greedy"], "problem_rating": "1800", "solved_by": "x2346"},
{"url": "https://codeforces.com//problemset/problem/845/C", "name": "Two TVs", "tags": ["data structures", "greedy", "sortings"], "problem_rating": "1500", "solved_by": "x8268"},
{"url": "https://codeforces.com//problemset/problem/845/B", "name": "Luba And The Ticket", "tags": ["brute force", "greedy", "implementation"], "problem_rating": "1600", "solved_by": "x4965"},
{"url": "https://codeforces.com//problemset/problem/845/A", "name": "Chess Tourney", "tags": ["implementation", "sortings"], "problem_rating": "1100", "solved_by": "x7677"},
{"url": "https://codeforces.com//problemset/problem/844/B", "name": "Rectangles", "tags": ["combinatorics", "math"], "problem_rating": "1300", "solved_by": "x7205"},
{"url": "https://codeforces.com//problemset/problem/844/A", "name": "Diversity", "tags": ["greedy", "implementation", "strings"], "problem_rating": "1000", "solved_by": "x10540"},
{"url": "https://codeforces.com//problemset/problem/843/E", "name": "Maximum Flow", "tags": ["flows", "graphs"], "problem_rating": "3000", "solved_by": "x307"},
{"url": "https://codeforces.com//problemset/problem/843/D", "name": "Dynamic Shortest Path", "tags": ["graphs", "shortest paths"], "problem_rating": "3400", "solved_by": "x791"},
{"url": "https://codeforces.com//problemset/problem/843/C", "name": "Upgrading Tree", "tags": ["constructive algorithms", "dfs and similar", "graphs", "math", "trees"], "problem_rating": "2600", "solved_by": "x351"},
{"url": "https://codeforces.com//problemset/problem/843/B", "name": "Interactive LowerBound", "tags": ["brute force", "interactive", "probabilities"], "problem_rating": "2000", "solved_by": "x2207"},
{"url": "https://codeforces.com//problemset/problem/843/A", "name": "Sorting by Subsequences", "tags": ["dfs and similar", "dsu", "implementation", "math", "sortings"], "problem_rating": "1400", "solved_by": "x5586"},
{"url": "https://codeforces.com//problemset/problem/842/E", "name": "Nikita and game", "tags": ["binary search", "dfs and similar", "divide and conquer", "graphs", "trees"], "problem_rating": "2800", "solved_by": "x402"},
{"url": "https://codeforces.com//problemset/problem/842/D", "name": "Vitya and Strange Lesson", "tags": ["binary search", "data structures"], "problem_rating": "2000", "solved_by": "x3518"},
{"url": "https://codeforces.com//problemset/problem/842/C", "name": "Ilya And The Tree", "tags": ["dfs and similar", "graphs", "math", "number theory", "trees"], "problem_rating": "2000", "solved_by": "x3451"},
{"url": "https://codeforces.com//problemset/problem/842/B", "name": "Gleb And Pizza", "tags": ["geometry"], "problem_rating": "1100", "solved_by": "x10219"},
{"url": "https://codeforces.com//problemset/problem/842/A", "name": "Kirill And The Game", "tags": ["brute force", "two pointers"], "problem_rating": "1200", "solved_by": "x10065"},
{"url": "https://codeforces.com//problemset/problem/841/B", "name": "Godsend", "tags": ["games", "math"], "problem_rating": "1100", "solved_by": "x12152"},
{"url": "https://codeforces.com//problemset/problem/841/A", "name": "Generous Kefa", "tags": ["brute force", "implementation"], "problem_rating": "900", "solved_by": "x13065"},
{"url": "https://codeforces.com//problemset/problem/840/E", "name": "In a Trap", "tags": ["trees"], "problem_rating": "3200", "solved_by": "x446"},
{"url": "https://codeforces.com//problemset/problem/840/D", "name": "Destiny", "tags": ["data structures", "probabilities"], "problem_rating": "2500", "solved_by": "x2898"},
{"url": "https://codeforces.com//problemset/problem/840/C", "name": "On the Bench", "tags": ["combinatorics", "dp"], "problem_rating": "2500", "solved_by": "x1679"},
{"url": "https://codeforces.com//problemset/problem/840/B", "name": "Leha and another game about graph", "tags": ["constructive algorithms", "data structures", "dfs and similar", "dp", "graphs"], "problem_rating": "2100", "solved_by": "x2438"},
{"url": "https://codeforces.com//problemset/problem/840/A", "name": "Leha and Function", "tags": ["combinatorics", "greedy", "math", "number theory", "sortings"], "problem_rating": "1300", "solved_by": "x6967"},
{"url": "https://codeforces.com//problemset/problem/839/E", "name": "Mother of Dragons", "tags": ["brute force", "graphs", "math", "meet-in-the-middle"], "problem_rating": "2700", "solved_by": "x897"},
{"url": "https://codeforces.com//problemset/problem/839/D", "name": "Winter is here", "tags": ["combinatorics", "dp", "math", "number theory"], "problem_rating": "2200", "solved_by": "x2735"},
{"url": "https://codeforces.com//problemset/problem/839/C", "name": "Journey", "tags": ["dfs and similar", "dp", "graphs", "probabilities", "trees"], "problem_rating": "1500", "solved_by": "x16348"},
{"url": "https://codeforces.com//problemset/problem/839/B", "name": "Game of the Rows", "tags": ["brute force", "greedy", "implementation"], "problem_rating": "1900", "solved_by": "x3285"},
{"url": "https://codeforces.com//problemset/problem/839/A", "name": "Arya and Bran", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x14079"},
{"url": "https://codeforces.com//problemset/problem/838/F", "name": "Expected Earnings", "tags": [], "problem_rating": "2800", "solved_by": "x95"},
{"url": "https://codeforces.com//problemset/problem/838/E", "name": "Convex Countour", "tags": ["dp"], "problem_rating": "2300", "solved_by": "x326"},
{"url": "https://codeforces.com//problemset/problem/838/D", "name": "Airplane Arrangements", "tags": ["math", "number theory"], "problem_rating": "2700", "solved_by": "x840"},
{"url": "https://codeforces.com//problemset/problem/838/C", "name": "Future Failure", "tags": ["dp", "games"], "problem_rating": "2800", "solved_by": "x289"},
{"url": "https://codeforces.com//problemset/problem/838/B", "name": "Diverging Directions", "tags": ["data structures", "dfs and similar", "trees"], "problem_rating": "2100", "solved_by": "x720"},
{"url": "https://codeforces.com//problemset/problem/838/A", "name": "Binary Blocks", "tags": ["brute force"], "problem_rating": "1400", "solved_by": "x914"},
{"url": "https://codeforces.com//problemset/problem/837/G", "name": "Functions On The Segments", "tags": ["data structures"], "problem_rating": "2500", "solved_by": "x659"},
{"url": "https://codeforces.com//problemset/problem/837/F", "name": "Prefix Sums", "tags": ["binary search", "brute force", "combinatorics", "math", "matrices"], "problem_rating": "2400", "solved_by": "x795"},
{"url": "https://codeforces.com//problemset/problem/837/E", "name": "Vasya's Function", "tags": ["binary search", "implementation", "math"], "problem_rating": "2100", "solved_by": "x1733"},
{"url": "https://codeforces.com//problemset/problem/837/D", "name": "Round Subset", "tags": ["dp", "math"], "problem_rating": "2100", "solved_by": "x5214"},
{"url": "https://codeforces.com//problemset/problem/837/C", "name": "Two Seals", "tags": ["brute force", "implementation"], "problem_rating": "1500", "solved_by": "x3964"},
{"url": "https://codeforces.com//problemset/problem/837/B", "name": "Flag of Berland", "tags": ["brute force", "implementation"], "problem_rating": "1600", "solved_by": "x3910"},
{"url": "https://codeforces.com//problemset/problem/837/A", "name": "Text Volume", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x9303"},
{"url": "https://codeforces.com//problemset/problem/835/F", "name": "Roads in the Kingdom", "tags": ["dfs and similar", "dp", "graphs", "trees"], "problem_rating": "2500", "solved_by": "x1040"},
{"url": "https://codeforces.com//problemset/problem/835/E", "name": "The penguin's game", "tags": ["binary search", "constructive algorithms", "interactive"], "problem_rating": "2400", "solved_by": "x1141"},
{"url": "https://codeforces.com//problemset/problem/835/D", "name": "Palindromic characteristics", "tags": ["brute force", "dp", "hashing", "strings"], "problem_rating": "1900", "solved_by": "x4024"},
{"url": "https://codeforces.com//problemset/problem/835/C", "name": "Star sky", "tags": ["dp", "implementation"], "problem_rating": "1600", "solved_by": "x7727"},
{"url": "https://codeforces.com//problemset/problem/835/B", "name": "The number on the board", "tags": ["greedy"], "problem_rating": "1100", "solved_by": "x10963"},
{"url": "https://codeforces.com//problemset/problem/835/A", "name": "Key races", "tags": ["math"], "problem_rating": "800", "solved_by": "x20067"},
{"url": "https://codeforces.com//problemset/problem/834/B", "name": "The Festive Evening", "tags": ["data structures", "implementation"], "problem_rating": "1100", "solved_by": "x8672"},
{"url": "https://codeforces.com//problemset/problem/834/A", "name": "The Useless Toy", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x8573"},
{"url": "https://codeforces.com//problemset/problem/833/E", "name": "Caramel Clouds", "tags": ["data structures", "dp", "sortings"], "problem_rating": "3400", "solved_by": "x217"},
{"url": "https://codeforces.com//problemset/problem/833/D", "name": "Red-Black Cobweb", "tags": ["data structures", "divide and conquer", "implementation", "trees"], "problem_rating": "2800", "solved_by": "x387"},
{"url": "https://codeforces.com//problemset/problem/833/C", "name": "Ever-Hungry Krakozyabra", "tags": ["brute force", "combinatorics", "greedy", "math"], "problem_rating": "2700", "solved_by": "x465"},
{"url": "https://codeforces.com//problemset/problem/833/B", "name": "The Bakery", "tags": ["binary search", "data structures", "divide and conquer", "dp", "two pointers"], "problem_rating": "2200", "solved_by": "x4752"},
{"url": "https://codeforces.com//problemset/problem/833/A", "name": "The Meaningless Game", "tags": ["math", "number theory"], "problem_rating": "1700", "solved_by": "x6127"},
{"url": "https://codeforces.com//problemset/problem/832/E", "name": "Vasya and Shifts", "tags": ["matrices"], "problem_rating": "2600", "solved_by": "x316"},
{"url": "https://codeforces.com//problemset/problem/832/D", "name": "Misha, Grisha and Underground", "tags": ["dfs and similar", "graphs", "trees"], "problem_rating": "1900", "solved_by": "x3670"},
{"url": "https://codeforces.com//problemset/problem/832/C", "name": "Strange Radiation", "tags": ["binary search", "implementation", "math"], "problem_rating": "2500", "solved_by": "x444"},
{"url": "https://codeforces.com//problemset/problem/832/B", "name": "Petya and Exam", "tags": ["implementation", "strings"], "problem_rating": "1600", "solved_by": "x4359"},
{"url": "https://codeforces.com//problemset/problem/832/A", "name": "Sasha and Sticks", "tags": ["games", "math"], "problem_rating": "800", "solved_by": "x20534"},
{"url": "https://codeforces.com//problemset/problem/831/C", "name": "Jury Marks", "tags": ["brute force", "constructive algorithms"], "problem_rating": "1700", "solved_by": "x4461"},
{"url": "https://codeforces.com//problemset/problem/831/B", "name": "Keyboard Layouts", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x14195"},
{"url": "https://codeforces.com//problemset/problem/831/A", "name": "Unimodal Array", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x10113"},
{"url": "https://codeforces.com//problemset/problem/830/E", "name": "Perpetual Motion Machine", "tags": ["constructive algorithms", "dp", "graphs", "implementation", "math", "trees"], "problem_rating": "3100", "solved_by": "x274"},
{"url": "https://codeforces.com//problemset/problem/830/D", "name": "Singer House", "tags": ["combinatorics", "dp", "graphs", "trees"], "problem_rating": "2800", "solved_by": "x815"},
{"url": "https://codeforces.com//problemset/problem/830/C", "name": "Bamboo Partition", "tags": ["brute force", "data structures", "implementation", "math", "number theory", "sortings", "two pointers"], "problem_rating": "2300", "solved_by": "x1190"},
{"url": "https://codeforces.com//problemset/problem/830/B", "name": "Cards Sorting", "tags": ["data structures", "implementation", "sortings"], "problem_rating": "1600", "solved_by": "x2816"},
{"url": "https://codeforces.com//problemset/problem/830/A", "name": "Office Keys", "tags": ["binary search", "brute force", "dp", "greedy", "sortings"], "problem_rating": "1800", "solved_by": "x6776"},
{"url": "https://codeforces.com//problemset/problem/828/B", "name": "Black Square", "tags": ["implementation"], "problem_rating": "1300", "solved_by": "x5670"},
{"url": "https://codeforces.com//problemset/problem/828/A", "name": "Restaurant Tables", "tags": ["implementation"], "problem_rating": "1200", "solved_by": "x7865"},
{"url": "https://codeforces.com//problemset/problem/827/F", "name": "Dirty Arkady's Kitchen", "tags": ["data structures", "dp", "graphs", "shortest paths"], "problem_rating": "3200", "solved_by": "x392"},
{"url": "https://codeforces.com//problemset/problem/827/E", "name": "Rusty String", "tags": ["fft", "math", "strings"], "problem_rating": "2700", "solved_by": "x861"},
{"url": "https://codeforces.com//problemset/problem/827/D", "name": "Best Edge Weight", "tags": ["data structures", "dfs and similar", "graphs", "trees"], "problem_rating": "2700", "solved_by": "x1088"},
{"url": "https://codeforces.com//problemset/problem/827/C", "name": "DNA Evolution", "tags": ["data structures", "strings"], "problem_rating": "2100", "solved_by": "x1626"},
{"url": "https://codeforces.com//problemset/problem/827/B", "name": "High Load", "tags": ["constructive algorithms", "greedy", "implementation", "trees"], "problem_rating": "1800", "solved_by": "x3452"},
{"url": "https://codeforces.com//problemset/problem/827/A", "name": "String Reconstruction", "tags": ["data structures", "greedy", "sortings", "strings"], "problem_rating": "1700", "solved_by": "x3975"},
{"url": "https://codeforces.com//problemset/problem/825/G", "name": "Tree Queries", "tags": ["dfs and similar", "graphs", "trees"], "problem_rating": "2500", "solved_by": "x1166"},
{"url": "https://codeforces.com//problemset/problem/825/F", "name": "String Compression", "tags": ["dp", "hashing", "string suffix structures", "strings"], "problem_rating": "2400", "solved_by": "x1390"},
{"url": "https://codeforces.com//problemset/problem/825/E", "name": "Minimal Labels", "tags": ["data structures", "dfs and similar", "graphs", "greedy"], "problem_rating": "2300", "solved_by": "x3280"},
{"url": "https://codeforces.com//problemset/problem/825/D", "name": "Suitable Replacement", "tags": ["binary search", "greedy", "implementation"], "problem_rating": "1500", "solved_by": "x3211"},
{"url": "https://codeforces.com//problemset/problem/825/C", "name": "Multi-judge Solving", "tags": ["greedy", "implementation"], "problem_rating": "1600", "solved_by": "x4444"},
{"url": "https://codeforces.com//problemset/problem/825/B", "name": "Five-In-a-Row", "tags": ["brute force", "implementation"], "problem_rating": "1600", "solved_by": "x4103"},
{"url": "https://codeforces.com//problemset/problem/825/A", "name": "Binary Protocol", "tags": ["implementation"], "problem_rating": "1100", "solved_by": "x7613"},
{"url": "https://codeforces.com//problemset/problem/822/F", "name": "Madness", "tags": ["constructive algorithms", "dfs and similar", "trees"], "problem_rating": "2500", "solved_by": "x290"},
{"url": "https://codeforces.com//problemset/problem/822/E", "name": "Liar", "tags": ["binary search", "dp", "hashing", "string suffix structures"], "problem_rating": "2400", "solved_by": "x778"},
{"url": "https://codeforces.com//problemset/problem/822/D", "name": "My pretty girl Noora", "tags": ["brute force", "dp", "greedy", "math", "number theory"], "problem_rating": "1800", "solved_by": "x2985"},
{"url": "https://codeforces.com//problemset/problem/822/C", "name": "Hacker, pack your bags!", "tags": ["binary search", "greedy", "implementation", "sortings"], "problem_rating": "1600", "solved_by": "x4555"},
{"url": "https://codeforces.com//problemset/problem/822/B", "name": "Crossword solving", "tags": ["brute force", "implementation", "strings"], "problem_rating": "1000", "solved_by": "x9449"},
{"url": "https://codeforces.com//problemset/problem/822/A", "name": "I'm bored with life", "tags": ["implementation", "math", "number theory"], "problem_rating": "800", "solved_by": "x32418"},
{"url": "https://codeforces.com//problemset/problem/821/E", "name": "Okabe and El Psy Kongroo", "tags": ["dp", "matrices"], "problem_rating": "2100", "solved_by": "x1443"},
{"url": "https://codeforces.com//problemset/problem/821/D", "name": "Okabe and City", "tags": ["dfs and similar", "graphs", "shortest paths"], "problem_rating": "2200", "solved_by": "x1373"},
{"url": "https://codeforces.com//problemset/problem/821/C", "name": "Okabe and Boxes", "tags": ["data structures", "greedy", "trees"], "problem_rating": "1500", "solved_by": "x6734"},
{"url": "https://codeforces.com//problemset/problem/821/B", "name": "Okabe and Banana Trees", "tags": ["brute force", "math"], "problem_rating": "1300", "solved_by": "x5712"},
{"url": "https://codeforces.com//problemset/problem/821/A", "name": "Okabe and Future Gadget Laboratory", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x7964"},
{"url": "https://codeforces.com//problemset/problem/820/B", "name": "Mister B and Angle in Polygon", "tags": ["constructive algorithms", "geometry", "math"], "problem_rating": "1300", "solved_by": "x5138"},
{"url": "https://codeforces.com//problemset/problem/820/A", "name": "Mister B and Book Reading", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x8091"},
{"url": "https://codeforces.com//problemset/problem/819/E", "name": "Mister B and Flight to the Moon", "tags": ["constructive algorithms", "graphs"], "problem_rating": "2800", "solved_by": "x507"},
{"url": "https://codeforces.com//problemset/problem/819/D", "name": "Mister B and Astronomers", "tags": ["number theory"], "problem_rating": "2900", "solved_by": "x224"},
{"url": "https://codeforces.com//problemset/problem/819/C", "name": "Mister B and Beacons on Field", "tags": ["number theory"], "problem_rating": "2900", "solved_by": "x206"},
{"url": "https://codeforces.com//problemset/problem/819/B", "name": "Mister B and PR Shifts", "tags": ["data structures", "implementation", "math"], "problem_rating": "1900", "solved_by": "x1681"},
{"url": "https://codeforces.com//problemset/problem/819/A", "name": "Mister B and Boring Game", "tags": ["games", "greedy"], "problem_rating": "2200", "solved_by": "x486"},
{"url": "https://codeforces.com//problemset/problem/818/G", "name": "Four Melodies", "tags": ["flows", "graphs"], "problem_rating": "2600", "solved_by": "x650"},
{"url": "https://codeforces.com//problemset/problem/818/F", "name": "Level Generation", "tags": ["binary search", "math", "ternary search"], "problem_rating": "2100", "solved_by": "x1510"},
{"url": "https://codeforces.com//problemset/problem/818/E", "name": "Card Game Again", "tags": ["binary search", "data structures", "number theory", "two pointers"], "problem_rating": "1900", "solved_by": "x2102"},
{"url": "https://codeforces.com//problemset/problem/818/D", "name": "Multicolored Cars", "tags": ["data structures", "implementation"], "problem_rating": "1700", "solved_by": "x3428"},
{"url": "https://codeforces.com//problemset/problem/818/C", "name": "Sofa Thief", "tags": ["brute force", "implementation"], "problem_rating": "2000", "solved_by": "x1224"},
{"url": "https://codeforces.com//problemset/problem/818/B", "name": "Permutation Game", "tags": ["implementation"], "problem_rating": "1600", "solved_by": "x2991"},
{"url": "https://codeforces.com//problemset/problem/818/A", "name": "Diplomas and Certificates", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x6846"},
{"url": "https://codeforces.com//problemset/problem/817/F", "name": "MEX Queries", "tags": ["binary search", "data structures", "trees"], "problem_rating": "2300", "solved_by": "x2495"},
{"url": "https://codeforces.com//problemset/problem/817/E", "name": "Choosing The Commander", "tags": ["bitmasks", "data structures", "trees"], "problem_rating": "2000", "solved_by": "x2773"},
{"url": "https://codeforces.com//problemset/problem/817/D", "name": "Imbalanced Array", "tags": ["data structures", "divide and conquer", "dsu", "sortings"], "problem_rating": "1900", "solved_by": "x4566"},
{"url": "https://codeforces.com//problemset/problem/817/C", "name": "Really Big Numbers", "tags": ["binary search", "brute force", "dp", "math"], "problem_rating": "1600", "solved_by": "x7196"},
{"url": "https://codeforces.com//problemset/problem/817/B", "name": "Makes And The Product", "tags": ["combinatorics", "implementation", "math", "sortings"], "problem_rating": "1500", "solved_by": "x5635"},
{"url": "https://codeforces.com//problemset/problem/817/A", "name": "Treasure Hunt", "tags": ["implementation", "math", "number theory"], "problem_rating": "1200", "solved_by": "x6176"},
{"url": "https://codeforces.com//problemset/problem/816/B", "name": "Karen and Coffee", "tags": ["binary search", "data structures", "implementation"], "problem_rating": "1400", "solved_by": "x17135"},
{"url": "https://codeforces.com//problemset/problem/816/A", "name": "Karen and Morning", "tags": ["brute force", "implementation"], "problem_rating": "1000", "solved_by": "x8974"},
{"url": "https://codeforces.com//problemset/problem/815/E", "name": "Karen and Neighborhood", "tags": ["binary search", "constructive algorithms", "implementation"], "problem_rating": "2900", "solved_by": "x221"},
{"url": "https://codeforces.com//problemset/problem/815/D", "name": "Karen and Cards", "tags": ["binary search", "combinatorics", "data structures", "geometry"], "problem_rating": "2800", "solved_by": "x606"},
{"url": "https://codeforces.com//problemset/problem/815/C", "name": "Karen and Supermarket", "tags": ["brute force", "dp", "trees"], "problem_rating": "2400", "solved_by": "x2552"},
{"url": "https://codeforces.com//problemset/problem/815/B", "name": "Karen and Test", "tags": ["brute force", "combinatorics", "constructive algorithms", "math"], "problem_rating": "2200", "solved_by": "x1369"},
{"url": "https://codeforces.com//problemset/problem/815/A", "name": "Karen and Game", "tags": ["brute force", "greedy", "implementation"], "problem_rating": "1700", "solved_by": "x5595"},
{"url": "https://codeforces.com//problemset/problem/814/E", "name": "An unavoidable detour for home", "tags": ["combinatorics", "dp", "graphs", "shortest paths"], "problem_rating": "2600", "solved_by": "x645"},
{"url": "https://codeforces.com//problemset/problem/814/D", "name": "An overnight dance in discotheque", "tags": ["dfs and similar", "dp", "geometry", "greedy", "trees"], "problem_rating": "2000", "solved_by": "x2189"},
{"url": "https://codeforces.com//problemset/problem/814/C", "name": "An impassioned circulation of affection", "tags": ["brute force", "dp", "strings", "two pointers"], "problem_rating": "1600", "solved_by": "x6405"},
{"url": "https://codeforces.com//problemset/problem/814/B", "name": "An express train to reveries", "tags": ["constructive algorithms"], "problem_rating": "1300", "solved_by": "x5596"},
{"url": "https://codeforces.com//problemset/problem/814/A", "name": "An abandoned sentiment from past", "tags": ["constructive algorithms", "greedy", "implementation", "sortings"], "problem_rating": "900", "solved_by": "x10329"},
{"url": "https://codeforces.com//problemset/problem/813/F", "name": "Bipartite Checking", "tags": ["data structures", "dsu", "graphs"], "problem_rating": "2500", "solved_by": "x1260"},
{"url": "https://codeforces.com//problemset/problem/813/E", "name": "Army Creation", "tags": ["binary search", "data structures"], "problem_rating": "2200", "solved_by": "x2333"},
{"url": "https://codeforces.com//problemset/problem/813/D", "name": "Two Melodies", "tags": ["dp", "flows"], "problem_rating": "2600", "solved_by": "x1010"},
{"url": "https://codeforces.com//problemset/problem/813/C", "name": "The Tag Game", "tags": ["dfs and similar", "graphs"], "problem_rating": "1700", "solved_by": "x5817"},
{"url": "https://codeforces.com//problemset/problem/813/B", "name": "The Golden Age", "tags": ["brute force", "math"], "problem_rating": "1800", "solved_by": "x3873"},
{"url": "https://codeforces.com//problemset/problem/813/A", "name": "The Contest", "tags": ["implementation"], "problem_rating": "1100", "solved_by": "x5053"},
{"url": "https://codeforces.com//problemset/problem/812/E", "name": "Sagheer and Apple Tree", "tags": ["games", "trees"], "problem_rating": "2300", "solved_by": "x1044"},
{"url": "https://codeforces.com//problemset/problem/812/D", "name": "Sagheer and Kindergarten", "tags": ["dfs and similar", "graphs", "implementation", "trees"], "problem_rating": "2700", "solved_by": "x329"},
{"url": "https://codeforces.com//problemset/problem/812/C", "name": "Sagheer and Nubian Market", "tags": ["binary search", "sortings"], "problem_rating": "1500", "solved_by": "x13463"},
{"url": "https://codeforces.com//problemset/problem/812/B", "name": "Sagheer, the Hausmeister", "tags": ["bitmasks", "brute force", "dp"], "problem_rating": "1600", "solved_by": "x5139"},
{"url": "https://codeforces.com//problemset/problem/812/A", "name": "Sagheer and Crossroads", "tags": ["implementation"], "problem_rating": "1200", "solved_by": "x6190"},
{"url": "https://codeforces.com//problemset/problem/811/E", "name": "Vladik and Entertaining Flags", "tags": ["data structures", "dsu", "graphs"], "problem_rating": "2600", "solved_by": "x853"},
{"url": "https://codeforces.com//problemset/problem/811/D", "name": "Vladik and Favorite Game", "tags": ["constructive algorithms", "dfs and similar", "graphs", "interactive"], "problem_rating": "2100", "solved_by": "x1749"},
{"url": "https://codeforces.com//problemset/problem/811/C", "name": "Vladik and Memorable Trip", "tags": ["dp", "implementation"], "problem_rating": "1900", "solved_by": "x3220"},
{"url": "https://codeforces.com//problemset/problem/811/B", "name": "Vladik and Complicated Book", "tags": ["implementation", "sortings"], "problem_rating": "1200", "solved_by": "x6456"},
{"url": "https://codeforces.com//problemset/problem/811/A", "name": "Vladik and Courtesy", "tags": ["brute force", "implementation"], "problem_rating": "800", "solved_by": "x11826"},
{"url": "https://codeforces.com//problemset/problem/810/B", "name": "Summer sell-off", "tags": ["greedy", "sortings"], "problem_rating": "1300", "solved_by": "x11198"},
{"url": "https://codeforces.com//problemset/problem/810/A", "name": "Straight <<A>>", "tags": ["implementation", "math"], "problem_rating": "900", "solved_by": "x8773"},
{"url": "https://codeforces.com//problemset/problem/809/E", "name": "Surprise me!", "tags": ["divide and conquer", "math", "number theory", "trees"], "problem_rating": "3100", "solved_by": "x727"},
{"url": "https://codeforces.com//problemset/problem/809/D", "name": "Hitchhiking in the Baltic States", "tags": ["data structures", "dp"], "problem_rating": "2900", "solved_by": "x813"},
{"url": "https://codeforces.com//problemset/problem/809/C", "name": "Find a car", "tags": ["combinatorics", "divide and conquer", "dp"], "problem_rating": "2600", "solved_by": "x735"},
{"url": "https://codeforces.com//problemset/problem/809/B", "name": "Glad to see you!", "tags": ["binary search", "interactive"], "problem_rating": "2200", "solved_by": "x1649"},
{"url": "https://codeforces.com//problemset/problem/809/A", "name": "Do you want a date?", "tags": ["implementation", "math", "sortings"], "problem_rating": "1500", "solved_by": "x4680"},
{"url": "https://codeforces.com//problemset/problem/808/G", "name": "Anthem of Berland", "tags": ["dp", "strings"], "problem_rating": "2300", "solved_by": "x2536"},
{"url": "https://codeforces.com//problemset/problem/808/F", "name": "Card Game", "tags": ["binary search", "flows", "graphs"], "problem_rating": "2400", "solved_by": "x1135"},
{"url": "https://codeforces.com//problemset/problem/808/E", "name": "Selling Souvenirs", "tags": ["binary search", "dp", "greedy", "ternary search"], "problem_rating": "2300", "solved_by": "x1789"},
{"url": "https://codeforces.com//problemset/problem/808/D", "name": "Array Division", "tags": ["binary search", "data structures", "implementation"], "problem_rating": "1900", "solved_by": "x6882"},
{"url": "https://codeforces.com//problemset/problem/808/C", "name": "Tea Party", "tags": ["constructive algorithms", "greedy", "sortings"], "problem_rating": "1400", "solved_by": "x6057"},
{"url": "https://codeforces.com//problemset/problem/808/B", "name": "Average Sleep Time", "tags": ["data structures", "implementation", "math"], "problem_rating": "1300", "solved_by": "x7094"},
{"url": "https://codeforces.com//problemset/problem/808/A", "name": "Lucky Year", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x9181"},
{"url": "https://codeforces.com//problemset/problem/807/B", "name": "T-Shirt Hunt", "tags": ["brute force", "implementation"], "problem_rating": "1300", "solved_by": "x3531"},
{"url": "https://codeforces.com//problemset/problem/807/A", "name": "Is it rated?", "tags": ["implementation", "sortings"], "problem_rating": "900", "solved_by": "x20076"},
{"url": "https://codeforces.com//problemset/problem/805/B", "name": "3-palindrome", "tags": ["constructive algorithms"], "problem_rating": "1000", "solved_by": "x16521"},
{"url": "https://codeforces.com//problemset/problem/805/A", "name": "Fake NP", "tags": ["greedy", "math"], "problem_rating": "1000", "solved_by": "x17762"},
{"url": "https://codeforces.com//problemset/problem/804/F", "name": "Fake bullions", "tags": ["combinatorics", "dfs and similar", "dp", "graphs", "number theory"], "problem_rating": "3400", "solved_by": "x161"},
{"url": "https://codeforces.com//problemset/problem/804/E", "name": "The same permutation", "tags": ["constructive algorithms"], "problem_rating": "3100", "solved_by": "x412"},
{"url": "https://codeforces.com//problemset/problem/804/D", "name": "Expected diameter of a tree", "tags": ["binary search", "brute force", "dfs and similar", "dp", "sortings", "trees"], "problem_rating": "2500", "solved_by": "x1265"},
{"url": "https://codeforces.com//problemset/problem/804/C", "name": "Ice cream coloring", "tags": ["constructive algorithms", "dfs and similar", "greedy"], "problem_rating": "2200", "solved_by": "x1832"},
{"url": "https://codeforces.com//problemset/problem/804/B", "name": "Minimum number of steps", "tags": ["combinatorics", "greedy", "implementation", "math"], "problem_rating": "1400", "solved_by": "x9584"},
{"url": "https://codeforces.com//problemset/problem/804/A", "name": "Find Amir", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1000", "solved_by": "x15324"},
{"url": "https://codeforces.com//problemset/problem/803/G", "name": "Periodic RMQ Problem", "tags": ["data structures"], "problem_rating": "2300", "solved_by": "x1378"},
{"url": "https://codeforces.com//problemset/problem/803/F", "name": "Coprime Subsequences", "tags": ["bitmasks", "combinatorics", "number theory"], "problem_rating": "2000", "solved_by": "x3116"},
{"url": "https://codeforces.com//problemset/problem/803/E", "name": "Roma and Poker", "tags": ["dp", "graphs"], "problem_rating": "2000", "solved_by": "x2144"},
{"url": "https://codeforces.com//problemset/problem/803/D", "name": "Magazine Ad", "tags": ["binary search", "greedy"], "problem_rating": "1900", "solved_by": "x3174"},
{"url": "https://codeforces.com//problemset/problem/803/C", "name": "Maximal GCD", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1900", "solved_by": "x5012"},
{"url": "https://codeforces.com//problemset/problem/803/B", "name": "Distances to Zero", "tags": ["constructive algorithms"], "problem_rating": "1200", "solved_by": "x6471"},
{"url": "https://codeforces.com//problemset/problem/803/A", "name": "Maximal Binary Matrix", "tags": ["constructive algorithms"], "problem_rating": "1400", "solved_by": "x4772"},
{"url": "https://codeforces.com//problemset/problem/802/O", "name": "April Fools' Problem (hard)", "tags": ["binary search", "data structures", "flows"], "problem_rating": "2900", "solved_by": "x892"},
{"url": "https://codeforces.com//problemset/problem/802/N", "name": "April Fools' Problem (medium)", "tags": ["binary search", "flows", "graphs"], "problem_rating": "2400", "solved_by": "x1154"},
{"url": "https://codeforces.com//problemset/problem/802/M", "name": "April Fools' Problem (easy)", "tags": ["greedy", "sortings"], "problem_rating": "1200", "solved_by": "x3062"},
{"url": "https://codeforces.com//problemset/problem/802/L", "name": "Send the Fool Further! (hard)", "tags": ["dfs and similar", "dp", "math", "trees"], "problem_rating": "2400", "solved_by": "x293"},
{"url": "https://codeforces.com//problemset/problem/802/K", "name": "Send the Fool Further! (medium)", "tags": ["dp", "trees"], "problem_rating": "2100", "solved_by": "x625"},
{"url": "https://codeforces.com//problemset/problem/802/J", "name": "Send the Fool Further! (easy)", "tags": ["dfs and similar", "graphs", "trees"], "problem_rating": "1400", "solved_by": "x4416"},
{"url": "https://codeforces.com//problemset/problem/802/I", "name": "Fake News (hard)", "tags": ["string suffix structures"], "problem_rating": "2300", "solved_by": "x1463"},
{"url": "https://codeforces.com//problemset/problem/802/H", "name": "Fake News (medium)", "tags": ["constructive algorithms", "strings"], "problem_rating": "2200", "solved_by": "x436"},
{"url": "https://codeforces.com//problemset/problem/802/G", "name": "Fake News (easy)", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x6829"},
{"url": "https://codeforces.com//problemset/problem/802/F", "name": "Marmots (hard)", "tags": ["math", "probabilities"], "problem_rating": "2800", "solved_by": "x121"},
{"url": "https://codeforces.com//problemset/problem/802/E", "name": "Marmots (medium)", "tags": ["math"], "problem_rating": "2200", "solved_by": "x240"},
{"url": "https://codeforces.com//problemset/problem/802/D", "name": "Marmots (easy)", "tags": ["math"], "problem_rating": "2100", "solved_by": "x442"},
{"url": "https://codeforces.com//problemset/problem/802/C", "name": "Heidi and Library (hard)", "tags": ["flows"], "problem_rating": "2600", "solved_by": "x549"},
{"url": "https://codeforces.com//problemset/problem/802/B", "name": "Heidi and Library (medium)", "tags": ["data structures", "greedy"], "problem_rating": "1800", "solved_by": "x1104"},
{"url": "https://codeforces.com//problemset/problem/802/A", "name": "Heidi and Library (easy)", "tags": ["greedy"], "problem_rating": "1800", "solved_by": "x1352"},
{"url": "https://codeforces.com//problemset/problem/801/B", "name": "Valued Keys", "tags": ["constructive algorithms", "greedy", "strings"], "problem_rating": "900", "solved_by": "x10148"},
{"url": "https://codeforces.com//problemset/problem/801/A", "name": "Vicious Keyboard", "tags": ["brute force"], "problem_rating": "1100", "solved_by": "x7275"},
{"url": "https://codeforces.com//problemset/problem/799/G", "name": "Cut the pie", "tags": ["binary search", "data structures", "geometry"], "problem_rating": "3500", "solved_by": "x112"},
{"url": "https://codeforces.com//problemset/problem/799/F", "name": "Beautiful fountains rows", "tags": ["data structures"], "problem_rating": "3500", "solved_by": "x428"},
{"url": "https://codeforces.com//problemset/problem/799/E", "name": "Aquarium decoration", "tags": ["data structures", "greedy", "two pointers"], "problem_rating": "2500", "solved_by": "x928"},
{"url": "https://codeforces.com//problemset/problem/799/D", "name": "Field expansion", "tags": ["brute force", "dp", "meet-in-the-middle"], "problem_rating": "2100", "solved_by": "x2009"},
{"url": "https://codeforces.com//problemset/problem/799/C", "name": "Fountains", "tags": ["binary search", "data structures", "implementation"], "problem_rating": "1800", "solved_by": "x3691"},
{"url": "https://codeforces.com//problemset/problem/799/B", "name": "T-shirt buying", "tags": ["data structures", "implementation"], "problem_rating": "1400", "solved_by": "x8648"},
{"url": "https://codeforces.com//problemset/problem/799/A", "name": "Carrot Cakes", "tags": ["brute force", "implementation"], "problem_rating": "1100", "solved_by": "x18381"},
{"url": "https://codeforces.com//problemset/problem/798/E", "name": "Mike and code of a permutation", "tags": ["constructive algorithms", "data structures", "graphs", "sortings"], "problem_rating": "3000", "solved_by": "x469"},
{"url": "https://codeforces.com//problemset/problem/798/D", "name": "Mike and distribution", "tags": ["constructive algorithms", "sortings"], "problem_rating": "2400", "solved_by": "x1869"},
{"url": "https://codeforces.com//problemset/problem/798/C", "name": "Mike and gcd problem", "tags": ["dp", "greedy", "number theory"], "problem_rating": "1700", "solved_by": "x5738"},
{"url": "https://codeforces.com//problemset/problem/798/B", "name": "Mike and strings", "tags": ["brute force", "dp", "strings"], "problem_rating": "1300", "solved_by": "x8330"},
{"url": "https://codeforces.com//problemset/problem/798/A", "name": "Mike and palindrome", "tags": ["brute force", "constructive algorithms", "strings"], "problem_rating": "1000", "solved_by": "x21378"},
{"url": "https://codeforces.com//problemset/problem/797/F", "name": "Mice and Holes", "tags": ["data structures", "dp", "greedy", "sortings"], "problem_rating": "2600", "solved_by": "x1149"},
{"url": "https://codeforces.com//problemset/problem/797/E", "name": "Array Queries", "tags": ["brute force", "data structures", "dp"], "problem_rating": "2000", "solved_by": "x4206"},
{"url": "https://codeforces.com//problemset/problem/797/D", "name": "Broken BST", "tags": ["data structures", "dfs and similar"], "problem_rating": "2100", "solved_by": "x1786"},
{"url": "https://codeforces.com//problemset/problem/797/C", "name": "Minimal string", "tags": ["data structures", "greedy", "strings"], "problem_rating": "1700", "solved_by": "x6510"},
{"url": "https://codeforces.com//problemset/problem/797/B", "name": "Odd sum", "tags": ["dp", "greedy", "implementation"], "problem_rating": "1400", "solved_by": "x10370"},
{"url": "https://codeforces.com//problemset/problem/797/A", "name": "k-Factorization", "tags": ["implementation", "math", "number theory"], "problem_rating": "1100", "solved_by": "x14674"},
{"url": "https://codeforces.com//problemset/problem/796/F", "name": "Sequence Recovery", "tags": ["bitmasks", "data structures", "greedy"], "problem_rating": "2800", "solved_by": "x176"},
{"url": "https://codeforces.com//problemset/problem/796/E", "name": "Exam Cheating", "tags": ["binary search", "dp"], "problem_rating": "2400", "solved_by": "x646"},
{"url": "https://codeforces.com//problemset/problem/796/D", "name": "Police Stations", "tags": ["constructive algorithms", "dfs and similar", "dp", "graphs", "shortest paths", "trees"], "problem_rating": "2100", "solved_by": "x5478"},
{"url": "https://codeforces.com//problemset/problem/796/C", "name": "Bank Hacking", "tags": ["constructive algorithms", "data structures", "dp", "trees"], "problem_rating": "1900", "solved_by": "x3003"},
{"url": "https://codeforces.com//problemset/problem/796/B", "name": "Find The Bone", "tags": ["implementation"], "problem_rating": "1300", "solved_by": "x9009"},
{"url": "https://codeforces.com//problemset/problem/796/A", "name": "Buying A House", "tags": ["brute force", "implementation"], "problem_rating": "800", "solved_by": "x12924"},
{"url": "https://codeforces.com//problemset/problem/794/G", "name": "Replace All", "tags": ["combinatorics", "dp", "math"], "problem_rating": "3400", "solved_by": "x331"},
{"url": "https://codeforces.com//problemset/problem/794/F", "name": "Leha and security system", "tags": ["data structures"], "problem_rating": "2800", "solved_by": "x798"},
{"url": "https://codeforces.com//problemset/problem/794/E", "name": "Choosing Carrot", "tags": ["games", "math"], "problem_rating": "2800", "solved_by": "x774"},
{"url": "https://codeforces.com//problemset/problem/794/D", "name": "Labelling Cities", "tags": ["dfs and similar", "graphs", "hashing"], "problem_rating": "2400", "solved_by": "x800"},
{"url": "https://codeforces.com//problemset/problem/794/C", "name": "Naming Company", "tags": ["games", "greedy", "sortings"], "problem_rating": "1800", "solved_by": "x3073"},
{"url": "https://codeforces.com//problemset/problem/794/B", "name": "Cutting Carrot", "tags": ["geometry", "math"], "problem_rating": "1200", "solved_by": "x6432"},
{"url": "https://codeforces.com//problemset/problem/794/A", "name": "Bank Robbery", "tags": ["brute force", "implementation"], "problem_rating": "800", "solved_by": "x6966"},
{"url": "https://codeforces.com//problemset/problem/793/G", "name": "Oleg and chess", "tags": ["data structures", "divide and conquer", "flows", "graph matchings"], "problem_rating": "3400", "solved_by": "x373"},
{"url": "https://codeforces.com//problemset/problem/793/F", "name": "Julia the snail", "tags": ["data structures", "divide and conquer", "dp"], "problem_rating": "3000", "solved_by": "x537"},
{"url": "https://codeforces.com//problemset/problem/793/E", "name": "Problem of offices", "tags": ["constructive algorithms", "dfs and similar", "dp", "trees"], "problem_rating": "2900", "solved_by": "x245"},
{"url": "https://codeforces.com//problemset/problem/793/D", "name": "Presents in Bankopolis", "tags": ["dp", "graphs", "shortest paths"], "problem_rating": "2100", "solved_by": "x1587"},
{"url": "https://codeforces.com//problemset/problem/793/C", "name": "Mice problem", "tags": ["geometry", "implementation", "math", "sortings"], "problem_rating": "2300", "solved_by": "x1241"},
{"url": "https://codeforces.com//problemset/problem/793/B", "name": "Igor and his way to work", "tags": ["dfs and similar", "graphs", "implementation", "shortest paths"], "problem_rating": "1600", "solved_by": "x4398"},
{"url": "https://codeforces.com//problemset/problem/793/A", "name": "Oleg and shares", "tags": ["implementation", "math"], "problem_rating": "900", "solved_by": "x6674"},
{"url": "https://codeforces.com//problemset/problem/792/F", "name": "Mages and Monsters", "tags": ["data structures", "geometry"], "problem_rating": "3100", "solved_by": "x202"},
{"url": "https://codeforces.com//problemset/problem/792/E", "name": "Colored Balls", "tags": ["greedy", "math", "number theory"], "problem_rating": "2500", "solved_by": "x1059"},
{"url": "https://codeforces.com//problemset/problem/792/D", "name": "Paths in a Complete Binary Tree", "tags": ["bitmasks", "trees"], "problem_rating": "1900", "solved_by": "x2970"},
{"url": "https://codeforces.com//problemset/problem/792/C", "name": "Divide by Three", "tags": ["dp", "greedy", "math", "number theory"], "problem_rating": "2000", "solved_by": "x4313"},
{"url": "https://codeforces.com//problemset/problem/792/B", "name": "Counting-out Rhyme", "tags": ["implementation"], "problem_rating": "1300", "solved_by": "x5951"},
{"url": "https://codeforces.com//problemset/problem/792/A", "name": "New Bus Route", "tags": ["implementation", "sortings"], "problem_rating": "1100", "solved_by": "x8859"},
{"url": "https://codeforces.com//problemset/problem/791/A", "name": "Bear and Big Brother", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x186069"},
{"url": "https://codeforces.com//problemset/problem/789/B", "name": "Masha and geometric depression", "tags": ["brute force", "implementation", "math"], "problem_rating": "1700", "solved_by": "x4362"},
{"url": "https://codeforces.com//problemset/problem/789/A", "name": "Anastasia and pebbles", "tags": ["implementation", "math"], "problem_rating": "1100", "solved_by": "x9269"},
{"url": "https://codeforces.com//problemset/problem/788/E", "name": "New task", "tags": ["data structures"], "problem_rating": "2900", "solved_by": "x334"},
{"url": "https://codeforces.com//problemset/problem/788/D", "name": "Finding lines", "tags": ["constructive algorithms", "divide and conquer", "interactive"], "problem_rating": "3000", "solved_by": "x361"},
{"url": "https://codeforces.com//problemset/problem/788/C", "name": "The Great Mixing", "tags": ["dfs and similar", "graphs", "shortest paths"], "problem_rating": "2300", "solved_by": "x2086"},
{"url": "https://codeforces.com//problemset/problem/788/B", "name": "Weird journey", "tags": ["combinatorics", "constructive algorithms", "dfs and similar", "dsu", "graphs"], "problem_rating": "2100", "solved_by": "x2501"},
{"url": "https://codeforces.com//problemset/problem/788/A", "name": "Functions again", "tags": ["dp", "two pointers"], "problem_rating": "1600", "solved_by": "x9027"},
{"url": "https://codeforces.com//problemset/problem/787/B", "name": "Not Afraid", "tags": ["greedy", "implementation", "math"], "problem_rating": "1300", "solved_by": "x5584"},
{"url": "https://codeforces.com//problemset/problem/787/A", "name": "The Monster", "tags": ["brute force", "math", "number theory"], "problem_rating": "1200", "solved_by": "x11242"},
{"url": "https://codeforces.com//problemset/problem/786/E", "name": "ALT", "tags": ["data structures", "flows", "graphs", "trees"], "problem_rating": "3200", "solved_by": "x610"},
{"url": "https://codeforces.com//problemset/problem/786/D", "name": "Rap God", "tags": ["data structures", "dfs and similar", "hashing", "strings", "trees"], "problem_rating": "3400", "solved_by": "x139"},
{"url": "https://codeforces.com//problemset/problem/786/C", "name": "Till I Collapse", "tags": ["data structures", "divide and conquer"], "problem_rating": "2400", "solved_by": "x2636"},
{"url": "https://codeforces.com//problemset/problem/786/B", "name": "Legacy", "tags": ["data structures", "graphs", "shortest paths"], "problem_rating": "2300", "solved_by": "x5734"},
{"url": "https://codeforces.com//problemset/problem/786/A", "name": "Berzerk", "tags": ["dfs and similar", "dp", "games"], "problem_rating": "2000", "solved_by": "x2515"},
{"url": "https://codeforces.com//problemset/problem/785/E", "name": "Anton and Permutation", "tags": ["brute force", "data structures"], "problem_rating": "2200", "solved_by": "x1857"},
{"url": "https://codeforces.com//problemset/problem/785/D", "name": "Anton and School - 2", "tags": ["combinatorics", "dp", "math", "number theory"], "problem_rating": "2300", "solved_by": "x2746"},
{"url": "https://codeforces.com//problemset/problem/785/C", "name": "Anton and Fairy Tale", "tags": ["binary search", "math"], "problem_rating": "1600", "solved_by": "x7274"},
{"url": "https://codeforces.com//problemset/problem/785/B", "name": "Anton and Classes", "tags": ["greedy", "sortings"], "problem_rating": "1100", "solved_by": "x10173"},
{"url": "https://codeforces.com//problemset/problem/785/A", "name": "Anton and Polyhedrons", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x85474"},
{"url": "https://codeforces.com//problemset/problem/784/G", "name": "BF Calculator", "tags": ["*special problem"], "problem_rating": "2000", "solved_by": "x737"},
{"url": "https://codeforces.com//problemset/problem/784/F", "name": "Crunching Numbers Just for You", "tags": ["*special problem", "implementation"], "problem_rating": "1900", "solved_by": "x1034"},
{"url": "https://codeforces.com//problemset/problem/784/E", "name": "Twisted Circuit", "tags": ["*special problem", "brute force", "implementation"], "problem_rating": "2000", "solved_by": "x1921"},
{"url": "https://codeforces.com//problemset/problem/784/D", "name": "Touchy-Feely Palindromes", "tags": ["*special problem", "implementation"], "problem_rating": "1900", "solved_by": "x444"},
{"url": "https://codeforces.com//problemset/problem/784/C", "name": "INTERCALC", "tags": ["*special problem", "implementation"], "problem_rating": "1800", "solved_by": "x708"},
{"url": "https://codeforces.com//problemset/problem/784/B", "name": "Kids' Riddle", "tags": ["*special problem"], "problem_rating": "2000", "solved_by": "x850"},
{"url": "https://codeforces.com//problemset/problem/784/A", "name": "Numbers Joke", "tags": ["*special problem"], "problem_rating": "1700", "solved_by": "x3161"},
{"url": "https://codeforces.com//problemset/problem/780/H", "name": "Intranet of Buses", "tags": ["binary search", "geometry", "implementation", "two pointers"], "problem_rating": "3100", "solved_by": "x118"},
{"url": "https://codeforces.com//problemset/problem/780/G", "name": "Andryusha and Nervous Barriers", "tags": ["data structures", "dp"], "problem_rating": "2700", "solved_by": "x652"},
{"url": "https://codeforces.com//problemset/problem/780/F", "name": "Axel and Marston in Bitland", "tags": ["bitmasks", "dp", "graphs", "matrices"], "problem_rating": "2400", "solved_by": "x1033"},
{"url": "https://codeforces.com//problemset/problem/780/E", "name": "Underground Lab", "tags": ["constructive algorithms", "dfs and similar", "graphs"], "problem_rating": "2100", "solved_by": "x2524"},
{"url": "https://codeforces.com//problemset/problem/780/D", "name": "Innokenty and a Football League", "tags": ["2-sat", "graphs", "greedy", "implementation", "shortest paths", "strings"], "problem_rating": "1900", "solved_by": "x2853"},
{"url": "https://codeforces.com//problemset/problem/780/C", "name": "Andryusha and Colored Balloons", "tags": ["dfs and similar", "graphs", "greedy", "trees"], "problem_rating": "1600", "solved_by": "x8957"},
{"url": "https://codeforces.com//problemset/problem/780/B", "name": "The Meeting Place Cannot Be Changed", "tags": ["binary search"], "problem_rating": "1600", "solved_by": "x9250"},
{"url": "https://codeforces.com//problemset/problem/780/A", "name": "Andryusha and Socks", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x19115"},
{"url": "https://codeforces.com//problemset/problem/779/C", "name": "Dishonest Sellers", "tags": ["constructive algorithms", "greedy", "sortings"], "problem_rating": "1200", "solved_by": "x11704"},
{"url": "https://codeforces.com//problemset/problem/779/B", "name": "Weird Rounding", "tags": ["brute force", "greedy"], "problem_rating": "1100", "solved_by": "x10264"},
{"url": "https://codeforces.com//problemset/problem/779/A", "name": "Pupils Redistribution", "tags": ["constructive algorithms", "math"], "problem_rating": "1000", "solved_by": "x9270"},
{"url": "https://codeforces.com//problemset/problem/778/E", "name": "Selling Numbers", "tags": ["dp", "sortings"], "problem_rating": "3000", "solved_by": "x304"},
{"url": "https://codeforces.com//problemset/problem/778/D", "name": "Parquet Re-laying", "tags": ["constructive algorithms"], "problem_rating": "2700", "solved_by": "x500"},
{"url": "https://codeforces.com//problemset/problem/778/C", "name": "Peterson Polyglot", "tags": ["brute force", "dfs and similar", "dsu", "hashing", "strings", "trees"], "problem_rating": "2500", "solved_by": "x872"},
{"url": "https://codeforces.com//problemset/problem/778/B", "name": "Bitwise Formula", "tags": ["bitmasks", "brute force", "dfs and similar", "expression parsing", "implementation"], "problem_rating": "1800", "solved_by": "x2286"},
{"url": "https://codeforces.com//problemset/problem/778/A", "name": "String Game", "tags": ["binary search", "greedy", "strings"], "problem_rating": "1700", "solved_by": "x11319"},
{"url": "https://codeforces.com//problemset/problem/777/E", "name": "Hanoi Factory", "tags": ["brute force", "data structures", "dp", "greedy", "sortings"], "problem_rating": "2000", "solved_by": "x3944"},
{"url": "https://codeforces.com//problemset/problem/777/D", "name": "Cloud of Hashtags", "tags": ["binary search", "greedy", "implementation", "strings"], "problem_rating": "1800", "solved_by": "x4959"},
{"url": "https://codeforces.com//problemset/problem/777/C", "name": "Alyona and Spreadsheet", "tags": ["binary search", "data structures", "dp", "greedy", "implementation", "two pointers"], "problem_rating": "1600", "solved_by": "x6323"},
{"url": "https://codeforces.com//problemset/problem/777/B", "name": "Game of Credit Cards", "tags": ["data structures", "dp", "greedy", "sortings"], "problem_rating": "1300", "solved_by": "x9389"},
{"url": "https://codeforces.com//problemset/problem/777/A", "name": "Shell Game", "tags": ["constructive algorithms", "implementation", "math"], "problem_rating": "1000", "solved_by": "x10102"},
{"url": "https://codeforces.com//problemset/problem/776/G", "name": "Sherlock and the Encrypted Data", "tags": ["bitmasks", "combinatorics", "dp"], "problem_rating": "2900", "solved_by": "x335"},
{"url": "https://codeforces.com//problemset/problem/776/F", "name": "Sherlock's bet to Moriarty", "tags": ["constructive algorithms", "data structures", "divide and conquer", "geometry", "graphs", "implementation", "trees"], "problem_rating": "2800", "solved_by": "x427"},
{"url": "https://codeforces.com//problemset/problem/776/E", "name": "The Holmes Children", "tags": ["math", "number theory"], "problem_rating": "2100", "solved_by": "x2128"},
{"url": "https://codeforces.com//problemset/problem/776/D", "name": "The Door Problem", "tags": ["2-sat", "dfs and similar", "dsu", "graphs"], "problem_rating": "2000", "solved_by": "x4941"},
{"url": "https://codeforces.com//problemset/problem/776/C", "name": "Molly's Chemicals", "tags": ["binary search", "brute force", "data structures", "implementation", "math"], "problem_rating": "1800", "solved_by": "x5851"},
{"url": "https://codeforces.com//problemset/problem/776/B", "name": "Sherlock and his girlfriend", "tags": ["constructive algorithms", "number theory"], "problem_rating": "1200", "solved_by": "x20116"},
{"url": "https://codeforces.com//problemset/problem/776/A", "name": "A Serial Killer", "tags": ["brute force", "implementation", "strings"], "problem_rating": "900", "solved_by": "x11942"},
{"url": "https://codeforces.com//problemset/problem/775/A", "name": "University Schedule", "tags": ["*special problem"], "problem_rating": "2900", "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/774/L", "name": "Bars", "tags": ["*special problem", "binary search"], "problem_rating": "2000", "solved_by": "x331"},
{"url": "https://codeforces.com//problemset/problem/774/K", "name": "Stepan and Vowels", "tags": ["*special problem", "implementation", "strings"], "problem_rating": "1600", "solved_by": "x1262"},
{"url": "https://codeforces.com//problemset/problem/774/J", "name": "Stepan's Series", "tags": ["*special problem", "dp"], "problem_rating": "2000", "solved_by": "x356"},
{"url": "https://codeforces.com//problemset/problem/774/I", "name": "Composing Of String", "tags": ["*special problem", "dp"], "problem_rating": "2300", "solved_by": "x101"},
{"url": "https://codeforces.com//problemset/problem/774/H", "name": "Repairing Of String", "tags": ["*special problem", "constructive algorithms"], "problem_rating": "2200", "solved_by": "x255"},
{"url": "https://codeforces.com//problemset/problem/774/G", "name": "Perfectionist Arkadiy", "tags": ["*special problem", "number theory"], "problem_rating": "2700", "solved_by": "x176"},
{"url": "https://codeforces.com//problemset/problem/774/F", "name": "Pens And Days Of Week", "tags": ["*special problem", "binary search", "number theory"], "problem_rating": "2700", "solved_by": "x106"},
{"url": "https://codeforces.com//problemset/problem/774/E", "name": "Big Number and Remainder", "tags": ["*special problem", "math", "number theory"], "problem_rating": "2300", "solved_by": "x210"},
{"url": "https://codeforces.com//problemset/problem/774/D", "name": "Lie or Truth", "tags": ["*special problem", "constructive algorithms", "implementation", "sortings"], "problem_rating": "1500", "solved_by": "x1932"},
{"url": "https://codeforces.com//problemset/problem/774/C", "name": "Maximum Number", "tags": ["*special problem", "constructive algorithms", "greedy", "implementation"], "problem_rating": "1200", "solved_by": "x4060"},
{"url": "https://codeforces.com//problemset/problem/774/B", "name": "Significant Cups", "tags": ["*special problem", "binary search", "data structures", "two pointers"], "problem_rating": "2100", "solved_by": "x217"},
{"url": "https://codeforces.com//problemset/problem/774/A", "name": "Amusement Park", "tags": ["*special problem", "ternary search"], "problem_rating": "2100", "solved_by": "x297"},
{"url": "https://codeforces.com//problemset/problem/773/F", "name": "Test Data Generation", "tags": ["combinatorics", "divide and conquer", "dp", "fft", "math", "number theory"], "problem_rating": "3400", "solved_by": "x187"},
{"url": "https://codeforces.com//problemset/problem/773/E", "name": "Blog Post Rating", "tags": ["data structures", "sortings"], "problem_rating": "3000", "solved_by": "x350"},
{"url": "https://codeforces.com//problemset/problem/773/D", "name": "Perishable Roads", "tags": ["dp", "graphs", "shortest paths"], "problem_rating": "2700", "solved_by": "x584"},
{"url": "https://codeforces.com//problemset/problem/773/C", "name": "Prairie Partition", "tags": ["binary search", "constructive algorithms", "greedy", "math"], "problem_rating": "2200", "solved_by": "x944"},
{"url": "https://codeforces.com//problemset/problem/773/B", "name": "Dynamic Problem Scoring", "tags": ["brute force", "greedy"], "problem_rating": "2000", "solved_by": "x1146"},
{"url": "https://codeforces.com//problemset/problem/773/A", "name": "Success Rate", "tags": ["binary search", "math"], "problem_rating": "1700", "solved_by": "x4418"},
{"url": "https://codeforces.com//problemset/problem/772/E", "name": "Verifying Kingdom", "tags": ["binary search", "divide and conquer", "interactive", "trees"], "problem_rating": "3200", "solved_by": "x125"},
{"url": "https://codeforces.com//problemset/problem/772/D", "name": "Varying Kibibits", "tags": ["bitmasks", "dp"], "problem_rating": "2700", "solved_by": "x583"},
{"url": "https://codeforces.com//problemset/problem/772/C", "name": "Vulnerable Kerbals", "tags": ["constructive algorithms", "dp", "graphs", "math", "number theory"], "problem_rating": "2300", "solved_by": "x1240"},
{"url": "https://codeforces.com//problemset/problem/772/B", "name": "Volatile Kite", "tags": ["geometry"], "problem_rating": "1800", "solved_by": "x3155"},
{"url": "https://codeforces.com//problemset/problem/772/A", "name": "Voltage Keepsake", "tags": ["binary search", "math"], "problem_rating": "1800", "solved_by": "x4181"},
{"url": "https://codeforces.com//problemset/problem/771/F", "name": "Bear and Isomorphic Points", "tags": ["geometry", "two pointers"], "problem_rating": "3300", "solved_by": "x80"},
{"url": "https://codeforces.com//problemset/problem/771/E", "name": "Bear and Rectangle Strips", "tags": ["dp", "greedy"], "problem_rating": "3000", "solved_by": "x446"},
{"url": "https://codeforces.com//problemset/problem/771/D", "name": "Bear and Company", "tags": ["dp"], "problem_rating": "2500", "solved_by": "x1170"},
{"url": "https://codeforces.com//problemset/problem/771/C", "name": "Bear and Tree Jumps", "tags": ["dfs and similar", "dp", "trees"], "problem_rating": "2100", "solved_by": "x2923"},
{"url": "https://codeforces.com//problemset/problem/771/B", "name": "Bear and Different Names", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1500", "solved_by": "x6707"},
{"url": "https://codeforces.com//problemset/problem/771/A", "name": "Bear and Friendship Condition", "tags": ["dfs and similar", "dsu", "graphs"], "problem_rating": "1500", "solved_by": "x14982"},
{"url": "https://codeforces.com//problemset/problem/770/D", "name": "Draw Brackets!", "tags": ["*special problem", "implementation"], "problem_rating": "1400", "solved_by": "x1569"},
{"url": "https://codeforces.com//problemset/problem/770/C", "name": "Online Courses In BSU", "tags": ["*special problem", "dfs and similar", "graphs", "implementation"], "problem_rating": "1500", "solved_by": "x2577"},
{"url": "https://codeforces.com//problemset/problem/770/B", "name": "Maximize Sum of Digits", "tags": ["*special problem", "implementation", "math"], "problem_rating": "1300", "solved_by": "x2771"},
{"url": "https://codeforces.com//problemset/problem/770/A", "name": "New Password", "tags": ["*special problem", "implementation"], "problem_rating": "800", "solved_by": "x19283"},
{"url": "https://codeforces.com//problemset/problem/769/D", "name": "k-Interesting Pairs Of Integers", "tags": ["*special problem", "bitmasks", "brute force", "meet-in-the-middle"], "problem_rating": "1700", "solved_by": "x2270"},
{"url": "https://codeforces.com//problemset/problem/769/C", "name": "Cycle In Maze", "tags": ["*special problem", "dfs and similar", "graphs", "greedy", "shortest paths"], "problem_rating": "1700", "solved_by": "x2192"},
{"url": "https://codeforces.com//problemset/problem/769/B", "name": "News About Credit", "tags": ["*special problem", "greedy", "two pointers"], "problem_rating": "1200", "solved_by": "x3266"},
{"url": "https://codeforces.com//problemset/problem/769/A", "name": "Year of University Entrance", "tags": ["*special problem", "implementation", "sortings"], "problem_rating": "800", "solved_by": "x5632"},
{"url": "https://codeforces.com//problemset/problem/768/G", "name": "The Winds of Winter", "tags": ["binary search", "data structures"], "problem_rating": "3300", "solved_by": "x356"},
{"url": "https://codeforces.com//problemset/problem/768/F", "name": "Barrels and boxes", "tags": ["brute force", "combinatorics", "math", "number theory", "probabilities"], "problem_rating": "2300", "solved_by": "x1009"},
{"url": "https://codeforces.com//problemset/problem/768/E", "name": "Game of Stones", "tags": ["bitmasks", "dp", "games"], "problem_rating": "2100", "solved_by": "x2851"},
{"url": "https://codeforces.com//problemset/problem/768/D", "name": "Jon and Orbs", "tags": ["dp", "math", "probabilities"], "problem_rating": "2200", "solved_by": "x2815"},
{"url": "https://codeforces.com//problemset/problem/768/C", "name": "Jon Snow and his Favourite Number", "tags": ["brute force", "dp", "implementation", "sortings"], "problem_rating": "1800", "solved_by": "x3782"},
{"url": "https://codeforces.com//problemset/problem/768/B", "name": "Code For 1", "tags": ["constructive algorithms", "dfs and similar", "divide and conquer"], "problem_rating": "1600", "solved_by": "x5889"},
{"url": "https://codeforces.com//problemset/problem/768/A", "name": "Oath of the Night's Watch", "tags": ["constructive algorithms", "sortings"], "problem_rating": "900", "solved_by": "x26808"},
{"url": "https://codeforces.com//problemset/problem/767/E", "name": "Change-free", "tags": ["greedy"], "problem_rating": "2400", "solved_by": "x958"},
{"url": "https://codeforces.com//problemset/problem/767/D", "name": "Cartons of milk", "tags": ["binary search", "data structures", "greedy", "sortings", "two pointers"], "problem_rating": "2100", "solved_by": "x2210"},
{"url": "https://codeforces.com//problemset/problem/767/C", "name": "Garland", "tags": ["dfs and similar", "graphs", "greedy", "trees"], "problem_rating": "2000", "solved_by": "x4063"},
{"url": "https://codeforces.com//problemset/problem/767/B", "name": "The Queue", "tags": ["brute force", "greedy"], "problem_rating": "2100", "solved_by": "x2116"},
{"url": "https://codeforces.com//problemset/problem/767/A", "name": "Snacktower", "tags": ["data structures", "implementation"], "problem_rating": "1100", "solved_by": "x19705"},
{"url": "https://codeforces.com//problemset/problem/766/E", "name": "Mahmoud and a xor trip", "tags": ["bitmasks", "constructive algorithms", "data structures", "dfs and similar", "dp", "math", "trees"], "problem_rating": "2100", "solved_by": "x2918"},
{"url": "https://codeforces.com//problemset/problem/766/D", "name": "Mahmoud and a Dictionary", "tags": ["data structures", "dfs and similar", "dp", "dsu", "graphs"], "problem_rating": "2000", "solved_by": "x3324"},
{"url": "https://codeforces.com//problemset/problem/766/C", "name": "Mahmoud and a Message", "tags": ["brute force", "dp", "greedy", "strings"], "problem_rating": "1700", "solved_by": "x4357"},
{"url": "https://codeforces.com//problemset/problem/766/B", "name": "Mahmoud and a Triangle", "tags": ["constructive algorithms", "geometry", "greedy", "math", "number theory", "sortings"], "problem_rating": "1000", "solved_by": "x32014"},
{"url": "https://codeforces.com//problemset/problem/766/A", "name": "Mahmoud and Longest Uncommon Subsequence", "tags": ["constructive algorithms", "strings"], "problem_rating": "1000", "solved_by": "x29661"},
{"url": "https://codeforces.com//problemset/problem/765/G", "name": "Math, math everywhere", "tags": ["brute force", "dp", "math", "meet-in-the-middle", "number theory"], "problem_rating": "3200", "solved_by": "x84"},
{"url": "https://codeforces.com//problemset/problem/765/F", "name": "Souvenirs", "tags": ["data structures"], "problem_rating": "3100", "solved_by": "x1951"},
{"url": "https://codeforces.com//problemset/problem/765/E", "name": "Tree Folding", "tags": ["dfs and similar", "dp", "greedy", "implementation", "trees"], "problem_rating": "2200", "solved_by": "x1259"},
{"url": "https://codeforces.com//problemset/problem/765/D", "name": "Artsem and Saunders", "tags": ["constructive algorithms", "dsu", "math"], "problem_rating": "1700", "solved_by": "x2457"},
{"url": "https://codeforces.com//problemset/problem/765/C", "name": "Table Tennis Game 2", "tags": ["math"], "problem_rating": "1200", "solved_by": "x6887"},
{"url": "https://codeforces.com//problemset/problem/765/B", "name": "Code obfuscation", "tags": ["greedy", "implementation", "strings"], "problem_rating": "1100", "solved_by": "x7069"},
{"url": "https://codeforces.com//problemset/problem/765/A", "name": "Neverending competitions", "tags": ["implementation", "math"], "problem_rating": "900", "solved_by": "x8934"},
{"url": "https://codeforces.com//problemset/problem/764/B", "name": "Timofey and cubes", "tags": ["constructive algorithms", "implementation"], "problem_rating": "900", "solved_by": "x11732"},
{"url": "https://codeforces.com//problemset/problem/764/A", "name": "Taymyr is calling you", "tags": ["brute force", "implementation", "math"], "problem_rating": "800", "solved_by": "x16147"},
{"url": "https://codeforces.com//problemset/problem/763/E", "name": "Timofey and our friends animals", "tags": ["data structures", "divide and conquer", "dsu"], "problem_rating": "2900", "solved_by": "x486"},
{"url": "https://codeforces.com//problemset/problem/763/D", "name": "Timofey and a flat tree", "tags": ["data structures", "graphs", "hashing", "shortest paths", "trees"], "problem_rating": "2900", "solved_by": "x528"},
{"url": "https://codeforces.com//problemset/problem/763/C", "name": "Timofey and remoduling", "tags": ["brute force", "implementation", "math", "number theory"], "problem_rating": "2600", "solved_by": "x706"},
{"url": "https://codeforces.com//problemset/problem/763/B", "name": "Timofey and rectangles", "tags": ["constructive algorithms", "geometry"], "problem_rating": "2100", "solved_by": "x2783"},
{"url": "https://codeforces.com//problemset/problem/763/A", "name": "Timofey and a tree", "tags": ["dfs and similar", "dp", "dsu", "graphs", "implementation", "trees"], "problem_rating": "1600", "solved_by": "x10340"},
{"url": "https://codeforces.com//problemset/problem/762/F", "name": "Tree nesting", "tags": ["combinatorics", "graphs", "trees"], "problem_rating": "2800", "solved_by": "x367"},
{"url": "https://codeforces.com//problemset/problem/762/E", "name": "Radio stations", "tags": ["binary search", "data structures"], "problem_rating": "2200", "solved_by": "x1341"},
{"url": "https://codeforces.com//problemset/problem/762/D", "name": "Maximum path", "tags": ["dp", "greedy", "implementation"], "problem_rating": "2300", "solved_by": "x1383"},
{"url": "https://codeforces.com//problemset/problem/762/C", "name": "Two strings", "tags": ["binary search", "hashing", "strings", "two pointers"], "problem_rating": "2100", "solved_by": "x2449"},
{"url": "https://codeforces.com//problemset/problem/762/B", "name": "USB vs. PS/2", "tags": ["greedy", "implementation", "sortings", "two pointers"], "problem_rating": "1400", "solved_by": "x7844"},
{"url": "https://codeforces.com//problemset/problem/762/A", "name": "k-th divisor", "tags": ["math", "number theory"], "problem_rating": "1400", "solved_by": "x18935"},
{"url": "https://codeforces.com//problemset/problem/761/F", "name": "Dasha and Photos", "tags": ["brute force", "data structures", "dp", "implementation"], "problem_rating": "2600", "solved_by": "x408"},
{"url": "https://codeforces.com//problemset/problem/761/E", "name": "Dasha and Puzzle", "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy", "trees"], "problem_rating": "2000", "solved_by": "x2082"},
{"url": "https://codeforces.com//problemset/problem/761/D", "name": "Dasha and Very Difficult Problem", "tags": ["binary search", "brute force", "constructive algorithms", "greedy", "sortings"], "problem_rating": "1700", "solved_by": "x3953"},
{"url": "https://codeforces.com//problemset/problem/761/C", "name": "Dasha and Password", "tags": ["brute force", "dp", "implementation"], "problem_rating": "1500", "solved_by": "x5856"},
{"url": "https://codeforces.com//problemset/problem/761/B", "name": "Dasha and friends", "tags": ["brute force", "implementation", "math"], "problem_rating": "1300", "solved_by": "x6829"},
{"url": "https://codeforces.com//problemset/problem/761/A", "name": "Dasha and Stairs", "tags": ["brute force", "constructive algorithms", "implementation", "math"], "problem_rating": "1000", "solved_by": "x14402"},
{"url": "https://codeforces.com//problemset/problem/760/B", "name": "Frodo and pillows", "tags": ["binary search", "greedy"], "problem_rating": "1500", "solved_by": "x6399"},
{"url": "https://codeforces.com//problemset/problem/760/A", "name": "Petr and a calendar", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x7838"},
{"url": "https://codeforces.com//problemset/problem/758/F", "name": "Geometrical Progression", "tags": ["brute force", "math", "number theory"], "problem_rating": "2400", "solved_by": "x623"},
{"url": "https://codeforces.com//problemset/problem/758/E", "name": "Broken Tree", "tags": ["dfs and similar", "dp", "graphs", "greedy", "trees"], "problem_rating": "2600", "solved_by": "x474"},
{"url": "https://codeforces.com//problemset/problem/758/D", "name": "Ability To Convert", "tags": ["constructive algorithms", "dp", "greedy", "math", "strings"], "problem_rating": "2000", "solved_by": "x2695"},
{"url": "https://codeforces.com//problemset/problem/758/C", "name": "Unfair Poll", "tags": ["binary search", "constructive algorithms", "implementation", "math"], "problem_rating": "1700", "solved_by": "x3847"},
{"url": "https://codeforces.com//problemset/problem/758/B", "name": "Blown Garland", "tags": ["brute force", "implementation", "number theory"], "problem_rating": "1100", "solved_by": "x10135"},
{"url": "https://codeforces.com//problemset/problem/758/A", "name": "Holiday Of Equality", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x59099"},
{"url": "https://codeforces.com//problemset/problem/757/G", "name": "Can Bash Save the Day?", "tags": ["data structures", "divide and conquer", "graphs", "trees"], "problem_rating": "3400", "solved_by": "x492"},
{"url": "https://codeforces.com//problemset/problem/757/F", "name": "Team Rocket Rises Again", "tags": ["data structures", "graphs", "shortest paths"], "problem_rating": "2800", "solved_by": "x1136"},
{"url": "https://codeforces.com//problemset/problem/757/E", "name": "Bash Plays with Functions", "tags": ["brute force", "combinatorics", "dp", "number theory"], "problem_rating": "2500", "solved_by": "x1294"},
{"url": "https://codeforces.com//problemset/problem/757/D", "name": "Felicity's Big Secret Revealed", "tags": ["bitmasks", "dp"], "problem_rating": "2200", "solved_by": "x1383"},
{"url": "https://codeforces.com//problemset/problem/757/C", "name": "Felicity is Coming!", "tags": ["data structures", "hashing", "sortings", "strings"], "problem_rating": "1900", "solved_by": "x2324"},
{"url": "https://codeforces.com//problemset/problem/757/B", "name": "Bash's Big Day", "tags": ["greedy", "math", "number theory"], "problem_rating": "1400", "solved_by": "x10068"},
{"url": "https://codeforces.com//problemset/problem/757/A", "name": "Gotta Catch Em' All!", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x11153"},
{"url": "https://codeforces.com//problemset/problem/756/F", "name": "Long number", "tags": ["expression parsing", "math", "number theory"], "problem_rating": "3400", "solved_by": "x91"},
{"url": "https://codeforces.com//problemset/problem/756/E", "name": "Byteland coins", "tags": ["combinatorics", "dp", "math"], "problem_rating": "3200", "solved_by": "x158"},
{"url": "https://codeforces.com//problemset/problem/756/D", "name": "Bacterial Melee", "tags": ["brute force", "combinatorics", "dp", "string suffix structures"], "problem_rating": "2400", "solved_by": "x997"},
{"url": "https://codeforces.com//problemset/problem/756/C", "name": "Nikita and stack", "tags": ["data structures"], "problem_rating": "2200", "solved_by": "x1321"},
{"url": "https://codeforces.com//problemset/problem/756/B", "name": "Travel Card", "tags": ["binary search", "dp"], "problem_rating": "1600", "solved_by": "x3424"},
{"url": "https://codeforces.com//problemset/problem/756/A", "name": "Pavel and barbecue", "tags": ["constructive algorithms", "dfs and similar"], "problem_rating": "1700", "solved_by": "x3008"},
{"url": "https://codeforces.com//problemset/problem/755/G", "name": "PolandBall and Many Other Balls", "tags": ["combinatorics", "divide and conquer", "dp", "fft", "math", "number theory"], "problem_rating": "3200", "solved_by": "x897"},
{"url": "https://codeforces.com//problemset/problem/755/F", "name": "PolandBall and Gifts", "tags": ["bitmasks", "dp", "greedy"], "problem_rating": "2600", "solved_by": "x1310"},
{"url": "https://codeforces.com//problemset/problem/755/E", "name": "PolandBall and White-Red graph", "tags": ["constructive algorithms", "graphs", "shortest paths"], "problem_rating": "2400", "solved_by": "x826"},
{"url": "https://codeforces.com//problemset/problem/755/D", "name": "PolandBall and Polygon", "tags": ["data structures"], "problem_rating": "2000", "solved_by": "x2483"},
{"url": "https://codeforces.com//problemset/problem/755/C", "name": "PolandBall and Forest", "tags": ["dfs and similar", "dsu", "graphs", "interactive", "trees"], "problem_rating": "1300", "solved_by": "x12001"},
{"url": "https://codeforces.com//problemset/problem/755/B", "name": "PolandBall and Game", "tags": ["binary search", "data structures", "games", "greedy", "sortings", "strings"], "problem_rating": "1100", "solved_by": "x11063"},
{"url": "https://codeforces.com//problemset/problem/755/A", "name": "PolandBall and Hypothesis", "tags": ["brute force", "graphs", "math", "number theory"], "problem_rating": "800", "solved_by": "x17777"},
{"url": "https://codeforces.com//problemset/problem/754/E", "name": "Dasha and cyclic table", "tags": ["bitmasks", "brute force", "fft", "strings", "trees"], "problem_rating": "2600", "solved_by": "x486"},
{"url": "https://codeforces.com//problemset/problem/754/D", "name": "Fedor and coupons", "tags": ["binary search", "data structures", "greedy", "sortings"], "problem_rating": "2100", "solved_by": "x2428"},
{"url": "https://codeforces.com//problemset/problem/754/C", "name": "Vladik and chat", "tags": ["brute force", "constructive algorithms", "dp", "implementation", "strings"], "problem_rating": "2200", "solved_by": "x916"},
{"url": "https://codeforces.com//problemset/problem/754/B", "name": "Ilya and tic-tac-toe game", "tags": ["brute force", "implementation"], "problem_rating": "1100", "solved_by": "x7188"},
{"url": "https://codeforces.com//problemset/problem/754/A", "name": "Lesha and array splitting", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "1200", "solved_by": "x8606"},
{"url": "https://codeforces.com//problemset/problem/753/C", "name": "Interactive Bulls and Cows (Hard)", "tags": ["brute force", "constructive algorithms", "interactive"], "problem_rating": "2500", "solved_by": "x286"},
{"url": "https://codeforces.com//problemset/problem/753/B", "name": "Interactive Bulls and Cows (Easy)", "tags": ["brute force", "constructive algorithms", "implementation"], "problem_rating": "1600", "solved_by": "x1182"},
{"url": "https://codeforces.com//problemset/problem/753/A", "name": "Santa Claus and Candies", "tags": ["dp", "greedy", "math"], "problem_rating": "1000", "solved_by": "x8885"},
{"url": "https://codeforces.com//problemset/problem/750/H", "name": "New Year and Snowy Grid", "tags": ["dfs and similar", "dsu", "graphs", "interactive"], "problem_rating": "3500", "solved_by": "x191"},
{"url": "https://codeforces.com//problemset/problem/750/G", "name": "New Year and Binary Tree Paths", "tags": ["bitmasks", "brute force", "combinatorics", "dp"], "problem_rating": "3200", "solved_by": "x446"},
{"url": "https://codeforces.com//problemset/problem/750/F", "name": "New Year and Finding Roots", "tags": ["constructive algorithms", "implementation", "interactive", "trees"], "problem_rating": "2800", "solved_by": "x480"},
{"url": "https://codeforces.com//problemset/problem/750/E", "name": "New Year and Old Subsequence", "tags": ["data structures", "divide and conquer", "dp", "matrices"], "problem_rating": "2600", "solved_by": "x1526"},
{"url": "https://codeforces.com//problemset/problem/750/D", "name": "New Year and Fireworks", "tags": ["brute force", "data structures", "dfs and similar", "dp", "implementation"], "problem_rating": "1900", "solved_by": "x3070"},
{"url": "https://codeforces.com//problemset/problem/750/C", "name": "New Year and Rating", "tags": ["binary search", "greedy", "math"], "problem_rating": "1600", "solved_by": "x6525"},
{"url": "https://codeforces.com//problemset/problem/750/B", "name": "New Year and North Pole", "tags": ["geometry", "implementation"], "problem_rating": "1300", "solved_by": "x9448"},
{"url": "https://codeforces.com//problemset/problem/750/A", "name": "New Year and Hurry", "tags": ["binary search", "brute force", "implementation", "math"], "problem_rating": "800", "solved_by": "x73121"},
{"url": "https://codeforces.com//problemset/problem/749/E", "name": "Inversions After Shuffle", "tags": ["data structures", "probabilities"], "problem_rating": "2400", "solved_by": "x1037"},
{"url": "https://codeforces.com//problemset/problem/749/D", "name": "Leaving Auction", "tags": ["binary search", "data structures"], "problem_rating": "2000", "solved_by": "x2534"},
{"url": "https://codeforces.com//problemset/problem/749/C", "name": "Voting", "tags": ["greedy", "implementation", "two pointers"], "problem_rating": "1500", "solved_by": "x5938"},
{"url": "https://codeforces.com//problemset/problem/749/B", "name": "Parallelogram is Back", "tags": ["brute force", "constructive algorithms", "geometry"], "problem_rating": "1200", "solved_by": "x8451"},
{"url": "https://codeforces.com//problemset/problem/749/A", "name": "Bachgold Problem", "tags": ["greedy", "implementation", "math", "number theory"], "problem_rating": "800", "solved_by": "x47863"},
{"url": "https://codeforces.com//problemset/problem/748/F", "name": "Santa Clauses and a Soccer Championship", "tags": ["constructive algorithms", "dfs and similar", "graphs", "trees"], "problem_rating": "2300", "solved_by": "x643"},
{"url": "https://codeforces.com//problemset/problem/748/E", "name": "Santa Claus and Tangerines", "tags": ["binary search", "data structures", "greedy", "two pointers"], "problem_rating": "2100", "solved_by": "x1459"},
{"url": "https://codeforces.com//problemset/problem/748/D", "name": "Santa Claus and a Palindrome", "tags": ["constructive algorithms", "data structures", "greedy"], "problem_rating": "2100", "solved_by": "x1830"},
{"url": "https://codeforces.com//problemset/problem/748/C", "name": "Santa Claus and Robot", "tags": ["constructive algorithms", "math"], "problem_rating": "1400", "solved_by": "x4569"},
{"url": "https://codeforces.com//problemset/problem/748/B", "name": "Santa Claus and Keyboard Check", "tags": ["implementation", "strings"], "problem_rating": "1500", "solved_by": "x5303"},
{"url": "https://codeforces.com//problemset/problem/748/A", "name": "Santa Claus and a Place in a Class", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x8679"},
{"url": "https://codeforces.com//problemset/problem/747/F", "name": "Igor and Interesting Numbers", "tags": ["brute force", "combinatorics", "dp", "math"], "problem_rating": "2500", "solved_by": "x416"},
{"url": "https://codeforces.com//problemset/problem/747/E", "name": "Comments", "tags": ["dfs and similar", "expression parsing", "implementation", "strings"], "problem_rating": "1700", "solved_by": "x1948"},
{"url": "https://codeforces.com//problemset/problem/747/D", "name": "Winter Is Coming", "tags": ["dp", "greedy", "sortings"], "problem_rating": "1800", "solved_by": "x3092"},
{"url": "https://codeforces.com//problemset/problem/747/C", "name": "Servers", "tags": ["implementation"], "problem_rating": "1300", "solved_by": "x4557"},
{"url": "https://codeforces.com//problemset/problem/747/B", "name": "Mammoth's Genome Decoding", "tags": ["implementation", "strings"], "problem_rating": "900", "solved_by": "x8667"},
{"url": "https://codeforces.com//problemset/problem/747/A", "name": "Display Size", "tags": ["brute force", "math"], "problem_rating": "800", "solved_by": "x10102"},
{"url": "https://codeforces.com//problemset/problem/746/G", "name": "New Roads", "tags": ["constructive algorithms", "graphs", "trees"], "problem_rating": "2100", "solved_by": "x1498"},
{"url": "https://codeforces.com//problemset/problem/746/F", "name": "Music in Car", "tags": ["data structures", "greedy", "two pointers"], "problem_rating": "2200", "solved_by": "x732"},
{"url": "https://codeforces.com//problemset/problem/746/E", "name": "Numbers Exchange", "tags": ["greedy", "implementation", "math"], "problem_rating": "1900", "solved_by": "x1720"},
{"url": "https://codeforces.com//problemset/problem/746/D", "name": "Green and Black Tea", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1500", "solved_by": "x5021"},
{"url": "https://codeforces.com//problemset/problem/746/C", "name": "Tram", "tags": ["constructive algorithms", "implementation", "math"], "problem_rating": "1600", "solved_by": "x3698"},
{"url": "https://codeforces.com//problemset/problem/746/B", "name": "Decoding", "tags": ["implementation", "strings"], "problem_rating": "900", "solved_by": "x27072"},
{"url": "https://codeforces.com//problemset/problem/746/A", "name": "Compote", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x21122"},
{"url": "https://codeforces.com//problemset/problem/745/B", "name": "Hongcow Solves A Puzzle", "tags": ["implementation"], "problem_rating": "1400", "solved_by": "x3726"},
{"url": "https://codeforces.com//problemset/problem/745/A", "name": "Hongcow Learns the Cyclic Shift", "tags": ["implementation", "strings"], "problem_rating": "900", "solved_by": "x10369"},
{"url": "https://codeforces.com//problemset/problem/744/E", "name": "Hongcow Masters the Cyclic Shift", "tags": ["strings", "two pointers"], "problem_rating": "3200", "solved_by": "x134"},
{"url": "https://codeforces.com//problemset/problem/744/D", "name": "Hongcow Draws a Circle", "tags": ["geometry"], "problem_rating": "3200", "solved_by": "x119"},
{"url": "https://codeforces.com//problemset/problem/744/C", "name": "Hongcow Buys a Deck of Cards", "tags": ["bitmasks", "brute force", "dp"], "problem_rating": "2400", "solved_by": "x1063"},
{"url": "https://codeforces.com//problemset/problem/744/B", "name": "Hongcow's Game", "tags": ["bitmasks", "divide and conquer", "interactive"], "problem_rating": "1900", "solved_by": "x1712"},
{"url": "https://codeforces.com//problemset/problem/744/A", "name": "Hongcow Builds A Nation", "tags": ["dfs and similar", "graphs"], "problem_rating": "1500", "solved_by": "x8170"},
{"url": "https://codeforces.com//problemset/problem/743/E", "name": "Vladik and cards", "tags": ["binary search", "bitmasks", "brute force", "dp"], "problem_rating": "2200", "solved_by": "x1485"},
{"url": "https://codeforces.com//problemset/problem/743/D", "name": "Chloe and pleasant prizes", "tags": ["dfs and similar", "dp", "graphs", "trees"], "problem_rating": "1800", "solved_by": "x4278"},
{"url": "https://codeforces.com//problemset/problem/743/C", "name": "Vladik and fractions", "tags": ["brute force", "constructive algorithms", "math", "number theory"], "problem_rating": "1500", "solved_by": "x12083"},
{"url": "https://codeforces.com//problemset/problem/743/B", "name": "Chloe and the sequence", "tags": ["binary search", "bitmasks", "constructive algorithms", "implementation"], "problem_rating": "1200", "solved_by": "x14538"},
{"url": "https://codeforces.com//problemset/problem/743/A", "name": "Vladik and flights", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "1200", "solved_by": "x10975"},
{"url": "https://codeforces.com//problemset/problem/742/B", "name": "Arpa’s obvious problem and Mehrdad’s terrible solution", "tags": ["brute force", "math", "number theory"], "problem_rating": "1500", "solved_by": "x9147"},
{"url": "https://codeforces.com//problemset/problem/742/A", "name": "Arpa’s hard exam and Mehrdad’s naive cheat", "tags": ["implementation", "math", "number theory"], "problem_rating": "1000", "solved_by": "x41205"},
{"url": "https://codeforces.com//problemset/problem/741/E", "name": "Arpa’s abnormal DNA and Mehrdad’s deep interest", "tags": ["data structures", "string suffix structures"], "problem_rating": "3400", "solved_by": "x177"},
{"url": "https://codeforces.com//problemset/problem/741/D", "name": "Arpa’s letter-marked tree and Mehrdad’s Dokhtar-kosh paths", "tags": ["data structures", "dfs and similar", "trees"], "problem_rating": "2900", "solved_by": "x2543"},
{"url": "https://codeforces.com//problemset/problem/741/C", "name": "Arpa’s overnight party and Mehrdad’s silent entering", "tags": ["constructive algorithms", "dfs and similar", "graphs"], "problem_rating": "2600", "solved_by": "x2523"},
{"url": "https://codeforces.com//problemset/problem/741/B", "name": "Arpa's weak amphitheater and Mehrdad's valuable Hoses", "tags": ["dfs and similar", "dp", "dsu"], "problem_rating": "1600", "solved_by": "x5177"},
{"url": "https://codeforces.com//problemset/problem/741/A", "name": "Arpa's loud Owf and Mehrdad's evil plan", "tags": ["dfs and similar", "math"], "problem_rating": "1600", "solved_by": "x5415"},
{"url": "https://codeforces.com//problemset/problem/740/B", "name": "Alyona and flowers", "tags": ["constructive algorithms"], "problem_rating": "1200", "solved_by": "x8214"},
{"url": "https://codeforces.com//problemset/problem/740/A", "name": "Alyona and copybooks", "tags": ["brute force", "implementation"], "problem_rating": "1300", "solved_by": "x8858"},
{"url": "https://codeforces.com//problemset/problem/739/E", "name": "Gosha is hunting", "tags": ["brute force", "data structures", "dp", "flows", "math", "probabilities", "sortings"], "problem_rating": "3000", "solved_by": "x2107"},
{"url": "https://codeforces.com//problemset/problem/739/D", "name": "Recover a functional graph", "tags": ["graph matchings"], "problem_rating": "3400", "solved_by": "x186"},
{"url": "https://codeforces.com//problemset/problem/739/C", "name": "Alyona and towers", "tags": ["data structures"], "problem_rating": "2500", "solved_by": "x1472"},
{"url": "https://codeforces.com//problemset/problem/739/B", "name": "Alyona and a tree", "tags": ["binary search", "data structures", "dfs and similar", "graphs", "trees"], "problem_rating": "1900", "solved_by": "x4480"},
{"url": "https://codeforces.com//problemset/problem/739/A", "name": "Alyona and mex", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1700", "solved_by": "x7751"},
{"url": "https://codeforces.com//problemset/problem/737/F", "name": "Dirty plates", "tags": ["constructive algorithms", "math"], "problem_rating": "3300", "solved_by": "x70"},
{"url": "https://codeforces.com//problemset/problem/737/E", "name": "Tanya is 5!", "tags": ["graph matchings", "graphs", "greedy", "schedules"], "problem_rating": "3300", "solved_by": "x121"},
{"url": "https://codeforces.com//problemset/problem/736/E", "name": "Chess Championship", "tags": ["constructive algorithms", "flows", "greedy", "math"], "problem_rating": "2900", "solved_by": "x185"},
{"url": "https://codeforces.com//problemset/problem/736/D", "name": "Permutations", "tags": ["math", "matrices"], "problem_rating": "2800", "solved_by": "x455"},
{"url": "https://codeforces.com//problemset/problem/735/E", "name": "Ostap and Tree", "tags": ["dp", "trees"], "problem_rating": "2500", "solved_by": "x854"},
{"url": "https://codeforces.com//problemset/problem/735/D", "name": "Taxes", "tags": ["math", "number theory"], "problem_rating": "1600", "solved_by": "x13114"},
{"url": "https://codeforces.com//problemset/problem/735/C", "name": "Tennis Championship", "tags": ["combinatorics", "constructive algorithms", "greedy", "math"], "problem_rating": "1600", "solved_by": "x7410"},
{"url": "https://codeforces.com//problemset/problem/735/B", "name": "Urbanization", "tags": ["greedy", "number theory", "sortings"], "problem_rating": "1100", "solved_by": "x8343"},
{"url": "https://codeforces.com//problemset/problem/735/A", "name": "Ostap and Grasshopper", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x12373"},
{"url": "https://codeforces.com//problemset/problem/734/F", "name": "Anton and School", "tags": ["bitmasks", "constructive algorithms", "implementation", "math"], "problem_rating": "2500", "solved_by": "x1286"},
{"url": "https://codeforces.com//problemset/problem/734/E", "name": "Anton and Tree", "tags": ["dfs and similar", "dp", "trees"], "problem_rating": "2100", "solved_by": "x4059"},
{"url": "https://codeforces.com//problemset/problem/734/D", "name": "Anton and Chess", "tags": ["implementation"], "problem_rating": "1700", "solved_by": "x3714"},
{"url": "https://codeforces.com//problemset/problem/734/C", "name": "Anton and Making Potions", "tags": ["binary search", "dp", "greedy", "two pointers"], "problem_rating": "1600", "solved_by": "x5312"},
{"url": "https://codeforces.com//problemset/problem/734/B", "name": "Anton and Digits", "tags": ["brute force", "greedy", "implementation", "math"], "problem_rating": "800", "solved_by": "x28963"},
{"url": "https://codeforces.com//problemset/problem/734/A", "name": "Anton and Danik", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x145543"},
{"url": "https://codeforces.com//problemset/problem/733/F", "name": "Drivers Dissatisfaction", "tags": ["data structures", "dsu", "graphs", "trees"], "problem_rating": "2200", "solved_by": "x1096"},
{"url": "https://codeforces.com//problemset/problem/733/E", "name": "Sleep in Class", "tags": ["constructive algorithms", "data structures", "math", "two pointers"], "problem_rating": "2400", "solved_by": "x882"},
{"url": "https://codeforces.com//problemset/problem/733/D", "name": "Kostya the Sculptor", "tags": ["data structures", "hashing"], "problem_rating": "1600", "solved_by": "x4155"},
{"url": "https://codeforces.com//problemset/problem/733/C", "name": "Epidemic in Monstropolis", "tags": ["constructive algorithms", "dp", "greedy", "two pointers"], "problem_rating": "1800", "solved_by": "x3319"},
{"url": "https://codeforces.com//problemset/problem/733/B", "name": "Parade", "tags": ["math"], "problem_rating": "1100", "solved_by": "x10639"},
{"url": "https://codeforces.com//problemset/problem/733/A", "name": "Grasshopper And the String", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x16042"},
{"url": "https://codeforces.com//problemset/problem/732/F", "name": "Tourist Reform", "tags": ["dfs and similar", "graphs"], "problem_rating": "2300", "solved_by": "x2454"},
{"url": "https://codeforces.com//problemset/problem/732/E", "name": "Sockets", "tags": ["greedy", "sortings"], "problem_rating": "2100", "solved_by": "x1598"},
{"url": "https://codeforces.com//problemset/problem/732/D", "name": "Exams", "tags": ["binary search", "greedy", "sortings"], "problem_rating": "1700", "solved_by": "x5455"},
{"url": "https://codeforces.com//problemset/problem/732/C", "name": "Sanatorium", "tags": ["binary search", "constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "1200", "solved_by": "x9652"},
{"url": "https://codeforces.com//problemset/problem/732/B", "name": "Cormen --- The Best Friend Of a Man", "tags": ["dp", "greedy"], "problem_rating": "1000", "solved_by": "x24277"},
{"url": "https://codeforces.com//problemset/problem/732/A", "name": "Buy a Shovel", "tags": ["brute force", "constructive algorithms", "implementation", "math"], "problem_rating": "800", "solved_by": "x69768"},
{"url": "https://codeforces.com//problemset/problem/731/F", "name": "Video Cards", "tags": ["brute force", "data structures", "implementation", "math", "number theory"], "problem_rating": "1900", "solved_by": "x2785"},
{"url": "https://codeforces.com//problemset/problem/731/E", "name": "Funny Game", "tags": ["dp", "games"], "problem_rating": "2200", "solved_by": "x1609"},
{"url": "https://codeforces.com//problemset/problem/731/D", "name": "80-th Level Archeology", "tags": ["brute force", "data structures", "greedy", "sortings"], "problem_rating": "2200", "solved_by": "x1160"},
{"url": "https://codeforces.com//problemset/problem/731/C", "name": "Socks", "tags": ["dfs and similar", "dsu", "graphs", "greedy"], "problem_rating": "1600", "solved_by": "x6867"},
{"url": "https://codeforces.com//problemset/problem/731/B", "name": "Coupons and Discounts", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1100", "solved_by": "x7912"},
{"url": "https://codeforces.com//problemset/problem/731/A", "name": "Night at the Museum", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x44420"},
{"url": "https://codeforces.com//problemset/problem/730/L", "name": "Expression Queries", "tags": ["data structures"], "problem_rating": "3200", "solved_by": "x86"},
{"url": "https://codeforces.com//problemset/problem/730/K", "name": "Roads Orientation Problem", "tags": ["graphs"], "problem_rating": "3200", "solved_by": "x98"},
{"url": "https://codeforces.com//problemset/problem/730/J", "name": "Bottles", "tags": ["dp"], "problem_rating": "1900", "solved_by": "x3260"},
{"url": "https://codeforces.com//problemset/problem/730/I", "name": "Olympiad in Programming and Sports", "tags": ["dp", "flows", "graphs", "greedy"], "problem_rating": "2000", "solved_by": "x1990"},
{"url": "https://codeforces.com//problemset/problem/730/H", "name": "Delete Them", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1300", "solved_by": "x2942"},
{"url": "https://codeforces.com//problemset/problem/730/G", "name": "Car Repair Shop", "tags": ["implementation"], "problem_rating": "1600", "solved_by": "x2118"},
{"url": "https://codeforces.com//problemset/problem/730/F", "name": "Ber Patio", "tags": [], "problem_rating": "3100", "solved_by": "x90"},
{"url": "https://codeforces.com//problemset/problem/730/E", "name": "Award Ceremony", "tags": ["greedy", "implementation"], "problem_rating": "2200", "solved_by": "x716"},
{"url": "https://codeforces.com//problemset/problem/730/D", "name": "Running Over The Bridges", "tags": ["greedy", "implementation", "math"], "problem_rating": "2200", "solved_by": "x867"},
{"url": "https://codeforces.com//problemset/problem/730/C", "name": "Bulmart", "tags": ["binary search", "dfs and similar"], "problem_rating": "2100", "solved_by": "x1206"},
{"url": "https://codeforces.com//problemset/problem/730/B", "name": "Minimum and Maximum", "tags": ["constructive algorithms", "interactive"], "problem_rating": "1800", "solved_by": "x2405"},
{"url": "https://codeforces.com//problemset/problem/730/A", "name": "Toda 2", "tags": ["greedy", "implementation"], "problem_rating": "1800", "solved_by": "x1559"},
{"url": "https://codeforces.com//problemset/problem/729/F", "name": "Financiers Game", "tags": ["dp"], "problem_rating": "2500", "solved_by": "x939"},
{"url": "https://codeforces.com//problemset/problem/729/E", "name": "Subordinates", "tags": ["constructive algorithms", "data structures", "graphs", "greedy", "sortings"], "problem_rating": "1900", "solved_by": "x2161"},
{"url": "https://codeforces.com//problemset/problem/729/D", "name": "Sea Battle", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1700", "solved_by": "x3643"},
{"url": "https://codeforces.com//problemset/problem/729/C", "name": "Road to Cinema", "tags": ["binary search", "greedy", "sortings"], "problem_rating": "1700", "solved_by": "x3886"},
{"url": "https://codeforces.com//problemset/problem/729/B", "name": "Spotlights", "tags": ["dp", "implementation"], "problem_rating": "1200", "solved_by": "x7812"},
{"url": "https://codeforces.com//problemset/problem/729/A", "name": "Interview with Oleg", "tags": ["implementation", "strings"], "problem_rating": "900", "solved_by": "x7359"},
{"url": "https://codeforces.com//problemset/problem/727/F", "name": "Polycarp's problems", "tags": ["binary search", "dp", "greedy"], "problem_rating": "2300", "solved_by": "x778"},
{"url": "https://codeforces.com//problemset/problem/727/E", "name": "Games on a CD", "tags": ["data structures", "hashing", "string suffix structures", "strings"], "problem_rating": "2300", "solved_by": "x1160"},
{"url": "https://codeforces.com//problemset/problem/727/D", "name": "T-shirts Distribution", "tags": ["constructive algorithms", "flows", "greedy"], "problem_rating": "1800", "solved_by": "x1811"},
{"url": "https://codeforces.com//problemset/problem/727/C", "name": "Guess the Array", "tags": ["constructive algorithms", "interactive", "math"], "problem_rating": "1400", "solved_by": "x7152"},
{"url": "https://codeforces.com//problemset/problem/727/B", "name": "Bill Total Value", "tags": ["expression parsing", "implementation", "strings"], "problem_rating": "1600", "solved_by": "x1980"},
{"url": "https://codeforces.com//problemset/problem/727/A", "name": "Transformation: from A to B", "tags": ["brute force", "dfs and similar", "math"], "problem_rating": "1000", "solved_by": "x13555"},
{"url": "https://codeforces.com//problemset/problem/725/G", "name": "Messages on a Tree", "tags": [], "problem_rating": "3300", "solved_by": "x163"},
{"url": "https://codeforces.com//problemset/problem/725/F", "name": "Family Photos", "tags": ["games", "greedy"], "problem_rating": "2900", "solved_by": "x522"},
{"url": "https://codeforces.com//problemset/problem/725/E", "name": "Too Much Money", "tags": ["brute force", "greedy"], "problem_rating": "2600", "solved_by": "x647"},
{"url": "https://codeforces.com//problemset/problem/725/D", "name": "Contest Balloons", "tags": ["data structures", "greedy"], "problem_rating": "1800", "solved_by": "x2770"},
{"url": "https://codeforces.com//problemset/problem/725/C", "name": "Hidden Word", "tags": ["brute force", "constructive algorithms", "implementation", "strings"], "problem_rating": "1600", "solved_by": "x2615"},
{"url": "https://codeforces.com//problemset/problem/725/B", "name": "Food on the Plane", "tags": ["implementation", "math"], "problem_rating": "1200", "solved_by": "x5114"},
{"url": "https://codeforces.com//problemset/problem/725/A", "name": "Jumping Ball", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x7048"},
{"url": "https://codeforces.com//problemset/problem/724/G", "name": "Xor-matic Number of the Graph", "tags": ["bitmasks", "graphs", "math", "number theory", "trees"], "problem_rating": "2600", "solved_by": "x1018"},
{"url": "https://codeforces.com//problemset/problem/724/F", "name": "Uniformly Branched Trees", "tags": ["combinatorics", "dp", "trees"], "problem_rating": "2700", "solved_by": "x397"},
{"url": "https://codeforces.com//problemset/problem/724/E", "name": "Goods transportation", "tags": ["dp", "flows", "greedy"], "problem_rating": "2900", "solved_by": "x1272"},
{"url": "https://codeforces.com//problemset/problem/724/D", "name": "Dense Subsequence", "tags": ["data structures", "greedy", "strings"], "problem_rating": "1900", "solved_by": "x2276"},
{"url": "https://codeforces.com//problemset/problem/724/C", "name": "Ray Tracing", "tags": ["greedy", "hashing", "implementation", "math", "number theory", "sortings"], "problem_rating": "1800", "solved_by": "x2126"},
{"url": "https://codeforces.com//problemset/problem/724/B", "name": "Batch Sort", "tags": ["brute force", "greedy", "implementation", "math"], "problem_rating": "1500", "solved_by": "x3995"},
{"url": "https://codeforces.com//problemset/problem/724/A", "name": "Checking the Calendar", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x7025"},
{"url": "https://codeforces.com//problemset/problem/723/F", "name": "st-Spanning Tree", "tags": ["dsu", "graphs", "greedy", "implementation"], "problem_rating": "2300", "solved_by": "x1457"},
{"url": "https://codeforces.com//problemset/problem/723/E", "name": "One-Way Reform", "tags": ["constructive algorithms", "dfs and similar", "flows", "graphs", "greedy"], "problem_rating": "2200", "solved_by": "x1917"},
{"url": "https://codeforces.com//problemset/problem/723/D", "name": "Lakes in Berland", "tags": ["dfs and similar", "dsu", "graphs", "greedy", "implementation"], "problem_rating": "1600", "solved_by": "x6896"},
{"url": "https://codeforces.com//problemset/problem/723/C", "name": "Polycarp at the Radio", "tags": ["greedy"], "problem_rating": "1600", "solved_by": "x4574"},
{"url": "https://codeforces.com//problemset/problem/723/B", "name": "Text Document Analysis", "tags": ["expression parsing", "implementation", "strings"], "problem_rating": "1100", "solved_by": "x10124"},
{"url": "https://codeforces.com//problemset/problem/723/A", "name": "The New Year: Meeting Friends", "tags": ["implementation", "math", "sortings"], "problem_rating": "800", "solved_by": "x74415"},
{"url": "https://codeforces.com//problemset/problem/722/F", "name": "Cyclic Cipher", "tags": ["chinese remainder theorem", "data structures", "implementation", "number theory", "two pointers"], "problem_rating": "2800", "solved_by": "x488"},
{"url": "https://codeforces.com//problemset/problem/722/E", "name": "Research Rover", "tags": ["combinatorics", "dp"], "problem_rating": "2900", "solved_by": "x813"},
{"url": "https://codeforces.com//problemset/problem/722/D", "name": "Generating Sets", "tags": ["binary search", "data structures", "dfs and similar", "greedy", "strings", "trees"], "problem_rating": "1900", "solved_by": "x3110"},
{"url": "https://codeforces.com//problemset/problem/722/C", "name": "Destroying Array", "tags": ["data structures", "dsu"], "problem_rating": "1600", "solved_by": "x9128"},
{"url": "https://codeforces.com//problemset/problem/722/B", "name": "Verse Pattern", "tags": ["implementation", "strings"], "problem_rating": "1200", "solved_by": "x6373"},
{"url": "https://codeforces.com//problemset/problem/722/A", "name": "Broken Clock", "tags": ["brute force", "implementation"], "problem_rating": "1300", "solved_by": "x6617"},
{"url": "https://codeforces.com//problemset/problem/721/E", "name": "Road to Home", "tags": ["binary search", "dp"], "problem_rating": "2700", "solved_by": "x303"},
{"url": "https://codeforces.com//problemset/problem/721/D", "name": "Maxim and Array", "tags": ["constructive algorithms", "data structures", "greedy", "math"], "problem_rating": "2000", "solved_by": "x2331"},
{"url": "https://codeforces.com//problemset/problem/721/C", "name": "Journey", "tags": ["dp", "graphs"], "problem_rating": "1800", "solved_by": "x5781"},
{"url": "https://codeforces.com//problemset/problem/721/B", "name": "Passwords", "tags": ["implementation", "math", "sortings", "strings"], "problem_rating": "1100", "solved_by": "x12029"},
{"url": "https://codeforces.com//problemset/problem/721/A", "name": "One-dimensional Japanese Crossword", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x18279"},
{"url": "https://codeforces.com//problemset/problem/720/F", "name": "Array Covering", "tags": ["data structures"], "problem_rating": "3100", "solved_by": "x146"},
{"url": "https://codeforces.com//problemset/problem/720/E", "name": "Cipher", "tags": ["implementation"], "problem_rating": "3100", "solved_by": "x63"},
{"url": "https://codeforces.com//problemset/problem/720/D", "name": "Slalom", "tags": ["data structures", "dp", "sortings"], "problem_rating": "3100", "solved_by": "x227"},
{"url": "https://codeforces.com//problemset/problem/720/C", "name": "Homework", "tags": ["constructive algorithms"], "problem_rating": "3100", "solved_by": "x99"},
{"url": "https://codeforces.com//problemset/problem/720/B", "name": "Cactusophobia", "tags": ["dfs and similar", "flows"], "problem_rating": "2400", "solved_by": "x401"},
{"url": "https://codeforces.com//problemset/problem/720/A", "name": "Closing ceremony", "tags": ["greedy"], "problem_rating": "2000", "solved_by": "x848"},
{"url": "https://codeforces.com//problemset/problem/719/B", "name": "Anatoly and Cockroaches", "tags": ["greedy"], "problem_rating": "1400", "solved_by": "x8424"},
{"url": "https://codeforces.com//problemset/problem/719/A", "name": "Vitya in the Countryside", "tags": ["implementation"], "problem_rating": "1100", "solved_by": "x15474"},
{"url": "https://codeforces.com//problemset/problem/718/E", "name": "Matvey's Birthday", "tags": ["bitmasks", "graphs"], "problem_rating": "3300", "solved_by": "x351"},
{"url": "https://codeforces.com//problemset/problem/718/D", "name": "Andrew and Chemistry", "tags": ["dp", "hashing", "trees"], "problem_rating": "2900", "solved_by": "x392"},
{"url": "https://codeforces.com//problemset/problem/718/C", "name": "Sasha and Array", "tags": ["data structures", "math", "matrices"], "problem_rating": "2300", "solved_by": "x3672"},
{"url": "https://codeforces.com//problemset/problem/718/A", "name": "Efim and Strange Grade", "tags": ["dp", "implementation", "math"], "problem_rating": "1700", "solved_by": "x4385"},
{"url": "https://codeforces.com//problemset/problem/717/I", "name": "Cowboy Beblop at his computer", "tags": ["geometry"], "problem_rating": "2800", "solved_by": "x203"},
{"url": "https://codeforces.com//problemset/problem/717/H", "name": "Pokermon League challenge", "tags": ["math", "probabilities"], "problem_rating": "2400", "solved_by": "x420"},
{"url": "https://codeforces.com//problemset/problem/717/G", "name": "Underfail", "tags": ["flows"], "problem_rating": "2400", "solved_by": "x632"},
{"url": "https://codeforces.com//problemset/problem/717/F", "name": "Heroes of Making Magic III", "tags": ["data structures"], "problem_rating": "2600", "solved_by": "x290"},
{"url": "https://codeforces.com//problemset/problem/717/E", "name": "Paint it really, really dark gray", "tags": ["dfs and similar"], "problem_rating": "1900", "solved_by": "x1432"},
{"url": "https://codeforces.com//problemset/problem/717/D", "name": "Dexterina’s Lab", "tags": ["games", "matrices", "probabilities"], "problem_rating": "1900", "solved_by": "x1389"},
{"url": "https://codeforces.com//problemset/problem/717/C", "name": "Potions Homework", "tags": ["implementation", "sortings"], "problem_rating": "1200", "solved_by": "x3917"},
{"url": "https://codeforces.com//problemset/problem/717/B", "name": "R3D3’s Summer Adventure", "tags": ["dp", "greedy"], "problem_rating": "2700", "solved_by": "x145"},
{"url": "https://codeforces.com//problemset/problem/717/A", "name": "Festival Organization", "tags": ["combinatorics", "math", "number theory"], "problem_rating": "2900", "solved_by": "x339"},
{"url": "https://codeforces.com//problemset/problem/716/B", "name": "Complete the Word", "tags": ["greedy", "two pointers"], "problem_rating": "1300", "solved_by": "x11968"},
{"url": "https://codeforces.com//problemset/problem/716/A", "name": "Crazy Computer", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x21940"},
{"url": "https://codeforces.com//problemset/problem/715/E", "name": "Complete the Permutations", "tags": ["combinatorics", "fft", "graphs", "math"], "problem_rating": "3400", "solved_by": "x350"},
{"url": "https://codeforces.com//problemset/problem/715/D", "name": "Create a Maze", "tags": ["constructive algorithms"], "problem_rating": "3100", "solved_by": "x250"},
{"url": "https://codeforces.com//problemset/problem/715/C", "name": "Digit Tree", "tags": ["dfs and similar", "divide and conquer", "dsu", "trees"], "problem_rating": "2700", "solved_by": "x2022"},
{"url": "https://codeforces.com//problemset/problem/715/B", "name": "Complete The Graph", "tags": ["binary search", "constructive algorithms", "graphs", "shortest paths"], "problem_rating": "2300", "solved_by": "x2704"},
{"url": "https://codeforces.com//problemset/problem/715/A", "name": "Plus and Square Root", "tags": ["constructive algorithms", "math"], "problem_rating": "1600", "solved_by": "x5575"},
{"url": "https://codeforces.com//problemset/problem/714/B", "name": "Filya and Homework", "tags": ["implementation", "sortings"], "problem_rating": "1200", "solved_by": "x14239"},
{"url": "https://codeforces.com//problemset/problem/714/A", "name": "Meeting of Old Friends", "tags": ["implementation", "math"], "problem_rating": "1100", "solved_by": "x10737"},
{"url": "https://codeforces.com//problemset/problem/713/E", "name": "Sonya Partymaker", "tags": ["binary search", "dp"], "problem_rating": "3300", "solved_by": "x349"},
{"url": "https://codeforces.com//problemset/problem/713/D", "name": "Animals and Puzzle", "tags": ["binary search", "data structures"], "problem_rating": "2700", "solved_by": "x1107"},
{"url": "https://codeforces.com//problemset/problem/713/C", "name": "Sonya and Problem Wihtout a Legend", "tags": ["dp", "sortings"], "problem_rating": "2300", "solved_by": "x5123"},
{"url": "https://codeforces.com//problemset/problem/713/B", "name": "Searching Rectangles", "tags": ["binary search", "constructive algorithms", "interactive"], "problem_rating": "2200", "solved_by": "x1421"},
{"url": "https://codeforces.com//problemset/problem/713/A", "name": "Sonya and Queries", "tags": ["data structures", "implementation"], "problem_rating": "1400", "solved_by": "x8408"},
{"url": "https://codeforces.com//problemset/problem/712/E", "name": "Memory and Casinos", "tags": ["data structures", "math", "probabilities"], "problem_rating": "2500", "solved_by": "x609"},
{"url": "https://codeforces.com//problemset/problem/712/D", "name": "Memory and Scores", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2200", "solved_by": "x1806"},
{"url": "https://codeforces.com//problemset/problem/712/C", "name": "Memory and De-Evolution", "tags": ["greedy", "math"], "problem_rating": "1600", "solved_by": "x5745"},
{"url": "https://codeforces.com//problemset/problem/712/B", "name": "Memory and Trident", "tags": ["implementation", "strings"], "problem_rating": "1100", "solved_by": "x9699"},
{"url": "https://codeforces.com//problemset/problem/712/A", "name": "Memory and Crow", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x11575"},
{"url": "https://codeforces.com//problemset/problem/711/E", "name": "ZS and The Birthday Paradox", "tags": ["math", "number theory", "probabilities"], "problem_rating": "2300", "solved_by": "x1254"},
{"url": "https://codeforces.com//problemset/problem/711/D", "name": "Directed Roads", "tags": ["combinatorics", "dfs and similar", "graphs", "math"], "problem_rating": "1900", "solved_by": "x4396"},
{"url": "https://codeforces.com//problemset/problem/711/C", "name": "Coloring Trees", "tags": ["dp"], "problem_rating": "1700", "solved_by": "x7953"},
{"url": "https://codeforces.com//problemset/problem/711/B", "name": "Chris and Magic Square", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1400", "solved_by": "x8396"},
{"url": "https://codeforces.com//problemset/problem/711/A", "name": "Bus to Udayland", "tags": ["brute force", "implementation"], "problem_rating": "800", "solved_by": "x29083"},
{"url": "https://codeforces.com//problemset/problem/710/F", "name": "String Set Queries", "tags": ["brute force", "data structures", "hashing", "interactive", "string suffix structures", "strings"], "problem_rating": "2400", "solved_by": "x1763"},
{"url": "https://codeforces.com//problemset/problem/710/E", "name": "Generate a String", "tags": ["dfs and similar", "dp"], "problem_rating": "2000", "solved_by": "x5078"},
{"url": "https://codeforces.com//problemset/problem/710/D", "name": "Two Arithmetic Progressions", "tags": ["math", "number theory"], "problem_rating": "2500", "solved_by": "x1217"},
{"url": "https://codeforces.com//problemset/problem/710/C", "name": "Magic Odd Square", "tags": ["constructive algorithms", "math"], "problem_rating": "1500", "solved_by": "x5050"},
{"url": "https://codeforces.com//problemset/problem/710/B", "name": "Optimal Point on a Line", "tags": ["brute force", "sortings"], "problem_rating": "1400", "solved_by": "x8668"},
{"url": "https://codeforces.com//problemset/problem/710/A", "name": "King Moves", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x13677"},
{"url": "https://codeforces.com//problemset/problem/709/B", "name": "Checkpoints", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "1500", "solved_by": "x4718"},
{"url": "https://codeforces.com//problemset/problem/709/A", "name": "Juicer", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x31034"},
{"url": "https://codeforces.com//problemset/problem/708/E", "name": "Student's Camp", "tags": ["dp", "math"], "problem_rating": "3100", "solved_by": "x955"},
{"url": "https://codeforces.com//problemset/problem/708/D", "name": "Incorrect Flow", "tags": ["flows"], "problem_rating": "2900", "solved_by": "x713"},
{"url": "https://codeforces.com//problemset/problem/708/C", "name": "Centroids", "tags": ["data structures", "dfs and similar", "dp", "graphs", "greedy", "trees"], "problem_rating": "2300", "solved_by": "x3134"},
{"url": "https://codeforces.com//problemset/problem/708/B", "name": "Recover the String", "tags": ["constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "1900", "solved_by": "x3219"},
{"url": "https://codeforces.com//problemset/problem/708/A", "name": "Letters Cyclic Shift", "tags": ["constructive algorithms", "greedy", "implementation", "strings"], "problem_rating": "1200", "solved_by": "x8950"},
{"url": "https://codeforces.com//problemset/problem/707/E", "name": "Garlands", "tags": ["data structures"], "problem_rating": "2400", "solved_by": "x1070"},
{"url": "https://codeforces.com//problemset/problem/707/D", "name": "Persistent Bookcase", "tags": ["bitmasks", "data structures", "dfs and similar", "implementation"], "problem_rating": "2200", "solved_by": "x2633"},
{"url": "https://codeforces.com//problemset/problem/707/C", "name": "Pythagorean Triples", "tags": ["math", "number theory"], "problem_rating": "1500", "solved_by": "x12483"},
{"url": "https://codeforces.com//problemset/problem/707/B", "name": "Bakery", "tags": ["graphs"], "problem_rating": "1300", "solved_by": "x12852"},
{"url": "https://codeforces.com//problemset/problem/707/A", "name": "Brain's Photos", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x47901"},
{"url": "https://codeforces.com//problemset/problem/706/E", "name": "Working routine", "tags": ["data structures", "implementation"], "problem_rating": "2500", "solved_by": "x1130"},
{"url": "https://codeforces.com//problemset/problem/706/D", "name": "Vasiliy's Multiset", "tags": ["binary search", "bitmasks", "data structures", "trees"], "problem_rating": "1800", "solved_by": "x9734"},
{"url": "https://codeforces.com//problemset/problem/706/C", "name": "Hard problem", "tags": ["dp", "strings"], "problem_rating": "1600", "solved_by": "x15917"},
{"url": "https://codeforces.com//problemset/problem/706/B", "name": "Interesting drink", "tags": ["binary search", "dp", "implementation"], "problem_rating": "1100", "solved_by": "x60713"},
{"url": "https://codeforces.com//problemset/problem/706/A", "name": "Beru-taxi", "tags": ["brute force", "geometry", "implementation"], "problem_rating": "900", "solved_by": "x14380"},
{"url": "https://codeforces.com//problemset/problem/705/B", "name": "Spider Man", "tags": ["games", "math"], "problem_rating": "1100", "solved_by": "x9083"},
{"url": "https://codeforces.com//problemset/problem/705/A", "name": "Hulk", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x102531"},
{"url": "https://codeforces.com//problemset/problem/704/E", "name": "Iron Man", "tags": ["data structures", "geometry", "trees"], "problem_rating": "3300", "solved_by": "x279"},
{"url": "https://codeforces.com//problemset/problem/704/D", "name": "Captain America", "tags": ["flows", "greedy"], "problem_rating": "3100", "solved_by": "x788"},
{"url": "https://codeforces.com//problemset/problem/704/C", "name": "Black Widow", "tags": ["dp", "graphs", "implementation", "math"], "problem_rating": "2900", "solved_by": "x460"},
{"url": "https://codeforces.com//problemset/problem/704/B", "name": "Ant Man", "tags": ["dp", "graphs", "greedy"], "problem_rating": "2500", "solved_by": "x1619"},
{"url": "https://codeforces.com//problemset/problem/704/A", "name": "Thor", "tags": ["brute force", "data structures", "implementation"], "problem_rating": "1600", "solved_by": "x9071"},
{"url": "https://codeforces.com//problemset/problem/703/E", "name": "Mishka and Divisors", "tags": ["dp", "number theory"], "problem_rating": "2600", "solved_by": "x591"},
{"url": "https://codeforces.com//problemset/problem/703/D", "name": "Mishka and Interesting sum", "tags": ["data structures"], "problem_rating": "2100", "solved_by": "x3509"},
{"url": "https://codeforces.com//problemset/problem/703/C", "name": "Chris and Road", "tags": ["geometry", "implementation"], "problem_rating": "2100", "solved_by": "x1835"},
{"url": "https://codeforces.com//problemset/problem/703/B", "name": "Mishka and trip", "tags": ["implementation", "math"], "problem_rating": "1400", "solved_by": "x5652"},
{"url": "https://codeforces.com//problemset/problem/703/A", "name": "Mishka and Game", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x54999"},
{"url": "https://codeforces.com//problemset/problem/702/F", "name": "T-Shirts", "tags": ["data structures"], "problem_rating": "2800", "solved_by": "x1303"},
{"url": "https://codeforces.com//problemset/problem/702/E", "name": "Analysis of Pathes in Functional Graph", "tags": ["data structures", "graphs"], "problem_rating": "2100", "solved_by": "x2532"},
{"url": "https://codeforces.com//problemset/problem/702/D", "name": "Road to Post Office", "tags": ["math"], "problem_rating": "1900", "solved_by": "x3300"},
{"url": "https://codeforces.com//problemset/problem/702/C", "name": "Cellular Network", "tags": ["binary search", "implementation", "two pointers"], "problem_rating": "1500", "solved_by": "x13936"},
{"url": "https://codeforces.com//problemset/problem/702/B", "name": "Powers of Two", "tags": ["brute force", "data structures", "implementation", "math"], "problem_rating": "1500", "solved_by": "x11531"},
{"url": "https://codeforces.com//problemset/problem/702/A", "name": "Maximum Increase", "tags": ["dp", "greedy", "implementation"], "problem_rating": "800", "solved_by": "x43377"},
{"url": "https://codeforces.com//problemset/problem/701/C", "name": "They Are Everywhere", "tags": ["binary search", "strings", "two pointers"], "problem_rating": "1500", "solved_by": "x14336"},
{"url": "https://codeforces.com//problemset/problem/701/B", "name": "Cells Not Under Attack", "tags": ["data structures", "math"], "problem_rating": "1200", "solved_by": "x11647"},
{"url": "https://codeforces.com//problemset/problem/701/A", "name": "Cards", "tags": ["greedy", "implementation"], "problem_rating": "800", "solved_by": "x19360"},
{"url": "https://codeforces.com//problemset/problem/700/E", "name": "Cool Slogans", "tags": ["string suffix structures", "strings"], "problem_rating": "3300", "solved_by": "x1168"},
{"url": "https://codeforces.com//problemset/problem/700/D", "name": "Huffman Coding on Segment", "tags": ["data structures", "greedy"], "problem_rating": "3100", "solved_by": "x457"},
{"url": "https://codeforces.com//problemset/problem/700/C", "name": "Break Up", "tags": ["dfs and similar", "graphs"], "problem_rating": "2600", "solved_by": "x1260"},
{"url": "https://codeforces.com//problemset/problem/700/B", "name": "Connecting Universities", "tags": ["dfs and similar", "dp", "graphs", "trees"], "problem_rating": "1800", "solved_by": "x3880"},
{"url": "https://codeforces.com//problemset/problem/700/A", "name": "As Fast As Possible", "tags": ["binary search", "math"], "problem_rating": "1900", "solved_by": "x3164"},
{"url": "https://codeforces.com//problemset/problem/699/B", "name": "One Bomb", "tags": ["implementation"], "problem_rating": "1400", "solved_by": "x7554"},
{"url": "https://codeforces.com//problemset/problem/699/A", "name": "Launch of Collider", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x15488"},
{"url": "https://codeforces.com//problemset/problem/698/F", "name": "Coprime Permutation", "tags": ["combinatorics", "number theory"], "problem_rating": "3000", "solved_by": "x434"},
{"url": "https://codeforces.com//problemset/problem/698/E", "name": "Cron", "tags": [], "problem_rating": "2800", "solved_by": "x115"},
{"url": "https://codeforces.com//problemset/problem/698/D", "name": "Limak and Shooting Points", "tags": ["brute force", "geometry", "math"], "problem_rating": "2600", "solved_by": "x519"},
{"url": "https://codeforces.com//problemset/problem/698/C", "name": "LRU", "tags": ["bitmasks", "dp", "math", "probabilities"], "problem_rating": "2400", "solved_by": "x1288"},
{"url": "https://codeforces.com//problemset/problem/698/B", "name": "Fix a Tree", "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs", "trees"], "problem_rating": "1700", "solved_by": "x5660"},
{"url": "https://codeforces.com//problemset/problem/698/A", "name": "Vacations", "tags": ["dp"], "problem_rating": "1400", "solved_by": "x29448"},
{"url": "https://codeforces.com//problemset/problem/697/B", "name": "Barnicle", "tags": ["brute force", "implementation", "math", "strings"], "problem_rating": "1400", "solved_by": "x5688"},
{"url": "https://codeforces.com//problemset/problem/697/A", "name": "Pineapple Incident", "tags": ["implementation", "math"], "problem_rating": "900", "solved_by": "x12677"},
{"url": "https://codeforces.com//problemset/problem/696/F", "name": "...Dary!", "tags": ["binary search", "geometry", "two pointers"], "problem_rating": "3300", "solved_by": "x120"},
{"url": "https://codeforces.com//problemset/problem/696/E", "name": "...Wait for it...", "tags": ["data structures", "dsu", "trees"], "problem_rating": "3000", "solved_by": "x501"},
{"url": "https://codeforces.com//problemset/problem/696/D", "name": "Legen...", "tags": ["data structures", "dp", "matrices", "strings"], "problem_rating": "2500", "solved_by": "x1259"},
{"url": "https://codeforces.com//problemset/problem/696/C", "name": "PLEASE", "tags": ["combinatorics", "dp", "implementation", "math", "matrices"], "problem_rating": "2000", "solved_by": "x2072"},
{"url": "https://codeforces.com//problemset/problem/696/B", "name": "Puzzles", "tags": ["dfs and similar", "math", "probabilities", "trees"], "problem_rating": "1700", "solved_by": "x3422"},
{"url": "https://codeforces.com//problemset/problem/696/A", "name": "Lorenzo Von Matterhorn", "tags": ["brute force", "data structures", "implementation", "trees"], "problem_rating": "1500", "solved_by": "x6022"},
{"url": "https://codeforces.com//problemset/problem/691/F", "name": "Couple Cover", "tags": ["brute force", "dp", "number theory"], "problem_rating": "2200", "solved_by": "x1285"},
{"url": "https://codeforces.com//problemset/problem/691/E", "name": "Xor-sequences", "tags": ["matrices"], "problem_rating": "1900", "solved_by": "x2461"},
{"url": "https://codeforces.com//problemset/problem/691/D", "name": "Swaps in Permutation", "tags": ["dfs and similar", "dsu", "math"], "problem_rating": "1700", "solved_by": "x5402"},
{"url": "https://codeforces.com//problemset/problem/691/C", "name": "Exponential notation", "tags": ["implementation", "strings"], "problem_rating": "1800", "solved_by": "x2560"},
{"url": "https://codeforces.com//problemset/problem/691/B", "name": "s-palindrome", "tags": ["implementation", "strings"], "problem_rating": "1600", "solved_by": "x4776"},
{"url": "https://codeforces.com//problemset/problem/691/A", "name": "Fashion in Berland", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x10029"},
{"url": "https://codeforces.com//problemset/problem/690/F3", "name": "Tree of Life (hard)", "tags": ["trees"], "problem_rating": "3200", "solved_by": "x46"},
{"url": "https://codeforces.com//problemset/problem/690/F2", "name": "Tree of Life (medium)", "tags": ["constructive algorithms", "hashing", "trees"], "problem_rating": "2700", "solved_by": "x81"},
{"url": "https://codeforces.com//problemset/problem/690/F1", "name": "Tree of Life (easy)", "tags": [], "problem_rating": "1300", "solved_by": "x2129"},
{"url": "https://codeforces.com//problemset/problem/690/E2", "name": "Photographs (II)", "tags": [], "problem_rating": "2600", "solved_by": "x142"},
{"url": "https://codeforces.com//problemset/problem/690/E1", "name": "Photographs (I)", "tags": [], "problem_rating": "1800", "solved_by": "x673"},
{"url": "https://codeforces.com//problemset/problem/690/D3", "name": "The Wall (hard)", "tags": ["dp"], "problem_rating": "2100", "solved_by": "x497"},
{"url": "https://codeforces.com//problemset/problem/690/D2", "name": "The Wall (medium)", "tags": ["combinatorics"], "problem_rating": "1800", "solved_by": "x1222"},
{"url": "https://codeforces.com//problemset/problem/690/D1", "name": "The Wall (easy)", "tags": [], "problem_rating": "1200", "solved_by": "x2589"},
{"url": "https://codeforces.com//problemset/problem/690/C3", "name": "Brain Network (hard)", "tags": ["trees"], "problem_rating": "2200", "solved_by": "x890"},
{"url": "https://codeforces.com//problemset/problem/690/C2", "name": "Brain Network (medium)", "tags": ["dfs and similar", "graphs", "trees"], "problem_rating": "1500", "solved_by": "x3649"},
{"url": "https://codeforces.com//problemset/problem/690/C1", "name": "Brain Network (easy)", "tags": [], "problem_rating": "1300", "solved_by": "x2722"},
{"url": "https://codeforces.com//problemset/problem/690/B3", "name": "Recover Polygon (hard)", "tags": ["data structures"], "problem_rating": "2600", "solved_by": "x91"},
{"url": "https://codeforces.com//problemset/problem/690/B2", "name": "Recover Polygon (medium)", "tags": ["geometry"], "problem_rating": "2600", "solved_by": "x198"},
{"url": "https://codeforces.com//problemset/problem/690/B1", "name": "Recover Polygon (easy)", "tags": [], "problem_rating": "1700", "solved_by": "x935"},
{"url": "https://codeforces.com//problemset/problem/690/A3", "name": "Collective Mindsets (hard)", "tags": [], "problem_rating": "2400", "solved_by": "x530"},
{"url": "https://codeforces.com//problemset/problem/690/A2", "name": "Collective Mindsets (medium)", "tags": [], "problem_rating": "2300", "solved_by": "x691"},
{"url": "https://codeforces.com//problemset/problem/690/A1", "name": "Collective Mindsets (easy)", "tags": [], "problem_rating": "1100", "solved_by": "x2795"},
{"url": "https://codeforces.com//problemset/problem/689/E", "name": "Mike and Geometry Problem", "tags": ["combinatorics", "data structures", "dp", "geometry", "implementation"], "problem_rating": "2000", "solved_by": "x1853"},
{"url": "https://codeforces.com//problemset/problem/689/D", "name": "Friends and Subsequences", "tags": ["binary search", "data structures"], "problem_rating": "2100", "solved_by": "x3332"},
{"url": "https://codeforces.com//problemset/problem/689/C", "name": "Mike and Chocolate Thieves", "tags": ["binary search", "combinatorics", "math"], "problem_rating": "1700", "solved_by": "x5082"},
{"url": "https://codeforces.com//problemset/problem/689/B", "name": "Mike and Shortcuts", "tags": ["dfs and similar", "graphs", "greedy", "shortest paths"], "problem_rating": "1600", "solved_by": "x5658"},
{"url": "https://codeforces.com//problemset/problem/689/A", "name": "Mike and Cellphone", "tags": ["brute force", "constructive algorithms", "implementation"], "problem_rating": "1400", "solved_by": "x5228"},
{"url": "https://codeforces.com//problemset/problem/688/B", "name": "Lovely Palindromes", "tags": ["constructive algorithms", "math"], "problem_rating": "1000", "solved_by": "x31272"},
{"url": "https://codeforces.com//problemset/problem/688/A", "name": "Opponents", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x13848"},
{"url": "https://codeforces.com//problemset/problem/687/E", "name": "TOF", "tags": ["dfs and similar", "graphs"], "problem_rating": "2900", "solved_by": "x316"},
{"url": "https://codeforces.com//problemset/problem/687/D", "name": "Dividing Kingdom II", "tags": ["brute force", "data structures", "dsu", "graphs", "sortings"], "problem_rating": "2500", "solved_by": "x861"},
{"url": "https://codeforces.com//problemset/problem/687/C", "name": "The Values You Can Make", "tags": ["dp"], "problem_rating": "1900", "solved_by": "x5217"},
{"url": "https://codeforces.com//problemset/problem/687/B", "name": "Remainders Game", "tags": ["chinese remainder theorem", "math", "number theory"], "problem_rating": "1800", "solved_by": "x5714"},
{"url": "https://codeforces.com//problemset/problem/687/A", "name": "NP-Hard Problem", "tags": ["dfs and similar", "graphs"], "problem_rating": "1500", "solved_by": "x14010"},
{"url": "https://codeforces.com//problemset/problem/686/B", "name": "Little Robber Girl's Zoo", "tags": ["constructive algorithms", "implementation", "sortings"], "problem_rating": "1100", "solved_by": "x7747"},
{"url": "https://codeforces.com//problemset/problem/686/A", "name": "Free Ice Cream", "tags": ["constructive algorithms", "implementation"], "problem_rating": "800", "solved_by": "x36543"},
{"url": "https://codeforces.com//problemset/problem/685/E", "name": "Travelling Through the Snow Queen's Kingdom", "tags": ["bitmasks", "brute force", "divide and conquer", "graphs"], "problem_rating": "2800", "solved_by": "x539"},
{"url": "https://codeforces.com//problemset/problem/685/D", "name": "Kay and Eternity", "tags": ["brute force", "implementation", "sortings"], "problem_rating": "2600", "solved_by": "x480"},
{"url": "https://codeforces.com//problemset/problem/685/C", "name": "Optimal Point", "tags": ["binary search", "math"], "problem_rating": "2900", "solved_by": "x577"},
{"url": "https://codeforces.com//problemset/problem/685/B", "name": "Kay and Snowflake", "tags": ["data structures", "dfs and similar", "dp", "trees"], "problem_rating": "1900", "solved_by": "x3902"},
{"url": "https://codeforces.com//problemset/problem/685/A", "name": "Robbers' watch", "tags": ["brute force", "combinatorics", "dp", "math"], "problem_rating": "1700", "solved_by": "x4161"},
{"url": "https://codeforces.com//problemset/problem/683/J", "name": "The Hero with Bombs", "tags": ["*special problem"], "problem_rating": "3000", "solved_by": "x40"},
{"url": "https://codeforces.com//problemset/problem/683/I", "name": "Loader", "tags": ["*special problem", "graphs"], "problem_rating": "2500", "solved_by": "x38"},
{"url": "https://codeforces.com//problemset/problem/683/H", "name": "Exchange of Books", "tags": ["*special problem"], "problem_rating": "1900", "solved_by": "x95"},
{"url": "https://codeforces.com//problemset/problem/683/G", "name": "The Fraction", "tags": ["*special problem"], "problem_rating": "1900", "solved_by": "x130"},
{"url": "https://codeforces.com//problemset/problem/683/F", "name": "Reformat the String", "tags": ["*special problem"], "problem_rating": "1800", "solved_by": "x146"},
{"url": "https://codeforces.com//problemset/problem/683/E", "name": "Hammer throwing", "tags": ["*special problem"], "problem_rating": "1800", "solved_by": "x187"},
{"url": "https://codeforces.com//problemset/problem/683/D", "name": "Chocolate Bar", "tags": ["*special problem", "math"], "problem_rating": "1400", "solved_by": "x322"},
{"url": "https://codeforces.com//problemset/problem/683/C", "name": "Symmetric Difference", "tags": ["*special problem"], "problem_rating": "1600", "solved_by": "x315"},
{"url": "https://codeforces.com//problemset/problem/683/B", "name": "The Teacher of Physical Education", "tags": ["*special problem"], "problem_rating": "1600", "solved_by": "x317"},
{"url": "https://codeforces.com//problemset/problem/683/A", "name": "The Check of the Point", "tags": ["*special problem", "geometry"], "problem_rating": "1200", "solved_by": "x787"},
{"url": "https://codeforces.com//problemset/problem/682/E", "name": "Alyona and Triangles", "tags": ["geometry", "two pointers"], "problem_rating": "2600", "solved_by": "x661"},
{"url": "https://codeforces.com//problemset/problem/682/D", "name": "Alyona and Strings", "tags": ["dp", "strings"], "problem_rating": "1900", "solved_by": "x3256"},
{"url": "https://codeforces.com//problemset/problem/682/C", "name": "Alyona and the Tree", "tags": ["dfs and similar", "dp", "graphs", "trees"], "problem_rating": "1600", "solved_by": "x7078"},
{"url": "https://codeforces.com//problemset/problem/682/B", "name": "Alyona and Mex", "tags": ["sortings"], "problem_rating": "1200", "solved_by": "x11206"},
{"url": "https://codeforces.com//problemset/problem/682/A", "name": "Alyona and Numbers", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "1100", "solved_by": "x21102"},
{"url": "https://codeforces.com//problemset/problem/681/E", "name": "Runaway to a Shadow", "tags": ["geometry", "sortings"], "problem_rating": "2500", "solved_by": "x457"},
{"url": "https://codeforces.com//problemset/problem/681/D", "name": "Gifts by the List", "tags": ["constructive algorithms", "dfs and similar", "graphs", "trees"], "problem_rating": "2000", "solved_by": "x1733"},
{"url": "https://codeforces.com//problemset/problem/681/C", "name": "Heap Operations", "tags": ["constructive algorithms", "data structures", "greedy"], "problem_rating": "1600", "solved_by": "x7449"},
{"url": "https://codeforces.com//problemset/problem/681/B", "name": "Economy Game", "tags": ["brute force"], "problem_rating": "1300", "solved_by": "x8832"},
{"url": "https://codeforces.com//problemset/problem/681/A", "name": "A Good Contest", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x15220"},
{"url": "https://codeforces.com//problemset/problem/680/B", "name": "Bear and Finding Criminals", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1000", "solved_by": "x23905"},
{"url": "https://codeforces.com//problemset/problem/680/A", "name": "Bear and Five Cards", "tags": ["constructive algorithms", "implementation"], "problem_rating": "800", "solved_by": "x12262"},
{"url": "https://codeforces.com//problemset/problem/679/E", "name": "Bear and Bad Powers of 42", "tags": ["data structures"], "problem_rating": "3100", "solved_by": "x677"},
{"url": "https://codeforces.com//problemset/problem/679/D", "name": "Bear and Chase", "tags": ["brute force", "dfs and similar", "graphs", "implementation", "math", "probabilities"], "problem_rating": "2900", "solved_by": "x313"},
{"url": "https://codeforces.com//problemset/problem/679/C", "name": "Bear and Square Grid", "tags": ["dfs and similar", "dsu", "implementation"], "problem_rating": "2400", "solved_by": "x1145"},
{"url": "https://codeforces.com//problemset/problem/679/B", "name": "Bear and Tower of Cubes", "tags": ["binary search", "dp", "greedy"], "problem_rating": "2200", "solved_by": "x2122"},
{"url": "https://codeforces.com//problemset/problem/679/A", "name": "Bear and Prime 100", "tags": ["constructive algorithms", "interactive", "math"], "problem_rating": "1400", "solved_by": "x12591"},
{"url": "https://codeforces.com//problemset/problem/678/F", "name": "Lena and Queries", "tags": ["data structures", "divide and conquer", "geometry"], "problem_rating": "2500", "solved_by": "x861"},
{"url": "https://codeforces.com//problemset/problem/678/E", "name": "Another Sith Tournament", "tags": ["bitmasks", "dp", "math", "probabilities"], "problem_rating": "2200", "solved_by": "x2136"},
{"url": "https://codeforces.com//problemset/problem/678/D", "name": "Iterated Linear Function", "tags": ["math", "number theory"], "problem_rating": "1700", "solved_by": "x4447"},
{"url": "https://codeforces.com//problemset/problem/678/C", "name": "Joty and Chocolate", "tags": ["implementation", "math", "number theory"], "problem_rating": "1600", "solved_by": "x9292"},
{"url": "https://codeforces.com//problemset/problem/678/B", "name": "The Same Calendar", "tags": ["implementation"], "problem_rating": "1600", "solved_by": "x4066"},
{"url": "https://codeforces.com//problemset/problem/678/A", "name": "Johny Likes Numbers", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x12700"},
{"url": "https://codeforces.com//problemset/problem/677/E", "name": "Vanya and Balloons", "tags": ["binary search", "brute force", "dp", "implementation"], "problem_rating": "2300", "solved_by": "x594"},
{"url": "https://codeforces.com//problemset/problem/677/D", "name": "Vanya and Treasure", "tags": ["data structures", "dp", "graphs", "shortest paths"], "problem_rating": "2300", "solved_by": "x1549"},
{"url": "https://codeforces.com//problemset/problem/677/C", "name": "Vanya and Label", "tags": ["bitmasks", "combinatorics", "implementation", "strings"], "problem_rating": "1500", "solved_by": "x6338"},
{"url": "https://codeforces.com//problemset/problem/677/B", "name": "Vanya and Food Processor", "tags": ["implementation", "math"], "problem_rating": "1400", "solved_by": "x7580"},
{"url": "https://codeforces.com//problemset/problem/677/A", "name": "Vanya and Fence", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x135396"},
{"url": "https://codeforces.com//problemset/problem/676/E", "name": "The Last Fight Between Human and AI", "tags": ["math"], "problem_rating": "2400", "solved_by": "x885"},
{"url": "https://codeforces.com//problemset/problem/676/D", "name": "Theseus and labyrinth", "tags": ["graphs", "implementation", "shortest paths"], "problem_rating": "2000", "solved_by": "x1856"},
{"url": "https://codeforces.com//problemset/problem/676/C", "name": "Vasya and String", "tags": ["binary search", "dp", "strings", "two pointers"], "problem_rating": "1500", "solved_by": "x18446"},
{"url": "https://codeforces.com//problemset/problem/676/B", "name": "Pyramid of Glasses", "tags": ["implementation", "math", "math"], "problem_rating": "1500", "solved_by": "x5473"},
{"url": "https://codeforces.com//problemset/problem/676/A", "name": "Nicholas and Permutation", "tags": ["constructive algorithms", "implementation"], "problem_rating": "800", "solved_by": "x13720"},
{"url": "https://codeforces.com//problemset/problem/675/E", "name": "Trains and Statistic", "tags": ["data structures", "dp", "greedy"], "problem_rating": "2300", "solved_by": "x2659"},
{"url": "https://codeforces.com//problemset/problem/675/D", "name": "Tree Construction", "tags": ["data structures", "trees"], "problem_rating": "1800", "solved_by": "x3730"},
{"url": "https://codeforces.com//problemset/problem/675/C", "name": "Money Transfers", "tags": ["constructive algorithms", "data structures", "greedy", "sortings"], "problem_rating": "2100", "solved_by": "x3618"},
{"url": "https://codeforces.com//problemset/problem/675/B", "name": "Restoring Painting", "tags": ["brute force", "constructive algorithms", "math"], "problem_rating": "1400", "solved_by": "x7343"},
{"url": "https://codeforces.com//problemset/problem/675/A", "name": "Infinite Sequence", "tags": ["math"], "problem_rating": "1100", "solved_by": "x14841"},
{"url": "https://codeforces.com//problemset/problem/673/B", "name": "Problems for Round", "tags": ["greedy", "implementation"], "problem_rating": "1300", "solved_by": "x3505"},
{"url": "https://codeforces.com//problemset/problem/673/A", "name": "Bear and Game", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x9985"},
{"url": "https://codeforces.com//problemset/problem/672/B", "name": "Different is Good", "tags": ["constructive algorithms", "implementation", "strings"], "problem_rating": "1000", "solved_by": "x17186"},
{"url": "https://codeforces.com//problemset/problem/672/A", "name": "Summer Camp", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x15173"},
{"url": "https://codeforces.com//problemset/problem/671/E", "name": "Organizing a Race", "tags": ["data structures", "greedy"], "problem_rating": "3300", "solved_by": "x403"},
{"url": "https://codeforces.com//problemset/problem/671/D", "name": "Roads in Yusland", "tags": ["data structures", "dp", "greedy"], "problem_rating": "2900", "solved_by": "x1130"},
{"url": "https://codeforces.com//problemset/problem/671/C", "name": "Ultimate Weirdness of an Array", "tags": ["data structures", "number theory"], "problem_rating": "2800", "solved_by": "x679"},
{"url": "https://codeforces.com//problemset/problem/671/B", "name": "Robin Hood", "tags": ["binary search", "greedy"], "problem_rating": "2000", "solved_by": "x2987"},
{"url": "https://codeforces.com//problemset/problem/671/A", "name": "Recycling Bottles", "tags": ["dp", "geometry", "greedy", "implementation"], "problem_rating": "1800", "solved_by": "x4171"},
{"url": "https://codeforces.com//problemset/problem/670/F", "name": "Restore a Number", "tags": ["brute force", "constructive algorithms", "strings"], "problem_rating": "2300", "solved_by": "x848"},
{"url": "https://codeforces.com//problemset/problem/670/E", "name": "Correct Bracket Sequence Editor", "tags": ["data structures", "dsu", "strings"], "problem_rating": "1700", "solved_by": "x3176"},
{"url": "https://codeforces.com//problemset/problem/670/D2", "name": "Magic Powder - 2", "tags": ["binary search", "implementation"], "problem_rating": "1500", "solved_by": "x13678"},
{"url": "https://codeforces.com//problemset/problem/670/D1", "name": "Magic Powder - 1", "tags": ["binary search", "brute force", "implementation"], "problem_rating": "1400", "solved_by": "x16877"},
{"url": "https://codeforces.com//problemset/problem/670/C", "name": "Cinema", "tags": ["implementation", "sortings"], "problem_rating": "1300", "solved_by": "x9021"},
{"url": "https://codeforces.com//problemset/problem/670/B", "name": "Game of Robots", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x11087"},
{"url": "https://codeforces.com//problemset/problem/670/A", "name": "Holidays", "tags": ["brute force", "constructive algorithms", "greedy", "math"], "problem_rating": "900", "solved_by": "x16695"},
{"url": "https://codeforces.com//problemset/problem/669/A", "name": "Little Artem and Presents", "tags": ["math"], "problem_rating": "800", "solved_by": "x10642"},
{"url": "https://codeforces.com//problemset/problem/667/B", "name": "Coat of Anticubism", "tags": ["constructive algorithms", "geometry"], "problem_rating": "1100", "solved_by": "x5515"},
{"url": "https://codeforces.com//problemset/problem/667/A", "name": "Pouring Rain", "tags": ["geometry", "math"], "problem_rating": "1100", "solved_by": "x7885"},
{"url": "https://codeforces.com//problemset/problem/666/E", "name": "Forensic Examination", "tags": ["data structures", "string suffix structures"], "problem_rating": "3100", "solved_by": "x1360"},
{"url": "https://codeforces.com//problemset/problem/666/D", "name": "Chain Reaction", "tags": ["brute force", "geometry"], "problem_rating": "3000", "solved_by": "x276"},
{"url": "https://codeforces.com//problemset/problem/666/C", "name": "Codeword", "tags": ["combinatorics", "strings"], "problem_rating": "2500", "solved_by": "x774"},
{"url": "https://codeforces.com//problemset/problem/666/B", "name": "World Tour", "tags": ["graphs", "shortest paths"], "problem_rating": "2000", "solved_by": "x2117"},
{"url": "https://codeforces.com//problemset/problem/666/A", "name": "Reberland Linguistics", "tags": ["dp", "implementation", "strings"], "problem_rating": "1800", "solved_by": "x3435"},
{"url": "https://codeforces.com//problemset/problem/665/F", "name": "Four Divisors", "tags": ["data structures", "dp", "math", "number theory", "sortings", "two pointers"], "problem_rating": "2400", "solved_by": "x595"},
{"url": "https://codeforces.com//problemset/problem/665/E", "name": "Beautiful Subarrays", "tags": ["data structures", "divide and conquer", "strings", "trees"], "problem_rating": "2100", "solved_by": "x2988"},
{"url": "https://codeforces.com//problemset/problem/665/D", "name": "Simple Subset", "tags": ["constructive algorithms", "greedy", "number theory"], "problem_rating": "1800", "solved_by": "x3329"},
{"url": "https://codeforces.com//problemset/problem/665/C", "name": "Simple Strings", "tags": ["dp", "greedy", "strings"], "problem_rating": "1300", "solved_by": "x9743"},
{"url": "https://codeforces.com//problemset/problem/665/B", "name": "Shopping", "tags": ["brute force"], "problem_rating": "1400", "solved_by": "x3508"},
{"url": "https://codeforces.com//problemset/problem/665/A", "name": "Buses Between Cities", "tags": ["implementation"], "problem_rating": "1600", "solved_by": "x2900"},
{"url": "https://codeforces.com//problemset/problem/664/A", "name": "Complicated GCD", "tags": ["math", "number theory"], "problem_rating": "800", "solved_by": "x17851"},
{"url": "https://codeforces.com//problemset/problem/663/A", "name": "Rebus", "tags": ["constructive algorithms", "expression parsing", "greedy", "math"], "problem_rating": "1800", "solved_by": "x3276"},
{"url": "https://codeforces.com//problemset/problem/662/E", "name": "To Hack or not to Hack", "tags": ["brute force", "dp", "greedy"], "problem_rating": "3100", "solved_by": "x135"},
{"url": "https://codeforces.com//problemset/problem/662/D", "name": "International Olympiad", "tags": ["constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "2000", "solved_by": "x1622"},
{"url": "https://codeforces.com//problemset/problem/662/C", "name": "Binary Table", "tags": ["bitmasks", "brute force", "divide and conquer", "dp", "fft", "math"], "problem_rating": "2600", "solved_by": "x1984"},
{"url": "https://codeforces.com//problemset/problem/662/B", "name": "Graph Coloring", "tags": ["dfs and similar", "graphs"], "problem_rating": "2200", "solved_by": "x1453"},
{"url": "https://codeforces.com//problemset/problem/662/A", "name": "Gambling Nim", "tags": ["bitmasks", "math", "matrices", "probabilities"], "problem_rating": "2400", "solved_by": "x451"},
{"url": "https://codeforces.com//problemset/problem/661/H", "name": "Rotate Matrix", "tags": ["*special problem"], "problem_rating": "2400", "solved_by": "x68"},
{"url": "https://codeforces.com//problemset/problem/661/G", "name": "Hungarian Notation", "tags": ["*special problem"], "problem_rating": "2200", "solved_by": "x55"},
{"url": "https://codeforces.com//problemset/problem/661/F", "name": "Primes in Interval", "tags": ["*special problem"], "problem_rating": "1900", "solved_by": "x258"},
{"url": "https://codeforces.com//problemset/problem/661/E", "name": "Divisibility Check", "tags": ["*special problem"], "problem_rating": "2000", "solved_by": "x83"},
{"url": "https://codeforces.com//problemset/problem/661/D", "name": "Maximal Difference", "tags": ["*special problem"], "problem_rating": "2100", "solved_by": "x130"},
{"url": "https://codeforces.com//problemset/problem/661/C", "name": "Array Sum", "tags": ["*special problem"], "problem_rating": "2000", "solved_by": "x131"},
{"url": "https://codeforces.com//problemset/problem/661/B", "name": "Seasons", "tags": ["*special problem"], "problem_rating": "1900", "solved_by": "x227"},
{"url": "https://codeforces.com//problemset/problem/661/A", "name": "Lazy Caterer Sequence", "tags": ["*special problem"], "problem_rating": "1300", "solved_by": "x632"},
{"url": "https://codeforces.com//problemset/problem/660/F", "name": "Bear and Bowling 4", "tags": ["binary search", "data structures", "divide and conquer", "geometry", "ternary search"], "problem_rating": "2500", "solved_by": "x1591"},
{"url": "https://codeforces.com//problemset/problem/660/E", "name": "Different Subsets For All Tuples", "tags": ["combinatorics", "math"], "problem_rating": "2300", "solved_by": "x1323"},
{"url": "https://codeforces.com//problemset/problem/660/D", "name": "Number of Parallelograms", "tags": ["geometry"], "problem_rating": "1900", "solved_by": "x3912"},
{"url": "https://codeforces.com//problemset/problem/660/C", "name": "Hard Process", "tags": ["binary search", "dp", "two pointers"], "problem_rating": "1600", "solved_by": "x9237"},
{"url": "https://codeforces.com//problemset/problem/660/B", "name": "Seating On Bus", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x5285"},
{"url": "https://codeforces.com//problemset/problem/660/A", "name": "Co-prime Array", "tags": ["greedy", "implementation", "math", "number theory"], "problem_rating": "1200", "solved_by": "x8676"},
{"url": "https://codeforces.com//problemset/problem/659/G", "name": "Fence Divercity", "tags": ["combinatorics", "dp", "number theory"], "problem_rating": "2300", "solved_by": "x1021"},
{"url": "https://codeforces.com//problemset/problem/659/F", "name": "Polycarp and Hay", "tags": ["dfs and similar", "dsu", "graphs", "greedy", "sortings"], "problem_rating": "2000", "solved_by": "x1763"},
{"url": "https://codeforces.com//problemset/problem/659/E", "name": "New Reform", "tags": ["data structures", "dfs and similar", "dsu", "graphs", "greedy"], "problem_rating": "1600", "solved_by": "x7394"},
{"url": "https://codeforces.com//problemset/problem/659/D", "name": "Bicycle Race", "tags": ["geometry", "implementation", "math"], "problem_rating": "1500", "solved_by": "x6242"},
{"url": "https://codeforces.com//problemset/problem/659/C", "name": "Tanya and Toys", "tags": ["greedy", "implementation"], "problem_rating": "1200", "solved_by": "x11433"},
{"url": "https://codeforces.com//problemset/problem/659/B", "name": "Qualifying Contest", "tags": ["constructive algorithms", "sortings"], "problem_rating": "1300", "solved_by": "x6223"},
{"url": "https://codeforces.com//problemset/problem/659/A", "name": "Round House", "tags": ["implementation", "math"], "problem_rating": "1000", "solved_by": "x15520"},
{"url": "https://codeforces.com//problemset/problem/658/A", "name": "Bear and Reverse Radewoosh", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x7021"},
{"url": "https://codeforces.com//problemset/problem/656/G", "name": "You're a Professional", "tags": ["*special problem"], "problem_rating": "1900", "solved_by": "x481"},
{"url": "https://codeforces.com//problemset/problem/656/F", "name": "Ace It!", "tags": ["*special problem"], "problem_rating": "1900", "solved_by": "x890"},
{"url": "https://codeforces.com//problemset/problem/656/E", "name": "Out of Controls", "tags": ["*special problem"], "problem_rating": "2000", "solved_by": "x721"},
{"url": "https://codeforces.com//problemset/problem/656/D", "name": "Rosetta Problem", "tags": ["*special problem"], "problem_rating": "2100", "solved_by": "x948"},
{"url": "https://codeforces.com//problemset/problem/656/C", "name": "Without Text", "tags": ["*special problem"], "problem_rating": "2000", "solved_by": "x684"},
{"url": "https://codeforces.com//problemset/problem/656/B", "name": "Scrambled", "tags": ["*special problem", "implementation"], "problem_rating": "1700", "solved_by": "x1645"},
{"url": "https://codeforces.com//problemset/problem/656/A", "name": "Da Vinci Powers", "tags": ["*special problem"], "problem_rating": "1900", "solved_by": "x3586"},
{"url": "https://codeforces.com//problemset/problem/653/G", "name": "Move by Prime", "tags": ["combinatorics", "math", "number theory"], "problem_rating": "3100", "solved_by": "x524"},
{"url": "https://codeforces.com//problemset/problem/653/F", "name": "Paper task", "tags": ["data structures", "string suffix structures", "strings"], "problem_rating": "2600", "solved_by": "x977"},
{"url": "https://codeforces.com//problemset/problem/653/E", "name": "Bear and Forgotten Tree 2", "tags": ["dfs and similar", "dsu", "graphs", "trees"], "problem_rating": "2400", "solved_by": "x1468"},
{"url": "https://codeforces.com//problemset/problem/653/D", "name": "Delivery Bears", "tags": ["binary search", "flows", "graphs"], "problem_rating": "2200", "solved_by": "x2379"},
{"url": "https://codeforces.com//problemset/problem/653/C", "name": "Bear and Up-Down", "tags": ["brute force", "implementation"], "problem_rating": "1900", "solved_by": "x1633"},
{"url": "https://codeforces.com//problemset/problem/653/B", "name": "Bear and Compressing", "tags": ["brute force", "dfs and similar", "dp", "strings"], "problem_rating": "1300", "solved_by": "x4927"},
{"url": "https://codeforces.com//problemset/problem/653/A", "name": "Bear and Three Balls", "tags": ["brute force", "implementation", "sortings"], "problem_rating": "900", "solved_by": "x8121"},
{"url": "https://codeforces.com//problemset/problem/652/F", "name": "Ants on a Circle", "tags": ["constructive algorithms", "math"], "problem_rating": "2800", "solved_by": "x536"},
{"url": "https://codeforces.com//problemset/problem/652/E", "name": "Pursuit For Artifacts", "tags": ["dfs and similar", "dsu", "graphs", "trees"], "problem_rating": "2300", "solved_by": "x2062"},
{"url": "https://codeforces.com//problemset/problem/652/D", "name": "Nested Segments", "tags": ["data structures", "sortings"], "problem_rating": "1800", "solved_by": "x3895"},
{"url": "https://codeforces.com//problemset/problem/652/C", "name": "Foe Pairs", "tags": ["combinatorics", "sortings", "two pointers"], "problem_rating": "1800", "solved_by": "x3147"},
{"url": "https://codeforces.com//problemset/problem/652/B", "name": "z-sort", "tags": ["sortings"], "problem_rating": "1000", "solved_by": "x10005"},
{"url": "https://codeforces.com//problemset/problem/652/A", "name": "Gabriel and Caterpillar", "tags": ["implementation", "math"], "problem_rating": "1400", "solved_by": "x4591"},
{"url": "https://codeforces.com//problemset/problem/651/B", "name": "Beautiful Paintings", "tags": ["greedy", "sortings"], "problem_rating": "1200", "solved_by": "x11453"},
{"url": "https://codeforces.com//problemset/problem/651/A", "name": "Joysticks", "tags": ["dp", "greedy", "implementation", "math"], "problem_rating": "1100", "solved_by": "x22752"},
{"url": "https://codeforces.com//problemset/problem/650/E", "name": "Clockwork Bomb", "tags": ["data structures", "dfs and similar", "dsu", "greedy", "trees"], "problem_rating": "3200", "solved_by": "x593"},
{"url": "https://codeforces.com//problemset/problem/650/D", "name": "Zip-line", "tags": ["binary search", "data structures", "dp", "hashing"], "problem_rating": "2600", "solved_by": "x1254"},
{"url": "https://codeforces.com//problemset/problem/650/C", "name": "Table Compression", "tags": ["dfs and similar", "dp", "dsu", "graphs", "greedy"], "problem_rating": "2200", "solved_by": "x1957"},
{"url": "https://codeforces.com//problemset/problem/650/B", "name": "Image Preview", "tags": ["binary search", "brute force", "dp", "two pointers"], "problem_rating": "1900", "solved_by": "x3320"},
{"url": "https://codeforces.com//problemset/problem/650/A", "name": "Watchmen", "tags": ["data structures", "geometry", "math"], "problem_rating": "1400", "solved_by": "x15273"},
{"url": "https://codeforces.com//problemset/problem/649/E", "name": "Автобус", "tags": ["binary search", "data structures", "greedy", "sortings"], "problem_rating": "2100", "solved_by": "x107"},
{"url": "https://codeforces.com//problemset/problem/649/D", "name": "Дефрагментация памяти", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "1600", "solved_by": "x346"},
{"url": "https://codeforces.com//problemset/problem/649/C", "name": "Печать условий", "tags": ["constructive algorithms", "greedy", "sortings"], "problem_rating": "1500", "solved_by": "x443"},
{"url": "https://codeforces.com//problemset/problem/649/B", "name": "Этажи", "tags": ["constructive algorithms"], "problem_rating": "1400", "solved_by": "x527"},
{"url": "https://codeforces.com//problemset/problem/649/A", "name": "Любимые числа Поликарпа", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1000", "solved_by": "x1147"},
{"url": "https://codeforces.com//problemset/problem/648/E", "name": "Собери число", "tags": ["graphs", "shortest paths"], "problem_rating": "2300", "solved_by": "x119"},
{"url": "https://codeforces.com//problemset/problem/648/D", "name": "Собачки и миски", "tags": ["data structures", "greedy", "sortings"], "problem_rating": "1900", "solved_by": "x228"},
{"url": "https://codeforces.com//problemset/problem/648/C", "name": "Путь Робота", "tags": ["constructive algorithms", "dfs and similar", "graphs"], "problem_rating": "1100", "solved_by": "x907"},
{"url": "https://codeforces.com//problemset/problem/648/B", "name": "Собери стол", "tags": ["constructive algorithms", "sortings"], "problem_rating": "800", "solved_by": "x1300"},
{"url": "https://codeforces.com//problemset/problem/648/A", "name": "Наибольший подъем", "tags": ["constructive algorithms", "implementation"], "problem_rating": "900", "solved_by": "x626"},
{"url": "https://codeforces.com//problemset/problem/645/G", "name": "Armistice Area Apportionment", "tags": ["binary search", "geometry"], "problem_rating": "3200", "solved_by": "x112"},
{"url": "https://codeforces.com//problemset/problem/645/F", "name": "Cowslip Collections", "tags": ["combinatorics", "math", "number theory"], "problem_rating": "2500", "solved_by": "x770"},
{"url": "https://codeforces.com//problemset/problem/645/E", "name": "Intellectual Inquiry", "tags": ["dp", "greedy", "strings"], "problem_rating": "2200", "solved_by": "x1232"},
{"url": "https://codeforces.com//problemset/problem/645/D", "name": "Robot Rapping Results Report", "tags": ["binary search", "dp", "graphs"], "problem_rating": "1800", "solved_by": "x2819"},
{"url": "https://codeforces.com//problemset/problem/645/C", "name": "Enduring Exodus", "tags": ["binary search", "two pointers"], "problem_rating": "1600", "solved_by": "x3191"},
{"url": "https://codeforces.com//problemset/problem/645/B", "name": "Mischievous Mess Makers", "tags": ["greedy", "math"], "problem_rating": "1200", "solved_by": "x3355"},
{"url": "https://codeforces.com//problemset/problem/645/A", "name": "Amity Assessment", "tags": ["brute force", "constructive algorithms", "implementation"], "problem_rating": "1200", "solved_by": "x3404"},
{"url": "https://codeforces.com//problemset/problem/644/C", "name": "Hostname Aliases", "tags": ["*special problem", "binary search", "data structures", "implementation", "sortings", "strings"], "problem_rating": "2100", "solved_by": "x912"},
{"url": "https://codeforces.com//problemset/problem/644/B", "name": "Processing Queries", "tags": ["*special problem", "constructive algorithms", "data structures", "two pointers"], "problem_rating": "1700", "solved_by": "x2629"},
{"url": "https://codeforces.com//problemset/problem/644/A", "name": "Parliament of Berland", "tags": ["*special problem", "constructive algorithms"], "problem_rating": "1000", "solved_by": "x4417"},
{"url": "https://codeforces.com//problemset/problem/643/G", "name": "Choosing Ads", "tags": ["data structures"], "problem_rating": "3200", "solved_by": "x940"},
{"url": "https://codeforces.com//problemset/problem/643/F", "name": "Bears and Juice", "tags": ["dp", "math", "meet-in-the-middle"], "problem_rating": "2900", "solved_by": "x697"},
{"url": "https://codeforces.com//problemset/problem/643/E", "name": "Bear and Destroying Subtrees", "tags": ["dp", "math", "probabilities", "trees"], "problem_rating": "2700", "solved_by": "x587"},
{"url": "https://codeforces.com//problemset/problem/643/D", "name": "Bearish Fanpages", "tags": [], "problem_rating": "2900", "solved_by": "x312"},
{"url": "https://codeforces.com//problemset/problem/643/C", "name": "Levels and Regions", "tags": ["dp"], "problem_rating": "2400", "solved_by": "x1334"},
{"url": "https://codeforces.com//problemset/problem/643/B", "name": "Bear and Two Paths", "tags": ["constructive algorithms", "graphs"], "problem_rating": "1600", "solved_by": "x3152"},
{"url": "https://codeforces.com//problemset/problem/643/A", "name": "Bear and Colors", "tags": ["implementation"], "problem_rating": "1500", "solved_by": "x4121"},
{"url": "https://codeforces.com//problemset/problem/641/G", "name": "Little Artem and Graph", "tags": [], "problem_rating": "2300", "solved_by": "x89"},
{"url": "https://codeforces.com//problemset/problem/641/F", "name": "Little Artem and 2-SAT", "tags": [], "problem_rating": "3000", "solved_by": "x185"},
{"url": "https://codeforces.com//problemset/problem/641/E", "name": "Little Artem and Time Machine", "tags": ["data structures"], "problem_rating": "2000", "solved_by": "x3026"},
{"url": "https://codeforces.com//problemset/problem/641/D", "name": "Little Artem and Random Variable", "tags": ["dp", "implementation", "math", "probabilities"], "problem_rating": "2400", "solved_by": "x1101"},
{"url": "https://codeforces.com//problemset/problem/641/C", "name": "Little Artem and Dance", "tags": ["brute force", "constructive algorithms", "implementation"], "problem_rating": "1800", "solved_by": "x2895"},
{"url": "https://codeforces.com//problemset/problem/641/B", "name": "Little Artem and Matrix", "tags": ["implementation"], "problem_rating": "1400", "solved_by": "x3839"},
{"url": "https://codeforces.com//problemset/problem/641/A", "name": "Little Artem and Grasshopper", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x5873"},
{"url": "https://codeforces.com//problemset/problem/639/F", "name": "Bear and Chemistry", "tags": ["data structures", "dfs and similar", "graphs", "trees"], "problem_rating": "3300", "solved_by": "x413"},
{"url": "https://codeforces.com//problemset/problem/639/E", "name": "Bear and Paradox", "tags": ["binary search", "greedy", "math", "sortings"], "problem_rating": "2800", "solved_by": "x574"},
{"url": "https://codeforces.com//problemset/problem/639/D", "name": "Bear and Contribution", "tags": ["data structures", "greedy", "sortings", "two pointers"], "problem_rating": "2400", "solved_by": "x829"},
{"url": "https://codeforces.com//problemset/problem/639/C", "name": "Bear and Polynomials", "tags": ["hashing", "implementation", "math"], "problem_rating": "2200", "solved_by": "x1191"},
{"url": "https://codeforces.com//problemset/problem/639/B", "name": "Bear and Forgotten Tree 3", "tags": ["constructive algorithms", "graphs", "trees"], "problem_rating": "1600", "solved_by": "x6457"},
{"url": "https://codeforces.com//problemset/problem/639/A", "name": "Bear and Displayed Friends", "tags": ["implementation"], "problem_rating": "1200", "solved_by": "x6121"},
{"url": "https://codeforces.com//problemset/problem/638/D", "name": "Three-dimensional Turtle Super Computer", "tags": ["brute force", "dfs and similar", "graphs"], "problem_rating": "1800", "solved_by": "x704"},
{"url": "https://codeforces.com//problemset/problem/638/C", "name": "Road Improvement", "tags": ["*special problem", "dfs and similar", "graphs", "greedy", "trees"], "problem_rating": "1800", "solved_by": "x1550"},
{"url": "https://codeforces.com//problemset/problem/638/B", "name": "Making Genome in Berland", "tags": ["*special problem", "dfs and similar", "strings"], "problem_rating": "1500", "solved_by": "x1954"},
{"url": "https://codeforces.com//problemset/problem/638/A", "name": "Home Numbers", "tags": ["*special problem", "constructive algorithms", "math"], "problem_rating": "1100", "solved_by": "x3822"},
{"url": "https://codeforces.com//problemset/problem/637/D", "name": "Running with Obstacles", "tags": ["*special problem", "data structures", "dp", "greedy"], "problem_rating": "1600", "solved_by": "x1981"},
{"url": "https://codeforces.com//problemset/problem/637/C", "name": "Promocodes with Mistakes", "tags": ["*special problem", "brute force", "constructive algorithms", "implementation"], "problem_rating": "1400", "solved_by": "x2413"},
{"url": "https://codeforces.com//problemset/problem/637/B", "name": "Chat Order", "tags": ["*special problem", "binary search", "constructive algorithms", "data structures", "sortings"], "problem_rating": "1200", "solved_by": "x15664"},
{"url": "https://codeforces.com//problemset/problem/637/A", "name": "Voting for Photos", "tags": ["*special problem", "constructive algorithms", "implementation"], "problem_rating": "1000", "solved_by": "x5351"},
{"url": "https://codeforces.com//problemset/problem/635/A", "name": "Orchestra", "tags": ["brute force", "implementation"], "problem_rating": "1100", "solved_by": "x2850"},
{"url": "https://codeforces.com//problemset/problem/634/A", "name": "Island Puzzle", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1300", "solved_by": "x3155"},
{"url": "https://codeforces.com//problemset/problem/633/H", "name": "Fibonacci-ish II", "tags": ["data structures", "implementation"], "problem_rating": "3100", "solved_by": "x587"},
{"url": "https://codeforces.com//problemset/problem/633/G", "name": "Yash And Trees", "tags": ["bitmasks", "data structures", "dfs and similar", "math", "number theory"], "problem_rating": "2800", "solved_by": "x768"},
{"url": "https://codeforces.com//problemset/problem/633/F", "name": "The Chocolate Spree", "tags": ["dfs and similar", "dp", "graphs", "trees"], "problem_rating": "2600", "solved_by": "x951"},
{"url": "https://codeforces.com//problemset/problem/633/E", "name": "Startup Funding", "tags": ["binary search", "constructive algorithms", "data structures", "probabilities", "two pointers"], "problem_rating": "2400", "solved_by": "x581"},
{"url": "https://codeforces.com//problemset/problem/633/D", "name": "Fibonacci-ish", "tags": ["brute force", "dp", "hashing", "implementation", "math"], "problem_rating": "2000", "solved_by": "x2765"},
{"url": "https://codeforces.com//problemset/problem/633/C", "name": "Spy Syndrome 2", "tags": ["data structures", "dp", "hashing", "implementation", "sortings", "string suffix structures", "strings"], "problem_rating": "1900", "solved_by": "x2719"},
{"url": "https://codeforces.com//problemset/problem/633/B", "name": "A Trivial Problem", "tags": ["brute force", "constructive algorithms", "math", "number theory"], "problem_rating": "1300", "solved_by": "x6599"},
{"url": "https://codeforces.com//problemset/problem/633/A", "name": "Ebony and Ivory", "tags": ["brute force", "math", "number theory"], "problem_rating": "1100", "solved_by": "x12537"},
{"url": "https://codeforces.com//problemset/problem/632/F", "name": "Magic Matrix", "tags": ["brute force", "divide and conquer", "graphs", "matrices", "trees"], "problem_rating": "2400", "solved_by": "x1056"},
{"url": "https://codeforces.com//problemset/problem/632/E", "name": "Thief in a Shop", "tags": ["divide and conquer", "dp", "fft", "math"], "problem_rating": "2400", "solved_by": "x2661"},
{"url": "https://codeforces.com//problemset/problem/632/D", "name": "Longest Subsequence", "tags": ["brute force", "math", "number theory"], "problem_rating": "2100", "solved_by": "x3668"},
{"url": "https://codeforces.com//problemset/problem/632/C", "name": "The Smallest String Concatenation", "tags": ["sortings", "strings"], "problem_rating": "1700", "solved_by": "x7506"},
{"url": "https://codeforces.com//problemset/problem/632/B", "name": "Alice, Bob, Two Teams", "tags": ["brute force", "constructive algorithms"], "problem_rating": "1400", "solved_by": "x3944"},
{"url": "https://codeforces.com//problemset/problem/632/A", "name": "Grandma Laura and Apples", "tags": [], "problem_rating": "1200", "solved_by": "x4531"},
{"url": "https://codeforces.com//problemset/problem/631/E", "name": "Product Sum", "tags": ["data structures", "dp", "geometry"], "problem_rating": "2600", "solved_by": "x2281"},
{"url": "https://codeforces.com//problemset/problem/631/D", "name": "Messenger", "tags": ["data structures", "hashing", "implementation", "string suffix structures", "strings"], "problem_rating": "2100", "solved_by": "x2019"},
{"url": "https://codeforces.com//problemset/problem/631/C", "name": "Report", "tags": ["data structures", "sortings"], "problem_rating": "1700", "solved_by": "x3764"},
{"url": "https://codeforces.com//problemset/problem/631/B", "name": "Print Check", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1200", "solved_by": "x7299"},
{"url": "https://codeforces.com//problemset/problem/631/A", "name": "Interview", "tags": ["brute force", "implementation"], "problem_rating": "900", "solved_by": "x9202"},
{"url": "https://codeforces.com//problemset/problem/630/R", "name": "Game", "tags": ["games", "math"], "problem_rating": "1200", "solved_by": "x8498"},
{"url": "https://codeforces.com//problemset/problem/630/Q", "name": "Pyramids", "tags": ["geometry", "math"], "problem_rating": "1700", "solved_by": "x1251"},
{"url": "https://codeforces.com//problemset/problem/630/P", "name": "Area of a Star", "tags": ["geometry"], "problem_rating": "2100", "solved_by": "x1096"},
{"url": "https://codeforces.com//problemset/problem/630/O", "name": "Arrow", "tags": ["geometry"], "problem_rating": "2000", "solved_by": "x748"},
{"url": "https://codeforces.com//problemset/problem/630/N", "name": "Forecast", "tags": ["math"], "problem_rating": "1300", "solved_by": "x4601"},
{"url": "https://codeforces.com//problemset/problem/630/M", "name": "Turn", "tags": ["geometry", "math"], "problem_rating": "1800", "solved_by": "x1135"},
{"url": "https://codeforces.com//problemset/problem/630/L", "name": "Cracking the Code", "tags": ["implementation", "math"], "problem_rating": "1400", "solved_by": "x3526"},
{"url": "https://codeforces.com//problemset/problem/630/K", "name": "Indivisibility", "tags": ["math", "number theory"], "problem_rating": "1500", "solved_by": "x5179"},
{"url": "https://codeforces.com//problemset/problem/630/J", "name": "Divisibility", "tags": ["math", "number theory"], "problem_rating": "1100", "solved_by": "x10870"},
{"url": "https://codeforces.com//problemset/problem/630/I", "name": "Parking Lot", "tags": ["combinatorics", "math"], "problem_rating": "1700", "solved_by": "x6511"},
{"url": "https://codeforces.com//problemset/problem/630/H", "name": "Benches", "tags": ["combinatorics", "math"], "problem_rating": "1400", "solved_by": "x4885"},
{"url": "https://codeforces.com//problemset/problem/630/G", "name": "Challenge Pennants", "tags": ["combinatorics", "math"], "problem_rating": "1600", "solved_by": "x2700"},
{"url": "https://codeforces.com//problemset/problem/630/F", "name": "Selection of Personnel", "tags": ["combinatorics", "math"], "problem_rating": "1300", "solved_by": "x6708"},
{"url": "https://codeforces.com//problemset/problem/630/E", "name": "A rectangle", "tags": ["math"], "problem_rating": "1900", "solved_by": "x2299"},
{"url": "https://codeforces.com//problemset/problem/630/D", "name": "Hexagons!", "tags": ["math"], "problem_rating": "1100", "solved_by": "x10252"},
{"url": "https://codeforces.com//problemset/problem/630/C", "name": "Lucky Numbers", "tags": ["combinatorics", "math"], "problem_rating": "1100", "solved_by": "x21337"},
{"url": "https://codeforces.com//problemset/problem/630/B", "name": "Moore's Law", "tags": ["math"], "problem_rating": "1200", "solved_by": "x7244"},
{"url": "https://codeforces.com//problemset/problem/630/A", "name": "Again Twenty Five!", "tags": ["number theory"], "problem_rating": "800", "solved_by": "x64605"},
{"url": "https://codeforces.com//problemset/problem/629/E", "name": "Famil Door and Roads", "tags": ["combinatorics", "data structures", "dfs and similar", "dp", "probabilities", "trees"], "problem_rating": "2300", "solved_by": "x975"},
{"url": "https://codeforces.com//problemset/problem/629/D", "name": "Babaei and Birthday Cake", "tags": ["data structures", "dp"], "problem_rating": "2000", "solved_by": "x3944"},
{"url": "https://codeforces.com//problemset/problem/629/C", "name": "Famil Door and Brackets", "tags": ["dp", "strings"], "problem_rating": "2000", "solved_by": "x2766"},
{"url": "https://codeforces.com//problemset/problem/629/B", "name": "Far Relative’s Problem", "tags": ["brute force"], "problem_rating": "1100", "solved_by": "x8002"},
{"url": "https://codeforces.com//problemset/problem/629/A", "name": "Far Relative’s Birthday Cake", "tags": ["brute force", "combinatorics", "constructive algorithms", "implementation"], "problem_rating": "800", "solved_by": "x13270"},
{"url": "https://codeforces.com//problemset/problem/628/F", "name": "Bear and Fair Set", "tags": ["flows", "graphs"], "problem_rating": "2500", "solved_by": "x751"},
{"url": "https://codeforces.com//problemset/problem/628/E", "name": "Zbazi in Zeydabad", "tags": ["data structures", "implementation"], "problem_rating": "2300", "solved_by": "x872"},
{"url": "https://codeforces.com//problemset/problem/628/D", "name": "Magic Numbers", "tags": ["dp"], "problem_rating": "2200", "solved_by": "x5713"},
{"url": "https://codeforces.com//problemset/problem/628/C", "name": "Bear and String Distance", "tags": ["greedy", "strings"], "problem_rating": "1300", "solved_by": "x5772"},
{"url": "https://codeforces.com//problemset/problem/628/B", "name": "New Skateboard", "tags": ["dp"], "problem_rating": "1300", "solved_by": "x10494"},
{"url": "https://codeforces.com//problemset/problem/628/A", "name": "Tennis Tournament", "tags": ["implementation", "math"], "problem_rating": "1000", "solved_by": "x6251"},
{"url": "https://codeforces.com//problemset/problem/627/F", "name": "Island Puzzle", "tags": ["dfs and similar", "dsu", "graphs", "trees"], "problem_rating": "3400", "solved_by": "x236"},
{"url": "https://codeforces.com//problemset/problem/627/E", "name": "Orchestra", "tags": ["two pointers"], "problem_rating": "3000", "solved_by": "x547"},
{"url": "https://codeforces.com//problemset/problem/627/D", "name": "Preorder Test", "tags": ["binary search", "dfs and similar", "dp", "graphs", "greedy", "trees"], "problem_rating": "2600", "solved_by": "x810"},
{"url": "https://codeforces.com//problemset/problem/627/C", "name": "Package Delivery", "tags": ["data structures", "divide and conquer", "greedy"], "problem_rating": "2200", "solved_by": "x1158"},
{"url": "https://codeforces.com//problemset/problem/627/B", "name": "Factory Repairs", "tags": ["data structures"], "problem_rating": "1700", "solved_by": "x2742"},
{"url": "https://codeforces.com//problemset/problem/627/A", "name": "XOR Equation", "tags": ["dp", "math"], "problem_rating": "1700", "solved_by": "x4050"},
{"url": "https://codeforces.com//problemset/problem/626/G", "name": "Raffles", "tags": ["data structures", "dp", "greedy", "math"], "problem_rating": "3100", "solved_by": "x522"},
{"url": "https://codeforces.com//problemset/problem/626/F", "name": "Group Projects", "tags": ["dp"], "problem_rating": "2400", "solved_by": "x2745"},
{"url": "https://codeforces.com//problemset/problem/626/E", "name": "Simple Skewness", "tags": ["binary search", "math", "ternary search"], "problem_rating": "2400", "solved_by": "x1308"},
{"url": "https://codeforces.com//problemset/problem/626/D", "name": "Jerry's Protest", "tags": ["brute force", "combinatorics", "dp", "probabilities"], "problem_rating": "1800", "solved_by": "x2694"},
{"url": "https://codeforces.com//problemset/problem/626/C", "name": "Block Towers", "tags": ["brute force", "greedy", "math", "number theory"], "problem_rating": "1600", "solved_by": "x4316"},
{"url": "https://codeforces.com//problemset/problem/626/B", "name": "Cards", "tags": ["constructive algorithms", "dp", "math"], "problem_rating": "1300", "solved_by": "x6564"},
{"url": "https://codeforces.com//problemset/problem/626/A", "name": "Robot Sequence", "tags": ["brute force", "implementation"], "problem_rating": "1000", "solved_by": "x6170"},
{"url": "https://codeforces.com//problemset/problem/625/E", "name": "Frog Fights", "tags": ["data structures", "greedy"], "problem_rating": "2800", "solved_by": "x326"},
{"url": "https://codeforces.com//problemset/problem/625/D", "name": "Finals in arithmetic", "tags": ["constructive algorithms", "implementation", "math"], "problem_rating": "2400", "solved_by": "x626"},
{"url": "https://codeforces.com//problemset/problem/625/C", "name": "K-special Tables", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1300", "solved_by": "x6783"},
{"url": "https://codeforces.com//problemset/problem/625/B", "name": "War of the Corporations", "tags": ["constructive algorithms", "greedy", "strings"], "problem_rating": "1200", "solved_by": "x10264"},
{"url": "https://codeforces.com//problemset/problem/625/A", "name": "Guest From the Past", "tags": ["implementation", "math"], "problem_rating": "1700", "solved_by": "x5371"},
{"url": "https://codeforces.com//problemset/problem/624/B", "name": "Making a String", "tags": ["greedy", "sortings"], "problem_rating": "1100", "solved_by": "x7937"},
{"url": "https://codeforces.com//problemset/problem/624/A", "name": "Save Luke", "tags": ["math"], "problem_rating": "800", "solved_by": "x10211"},
{"url": "https://codeforces.com//problemset/problem/623/E", "name": "Transforming Sequence", "tags": ["combinatorics", "dp", "fft", "math"], "problem_rating": "3300", "solved_by": "x543"},
{"url": "https://codeforces.com//problemset/problem/623/D", "name": "Birthday", "tags": ["greedy", "math", "probabilities"], "problem_rating": "2700", "solved_by": "x471"},
{"url": "https://codeforces.com//problemset/problem/623/C", "name": "Electric Charges", "tags": ["binary search", "dp"], "problem_rating": "2900", "solved_by": "x452"},
{"url": "https://codeforces.com//problemset/problem/623/B", "name": "Array GCD", "tags": ["dp", "greedy", "number theory"], "problem_rating": "2300", "solved_by": "x2118"},
{"url": "https://codeforces.com//problemset/problem/623/A", "name": "Graph and String", "tags": ["constructive algorithms", "graphs"], "problem_rating": "1800", "solved_by": "x4419"},
{"url": "https://codeforces.com//problemset/problem/622/F", "name": "The Sum of the k-th Powers", "tags": ["math"], "problem_rating": "2600", "solved_by": "x3634"},
{"url": "https://codeforces.com//problemset/problem/622/E", "name": "Ants in Leaves", "tags": ["dfs and similar", "greedy", "sortings", "trees"], "problem_rating": "2200", "solved_by": "x2023"},
{"url": "https://codeforces.com//problemset/problem/622/D", "name": "Optimal Number Permutation", "tags": ["constructive algorithms"], "problem_rating": "1900", "solved_by": "x2906"},
{"url": "https://codeforces.com//problemset/problem/622/C", "name": "Not Equal on a Segment", "tags": ["data structures", "implementation"], "problem_rating": "1700", "solved_by": "x6344"},
{"url": "https://codeforces.com//problemset/problem/622/B", "name": "The Time", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x9221"},
{"url": "https://codeforces.com//problemset/problem/622/A", "name": "Infinite Sequence", "tags": ["implementation", "math"], "problem_rating": "1000", "solved_by": "x9186"},
{"url": "https://codeforces.com//problemset/problem/621/E", "name": "Wet Shark and Blocks", "tags": ["dp", "matrices"], "problem_rating": "2000", "solved_by": "x2763"},
{"url": "https://codeforces.com//problemset/problem/621/D", "name": "Rat Kwesh and Cheese", "tags": ["brute force", "constructive algorithms", "math"], "problem_rating": "2400", "solved_by": "x968"},
{"url": "https://codeforces.com//problemset/problem/621/C", "name": "Wet Shark and Flowers", "tags": ["combinatorics", "math", "number theory", "probabilities"], "problem_rating": "1700", "solved_by": "x5387"},
{"url": "https://codeforces.com//problemset/problem/621/B", "name": "Wet Shark and Bishops", "tags": ["combinatorics", "implementation"], "problem_rating": "1300", "solved_by": "x10886"},
{"url": "https://codeforces.com//problemset/problem/621/A", "name": "Wet Shark and Odd and Even", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x20010"},
{"url": "https://codeforces.com//problemset/problem/620/F", "name": "Xors on Segments", "tags": ["data structures", "strings", "trees"], "problem_rating": "2800", "solved_by": "x718"},
{"url": "https://codeforces.com//problemset/problem/620/E", "name": "New Year Tree", "tags": ["bitmasks", "data structures", "trees"], "problem_rating": "2100", "solved_by": "x5388"},
{"url": "https://codeforces.com//problemset/problem/620/D", "name": "Professor GukiZ and Two Arrays", "tags": ["binary search", "two pointers"], "problem_rating": "2200", "solved_by": "x1669"},
{"url": "https://codeforces.com//problemset/problem/620/C", "name": "Pearls in a Row", "tags": ["greedy"], "problem_rating": "1500", "solved_by": "x6585"},
{"url": "https://codeforces.com//problemset/problem/620/B", "name": "Grandfather Dovlet’s calculator", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x9306"},
{"url": "https://codeforces.com//problemset/problem/620/A", "name": "Professor GukiZ's Robot", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x12958"},
{"url": "https://codeforces.com//problemset/problem/618/G", "name": "Combining Slimes", "tags": ["dp", "math", "matrices", "probabilities"], "problem_rating": "3300", "solved_by": "x232"},
{"url": "https://codeforces.com//problemset/problem/618/F", "name": "Double Knapsack", "tags": ["constructive algorithms", "two pointers"], "problem_rating": "3000", "solved_by": "x1345"},
{"url": "https://codeforces.com//problemset/problem/618/E", "name": "Robot Arm", "tags": ["data structures", "geometry"], "problem_rating": "2500", "solved_by": "x589"},
{"url": "https://codeforces.com//problemset/problem/618/D", "name": "Hamiltonian Spanning Tree", "tags": ["dfs and similar", "dp", "graph matchings", "greedy", "trees"], "problem_rating": "2200", "solved_by": "x1701"},
{"url": "https://codeforces.com//problemset/problem/618/C", "name": "Constellation", "tags": ["geometry", "implementation"], "problem_rating": "1600", "solved_by": "x4208"},
{"url": "https://codeforces.com//problemset/problem/618/B", "name": "Guess the Permutation", "tags": ["constructive algorithms"], "problem_rating": "1100", "solved_by": "x7904"},
{"url": "https://codeforces.com//problemset/problem/618/A", "name": "Slime Combining", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x8309"},
{"url": "https://codeforces.com//problemset/problem/617/E", "name": "XOR and Favorite Number", "tags": ["data structures"], "problem_rating": "2200", "solved_by": "x8110"},
{"url": "https://codeforces.com//problemset/problem/617/D", "name": "Polyline", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1700", "solved_by": "x4180"},
{"url": "https://codeforces.com//problemset/problem/617/C", "name": "Watering Flowers", "tags": ["implementation"], "problem_rating": "1600", "solved_by": "x4826"},
{"url": "https://codeforces.com//problemset/problem/617/B", "name": "Chocolate", "tags": ["combinatorics"], "problem_rating": "1300", "solved_by": "x17611"},
{"url": "https://codeforces.com//problemset/problem/617/A", "name": "Elephant", "tags": ["math"], "problem_rating": "800", "solved_by": "x176486"},
{"url": "https://codeforces.com//problemset/problem/616/F", "name": "Expensive Strings", "tags": ["string suffix structures", "strings"], "problem_rating": "2700", "solved_by": "x574"},
{"url": "https://codeforces.com//problemset/problem/616/E", "name": "Sum of Remainders", "tags": ["implementation", "math", "number theory"], "problem_rating": "2200", "solved_by": "x2803"},
{"url": "https://codeforces.com//problemset/problem/616/D", "name": "Longest k-Good Segment", "tags": ["binary search", "data structures", "two pointers"], "problem_rating": "1600", "solved_by": "x9054"},
{"url": "https://codeforces.com//problemset/problem/616/C", "name": "The Labyrinth", "tags": ["dfs and similar"], "problem_rating": "1600", "solved_by": "x5475"},
{"url": "https://codeforces.com//problemset/problem/616/B", "name": "Dinner with Emma", "tags": ["games", "greedy"], "problem_rating": "1000", "solved_by": "x11585"},
{"url": "https://codeforces.com//problemset/problem/616/A", "name": "Comparing Two Long Integers", "tags": ["implementation", "strings"], "problem_rating": "900", "solved_by": "x9679"},
{"url": "https://codeforces.com//problemset/problem/615/E", "name": "Hexagons", "tags": ["binary search", "implementation", "math"], "problem_rating": "2100", "solved_by": "x968"},
{"url": "https://codeforces.com//problemset/problem/615/D", "name": "Multipliers", "tags": ["math", "number theory"], "problem_rating": "2000", "solved_by": "x3843"},
{"url": "https://codeforces.com//problemset/problem/615/C", "name": "Running Track", "tags": ["dp", "greedy", "strings", "trees"], "problem_rating": "2000", "solved_by": "x2268"},
{"url": "https://codeforces.com//problemset/problem/615/B", "name": "Longtail Hedgehog", "tags": ["dp", "graphs"], "problem_rating": "1600", "solved_by": "x5002"},
{"url": "https://codeforces.com//problemset/problem/615/A", "name": "Bulbs", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x17053"},
{"url": "https://codeforces.com//problemset/problem/614/B", "name": "Gena's Code", "tags": ["implementation", "math"], "problem_rating": "1400", "solved_by": "x6835"},
{"url": "https://codeforces.com//problemset/problem/614/A", "name": "Link/Cut Tree", "tags": ["brute force", "implementation"], "problem_rating": "1500", "solved_by": "x7425"},
{"url": "https://codeforces.com//problemset/problem/613/E", "name": "Puzzle Lover", "tags": ["dp", "hashing", "strings"], "problem_rating": "3200", "solved_by": "x457"},
{"url": "https://codeforces.com//problemset/problem/613/D", "name": "Kingdom and its Cities", "tags": ["dfs and similar", "divide and conquer", "dp", "graphs", "sortings", "trees"], "problem_rating": "2800", "solved_by": "x2809"},
{"url": "https://codeforces.com//problemset/problem/613/C", "name": "Necklace", "tags": ["constructive algorithms", "math"], "problem_rating": "2500", "solved_by": "x993"},
{"url": "https://codeforces.com//problemset/problem/613/B", "name": "Skills", "tags": ["binary search", "brute force", "dp", "greedy", "sortings", "two pointers"], "problem_rating": "1900", "solved_by": "x2181"},
{"url": "https://codeforces.com//problemset/problem/613/A", "name": "Peter and Snow Blower", "tags": ["binary search", "geometry", "ternary search"], "problem_rating": "1900", "solved_by": "x3199"},
{"url": "https://codeforces.com//problemset/problem/612/F", "name": "Simba on the Circle", "tags": ["dp"], "problem_rating": "2600", "solved_by": "x377"},
{"url": "https://codeforces.com//problemset/problem/612/E", "name": "Square Root of Permutation", "tags": ["combinatorics", "constructive algorithms", "dfs and similar", "graphs", "math"], "problem_rating": "2200", "solved_by": "x1631"},
{"url": "https://codeforces.com//problemset/problem/612/D", "name": "The Union of k-Segments", "tags": ["greedy", "sortings"], "problem_rating": "1800", "solved_by": "x3754"},
{"url": "https://codeforces.com//problemset/problem/612/C", "name": "Replace To Make Regular Bracket Sequence", "tags": ["data structures", "expression parsing", "math"], "problem_rating": "1400", "solved_by": "x7855"},
{"url": "https://codeforces.com//problemset/problem/612/B", "name": "HDD is Outdated Technology", "tags": ["implementation", "math"], "problem_rating": "1200", "solved_by": "x6892"},
{"url": "https://codeforces.com//problemset/problem/612/A", "name": "The Text Splitting", "tags": ["brute force", "implementation", "strings"], "problem_rating": "1300", "solved_by": "x7101"},
{"url": "https://codeforces.com//problemset/problem/611/H", "name": "New Year  and Forgotten Tree", "tags": ["constructive algorithms", "flows", "graphs"], "problem_rating": "3200", "solved_by": "x581"},
{"url": "https://codeforces.com//problemset/problem/611/G", "name": "New Year and Cake", "tags": ["geometry", "two pointers"], "problem_rating": "2900", "solved_by": "x431"},
{"url": "https://codeforces.com//problemset/problem/611/F", "name": "New Year and Cleaning", "tags": ["binary search", "implementation"], "problem_rating": "2500", "solved_by": "x462"},
{"url": "https://codeforces.com//problemset/problem/611/E", "name": "New Year and Three Musketeers", "tags": ["data structures", "greedy", "sortings"], "problem_rating": "2400", "solved_by": "x861"},
{"url": "https://codeforces.com//problemset/problem/611/D", "name": "New Year and Ancient Prophecy", "tags": ["dp", "hashing", "strings"], "problem_rating": "2000", "solved_by": "x2567"},
{"url": "https://codeforces.com//problemset/problem/611/C", "name": "New Year and Domino", "tags": ["dp", "implementation"], "problem_rating": "1500", "solved_by": "x8402"},
{"url": "https://codeforces.com//problemset/problem/611/B", "name": "New Year and Old Property", "tags": ["bitmasks", "brute force", "implementation"], "problem_rating": "1300", "solved_by": "x9943"},
{"url": "https://codeforces.com//problemset/problem/611/A", "name": "New Year and Days", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x11602"},
{"url": "https://codeforces.com//problemset/problem/610/E", "name": "Alphabet Permutations", "tags": ["data structures", "strings"], "problem_rating": "2500", "solved_by": "x860"},
{"url": "https://codeforces.com//problemset/problem/610/D", "name": "Vika and Segments", "tags": ["constructive algorithms", "data structures", "geometry", "two pointers"], "problem_rating": "2300", "solved_by": "x1465"},
{"url": "https://codeforces.com//problemset/problem/610/C", "name": "Harmony Analysis", "tags": ["constructive algorithms"], "problem_rating": "1800", "solved_by": "x2811"},
{"url": "https://codeforces.com//problemset/problem/610/B", "name": "Vika and Squares", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1300", "solved_by": "x7138"},
{"url": "https://codeforces.com//problemset/problem/610/A", "name": "Pasha and Stick", "tags": ["combinatorics", "math"], "problem_rating": "1000", "solved_by": "x22621"},
{"url": "https://codeforces.com//problemset/problem/609/F", "name": "Frogs and mosquitoes", "tags": ["data structures", "greedy"], "problem_rating": "2500", "solved_by": "x1217"},
{"url": "https://codeforces.com//problemset/problem/609/E", "name": "Minimum spanning tree for each edge", "tags": ["data structures", "dfs and similar", "dsu", "graphs", "trees"], "problem_rating": "2100", "solved_by": "x7426"},
{"url": "https://codeforces.com//problemset/problem/609/D", "name": "Gadgets for dollars and pounds", "tags": ["binary search", "greedy", "two pointers"], "problem_rating": "2000", "solved_by": "x2650"},
{"url": "https://codeforces.com//problemset/problem/609/C", "name": "Load Balancing", "tags": ["implementation", "math"], "problem_rating": "1500", "solved_by": "x6418"},
{"url": "https://codeforces.com//problemset/problem/609/B", "name": "The Best Gift", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1100", "solved_by": "x8912"},
{"url": "https://codeforces.com//problemset/problem/609/A", "name": "USB Flash Drives", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "800", "solved_by": "x17007"},
{"url": "https://codeforces.com//problemset/problem/608/B", "name": "Hamming Distance Sum", "tags": ["combinatorics", "strings"], "problem_rating": "1500", "solved_by": "x6714"},
{"url": "https://codeforces.com//problemset/problem/608/A", "name": "Saitama Destroys Hotel", "tags": ["implementation", "math"], "problem_rating": "1000", "solved_by": "x9200"},
{"url": "https://codeforces.com//problemset/problem/607/E", "name": "Cross Sum", "tags": ["binary search", "geometry"], "problem_rating": "3300", "solved_by": "x250"},
{"url": "https://codeforces.com//problemset/problem/607/D", "name": "Power Tree", "tags": ["data structures", "trees"], "problem_rating": "2600", "solved_by": "x563"},
{"url": "https://codeforces.com//problemset/problem/607/C", "name": "Marbles", "tags": ["hashing", "strings"], "problem_rating": "2500", "solved_by": "x784"},
{"url": "https://codeforces.com//problemset/problem/607/B", "name": "Zuma", "tags": ["dp"], "problem_rating": "1900", "solved_by": "x11491"},
{"url": "https://codeforces.com//problemset/problem/607/A", "name": "Chain Reaction", "tags": ["binary search", "dp"], "problem_rating": "1600", "solved_by": "x9443"},
{"url": "https://codeforces.com//problemset/problem/606/B", "name": "Testing Robots", "tags": ["implementation"], "problem_rating": "1600", "solved_by": "x2737"},
{"url": "https://codeforces.com//problemset/problem/606/A", "name": "Magic Spheres", "tags": ["implementation"], "problem_rating": "1200", "solved_by": "x7926"},
{"url": "https://codeforces.com//problemset/problem/605/E", "name": "Intergalaxy Trips", "tags": ["probabilities", "shortest paths"], "problem_rating": "2700", "solved_by": "x1361"},
{"url": "https://codeforces.com//problemset/problem/605/D", "name": "Board Game", "tags": ["data structures", "dfs and similar"], "problem_rating": "2500", "solved_by": "x795"},
{"url": "https://codeforces.com//problemset/problem/605/C", "name": "Freelancer's Dreams", "tags": ["geometry"], "problem_rating": "2400", "solved_by": "x1104"},
{"url": "https://codeforces.com//problemset/problem/605/B", "name": "Lazy Student", "tags": ["constructive algorithms", "data structures", "graphs"], "problem_rating": "1700", "solved_by": "x3407"},
{"url": "https://codeforces.com//problemset/problem/605/A", "name": "Sorting Railway Cars", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1600", "solved_by": "x7072"},
{"url": "https://codeforces.com//problemset/problem/604/B", "name": "More Cowbell", "tags": ["binary search", "greedy"], "problem_rating": "1400", "solved_by": "x8347"},
{"url": "https://codeforces.com//problemset/problem/604/A", "name": "Uncowed Forces", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x8916"},
{"url": "https://codeforces.com//problemset/problem/603/E", "name": "Pastoral Oddities", "tags": ["data structures", "divide and conquer", "dsu", "math", "trees"], "problem_rating": "3000", "solved_by": "x1211"},
{"url": "https://codeforces.com//problemset/problem/603/D", "name": "Ruminations on Ruminants", "tags": ["geometry", "math"], "problem_rating": "2900", "solved_by": "x340"},
{"url": "https://codeforces.com//problemset/problem/603/C", "name": "Lieges of Legendre", "tags": ["games", "math"], "problem_rating": "2200", "solved_by": "x1823"},
{"url": "https://codeforces.com//problemset/problem/603/B", "name": "Moodular Arithmetic", "tags": ["combinatorics", "dfs and similar", "dsu", "math", "number theory"], "problem_rating": "1800", "solved_by": "x2551"},
{"url": "https://codeforces.com//problemset/problem/603/A", "name": "Alternative Thinking", "tags": ["dp", "greedy", "math"], "problem_rating": "1600", "solved_by": "x7599"},
{"url": "https://codeforces.com//problemset/problem/602/B", "name": "Approximating a Constant Range", "tags": ["dp", "implementation", "two pointers"], "problem_rating": "1400", "solved_by": "x10628"},
{"url": "https://codeforces.com//problemset/problem/602/A", "name": "Two Bases", "tags": ["brute force", "implementation"], "problem_rating": "1100", "solved_by": "x8409"},
{"url": "https://codeforces.com//problemset/problem/601/E", "name": "A Museum Robbery", "tags": ["data structures", "dp"], "problem_rating": "2800", "solved_by": "x851"},
{"url": "https://codeforces.com//problemset/problem/601/D", "name": "Acyclic Organic Compounds", "tags": ["data structures", "dfs and similar", "dsu", "hashing", "strings", "trees"], "problem_rating": "2400", "solved_by": "x1101"},
{"url": "https://codeforces.com//problemset/problem/601/C", "name": "Kleofáš and the n-thlon", "tags": ["dp", "math", "probabilities"], "problem_rating": "2300", "solved_by": "x1295"},
{"url": "https://codeforces.com//problemset/problem/601/B", "name": "Lipshitz Sequence", "tags": ["data structures", "math"], "problem_rating": "2100", "solved_by": "x2272"},
{"url": "https://codeforces.com//problemset/problem/601/A", "name": "The Two Routes", "tags": ["graphs", "shortest paths"], "problem_rating": "1600", "solved_by": "x11649"},
{"url": "https://codeforces.com//problemset/problem/600/F", "name": "Edge coloring of bipartite graph", "tags": ["graphs"], "problem_rating": "2800", "solved_by": "x761"},
{"url": "https://codeforces.com//problemset/problem/600/E", "name": "Lomsat gelral", "tags": ["data structures", "dfs and similar", "dsu", "trees"], "problem_rating": "2300", "solved_by": "x13183"},
{"url": "https://codeforces.com//problemset/problem/600/D", "name": "Area of Two Circles' Intersection", "tags": ["geometry"], "problem_rating": "2000", "solved_by": "x2202"},
{"url": "https://codeforces.com//problemset/problem/600/C", "name": "Make Palindrome", "tags": ["constructive algorithms", "greedy", "strings"], "problem_rating": "1800", "solved_by": "x5962"},
{"url": "https://codeforces.com//problemset/problem/600/B", "name": "Queries about less or equal elements", "tags": ["binary search", "data structures", "sortings", "two pointers"], "problem_rating": "1300", "solved_by": "x28547"},
{"url": "https://codeforces.com//problemset/problem/600/A", "name": "Extract Numbers", "tags": ["implementation", "strings"], "problem_rating": "1600", "solved_by": "x5129"},
{"url": "https://codeforces.com//problemset/problem/599/E", "name": "Sandy and Nuts", "tags": ["bitmasks", "dp", "trees"], "problem_rating": "2600", "solved_by": "x627"},
{"url": "https://codeforces.com//problemset/problem/599/D", "name": "Spongebob and Squares", "tags": ["brute force", "math"], "problem_rating": "1900", "solved_by": "x2541"},
{"url": "https://codeforces.com//problemset/problem/599/C", "name": "Day at the Beach", "tags": ["sortings"], "problem_rating": "1600", "solved_by": "x4608"},
{"url": "https://codeforces.com//problemset/problem/599/B", "name": "Spongebob and Joke", "tags": ["implementation"], "problem_rating": "1500", "solved_by": "x4352"},
{"url": "https://codeforces.com//problemset/problem/599/A", "name": "Patrick and Shopping", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x28267"},
{"url": "https://codeforces.com//problemset/problem/598/F", "name": "Cut Length", "tags": ["geometry"], "problem_rating": "2900", "solved_by": "x362"},
{"url": "https://codeforces.com//problemset/problem/598/E", "name": "Chocolate Bar", "tags": ["brute force", "dp"], "problem_rating": "2000", "solved_by": "x4761"},
{"url": "https://codeforces.com//problemset/problem/598/D", "name": "Igor In the Museum", "tags": ["dfs and similar", "graphs", "shortest paths"], "problem_rating": "1700", "solved_by": "x10774"},
{"url": "https://codeforces.com//problemset/problem/598/C", "name": "Nearest vectors", "tags": ["geometry", "sortings"], "problem_rating": "2300", "solved_by": "x4245"},
{"url": "https://codeforces.com//problemset/problem/598/B", "name": "Queries on a String", "tags": ["implementation", "strings"], "problem_rating": "1300", "solved_by": "x10743"},
{"url": "https://codeforces.com//problemset/problem/598/A", "name": "Tricky Sum", "tags": ["math"], "problem_rating": "900", "solved_by": "x25506"},
{"url": "https://codeforces.com//problemset/problem/597/C", "name": "Subsequences", "tags": ["data structures", "dp"], "problem_rating": "1900", "solved_by": "x4750"},
{"url": "https://codeforces.com//problemset/problem/597/B", "name": "Restaurant", "tags": ["dp", "greedy", "sortings"], "problem_rating": "1600", "solved_by": "x4722"},
{"url": "https://codeforces.com//problemset/problem/597/A", "name": "Divisibility", "tags": ["math"], "problem_rating": "1600", "solved_by": "x4449"},
{"url": "https://codeforces.com//problemset/problem/596/E", "name": "Wilbur and Strings", "tags": ["dfs and similar", "dp", "graphs", "strings"], "problem_rating": "2500", "solved_by": "x390"},
{"url": "https://codeforces.com//problemset/problem/596/D", "name": "Wilbur and Trees", "tags": ["dp", "math", "probabilities", "sortings"], "problem_rating": "2300", "solved_by": "x681"},
{"url": "https://codeforces.com//problemset/problem/596/C", "name": "Wilbur and Points", "tags": ["combinatorics", "greedy", "sortings"], "problem_rating": "1700", "solved_by": "x2242"},
{"url": "https://codeforces.com//problemset/problem/596/B", "name": "Wilbur and Array", "tags": ["greedy", "implementation"], "problem_rating": "1100", "solved_by": "x10277"},
{"url": "https://codeforces.com//problemset/problem/596/A", "name": "Wilbur and Swimming Pool", "tags": ["geometry", "implementation"], "problem_rating": "1100", "solved_by": "x7665"},
{"url": "https://codeforces.com//problemset/problem/595/B", "name": "Pasha and Phone", "tags": ["binary search", "math"], "problem_rating": "1600", "solved_by": "x2902"},
{"url": "https://codeforces.com//problemset/problem/595/A", "name": "Vitaly and Night", "tags": ["constructive algorithms", "implementation"], "problem_rating": "800", "solved_by": "x14445"},
{"url": "https://codeforces.com//problemset/problem/594/E", "name": "Cutting the Line", "tags": ["string suffix structures", "strings"], "problem_rating": "3100", "solved_by": "x158"},
{"url": "https://codeforces.com//problemset/problem/594/D", "name": "REQ", "tags": ["data structures", "number theory"], "problem_rating": "2500", "solved_by": "x1570"},
{"url": "https://codeforces.com//problemset/problem/594/C", "name": "Edo and Magnets", "tags": ["brute force", "greedy", "implementation", "two pointers"], "problem_rating": "2300", "solved_by": "x678"},
{"url": "https://codeforces.com//problemset/problem/594/B", "name": "Max and Bike", "tags": ["binary search", "geometry"], "problem_rating": "2500", "solved_by": "x495"},
{"url": "https://codeforces.com//problemset/problem/594/A", "name": "Warrior and Archer", "tags": ["games"], "problem_rating": "2300", "solved_by": "x1706"},
{"url": "https://codeforces.com//problemset/problem/593/E", "name": "Strange Calculation and Cats", "tags": ["dp", "matrices"], "problem_rating": "2400", "solved_by": "x586"},
{"url": "https://codeforces.com//problemset/problem/593/D", "name": "Happy Tree Party", "tags": ["data structures", "dfs and similar", "graphs", "math", "trees"], "problem_rating": "2400", "solved_by": "x1220"},
{"url": "https://codeforces.com//problemset/problem/593/C", "name": "Beautiful Function", "tags": ["constructive algorithms", "math"], "problem_rating": "2200", "solved_by": "x279"},
{"url": "https://codeforces.com//problemset/problem/593/B", "name": "Anton and Lines", "tags": ["geometry", "sortings"], "problem_rating": "1600", "solved_by": "x3962"},
{"url": "https://codeforces.com//problemset/problem/593/A", "name": "2Char", "tags": ["brute force", "implementation"], "problem_rating": "1200", "solved_by": "x5699"},
{"url": "https://codeforces.com//problemset/problem/592/E", "name": "BCPC", "tags": ["binary search", "geometry", "two pointers"], "problem_rating": "2700", "solved_by": "x213"},
{"url": "https://codeforces.com//problemset/problem/592/D", "name": "Super M", "tags": ["dfs and similar", "dp", "graphs", "trees"], "problem_rating": "2200", "solved_by": "x2558"},
{"url": "https://codeforces.com//problemset/problem/592/C", "name": "The Big Race", "tags": ["math"], "problem_rating": "1800", "solved_by": "x3052"},
{"url": "https://codeforces.com//problemset/problem/592/B", "name": "The Monster and the Squirrel", "tags": ["math"], "problem_rating": "1100", "solved_by": "x8569"},
{"url": "https://codeforces.com//problemset/problem/592/A", "name": "PawnChess", "tags": ["implementation"], "problem_rating": "1200", "solved_by": "x6322"},
{"url": "https://codeforces.com//problemset/problem/591/B", "name": "Rebranding", "tags": ["implementation", "strings"], "problem_rating": "1200", "solved_by": "x8180"},
{"url": "https://codeforces.com//problemset/problem/591/A", "name": "Wizards' Duel", "tags": ["implementation", "math"], "problem_rating": "900", "solved_by": "x14045"},
{"url": "https://codeforces.com//problemset/problem/590/E", "name": "Birthday", "tags": ["graph matchings", "strings"], "problem_rating": "3200", "solved_by": "x762"},
{"url": "https://codeforces.com//problemset/problem/590/D", "name": "Top Secret Task", "tags": ["dp"], "problem_rating": "2300", "solved_by": "x1173"},
{"url": "https://codeforces.com//problemset/problem/590/C", "name": "Three States", "tags": ["dfs and similar", "graphs", "shortest paths"], "problem_rating": "2200", "solved_by": "x2712"},
{"url": "https://codeforces.com//problemset/problem/590/B", "name": "Chip 'n Dale Rescue Rangers", "tags": ["binary search", "geometry", "math"], "problem_rating": "2100", "solved_by": "x1890"},
{"url": "https://codeforces.com//problemset/problem/590/A", "name": "Median Smoothing", "tags": ["implementation"], "problem_rating": "1700", "solved_by": "x3906"},
{"url": "https://codeforces.com//problemset/problem/588/B", "name": "Duff in Love", "tags": ["math"], "problem_rating": "1300", "solved_by": "x13960"},
{"url": "https://codeforces.com//problemset/problem/588/A", "name": "Duff and Meat", "tags": ["greedy"], "problem_rating": "900", "solved_by": "x22618"},
{"url": "https://codeforces.com//problemset/problem/587/F", "name": "Duff is Mad", "tags": ["data structures", "strings"], "problem_rating": "3000", "solved_by": "x1011"},
{"url": "https://codeforces.com//problemset/problem/587/E", "name": "Duff as a Queen", "tags": ["data structures"], "problem_rating": "2900", "solved_by": "x695"},
{"url": "https://codeforces.com//problemset/problem/587/D", "name": "Duff in Mafia", "tags": ["2-sat", "binary search"], "problem_rating": "3100", "solved_by": "x684"},
{"url": "https://codeforces.com//problemset/problem/587/C", "name": "Duff in the Army", "tags": ["data structures", "trees"], "problem_rating": "2200", "solved_by": "x3753"},
{"url": "https://codeforces.com//problemset/problem/587/B", "name": "Duff in Beach", "tags": ["dp"], "problem_rating": "2100", "solved_by": "x1385"},
{"url": "https://codeforces.com//problemset/problem/587/A", "name": "Duff and Weight Lifting", "tags": ["greedy"], "problem_rating": "1500", "solved_by": "x7446"},
{"url": "https://codeforces.com//problemset/problem/586/B", "name": "Laurenty and Shop", "tags": ["implementation"], "problem_rating": "1300", "solved_by": "x5133"},
{"url": "https://codeforces.com//problemset/problem/586/A", "name": "Alena's Schedule", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x9953"},
{"url": "https://codeforces.com//problemset/problem/585/F", "name": "Digits of Number Pi", "tags": ["dp", "implementation", "strings"], "problem_rating": "3200", "solved_by": "x641"},
{"url": "https://codeforces.com//problemset/problem/585/E", "name": "Present for Vitalik the Philatelist", "tags": ["combinatorics", "math", "number theory"], "problem_rating": "2900", "solved_by": "x1054"},
{"url": "https://codeforces.com//problemset/problem/585/D", "name": "Lizard Era: Beginning", "tags": ["meet-in-the-middle"], "problem_rating": "2300", "solved_by": "x1595"},
{"url": "https://codeforces.com//problemset/problem/585/C", "name": "Alice, Bob, Oranges and Apples", "tags": ["number theory"], "problem_rating": "2400", "solved_by": "x971"},
{"url": "https://codeforces.com//problemset/problem/585/B", "name": "Phillip and Trains", "tags": ["dfs and similar", "graphs", "shortest paths"], "problem_rating": "1700", "solved_by": "x3503"},
{"url": "https://codeforces.com//problemset/problem/585/A", "name": "Gennady the Dentist", "tags": ["brute force", "implementation"], "problem_rating": "1800", "solved_by": "x4312"},
{"url": "https://codeforces.com//problemset/problem/584/E", "name": "Anton and Ira", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "2300", "solved_by": "x1415"},
{"url": "https://codeforces.com//problemset/problem/584/D", "name": "Dima and Lisa", "tags": ["brute force", "math", "number theory"], "problem_rating": "1800", "solved_by": "x9111"},
{"url": "https://codeforces.com//problemset/problem/584/C", "name": "Marina and Vasya", "tags": ["constructive algorithms", "greedy", "strings"], "problem_rating": "1700", "solved_by": "x6154"},
{"url": "https://codeforces.com//problemset/problem/584/B", "name": "Kolya and Tanya", "tags": ["combinatorics"], "problem_rating": "1500", "solved_by": "x11804"},
{"url": "https://codeforces.com//problemset/problem/584/A", "name": "Olesya and Rodion", "tags": ["math"], "problem_rating": "1000", "solved_by": "x43986"},
{"url": "https://codeforces.com//problemset/problem/583/B", "name": "Robot's Task", "tags": ["greedy", "implementation"], "problem_rating": "1200", "solved_by": "x8659"},
{"url": "https://codeforces.com//problemset/problem/583/A", "name": "Asphalting Roads", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x11288"},
{"url": "https://codeforces.com//problemset/problem/582/E", "name": "Boolean Function", "tags": ["bitmasks", "dp", "expression parsing"], "problem_rating": "3000", "solved_by": "x482"},
{"url": "https://codeforces.com//problemset/problem/582/D", "name": "Number of Binominal Coefficients", "tags": ["dp", "math", "number theory"], "problem_rating": "3300", "solved_by": "x614"},
{"url": "https://codeforces.com//problemset/problem/582/C", "name": "Superior Periodic Subarrays", "tags": ["number theory"], "problem_rating": "2400", "solved_by": "x736"},
{"url": "https://codeforces.com//problemset/problem/582/B", "name": "Once Again...", "tags": ["constructive algorithms", "dp", "matrices"], "problem_rating": "1900", "solved_by": "x3403"},
{"url": "https://codeforces.com//problemset/problem/582/A", "name": "GCD Table", "tags": ["constructive algorithms", "greedy", "number theory"], "problem_rating": "1700", "solved_by": "x7637"},
{"url": "https://codeforces.com//problemset/problem/581/F", "name": "Zublicanes and Mumocrates", "tags": ["dp", "trees", "two pointers"], "problem_rating": "2400", "solved_by": "x862"},
{"url": "https://codeforces.com//problemset/problem/581/E", "name": "Kojiro and Furrari", "tags": ["dp", "greedy"], "problem_rating": "2800", "solved_by": "x190"},
{"url": "https://codeforces.com//problemset/problem/581/D", "name": "Three Logos", "tags": ["bitmasks", "brute force", "constructive algorithms", "geometry", "implementation", "math"], "problem_rating": "1700", "solved_by": "x3553"},
{"url": "https://codeforces.com//problemset/problem/581/C", "name": "Developing Skills", "tags": ["implementation", "math", "sortings"], "problem_rating": "1400", "solved_by": "x7283"},
{"url": "https://codeforces.com//problemset/problem/581/B", "name": "Luxurious Houses", "tags": ["implementation", "math"], "problem_rating": "1100", "solved_by": "x12975"},
{"url": "https://codeforces.com//problemset/problem/581/A", "name": "Vasya the Hipster", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x69079"},
{"url": "https://codeforces.com//problemset/problem/580/E", "name": "Kefa and Watch", "tags": ["data structures", "hashing", "strings"], "problem_rating": "2500", "solved_by": "x2001"},
{"url": "https://codeforces.com//problemset/problem/580/D", "name": "Kefa and Dishes", "tags": ["bitmasks", "dp"], "problem_rating": "1800", "solved_by": "x9406"},
{"url": "https://codeforces.com//problemset/problem/580/C", "name": "Kefa and Park", "tags": ["dfs and similar", "graphs", "trees"], "problem_rating": "1500", "solved_by": "x41328"},
{"url": "https://codeforces.com//problemset/problem/580/B", "name": "Kefa and Company", "tags": ["binary search", "sortings", "two pointers"], "problem_rating": "1500", "solved_by": "x25678"},
{"url": "https://codeforces.com//problemset/problem/580/A", "name": "Kefa and First Steps", "tags": ["brute force", "dp", "implementation"], "problem_rating": "900", "solved_by": "x86061"},
{"url": "https://codeforces.com//problemset/problem/579/B", "name": "Finding Team Member", "tags": ["brute force", "implementation", "sortings"], "problem_rating": "1300", "solved_by": "x5235"},
{"url": "https://codeforces.com//problemset/problem/579/A", "name": "Raising Bacteria", "tags": ["bitmasks"], "problem_rating": "1000", "solved_by": "x58640"},
{"url": "https://codeforces.com//problemset/problem/578/F", "name": "Mirror Box", "tags": ["matrices", "trees"], "problem_rating": "3200", "solved_by": "x542"},
{"url": "https://codeforces.com//problemset/problem/578/E", "name": "Walking!", "tags": ["constructive algorithms", "greedy"], "problem_rating": "2700", "solved_by": "x625"},
{"url": "https://codeforces.com//problemset/problem/578/D", "name": "LCS Again", "tags": ["dp", "greedy"], "problem_rating": "2700", "solved_by": "x796"},
{"url": "https://codeforces.com//problemset/problem/578/C", "name": "Weakness and Poorness", "tags": ["ternary search"], "problem_rating": "2000", "solved_by": "x4368"},
{"url": "https://codeforces.com//problemset/problem/578/B", "name": "\"Or\" Game", "tags": ["brute force", "greedy"], "problem_rating": "1700", "solved_by": "x5137"},
{"url": "https://codeforces.com//problemset/problem/578/A", "name": "A Problem about Polyline", "tags": ["geometry", "math"], "problem_rating": "1700", "solved_by": "x4709"},
{"url": "https://codeforces.com//problemset/problem/577/B", "name": "Modulo Sum", "tags": ["combinatorics", "data structures", "dp", "two pointers"], "problem_rating": "1900", "solved_by": "x11834"},
{"url": "https://codeforces.com//problemset/problem/577/A", "name": "Multiplication Table", "tags": ["implementation", "number theory"], "problem_rating": "1000", "solved_by": "x38932"},
{"url": "https://codeforces.com//problemset/problem/576/E", "name": "Painting Edges", "tags": ["binary search", "data structures"], "problem_rating": "3300", "solved_by": "x1156"},
{"url": "https://codeforces.com//problemset/problem/576/D", "name": "Flights for Regular Customers", "tags": ["dp", "matrices"], "problem_rating": "2700", "solved_by": "x1333"},
{"url": "https://codeforces.com//problemset/problem/576/C", "name": "Points on Plane", "tags": ["constructive algorithms", "divide and conquer", "geometry", "greedy", "sortings"], "problem_rating": "2100", "solved_by": "x3276"},
{"url": "https://codeforces.com//problemset/problem/576/B", "name": "Invariance of Tree", "tags": ["constructive algorithms", "dfs and similar", "greedy", "trees"], "problem_rating": "2100", "solved_by": "x1789"},
{"url": "https://codeforces.com//problemset/problem/576/A", "name": "Vasya and Petya's Game", "tags": ["math", "number theory"], "problem_rating": "1500", "solved_by": "x13578"},
{"url": "https://codeforces.com//problemset/problem/575/I", "name": "Robots protection", "tags": ["data structures"], "problem_rating": "2800", "solved_by": "x429"},
{"url": "https://codeforces.com//problemset/problem/575/H", "name": "Bots", "tags": ["combinatorics", "dp", "math", "number theory"], "problem_rating": "1800", "solved_by": "x1658"},
{"url": "https://codeforces.com//problemset/problem/575/G", "name": "Run for beer", "tags": ["dfs and similar", "shortest paths"], "problem_rating": "2200", "solved_by": "x868"},
{"url": "https://codeforces.com//problemset/problem/575/F", "name": "Bulbo", "tags": ["dp", "greedy"], "problem_rating": "2100", "solved_by": "x990"},
{"url": "https://codeforces.com//problemset/problem/575/E", "name": "Spectator Riots", "tags": ["geometry"], "problem_rating": "2800", "solved_by": "x282"},
{"url": "https://codeforces.com//problemset/problem/575/D", "name": "Tablecity", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1700", "solved_by": "x1817"},
{"url": "https://codeforces.com//problemset/problem/575/C", "name": "Party", "tags": ["bitmasks", "brute force", "graph matchings"], "problem_rating": "2700", "solved_by": "x219"},
{"url": "https://codeforces.com//problemset/problem/575/B", "name": "Bribes", "tags": ["dfs and similar", "graphs", "trees"], "problem_rating": "2200", "solved_by": "x1051"},
{"url": "https://codeforces.com//problemset/problem/575/A", "name": "Fibonotci", "tags": ["data structures", "math", "matrices"], "problem_rating": "2700", "solved_by": "x773"},
{"url": "https://codeforces.com//problemset/problem/574/B", "name": "Bear and Three Musketeers", "tags": ["brute force", "dfs and similar", "graphs", "hashing"], "problem_rating": "1500", "solved_by": "x7706"},
{"url": "https://codeforces.com//problemset/problem/574/A", "name": "Bear and Elections", "tags": ["greedy", "implementation"], "problem_rating": "1200", "solved_by": "x9034"},
{"url": "https://codeforces.com//problemset/problem/573/E", "name": "Bear and Bowling", "tags": ["data structures", "greedy"], "problem_rating": "3200", "solved_by": "x1583"},
{"url": "https://codeforces.com//problemset/problem/573/D", "name": "Bear and Cavalry", "tags": ["data structures", "divide and conquer", "dp"], "problem_rating": "3000", "solved_by": "x459"},
{"url": "https://codeforces.com//problemset/problem/573/C", "name": "Bear and Drawing", "tags": ["constructive algorithms", "dfs and similar", "trees"], "problem_rating": "2300", "solved_by": "x962"},
{"url": "https://codeforces.com//problemset/problem/573/B", "name": "Bear and Blocks", "tags": ["binary search", "data structures", "dp", "math"], "problem_rating": "1600", "solved_by": "x5746"},
{"url": "https://codeforces.com//problemset/problem/573/A", "name": "Bear and Poker", "tags": ["implementation", "math", "number theory"], "problem_rating": "1300", "solved_by": "x16417"},
{"url": "https://codeforces.com//problemset/problem/572/B", "name": "Order Book", "tags": ["data structures", "greedy", "implementation", "sortings"], "problem_rating": "1300", "solved_by": "x6814"},
{"url": "https://codeforces.com//problemset/problem/572/A", "name": "Arrays", "tags": ["sortings"], "problem_rating": "900", "solved_by": "x16420"},
{"url": "https://codeforces.com//problemset/problem/571/E", "name": "Geometric Progressions", "tags": ["math"], "problem_rating": "3200", "solved_by": "x253"},
{"url": "https://codeforces.com//problemset/problem/571/D", "name": "Campus", "tags": ["binary search", "data structures", "dsu", "trees"], "problem_rating": "3100", "solved_by": "x662"},
{"url": "https://codeforces.com//problemset/problem/571/C", "name": "CNF 2", "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy"], "problem_rating": "2500", "solved_by": "x613"},
{"url": "https://codeforces.com//problemset/problem/571/B", "name": "Minimization", "tags": ["dp", "greedy", "sortings"], "problem_rating": "2000", "solved_by": "x2551"},
{"url": "https://codeforces.com//problemset/problem/571/A", "name": "Lengthening Sticks", "tags": ["combinatorics", "implementation", "math"], "problem_rating": "2100", "solved_by": "x2214"},
{"url": "https://codeforces.com//problemset/problem/570/E", "name": "Pig and Palindromes", "tags": ["combinatorics", "dp"], "problem_rating": "2300", "solved_by": "x1839"},
{"url": "https://codeforces.com//problemset/problem/570/D", "name": "Tree Requests", "tags": ["binary search", "bitmasks", "constructive algorithms", "dfs and similar", "graphs", "trees"], "problem_rating": "2200", "solved_by": "x6877"},
{"url": "https://codeforces.com//problemset/problem/570/C", "name": "Replacement", "tags": ["constructive algorithms", "data structures", "implementation"], "problem_rating": "1600", "solved_by": "x9084"},
{"url": "https://codeforces.com//problemset/problem/570/B", "name": "Simple Game", "tags": ["constructive algorithms", "games", "greedy", "implementation", "math"], "problem_rating": "1300", "solved_by": "x15975"},
{"url": "https://codeforces.com//problemset/problem/570/A", "name": "Elections", "tags": ["implementation"], "problem_rating": "1100", "solved_by": "x13811"},
{"url": "https://codeforces.com//problemset/problem/569/B", "name": "Inventory", "tags": ["greedy", "math"], "problem_rating": "1200", "solved_by": "x7006"},
{"url": "https://codeforces.com//problemset/problem/569/A", "name": "Music", "tags": ["implementation", "math"], "problem_rating": "1500", "solved_by": "x4767"},
{"url": "https://codeforces.com//problemset/problem/568/E", "name": "Longest Increasing Subsequence", "tags": ["data structures", "dp"], "problem_rating": "3000", "solved_by": "x585"},
{"url": "https://codeforces.com//problemset/problem/568/D", "name": "Sign Posts", "tags": ["brute force", "geometry", "math"], "problem_rating": "2800", "solved_by": "x306"},
{"url": "https://codeforces.com//problemset/problem/568/C", "name": "New Language", "tags": ["2-sat", "greedy"], "problem_rating": "2600", "solved_by": "x805"},
{"url": "https://codeforces.com//problemset/problem/568/B", "name": "Symmetric and Transitive", "tags": ["combinatorics", "dp", "math"], "problem_rating": "1900", "solved_by": "x2226"},
{"url": "https://codeforces.com//problemset/problem/568/A", "name": "Primes or Palindromes?", "tags": ["brute force", "implementation", "math", "number theory"], "problem_rating": "1600", "solved_by": "x5025"},
{"url": "https://codeforces.com//problemset/problem/567/F", "name": "Mausoleum", "tags": ["dp"], "problem_rating": "2400", "solved_by": "x573"},
{"url": "https://codeforces.com//problemset/problem/567/E", "name": "President and Roads", "tags": ["dfs and similar", "graphs", "hashing", "shortest paths"], "problem_rating": "2200", "solved_by": "x1682"},
{"url": "https://codeforces.com//problemset/problem/567/D", "name": "One-Dimensional Battle Ships", "tags": ["binary search", "data structures", "greedy", "sortings"], "problem_rating": "1700", "solved_by": "x4717"},
{"url": "https://codeforces.com//problemset/problem/567/C", "name": "Geometric Progression", "tags": ["binary search", "data structures", "dp"], "problem_rating": "1700", "solved_by": "x9359"},
{"url": "https://codeforces.com//problemset/problem/567/B", "name": "Berland National Library", "tags": ["implementation"], "problem_rating": "1300", "solved_by": "x8372"},
{"url": "https://codeforces.com//problemset/problem/567/A", "name": "Lineland Mail", "tags": ["greedy", "implementation"], "problem_rating": "900", "solved_by": "x31345"},
{"url": "https://codeforces.com//problemset/problem/566/G", "name": "Max and Min", "tags": ["geometry"], "problem_rating": "2500", "solved_by": "x334"},
{"url": "https://codeforces.com//problemset/problem/566/F", "name": "Clique in the Divisibility Graph", "tags": ["dp", "math", "number theory"], "problem_rating": "1500", "solved_by": "x3569"},
{"url": "https://codeforces.com//problemset/problem/566/E", "name": "Restoring Map", "tags": ["bitmasks", "constructive algorithms", "trees"], "problem_rating": "3200", "solved_by": "x604"},
{"url": "https://codeforces.com//problemset/problem/566/D", "name": "Restructuring Company", "tags": ["data structures", "dsu"], "problem_rating": "1900", "solved_by": "x3160"},
{"url": "https://codeforces.com//problemset/problem/566/C", "name": "Logistical Questions", "tags": ["dfs and similar", "divide and conquer", "trees"], "problem_rating": "3000", "solved_by": "x710"},
{"url": "https://codeforces.com//problemset/problem/566/B", "name": "Replicating Processes", "tags": ["constructive algorithms", "greedy"], "problem_rating": "2600", "solved_by": "x263"},
{"url": "https://codeforces.com//problemset/problem/566/A", "name": "Matching Names", "tags": ["dfs and similar", "strings", "trees"], "problem_rating": "2300", "solved_by": "x880"},
{"url": "https://codeforces.com//problemset/problem/560/B", "name": "Gerald is into Art", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1200", "solved_by": "x7870"},
{"url": "https://codeforces.com//problemset/problem/560/A", "name": "Currency System in Geraldion", "tags": ["implementation", "sortings"], "problem_rating": "1000", "solved_by": "x16925"},
{"url": "https://codeforces.com//problemset/problem/559/E", "name": "Gerald and Path", "tags": ["dp", "sortings"], "problem_rating": "3000", "solved_by": "x864"},
{"url": "https://codeforces.com//problemset/problem/559/D", "name": "Randomizer", "tags": ["combinatorics", "geometry", "probabilities"], "problem_rating": "2800", "solved_by": "x430"},
{"url": "https://codeforces.com//problemset/problem/559/C", "name": "Gerald and Giant Chess", "tags": ["combinatorics", "dp", "math", "number theory"], "problem_rating": "2200", "solved_by": "x6311"},
{"url": "https://codeforces.com//problemset/problem/559/B", "name": "Equivalent Strings", "tags": ["divide and conquer", "hashing", "sortings", "strings"], "problem_rating": "1700", "solved_by": "x10519"},
{"url": "https://codeforces.com//problemset/problem/559/A", "name": "Gerald's Hexagon", "tags": ["brute force", "geometry", "math"], "problem_rating": "1600", "solved_by": "x10347"},
{"url": "https://codeforces.com//problemset/problem/558/E", "name": "A Simple Task", "tags": ["data structures", "sortings", "strings"], "problem_rating": "2300", "solved_by": "x5819"},
{"url": "https://codeforces.com//problemset/problem/558/D", "name": "Guess Your Way Out! II", "tags": ["data structures", "implementation", "sortings"], "problem_rating": "2300", "solved_by": "x1118"},
{"url": "https://codeforces.com//problemset/problem/558/C", "name": "Amr and Chemistry", "tags": ["brute force", "graphs", "greedy", "math", "shortest paths"], "problem_rating": "1900", "solved_by": "x3955"},
{"url": "https://codeforces.com//problemset/problem/558/B", "name": "Amr and The Large Array", "tags": ["implementation"], "problem_rating": "1300", "solved_by": "x7798"},
{"url": "https://codeforces.com//problemset/problem/558/A", "name": "Lala Land and Apple Trees", "tags": ["brute force", "implementation", "sortings"], "problem_rating": "1100", "solved_by": "x10253"},
{"url": "https://codeforces.com//problemset/problem/557/E", "name": "Ann and Half-Palindrome", "tags": ["data structures", "dp", "graphs", "string suffix structures", "strings", "trees"], "problem_rating": "2300", "solved_by": "x1071"},
{"url": "https://codeforces.com//problemset/problem/557/D", "name": "Vitaly and Cycle", "tags": ["combinatorics", "dfs and similar", "graphs", "math"], "problem_rating": "2000", "solved_by": "x2152"},
{"url": "https://codeforces.com//problemset/problem/557/C", "name": "Arthur and Table", "tags": ["brute force", "data structures", "dp", "greedy", "math", "sortings"], "problem_rating": "1900", "solved_by": "x3957"},
{"url": "https://codeforces.com//problemset/problem/557/B", "name": "Pasha and Tea", "tags": ["constructive algorithms", "implementation", "math", "sortings"], "problem_rating": "1500", "solved_by": "x7117"},
{"url": "https://codeforces.com//problemset/problem/557/A", "name": "Ilya and Diplomas", "tags": ["greedy", "implementation", "math"], "problem_rating": "1100", "solved_by": "x8223"},
{"url": "https://codeforces.com//problemset/problem/556/B", "name": "Case of Fake Numbers", "tags": ["brute force", "implementation"], "problem_rating": "1100", "solved_by": "x7904"},
{"url": "https://codeforces.com//problemset/problem/556/A", "name": "Case of the Zeros and Ones", "tags": ["greedy"], "problem_rating": "900", "solved_by": "x38803"},
{"url": "https://codeforces.com//problemset/problem/555/E", "name": "Case of Computer Network", "tags": ["dfs and similar", "graphs", "trees"], "problem_rating": "2800", "solved_by": "x2309"},
{"url": "https://codeforces.com//problemset/problem/555/D", "name": "Case of a Top Secret", "tags": ["binary search", "implementation", "math"], "problem_rating": "2500", "solved_by": "x858"},
{"url": "https://codeforces.com//problemset/problem/555/C", "name": "Case of Chocolate", "tags": ["data structures"], "problem_rating": "2200", "solved_by": "x1951"},
{"url": "https://codeforces.com//problemset/problem/555/B", "name": "Case of Fugitive", "tags": ["data structures", "greedy", "sortings"], "problem_rating": "2000", "solved_by": "x3697"},
{"url": "https://codeforces.com//problemset/problem/555/A", "name": "Case of Matryoshkas", "tags": ["implementation"], "problem_rating": "1500", "solved_by": "x6511"},
{"url": "https://codeforces.com//problemset/problem/554/B", "name": "Ohana Cleans Up", "tags": ["brute force", "greedy", "strings"], "problem_rating": "1200", "solved_by": "x9822"},
{"url": "https://codeforces.com//problemset/problem/554/A", "name": "Kyoya and Photobooks", "tags": ["brute force", "math", "strings"], "problem_rating": "900", "solved_by": "x13025"},
{"url": "https://codeforces.com//problemset/problem/553/E", "name": "Kyoya and Train", "tags": ["dp", "fft", "graphs", "math", "probabilities"], "problem_rating": "3200", "solved_by": "x545"},
{"url": "https://codeforces.com//problemset/problem/553/D", "name": "Nudist Beach", "tags": ["binary search", "graphs", "greedy"], "problem_rating": "2300", "solved_by": "x991"},
{"url": "https://codeforces.com//problemset/problem/553/C", "name": "Love Triangles", "tags": ["dfs and similar", "dsu", "graphs"], "problem_rating": "2200", "solved_by": "x1760"},
{"url": "https://codeforces.com//problemset/problem/553/B", "name": "Kyoya and Permutation", "tags": ["binary search", "combinatorics", "constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "1900", "solved_by": "x2102"},
{"url": "https://codeforces.com//problemset/problem/553/A", "name": "Kyoya and Colored Balls", "tags": ["combinatorics", "dp", "math"], "problem_rating": "1500", "solved_by": "x8486"},
{"url": "https://codeforces.com//problemset/problem/552/E", "name": "Vanya and Brackets", "tags": ["brute force", "dp", "expression parsing", "greedy", "implementation", "strings"], "problem_rating": "2100", "solved_by": "x1604"},
{"url": "https://codeforces.com//problemset/problem/552/D", "name": "Vanya and Triangles", "tags": ["brute force", "combinatorics", "data structures", "geometry", "math", "sortings"], "problem_rating": "1900", "solved_by": "x4395"},
{"url": "https://codeforces.com//problemset/problem/552/C", "name": "Vanya and Scales", "tags": ["brute force", "dp", "greedy", "math", "meet-in-the-middle", "number theory"], "problem_rating": "1900", "solved_by": "x5437"},
{"url": "https://codeforces.com//problemset/problem/552/B", "name": "Vanya and Books", "tags": ["implementation", "math"], "problem_rating": "1200", "solved_by": "x15311"},
{"url": "https://codeforces.com//problemset/problem/552/A", "name": "Vanya and Table", "tags": ["implementation", "math"], "problem_rating": "1000", "solved_by": "x9496"},
{"url": "https://codeforces.com//problemset/problem/551/E", "name": "GukiZ and GukiZiana", "tags": ["binary search", "data structures", "implementation"], "problem_rating": "2500", "solved_by": "x1736"},
{"url": "https://codeforces.com//problemset/problem/551/D", "name": "GukiZ and Binary Operations", "tags": ["combinatorics", "implementation", "math", "matrices", "number theory"], "problem_rating": "2100", "solved_by": "x1949"},
{"url": "https://codeforces.com//problemset/problem/551/C", "name": "GukiZ hates Boxes", "tags": ["binary search", "greedy"], "problem_rating": "2200", "solved_by": "x3508"},
{"url": "https://codeforces.com//problemset/problem/551/B", "name": "ZgukistringZ", "tags": ["brute force", "constructive algorithms", "implementation", "strings"], "problem_rating": "1800", "solved_by": "x3780"},
{"url": "https://codeforces.com//problemset/problem/551/A", "name": "GukiZ and Contest", "tags": ["brute force", "implementation", "sortings"], "problem_rating": "800", "solved_by": "x16137"},
{"url": "https://codeforces.com//problemset/problem/550/E", "name": "Brackets in Implications", "tags": ["constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "2200", "solved_by": "x1383"},
{"url": "https://codeforces.com//problemset/problem/550/D", "name": "Regular Bridge", "tags": ["constructive algorithms", "graphs", "implementation"], "problem_rating": "1900", "solved_by": "x3270"},
{"url": "https://codeforces.com//problemset/problem/550/C", "name": "Divisibility by Eight", "tags": ["brute force", "dp", "math"], "problem_rating": "1500", "solved_by": "x27902"},
{"url": "https://codeforces.com//problemset/problem/550/B", "name": "Preparing Olympiad", "tags": ["bitmasks", "brute force"], "problem_rating": "1400", "solved_by": "x20303"},
{"url": "https://codeforces.com//problemset/problem/550/A", "name": "Two Substrings", "tags": ["brute force", "dp", "greedy", "implementation", "strings"], "problem_rating": "1500", "solved_by": "x37128"},
{"url": "https://codeforces.com//problemset/problem/549/H", "name": "Degenerate Matrix", "tags": ["binary search", "math"], "problem_rating": "2100", "solved_by": "x1971"},
{"url": "https://codeforces.com//problemset/problem/549/G", "name": "Happy Line", "tags": ["constructive algorithms", "greedy", "sortings"], "problem_rating": "2200", "solved_by": "x2409"},
{"url": "https://codeforces.com//problemset/problem/549/F", "name": "Yura and Developers", "tags": ["data structures", "divide and conquer"], "problem_rating": "2800", "solved_by": "x857"},
{"url": "https://codeforces.com//problemset/problem/549/E", "name": "Sasha Circle", "tags": ["geometry", "math"], "problem_rating": "2700", "solved_by": "x147"},
{"url": "https://codeforces.com//problemset/problem/549/D", "name": "Haar Features", "tags": ["greedy", "implementation"], "problem_rating": "1900", "solved_by": "x2133"},
{"url": "https://codeforces.com//problemset/problem/549/C", "name": "The Game Of Parity", "tags": ["games"], "problem_rating": "2200", "solved_by": "x1722"},
{"url": "https://codeforces.com//problemset/problem/549/B", "name": "Looksery Party", "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy"], "problem_rating": "2300", "solved_by": "x1485"},
{"url": "https://codeforces.com//problemset/problem/549/A", "name": "Face Detection", "tags": ["implementation", "strings"], "problem_rating": "900", "solved_by": "x9410"},
{"url": "https://codeforces.com//problemset/problem/548/B", "name": "Mike and Fun", "tags": ["brute force", "dp", "greedy", "implementation"], "problem_rating": "1400", "solved_by": "x8355"},
{"url": "https://codeforces.com//problemset/problem/548/A", "name": "Mike and Fax", "tags": ["brute force", "implementation", "strings"], "problem_rating": "1100", "solved_by": "x9931"},
{"url": "https://codeforces.com//problemset/problem/547/E", "name": "Mike and Friends", "tags": ["data structures", "string suffix structures", "strings", "trees"], "problem_rating": "2800", "solved_by": "x1991"},
{"url": "https://codeforces.com//problemset/problem/547/D", "name": "Mike and Fish", "tags": ["constructive algorithms", "dfs and similar", "graphs"], "problem_rating": "2600", "solved_by": "x2501"},
{"url": "https://codeforces.com//problemset/problem/547/C", "name": "Mike and Foam", "tags": ["bitmasks", "combinatorics", "dp", "math", "number theory"], "problem_rating": "2300", "solved_by": "x2772"},
{"url": "https://codeforces.com//problemset/problem/547/B", "name": "Mike and Feet", "tags": ["binary search", "data structures", "dp", "dsu"], "problem_rating": "1900", "solved_by": "x8431"},
{"url": "https://codeforces.com//problemset/problem/547/A", "name": "Mike and Frog", "tags": ["brute force", "greedy", "implementation", "math"], "problem_rating": "2200", "solved_by": "x2383"},
{"url": "https://codeforces.com//problemset/problem/546/E", "name": "Soldier and Traveling", "tags": ["flows", "graphs", "math"], "problem_rating": "2100", "solved_by": "x3514"},
{"url": "https://codeforces.com//problemset/problem/546/D", "name": "Soldier and Number Game", "tags": ["constructive algorithms", "dp", "math", "number theory"], "problem_rating": "1700", "solved_by": "x11526"},
{"url": "https://codeforces.com//problemset/problem/546/C", "name": "Soldier and Cards", "tags": ["brute force", "dfs and similar", "games"], "problem_rating": "1400", "solved_by": "x17295"},
{"url": "https://codeforces.com//problemset/problem/546/B", "name": "Soldier and Badges", "tags": ["brute force", "greedy", "implementation", "sortings"], "problem_rating": "1200", "solved_by": "x17402"},
{"url": "https://codeforces.com//problemset/problem/546/A", "name": "Soldier and Bananas", "tags": ["brute force", "implementation", "math"], "problem_rating": "800", "solved_by": "x173680"},
{"url": "https://codeforces.com//problemset/problem/545/E", "name": "Paths and Trees", "tags": ["graphs", "greedy", "shortest paths"], "problem_rating": "2000", "solved_by": "x4527"},
{"url": "https://codeforces.com//problemset/problem/545/D", "name": "Queue", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "1300", "solved_by": "x24525"},
{"url": "https://codeforces.com//problemset/problem/545/C", "name": "Woodcutters", "tags": ["dp", "greedy"], "problem_rating": "1500", "solved_by": "x27159"},
{"url": "https://codeforces.com//problemset/problem/545/B", "name": "Equidistant String", "tags": ["greedy"], "problem_rating": "1100", "solved_by": "x11513"},
{"url": "https://codeforces.com//problemset/problem/545/A", "name": "Toy Cars", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x11508"},
{"url": "https://codeforces.com//problemset/problem/544/B", "name": "Sea and Islands", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1400", "solved_by": "x7903"},
{"url": "https://codeforces.com//problemset/problem/544/A", "name": "Set of Strings", "tags": ["implementation", "strings"], "problem_rating": "1100", "solved_by": "x8078"},
{"url": "https://codeforces.com//problemset/problem/543/E", "name": "Listening to Music", "tags": ["constructive algorithms", "data structures"], "problem_rating": "3200", "solved_by": "x285"},
{"url": "https://codeforces.com//problemset/problem/543/D", "name": "Road Improvement", "tags": ["dp", "trees"], "problem_rating": "2300", "solved_by": "x2603"},
{"url": "https://codeforces.com//problemset/problem/543/C", "name": "Remembering Strings", "tags": ["bitmasks", "dp"], "problem_rating": "2500", "solved_by": "x1370"},
{"url": "https://codeforces.com//problemset/problem/543/B", "name": "Destroying Roads", "tags": ["constructive algorithms", "graphs", "shortest paths"], "problem_rating": "2100", "solved_by": "x4053"},
{"url": "https://codeforces.com//problemset/problem/543/A", "name": "Writing Code", "tags": ["dp"], "problem_rating": "1800", "solved_by": "x7800"},
{"url": "https://codeforces.com//problemset/problem/542/F", "name": "Quest", "tags": ["dp", "greedy"], "problem_rating": "2100", "solved_by": "x919"},
{"url": "https://codeforces.com//problemset/problem/542/E", "name": "Playing on Graph", "tags": ["graphs", "shortest paths"], "problem_rating": "2600", "solved_by": "x810"},
{"url": "https://codeforces.com//problemset/problem/542/D", "name": "Superhero's Job", "tags": ["dfs and similar", "dp", "hashing", "math", "number theory"], "problem_rating": "2600", "solved_by": "x502"},
{"url": "https://codeforces.com//problemset/problem/542/C", "name": "Idempotent functions", "tags": ["constructive algorithms", "graphs", "math"], "problem_rating": "2000", "solved_by": "x1109"},
{"url": "https://codeforces.com//problemset/problem/542/B", "name": "Duck Hunt", "tags": ["data structures"], "problem_rating": "3100", "solved_by": "x194"},
{"url": "https://codeforces.com//problemset/problem/542/A", "name": "Place Your Ad Here", "tags": ["data structures", "sortings"], "problem_rating": "2400", "solved_by": "x545"},
{"url": "https://codeforces.com//problemset/problem/540/E", "name": "Infinite Inversions", "tags": ["binary search", "data structures", "implementation", "sortings", "trees"], "problem_rating": "2100", "solved_by": "x2059"},
{"url": "https://codeforces.com//problemset/problem/540/D", "name": "Bad Luck Island", "tags": ["dp", "probabilities"], "problem_rating": "1900", "solved_by": "x5332"},
{"url": "https://codeforces.com//problemset/problem/540/C", "name": "Ice Cave", "tags": ["dfs and similar"], "problem_rating": "2000", "solved_by": "x7147"},
{"url": "https://codeforces.com//problemset/problem/540/B", "name": "School Marks", "tags": ["greedy", "implementation"], "problem_rating": "1700", "solved_by": "x4632"},
{"url": "https://codeforces.com//problemset/problem/540/A", "name": "Combination Lock", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x32056"},
{"url": "https://codeforces.com//problemset/problem/538/H", "name": "Summer Dichotomy", "tags": ["2-sat", "data structures", "dfs and similar", "greedy"], "problem_rating": "3200", "solved_by": "x634"},
{"url": "https://codeforces.com//problemset/problem/538/G", "name": "Berserk Robot", "tags": ["constructive algorithms", "math", "sortings"], "problem_rating": "3100", "solved_by": "x446"},
{"url": "https://codeforces.com//problemset/problem/538/F", "name": "A Heap of Heaps", "tags": ["brute force", "data structures", "math", "sortings"], "problem_rating": "2200", "solved_by": "x1674"},
{"url": "https://codeforces.com//problemset/problem/538/E", "name": "Demiurges Play Again", "tags": ["dfs and similar", "dp", "math", "trees"], "problem_rating": "2200", "solved_by": "x1517"},
{"url": "https://codeforces.com//problemset/problem/538/D", "name": "Weird Chess", "tags": ["brute force", "constructive algorithms", "implementation"], "problem_rating": "1800", "solved_by": "x2416"},
{"url": "https://codeforces.com//problemset/problem/538/C", "name": "Tourist's Notes", "tags": ["binary search", "brute force", "greedy", "implementation", "math"], "problem_rating": "1600", "solved_by": "x5778"},
{"url": "https://codeforces.com//problemset/problem/538/B", "name": "Quasi Binary", "tags": ["constructive algorithms", "dp", "greedy", "implementation"], "problem_rating": "1400", "solved_by": "x17796"},
{"url": "https://codeforces.com//problemset/problem/538/A", "name": "Cutting Banner", "tags": ["brute force", "implementation"], "problem_rating": "1400", "solved_by": "x7094"},
{"url": "https://codeforces.com//problemset/problem/536/E", "name": "Tavas on the Path", "tags": ["data structures", "divide and conquer", "trees"], "problem_rating": "3100", "solved_by": "x380"},
{"url": "https://codeforces.com//problemset/problem/536/D", "name": "Tavas in Kansas", "tags": ["dp", "games"], "problem_rating": "2900", "solved_by": "x715"},
{"url": "https://codeforces.com//problemset/problem/535/E", "name": "Tavas and Pashmaks", "tags": ["geometry", "math"], "problem_rating": "2600", "solved_by": "x799"},
{"url": "https://codeforces.com//problemset/problem/535/D", "name": "Tavas and Malekas", "tags": ["greedy", "hashing", "string suffix structures", "strings"], "problem_rating": "1900", "solved_by": "x3895"},
{"url": "https://codeforces.com//problemset/problem/535/C", "name": "Tavas and Karafs", "tags": ["binary search", "greedy", "math"], "problem_rating": "1900", "solved_by": "x3755"},
{"url": "https://codeforces.com//problemset/problem/535/B", "name": "Tavas and SaDDas", "tags": ["bitmasks", "brute force", "combinatorics", "implementation"], "problem_rating": "1100", "solved_by": "x22123"},
{"url": "https://codeforces.com//problemset/problem/535/A", "name": "Tavas and Nafas", "tags": ["brute force", "implementation"], "problem_rating": "1000", "solved_by": "x12038"},
{"url": "https://codeforces.com//problemset/problem/534/F", "name": "Simplified Nonogram", "tags": ["bitmasks", "dp", "hashing", "meet-in-the-middle"], "problem_rating": "2400", "solved_by": "x460"},
{"url": "https://codeforces.com//problemset/problem/534/E", "name": "Berland Local Positioning System", "tags": ["constructive algorithms", "greedy", "hashing", "implementation"], "problem_rating": "2400", "solved_by": "x345"},
{"url": "https://codeforces.com//problemset/problem/534/D", "name": "Handshakes", "tags": ["binary search", "constructive algorithms", "data structures", "greedy"], "problem_rating": "1900", "solved_by": "x2383"},
{"url": "https://codeforces.com//problemset/problem/534/C", "name": "Polycarpus' Dice", "tags": ["math"], "problem_rating": "1600", "solved_by": "x4960"},
{"url": "https://codeforces.com//problemset/problem/534/B", "name": "Covered Path", "tags": ["dp", "greedy", "math"], "problem_rating": "1400", "solved_by": "x10053"},
{"url": "https://codeforces.com//problemset/problem/534/A", "name": "Exam", "tags": ["constructive algorithms", "implementation", "math"], "problem_rating": "1100", "solved_by": "x12162"},
{"url": "https://codeforces.com//problemset/problem/533/F", "name": "Encoding", "tags": ["hashing", "string suffix structures", "strings"], "problem_rating": "2400", "solved_by": "x875"},
{"url": "https://codeforces.com//problemset/problem/533/E", "name": "Correcting Mistakes", "tags": ["constructive algorithms", "dp", "greedy", "hashing", "strings", "two pointers"], "problem_rating": "1800", "solved_by": "x2244"},
{"url": "https://codeforces.com//problemset/problem/533/D", "name": "Landmarks", "tags": ["data structures", "dp"], "problem_rating": "3000", "solved_by": "x220"},
{"url": "https://codeforces.com//problemset/problem/533/C", "name": "Board Game", "tags": ["games", "greedy", "implementation", "math"], "problem_rating": "1700", "solved_by": "x2174"},
{"url": "https://codeforces.com//problemset/problem/533/B", "name": "Work Group", "tags": ["dfs and similar", "dp", "graphs", "strings", "trees"], "problem_rating": "2000", "solved_by": "x2344"},
{"url": "https://codeforces.com//problemset/problem/533/A", "name": "Berland Miners", "tags": ["binary search", "data structures", "dfs and similar", "greedy", "trees"], "problem_rating": "3000", "solved_by": "x381"},
{"url": "https://codeforces.com//problemset/problem/530/I", "name": "Different variables", "tags": ["*special problem"], "problem_rating": "2500", "solved_by": "x46"},
{"url": "https://codeforces.com//problemset/problem/530/H", "name": "Points in triangle", "tags": ["*special problem", "geometry"], "problem_rating": "2100", "solved_by": "x122"},
{"url": "https://codeforces.com//problemset/problem/530/G", "name": "Levenshtein distance", "tags": ["*special problem"], "problem_rating": "2100", "solved_by": "x152"},
{"url": "https://codeforces.com//problemset/problem/530/F", "name": "Jumping frogs", "tags": ["*special problem"], "problem_rating": "2100", "solved_by": "x100"},
{"url": "https://codeforces.com//problemset/problem/530/E", "name": "Sum and product", "tags": ["*special problem"], "problem_rating": "1700", "solved_by": "x305"},
{"url": "https://codeforces.com//problemset/problem/530/D", "name": "Set subtraction", "tags": ["*special problem"], "problem_rating": "1600", "solved_by": "x451"},
{"url": "https://codeforces.com//problemset/problem/530/C", "name": "Diophantine equation", "tags": ["*special problem"], "problem_rating": "1500", "solved_by": "x546"},
{"url": "https://codeforces.com//problemset/problem/530/B", "name": "String inside out", "tags": ["*special problem"], "problem_rating": "1600", "solved_by": "x541"},
{"url": "https://codeforces.com//problemset/problem/530/A", "name": "Quadratic equation", "tags": ["*special problem"], "problem_rating": "1500", "solved_by": "x672"},
{"url": "https://codeforces.com//problemset/problem/529/B", "name": "Group Photo 2 (online mirror version)", "tags": ["brute force", "greedy", "sortings"], "problem_rating": "1900", "solved_by": "x856"},
{"url": "https://codeforces.com//problemset/problem/528/E", "name": "Triangles 3000", "tags": ["geometry", "sortings"], "problem_rating": "3100", "solved_by": "x216"},
{"url": "https://codeforces.com//problemset/problem/528/D", "name": "Fuzzy Search", "tags": ["bitmasks", "brute force", "fft"], "problem_rating": "2500", "solved_by": "x2107"},
{"url": "https://codeforces.com//problemset/problem/527/E", "name": "Data Center Drama", "tags": ["dfs and similar", "graphs"], "problem_rating": "2600", "solved_by": "x1920"},
{"url": "https://codeforces.com//problemset/problem/527/D", "name": "Clique Problem", "tags": ["data structures", "dp", "greedy", "implementation", "sortings"], "problem_rating": "1800", "solved_by": "x4688"},
{"url": "https://codeforces.com//problemset/problem/527/C", "name": "Glass Carving", "tags": ["binary search", "data structures", "implementation"], "problem_rating": "1500", "solved_by": "x6737"},
{"url": "https://codeforces.com//problemset/problem/527/B", "name": "Error Correct System", "tags": ["greedy"], "problem_rating": "1500", "solved_by": "x3861"},
{"url": "https://codeforces.com//problemset/problem/527/A", "name": "Playing with Paper", "tags": ["implementation", "math"], "problem_rating": "1100", "solved_by": "x14314"},
{"url": "https://codeforces.com//problemset/problem/526/G", "name": "Spiders Evil Plan", "tags": ["greedy", "trees"], "problem_rating": "3300", "solved_by": "x705"},
{"url": "https://codeforces.com//problemset/problem/526/F", "name": "Pudding Monsters", "tags": ["data structures", "divide and conquer"], "problem_rating": "3000", "solved_by": "x2407"},
{"url": "https://codeforces.com//problemset/problem/526/E", "name": "Transmitting Levels", "tags": ["dp", "implementation"], "problem_rating": "2400", "solved_by": "x1065"},
{"url": "https://codeforces.com//problemset/problem/526/D", "name": "Om Nom and Necklace", "tags": ["hashing", "string suffix structures", "strings"], "problem_rating": "2200", "solved_by": "x2126"},
{"url": "https://codeforces.com//problemset/problem/526/C", "name": "Om Nom and Candies", "tags": ["brute force", "greedy", "math"], "problem_rating": "2000", "solved_by": "x2461"},
{"url": "https://codeforces.com//problemset/problem/526/B", "name": "Om Nom and Dark Park", "tags": ["dfs and similar", "greedy", "implementation"], "problem_rating": "1400", "solved_by": "x4476"},
{"url": "https://codeforces.com//problemset/problem/526/A", "name": "King of Thieves", "tags": ["brute force", "implementation"], "problem_rating": "1300", "solved_by": "x4742"},
{"url": "https://codeforces.com//problemset/problem/525/E", "name": "Anya and Cubes", "tags": ["binary search", "bitmasks", "brute force", "dp", "math", "meet-in-the-middle"], "problem_rating": "2100", "solved_by": "x3049"},
{"url": "https://codeforces.com//problemset/problem/525/D", "name": "Arthur and Walls", "tags": ["constructive algorithms", "data structures", "graphs", "greedy", "shortest paths"], "problem_rating": "2400", "solved_by": "x1714"},
{"url": "https://codeforces.com//problemset/problem/525/C", "name": "Ilya and Sticks", "tags": ["greedy", "math", "sortings"], "problem_rating": "1600", "solved_by": "x5769"},
{"url": "https://codeforces.com//problemset/problem/525/B", "name": "Pasha and String", "tags": ["constructive algorithms", "greedy", "math", "strings"], "problem_rating": "1400", "solved_by": "x9276"},
{"url": "https://codeforces.com//problemset/problem/525/A", "name": "Vitaliy and Pie", "tags": ["greedy", "hashing", "strings"], "problem_rating": "1100", "solved_by": "x14260"},
{"url": "https://codeforces.com//problemset/problem/524/F", "name": "And Yet Another Bracket Sequence", "tags": ["data structures", "greedy", "hashing", "string suffix structures", "strings"], "problem_rating": "2700", "solved_by": "x525"},
{"url": "https://codeforces.com//problemset/problem/524/E", "name": "Rooks and Rectangles", "tags": ["data structures", "sortings"], "problem_rating": "2400", "solved_by": "x1179"},
{"url": "https://codeforces.com//problemset/problem/524/D", "name": "Social Network", "tags": ["greedy", "two pointers"], "problem_rating": "2100", "solved_by": "x948"},
{"url": "https://codeforces.com//problemset/problem/524/C", "name": "The Art of Dealing with ATM", "tags": ["binary search", "sortings"], "problem_rating": "1900", "solved_by": "x2028"},
{"url": "https://codeforces.com//problemset/problem/524/B", "name": "Фото на память - 2 (round version)", "tags": ["dp", "greedy"], "problem_rating": "1700", "solved_by": "x1449"},
{"url": "https://codeforces.com//problemset/problem/524/A", "name": "Возможно, вы знаете этих людей?", "tags": ["implementation"], "problem_rating": "1600", "solved_by": "x1396"},
{"url": "https://codeforces.com//problemset/problem/523/D", "name": "Statistics of Recompressing Videos", "tags": ["*special problem", "data structures", "implementation"], "problem_rating": "1600", "solved_by": "x2271"},
{"url": "https://codeforces.com//problemset/problem/523/C", "name": "Name Quest", "tags": ["*special problem", "greedy"], "problem_rating": "1400", "solved_by": "x2481"},
{"url": "https://codeforces.com//problemset/problem/523/B", "name": "Mean Requests", "tags": ["*special problem", "implementation"], "problem_rating": "1500", "solved_by": "x945"},
{"url": "https://codeforces.com//problemset/problem/523/A", "name": "Rotate, Flip and Zoom", "tags": ["*special problem", "implementation"], "problem_rating": "1200", "solved_by": "x2604"},
{"url": "https://codeforces.com//problemset/problem/522/D", "name": "Closest Equals", "tags": ["*special problem", "data structures"], "problem_rating": "2000", "solved_by": "x3063"},
{"url": "https://codeforces.com//problemset/problem/522/C", "name": "Chicken or Fish?", "tags": ["greedy"], "problem_rating": "2100", "solved_by": "x714"},
{"url": "https://codeforces.com//problemset/problem/522/B", "name": "Photo to Remember", "tags": ["*special problem", "data structures", "dp", "implementation"], "problem_rating": "1100", "solved_by": "x8761"},
{"url": "https://codeforces.com//problemset/problem/522/A", "name": "Reposts", "tags": ["*special problem", "dfs and similar", "dp", "graphs", "trees"], "problem_rating": "1200", "solved_by": "x16025"},
{"url": "https://codeforces.com//problemset/problem/521/E", "name": "Cycling City", "tags": ["dfs and similar", "graphs"], "problem_rating": "3100", "solved_by": "x964"},
{"url": "https://codeforces.com//problemset/problem/521/D", "name": "Shop", "tags": ["greedy"], "problem_rating": "2800", "solved_by": "x1517"},
{"url": "https://codeforces.com//problemset/problem/520/E", "name": "Pluses everywhere", "tags": ["combinatorics", "dp", "math", "number theory"], "problem_rating": "2200", "solved_by": "x1840"},
{"url": "https://codeforces.com//problemset/problem/520/D", "name": "Cubes", "tags": ["games", "greedy", "implementation"], "problem_rating": "2100", "solved_by": "x1538"},
{"url": "https://codeforces.com//problemset/problem/520/C", "name": "DNA Alignment", "tags": ["math", "strings"], "problem_rating": "1500", "solved_by": "x4123"},
{"url": "https://codeforces.com//problemset/problem/520/B", "name": "Two Buttons", "tags": ["dfs and similar", "graphs", "greedy", "implementation", "math", "shortest paths"], "problem_rating": "1400", "solved_by": "x49480"},
{"url": "https://codeforces.com//problemset/problem/520/A", "name": "Pangram", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x93450"},
{"url": "https://codeforces.com//problemset/problem/519/E", "name": "A and B and Lecture Rooms", "tags": ["binary search", "data structures", "dfs and similar", "dp", "trees"], "problem_rating": "2100", "solved_by": "x6604"},
{"url": "https://codeforces.com//problemset/problem/519/D", "name": "A and B and Interesting Substrings", "tags": ["data structures", "dp", "two pointers"], "problem_rating": "1800", "solved_by": "x6321"},
{"url": "https://codeforces.com//problemset/problem/519/C", "name": "A and B and Team Training", "tags": ["greedy", "implementation", "math", "number theory"], "problem_rating": "1300", "solved_by": "x19485"},
{"url": "https://codeforces.com//problemset/problem/519/B", "name": "A and B and Compilation Errors", "tags": ["data structures", "implementation", "sortings"], "problem_rating": "1100", "solved_by": "x38524"},
{"url": "https://codeforces.com//problemset/problem/519/A", "name": "A and B and Chess", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x18831"},
{"url": "https://codeforces.com//problemset/problem/518/F", "name": "Pasha and Pipe", "tags": ["binary search", "brute force", "combinatorics", "dp", "implementation"], "problem_rating": "2300", "solved_by": "x358"},
{"url": "https://codeforces.com//problemset/problem/518/E", "name": "Arthur and Questions", "tags": ["greedy", "implementation", "math", "ternary search"], "problem_rating": "2200", "solved_by": "x916"},
{"url": "https://codeforces.com//problemset/problem/518/D", "name": "Ilya and Escalator", "tags": ["combinatorics", "dp", "math", "probabilities"], "problem_rating": "1700", "solved_by": "x6868"},
{"url": "https://codeforces.com//problemset/problem/518/C", "name": "Anya and Smartphone", "tags": ["constructive algorithms", "data structures", "implementation"], "problem_rating": "1600", "solved_by": "x5954"},
{"url": "https://codeforces.com//problemset/problem/518/B", "name": "Tanya and Postcard", "tags": ["greedy", "implementation", "strings"], "problem_rating": "1400", "solved_by": "x7889"},
{"url": "https://codeforces.com//problemset/problem/518/A", "name": "Vitaly and Strings", "tags": ["constructive algorithms", "strings"], "problem_rating": "1600", "solved_by": "x9170"},
{"url": "https://codeforces.com//problemset/problem/516/E", "name": "Drazil and His Happy Friends", "tags": ["math", "number theory"], "problem_rating": "3100", "solved_by": "x490"},
{"url": "https://codeforces.com//problemset/problem/516/D", "name": "Drazil and Morning Exercise", "tags": ["dfs and similar", "dp", "dsu", "trees", "two pointers"], "problem_rating": "2800", "solved_by": "x1246"},
{"url": "https://codeforces.com//problemset/problem/515/E", "name": "Drazil and Park", "tags": ["data structures"], "problem_rating": "2300", "solved_by": "x2076"},
{"url": "https://codeforces.com//problemset/problem/515/D", "name": "Drazil and Tiles", "tags": ["constructive algorithms", "greedy"], "problem_rating": "2000", "solved_by": "x2826"},
{"url": "https://codeforces.com//problemset/problem/515/C", "name": "Drazil and Factorial", "tags": ["greedy", "math", "sortings"], "problem_rating": "1400", "solved_by": "x25470"},
{"url": "https://codeforces.com//problemset/problem/515/B", "name": "Drazil and His Happy Friends", "tags": ["brute force", "dsu", "meet-in-the-middle", "number theory"], "problem_rating": "1300", "solved_by": "x7401"},
{"url": "https://codeforces.com//problemset/problem/515/A", "name": "Drazil and Date", "tags": ["math"], "problem_rating": "1000", "solved_by": "x19894"},
{"url": "https://codeforces.com//problemset/problem/514/E", "name": "Darth Vader and Tree", "tags": ["dp", "matrices"], "problem_rating": "2200", "solved_by": "x1403"},
{"url": "https://codeforces.com//problemset/problem/514/D", "name": "R2D2 and Droid Army", "tags": ["binary search", "data structures", "two pointers"], "problem_rating": "2000", "solved_by": "x4224"},
{"url": "https://codeforces.com//problemset/problem/514/C", "name": "Watto and Mechanism", "tags": ["binary search", "data structures", "hashing", "string suffix structures", "strings"], "problem_rating": "2000", "solved_by": "x6670"},
{"url": "https://codeforces.com//problemset/problem/514/B", "name": "Han Solo and Lazer Gun", "tags": ["brute force", "data structures", "geometry", "implementation", "math"], "problem_rating": "1400", "solved_by": "x20507"},
{"url": "https://codeforces.com//problemset/problem/514/A", "name": "Chewbaсca and Number", "tags": ["greedy", "implementation"], "problem_rating": "1200", "solved_by": "x49005"},
{"url": "https://codeforces.com//problemset/problem/513/G3", "name": "Inversions problem", "tags": ["dp"], "problem_rating": "3100", "solved_by": "x259"},
{"url": "https://codeforces.com//problemset/problem/513/G2", "name": "Inversions problem", "tags": ["dp", "probabilities"], "problem_rating": "2400", "solved_by": "x640"},
{"url": "https://codeforces.com//problemset/problem/513/G1", "name": "Inversions problem", "tags": ["brute force", "dfs and similar", "dp", "meet-in-the-middle"], "problem_rating": "1800", "solved_by": "x1772"},
{"url": "https://codeforces.com//problemset/problem/513/F2", "name": "Scaygerboss", "tags": ["flows"], "problem_rating": "2800", "solved_by": "x336"},
{"url": "https://codeforces.com//problemset/problem/513/F1", "name": "Scaygerboss", "tags": ["flows"], "problem_rating": "2700", "solved_by": "x311"},
{"url": "https://codeforces.com//problemset/problem/513/E2", "name": "Subarray Cuts", "tags": ["dp"], "problem_rating": "2700", "solved_by": "x559"},
{"url": "https://codeforces.com//problemset/problem/513/E1", "name": "Subarray Cuts", "tags": ["dp"], "problem_rating": "2600", "solved_by": "x473"},
{"url": "https://codeforces.com//problemset/problem/513/D2", "name": "Constrained Tree", "tags": ["constructive algorithms", "data structures"], "problem_rating": "2600", "solved_by": "x370"},
{"url": "https://codeforces.com//problemset/problem/513/D1", "name": "Constrained Tree", "tags": ["dfs and similar"], "problem_rating": "2400", "solved_by": "x480"},
{"url": "https://codeforces.com//problemset/problem/513/C", "name": "Second price auction", "tags": ["bitmasks", "probabilities"], "problem_rating": "2000", "solved_by": "x1527"},
{"url": "https://codeforces.com//problemset/problem/513/B2", "name": "Permutations", "tags": ["bitmasks", "divide and conquer", "math"], "problem_rating": "1800", "solved_by": "x2576"},
{"url": "https://codeforces.com//problemset/problem/513/B1", "name": "Permutations", "tags": ["brute force"], "problem_rating": "1400", "solved_by": "x3590"},
{"url": "https://codeforces.com//problemset/problem/513/A", "name": "Game", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x20083"},
{"url": "https://codeforces.com//problemset/problem/512/E", "name": "Fox And Polygon", "tags": ["constructive algorithms", "divide and conquer"], "problem_rating": "2900", "solved_by": "x507"},
{"url": "https://codeforces.com//problemset/problem/512/D", "name": "Fox And Travelling", "tags": ["dp", "trees"], "problem_rating": "2900", "solved_by": "x948"},
{"url": "https://codeforces.com//problemset/problem/510/E", "name": "Fox And Dinner", "tags": ["flows"], "problem_rating": "2300", "solved_by": "x2167"},
{"url": "https://codeforces.com//problemset/problem/510/D", "name": "Fox And Jumping", "tags": ["bitmasks", "brute force", "dp", "math"], "problem_rating": "1900", "solved_by": "x5284"},
{"url": "https://codeforces.com//problemset/problem/510/C", "name": "Fox And Names", "tags": ["dfs and similar", "graphs", "sortings"], "problem_rating": "1600", "solved_by": "x15679"},
{"url": "https://codeforces.com//problemset/problem/510/B", "name": "Fox And Two Dots", "tags": ["dfs and similar"], "problem_rating": "1500", "solved_by": "x13700"},
{"url": "https://codeforces.com//problemset/problem/510/A", "name": "Fox And Snake", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x80176"},
{"url": "https://codeforces.com//problemset/problem/509/F", "name": "Progress Monitoring", "tags": ["dp", "trees"], "problem_rating": "2300", "solved_by": "x925"},
{"url": "https://codeforces.com//problemset/problem/509/E", "name": "Pretty Song", "tags": ["math", "strings"], "problem_rating": "2000", "solved_by": "x1780"},
{"url": "https://codeforces.com//problemset/problem/509/D", "name": "Restoring Numbers", "tags": ["constructive algorithms", "math"], "problem_rating": "2200", "solved_by": "x739"},
{"url": "https://codeforces.com//problemset/problem/509/C", "name": "Sums of Digits", "tags": ["dp", "greedy", "implementation"], "problem_rating": "2000", "solved_by": "x2046"},
{"url": "https://codeforces.com//problemset/problem/509/B", "name": "Painting Pebbles", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "1300", "solved_by": "x9571"},
{"url": "https://codeforces.com//problemset/problem/509/A", "name": "Maximum in Table", "tags": ["brute force", "implementation"], "problem_rating": "800", "solved_by": "x37812"},
{"url": "https://codeforces.com//problemset/problem/508/E", "name": "Arthur and Brackets", "tags": ["dp", "greedy"], "problem_rating": "2200", "solved_by": "x1735"},
{"url": "https://codeforces.com//problemset/problem/508/D", "name": "Tanya and Password", "tags": ["dfs and similar", "graphs"], "problem_rating": "2500", "solved_by": "x3317"},
{"url": "https://codeforces.com//problemset/problem/508/C", "name": "Anya and Ghosts", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1600", "solved_by": "x4433"},
{"url": "https://codeforces.com//problemset/problem/508/B", "name": "Anton and currency you all know", "tags": ["greedy", "math", "strings"], "problem_rating": "1300", "solved_by": "x22356"},
{"url": "https://codeforces.com//problemset/problem/508/A", "name": "Pasha and Pixels", "tags": ["brute force"], "problem_rating": "1100", "solved_by": "x7825"},
{"url": "https://codeforces.com//problemset/problem/507/E", "name": "Breaking Good", "tags": ["dfs and similar", "dp", "graphs", "shortest paths"], "problem_rating": "2100", "solved_by": "x2813"},
{"url": "https://codeforces.com//problemset/problem/507/D", "name": "The Maths Lecture", "tags": ["dp", "implementation"], "problem_rating": "2200", "solved_by": "x1718"},
{"url": "https://codeforces.com//problemset/problem/507/C", "name": "Guess Your Way Out!", "tags": ["implementation", "math", "trees"], "problem_rating": "1700", "solved_by": "x4308"},
{"url": "https://codeforces.com//problemset/problem/507/B", "name": "Amr and Pins", "tags": ["geometry", "math"], "problem_rating": "1400", "solved_by": "x24170"},
{"url": "https://codeforces.com//problemset/problem/507/A", "name": "Amr and Music", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "1000", "solved_by": "x17833"},
{"url": "https://codeforces.com//problemset/problem/506/E", "name": "Mr. Kitayuta's Gift", "tags": ["combinatorics", "dp", "matrices", "strings"], "problem_rating": "3000", "solved_by": "x711"},
{"url": "https://codeforces.com//problemset/problem/506/D", "name": "Mr. Kitayuta's Colorful Graph", "tags": ["brute force", "dfs and similar", "dsu", "graphs"], "problem_rating": "2400", "solved_by": "x2057"},
{"url": "https://codeforces.com//problemset/problem/505/E", "name": "Mr. Kitayuta vs. Bamboos", "tags": ["binary search", "greedy"], "problem_rating": "2900", "solved_by": "x1355"},
{"url": "https://codeforces.com//problemset/problem/505/D", "name": "Mr. Kitayuta's Technology", "tags": ["dfs and similar"], "problem_rating": "2200", "solved_by": "x2489"},
{"url": "https://codeforces.com//problemset/problem/505/C", "name": "Mr. Kitayuta, the Treasure Hunter", "tags": ["dfs and similar", "dp", "two pointers"], "problem_rating": "1900", "solved_by": "x6246"},
{"url": "https://codeforces.com//problemset/problem/505/B", "name": "Mr. Kitayuta's Colorful Graph", "tags": ["dfs and similar", "dp", "dsu", "graphs"], "problem_rating": "1400", "solved_by": "x12415"},
{"url": "https://codeforces.com//problemset/problem/505/A", "name": "Mr. Kitayuta's Gift", "tags": ["brute force", "implementation", "strings"], "problem_rating": "1100", "solved_by": "x6636"},
{"url": "https://codeforces.com//problemset/problem/504/E", "name": "Misha and LCP on Tree", "tags": ["binary search", "dfs and similar", "hashing", "string suffix structures", "trees"], "problem_rating": "3000", "solved_by": "x890"},
{"url": "https://codeforces.com//problemset/problem/504/D", "name": "Misha and XOR", "tags": ["bitmasks"], "problem_rating": "2700", "solved_by": "x300"},
{"url": "https://codeforces.com//problemset/problem/501/E", "name": "Misha and Palindrome Degree", "tags": ["binary search", "combinatorics", "implementation"], "problem_rating": "2500", "solved_by": "x771"},
{"url": "https://codeforces.com//problemset/problem/501/D", "name": "Misha and Permutations Summation", "tags": ["data structures"], "problem_rating": "2000", "solved_by": "x2370"},
{"url": "https://codeforces.com//problemset/problem/501/C", "name": "Misha and Forest", "tags": ["constructive algorithms", "data structures", "greedy", "sortings", "trees"], "problem_rating": "1500", "solved_by": "x5598"},
{"url": "https://codeforces.com//problemset/problem/501/B", "name": "Misha and Changing Handles", "tags": ["data structures", "dsu", "strings"], "problem_rating": "1100", "solved_by": "x15900"},
{"url": "https://codeforces.com//problemset/problem/501/A", "name": "Contest", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x22505"},
{"url": "https://codeforces.com//problemset/problem/500/G", "name": "New Year Running", "tags": ["number theory", "trees"], "problem_rating": "3200", "solved_by": "x157"},
{"url": "https://codeforces.com//problemset/problem/500/F", "name": "New Year Shopping", "tags": ["divide and conquer", "dp"], "problem_rating": "2700", "solved_by": "x706"},
{"url": "https://codeforces.com//problemset/problem/500/E", "name": "New Year Domino", "tags": ["data structures", "dp", "dsu"], "problem_rating": "2300", "solved_by": "x1410"},
{"url": "https://codeforces.com//problemset/problem/500/D", "name": "New Year Santa Network", "tags": ["combinatorics", "dfs and similar", "graphs", "trees"], "problem_rating": "1900", "solved_by": "x3079"},
{"url": "https://codeforces.com//problemset/problem/500/C", "name": "New Year Book Reading", "tags": ["constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "1600", "solved_by": "x5782"},
{"url": "https://codeforces.com//problemset/problem/500/B", "name": "New Year Permutation", "tags": ["dfs and similar", "dsu", "graphs", "greedy", "math", "sortings"], "problem_rating": "1600", "solved_by": "x8790"},
{"url": "https://codeforces.com//problemset/problem/500/A", "name": "New Year Transportation", "tags": ["dfs and similar", "graphs", "implementation"], "problem_rating": "1000", "solved_by": "x51735"},
{"url": "https://codeforces.com//problemset/problem/499/B", "name": "Lecture", "tags": ["implementation", "strings"], "problem_rating": "1000", "solved_by": "x38391"},
{"url": "https://codeforces.com//problemset/problem/499/A", "name": "Watching a movie", "tags": ["greedy", "implementation"], "problem_rating": "1000", "solved_by": "x13870"},
{"url": "https://codeforces.com//problemset/problem/498/E", "name": "Stairs and Lines", "tags": ["dp", "matrices"], "problem_rating": "2700", "solved_by": "x454"},
{"url": "https://codeforces.com//problemset/problem/498/D", "name": "Traffic Jams in the Land", "tags": ["data structures", "dp", "number theory"], "problem_rating": "2400", "solved_by": "x1101"},
{"url": "https://codeforces.com//problemset/problem/498/C", "name": "Array and Operations", "tags": ["flows", "graph matchings", "number theory"], "problem_rating": "2100", "solved_by": "x3364"},
{"url": "https://codeforces.com//problemset/problem/498/B", "name": "Name That Tune", "tags": ["dp", "probabilities", "two pointers"], "problem_rating": "2400", "solved_by": "x1155"},
{"url": "https://codeforces.com//problemset/problem/498/A", "name": "Crazy Town", "tags": ["geometry"], "problem_rating": "1700", "solved_by": "x6394"},
{"url": "https://codeforces.com//problemset/problem/497/E", "name": "Subsequences Return", "tags": ["dp", "matrices"], "problem_rating": "2900", "solved_by": "x284"},
{"url": "https://codeforces.com//problemset/problem/497/D", "name": "Gears", "tags": ["brute force", "geometry", "math"], "problem_rating": "2900", "solved_by": "x226"},
{"url": "https://codeforces.com//problemset/problem/496/E", "name": "Distributing Parts", "tags": ["greedy", "sortings"], "problem_rating": "2100", "solved_by": "x1645"},
{"url": "https://codeforces.com//problemset/problem/496/D", "name": "Tennis Game", "tags": ["binary search"], "problem_rating": "1900", "solved_by": "x2995"},
{"url": "https://codeforces.com//problemset/problem/496/C", "name": "Removing Columns", "tags": ["brute force", "constructive algorithms", "implementation"], "problem_rating": "1500", "solved_by": "x7677"},
{"url": "https://codeforces.com//problemset/problem/496/B", "name": "Secret Combination", "tags": ["brute force", "constructive algorithms", "implementation"], "problem_rating": "1500", "solved_by": "x5842"},
{"url": "https://codeforces.com//problemset/problem/496/A", "name": "Minimum Difficulty", "tags": ["brute force", "implementation", "math"], "problem_rating": "900", "solved_by": "x16246"},
{"url": "https://codeforces.com//problemset/problem/495/B", "name": "Modular Equations", "tags": ["math", "number theory"], "problem_rating": "1600", "solved_by": "x6713"},
{"url": "https://codeforces.com//problemset/problem/495/A", "name": "Digital Counter", "tags": ["implementation"], "problem_rating": "1100", "solved_by": "x8380"},
{"url": "https://codeforces.com//problemset/problem/494/E", "name": "Sharti", "tags": ["data structures", "games"], "problem_rating": "3200", "solved_by": "x311"},
{"url": "https://codeforces.com//problemset/problem/494/D", "name": "Birthday", "tags": ["data structures", "dfs and similar", "dp", "trees"], "problem_rating": "2700", "solved_by": "x521"},
{"url": "https://codeforces.com//problemset/problem/494/C", "name": "Helping People", "tags": ["dp", "probabilities"], "problem_rating": "2600", "solved_by": "x845"},
{"url": "https://codeforces.com//problemset/problem/494/B", "name": "Obsessive String", "tags": ["dp", "strings"], "problem_rating": "2000", "solved_by": "x2628"},
{"url": "https://codeforces.com//problemset/problem/494/A", "name": "Treasure", "tags": ["greedy"], "problem_rating": "1500", "solved_by": "x6163"},
{"url": "https://codeforces.com//problemset/problem/493/E", "name": "Vasya and Polynomial", "tags": ["math"], "problem_rating": "2800", "solved_by": "x481"},
{"url": "https://codeforces.com//problemset/problem/493/D", "name": "Vasya and Chess", "tags": ["constructive algorithms", "games", "math"], "problem_rating": "1700", "solved_by": "x9581"},
{"url": "https://codeforces.com//problemset/problem/493/C", "name": "Vasya and Basketball", "tags": ["binary search", "brute force", "data structures", "implementation", "sortings", "two pointers"], "problem_rating": "1600", "solved_by": "x6732"},
{"url": "https://codeforces.com//problemset/problem/493/B", "name": "Vasya and Wrestling", "tags": ["implementation"], "problem_rating": "1400", "solved_by": "x13153"},
{"url": "https://codeforces.com//problemset/problem/493/A", "name": "Vasya and Football", "tags": ["implementation"], "problem_rating": "1300", "solved_by": "x6060"},
{"url": "https://codeforces.com//problemset/problem/492/E", "name": "Vanya and Field", "tags": ["math"], "problem_rating": "2000", "solved_by": "x1596"},
{"url": "https://codeforces.com//problemset/problem/492/D", "name": "Vanya and Computer Game", "tags": ["binary search", "implementation", "math", "sortings"], "problem_rating": "1800", "solved_by": "x3135"},
{"url": "https://codeforces.com//problemset/problem/492/C", "name": "Vanya and Exams", "tags": ["greedy", "sortings"], "problem_rating": "1400", "solved_by": "x13852"},
{"url": "https://codeforces.com//problemset/problem/492/B", "name": "Vanya and Lanterns", "tags": ["binary search", "implementation", "math", "sortings"], "problem_rating": "1200", "solved_by": "x73329"},
{"url": "https://codeforces.com//problemset/problem/492/A", "name": "Vanya and Cubes", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x48467"},
{"url": "https://codeforces.com//problemset/problem/491/C", "name": "Deciphering", "tags": ["flows", "graph matchings"], "problem_rating": "2300", "solved_by": "x404"},
{"url": "https://codeforces.com//problemset/problem/491/B", "name": "New York Hotel", "tags": ["greedy", "math"], "problem_rating": "2100", "solved_by": "x541"},
{"url": "https://codeforces.com//problemset/problem/491/A", "name": "Up the hill", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1000", "solved_by": "x2851"},
{"url": "https://codeforces.com//problemset/problem/490/F", "name": "Treeland Tour", "tags": ["data structures", "dfs and similar", "dp", "trees"], "problem_rating": "2200", "solved_by": "x1602"},
{"url": "https://codeforces.com//problemset/problem/490/E", "name": "Restoring Increasing Sequence", "tags": ["binary search", "brute force", "greedy", "implementation"], "problem_rating": "2000", "solved_by": "x1584"},
{"url": "https://codeforces.com//problemset/problem/490/D", "name": "Chocolate", "tags": ["brute force", "dfs and similar", "math", "meet-in-the-middle", "number theory"], "problem_rating": "1900", "solved_by": "x2076"},
{"url": "https://codeforces.com//problemset/problem/490/C", "name": "Hacking Cypher", "tags": ["brute force", "math", "number theory", "strings"], "problem_rating": "1700", "solved_by": "x8998"},
{"url": "https://codeforces.com//problemset/problem/490/B", "name": "Queue", "tags": ["dsu", "implementation"], "problem_rating": "1500", "solved_by": "x5946"},
{"url": "https://codeforces.com//problemset/problem/490/A", "name": "Team Olympiad", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "800", "solved_by": "x57415"},
{"url": "https://codeforces.com//problemset/problem/489/F", "name": "Special Matrices", "tags": ["combinatorics", "dp"], "problem_rating": "2100", "solved_by": "x1651"},
{"url": "https://codeforces.com//problemset/problem/489/E", "name": "Hiking", "tags": ["binary search", "dp"], "problem_rating": "2300", "solved_by": "x1007"},
{"url": "https://codeforces.com//problemset/problem/489/D", "name": "Unbearable Controversy of Being", "tags": ["brute force", "combinatorics", "dfs and similar", "graphs"], "problem_rating": "1700", "solved_by": "x6640"},
{"url": "https://codeforces.com//problemset/problem/489/C", "name": "Given Length and Sum of Digits...", "tags": ["dp", "greedy", "implementation"], "problem_rating": "1400", "solved_by": "x45386"},
{"url": "https://codeforces.com//problemset/problem/489/B", "name": "BerSU Ball", "tags": ["dfs and similar", "dp", "graph matchings", "greedy", "sortings", "two pointers"], "problem_rating": "1200", "solved_by": "x47654"},
{"url": "https://codeforces.com//problemset/problem/489/A", "name": "SwapSort", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "1200", "solved_by": "x9938"},
{"url": "https://codeforces.com//problemset/problem/488/B", "name": "Candy Boxes", "tags": ["brute force", "constructive algorithms", "math"], "problem_rating": "1900", "solved_by": "x2092"},
{"url": "https://codeforces.com//problemset/problem/488/A", "name": "Giga Tower", "tags": ["brute force"], "problem_rating": "1100", "solved_by": "x14176"},
{"url": "https://codeforces.com//problemset/problem/487/E", "name": "Tourists", "tags": ["data structures", "dfs and similar", "graphs", "trees"], "problem_rating": "3200", "solved_by": "x2244"},
{"url": "https://codeforces.com//problemset/problem/487/D", "name": "Conveyor Belts", "tags": ["data structures"], "problem_rating": "2700", "solved_by": "x841"},
{"url": "https://codeforces.com//problemset/problem/487/C", "name": "Prefix Product Sequence", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "2300", "solved_by": "x2602"},
{"url": "https://codeforces.com//problemset/problem/487/B", "name": "Strip", "tags": ["binary search", "data structures", "dp", "two pointers"], "problem_rating": "2000", "solved_by": "x3415"},
{"url": "https://codeforces.com//problemset/problem/487/A", "name": "Fight the Monster", "tags": ["binary search", "brute force", "implementation"], "problem_rating": "1800", "solved_by": "x3698"},
{"url": "https://codeforces.com//problemset/problem/486/E", "name": "LIS of Sequence", "tags": ["data structures", "dp", "greedy", "hashing", "math"], "problem_rating": "2200", "solved_by": "x2183"},
{"url": "https://codeforces.com//problemset/problem/486/D", "name": "Valid Sets", "tags": ["dfs and similar", "dp", "math", "trees"], "problem_rating": "2100", "solved_by": "x3882"},
{"url": "https://codeforces.com//problemset/problem/486/C", "name": "Palindrome Transformation", "tags": ["brute force", "greedy", "implementation"], "problem_rating": "1700", "solved_by": "x11608"},
{"url": "https://codeforces.com//problemset/problem/486/B", "name": "OR in Matrix", "tags": ["greedy", "hashing", "implementation"], "problem_rating": "1300", "solved_by": "x17275"},
{"url": "https://codeforces.com//problemset/problem/486/A", "name": "Calculating Function", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x113237"},
{"url": "https://codeforces.com//problemset/problem/485/B", "name": "Valuable Resources", "tags": ["brute force", "greedy"], "problem_rating": "1300", "solved_by": "x6482"},
{"url": "https://codeforces.com//problemset/problem/485/A", "name": "Factory", "tags": ["implementation", "math", "matrices"], "problem_rating": "1400", "solved_by": "x8158"},
{"url": "https://codeforces.com//problemset/problem/484/E", "name": "Sign on Fence", "tags": ["binary search", "constructive algorithms", "data structures"], "problem_rating": "2500", "solved_by": "x2218"},
{"url": "https://codeforces.com//problemset/problem/484/D", "name": "Kindergarten", "tags": ["data structures", "dp", "greedy"], "problem_rating": "2400", "solved_by": "x2507"},
{"url": "https://codeforces.com//problemset/problem/484/C", "name": "Strange Sorting", "tags": ["implementation", "math"], "problem_rating": "2600", "solved_by": "x587"},
{"url": "https://codeforces.com//problemset/problem/484/B", "name": "Maximum Value", "tags": ["binary search", "math", "sortings", "two pointers"], "problem_rating": "2100", "solved_by": "x6882"},
{"url": "https://codeforces.com//problemset/problem/484/A", "name": "Bits", "tags": ["bitmasks", "constructive algorithms"], "problem_rating": "1700", "solved_by": "x11005"},
{"url": "https://codeforces.com//problemset/problem/483/B", "name": "Friends and Presents", "tags": ["binary search", "math"], "problem_rating": "1800", "solved_by": "x4018"},
{"url": "https://codeforces.com//problemset/problem/483/A", "name": "Counterexample", "tags": ["brute force", "implementation", "math", "number theory"], "problem_rating": "1100", "solved_by": "x22657"},
{"url": "https://codeforces.com//problemset/problem/482/E", "name": "ELCA", "tags": ["data structures", "trees"], "problem_rating": "3200", "solved_by": "x176"},
{"url": "https://codeforces.com//problemset/problem/482/D", "name": "Random Function and Tree", "tags": ["combinatorics", "dp", "trees"], "problem_rating": "2700", "solved_by": "x524"},
{"url": "https://codeforces.com//problemset/problem/482/C", "name": "Game with Strings", "tags": ["bitmasks", "dp", "probabilities"], "problem_rating": "2600", "solved_by": "x890"},
{"url": "https://codeforces.com//problemset/problem/482/B", "name": "Interesting Array", "tags": ["constructive algorithms", "data structures", "trees"], "problem_rating": "1800", "solved_by": "x6308"},
{"url": "https://codeforces.com//problemset/problem/482/A", "name": "Diverse Permutation", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1200", "solved_by": "x9580"},
{"url": "https://codeforces.com//problemset/problem/480/E", "name": "Parking Lot", "tags": ["data structures", "divide and conquer"], "problem_rating": "2800", "solved_by": "x530"},
{"url": "https://codeforces.com//problemset/problem/480/D", "name": "Parcels", "tags": ["dp", "graphs"], "problem_rating": "2600", "solved_by": "x458"},
{"url": "https://codeforces.com//problemset/problem/479/E", "name": "Riding in a Lift", "tags": ["combinatorics", "dp"], "problem_rating": "1900", "solved_by": "x5020"},
{"url": "https://codeforces.com//problemset/problem/479/D", "name": "Long Jumps", "tags": ["binary search", "greedy", "implementation"], "problem_rating": "1700", "solved_by": "x4735"},
{"url": "https://codeforces.com//problemset/problem/479/C", "name": "Exams", "tags": ["greedy", "sortings"], "problem_rating": "1400", "solved_by": "x29099"},
{"url": "https://codeforces.com//problemset/problem/479/B", "name": "Towers", "tags": ["brute force", "constructive algorithms", "greedy", "implementation", "sortings"], "problem_rating": "1400", "solved_by": "x7806"},
{"url": "https://codeforces.com//problemset/problem/479/A", "name": "Expression", "tags": ["brute force", "math"], "problem_rating": "1000", "solved_by": "x91420"},
{"url": "https://codeforces.com//problemset/problem/478/E", "name": "Wavy numbers", "tags": ["brute force", "dfs and similar", "meet-in-the-middle", "sortings"], "problem_rating": "2900", "solved_by": "x219"},
{"url": "https://codeforces.com//problemset/problem/478/D", "name": "Red-Green Towers", "tags": ["dp"], "problem_rating": "2000", "solved_by": "x5559"},
{"url": "https://codeforces.com//problemset/problem/478/C", "name": "Table Decorations", "tags": ["greedy"], "problem_rating": "1800", "solved_by": "x17799"},
{"url": "https://codeforces.com//problemset/problem/478/B", "name": "Random Teams", "tags": ["combinatorics", "constructive algorithms", "greedy", "math"], "problem_rating": "1300", "solved_by": "x35928"},
{"url": "https://codeforces.com//problemset/problem/478/A", "name": "Initial Bet", "tags": ["implementation"], "problem_rating": "1100", "solved_by": "x25292"},
{"url": "https://codeforces.com//problemset/problem/477/E", "name": "Dreamoon and Notepad", "tags": ["data structures"], "problem_rating": "3100", "solved_by": "x133"},
{"url": "https://codeforces.com//problemset/problem/477/D", "name": "Dreamoon and Binary", "tags": ["dp", "strings"], "problem_rating": "2700", "solved_by": "x520"},
{"url": "https://codeforces.com//problemset/problem/476/E", "name": "Dreamoon and Strings", "tags": ["dp", "strings"], "problem_rating": "2200", "solved_by": "x1821"},
{"url": "https://codeforces.com//problemset/problem/476/D", "name": "Dreamoon and Sets", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1900", "solved_by": "x4444"},
{"url": "https://codeforces.com//problemset/problem/476/C", "name": "Dreamoon and Sums", "tags": ["math"], "problem_rating": "1600", "solved_by": "x5492"},
{"url": "https://codeforces.com//problemset/problem/476/B", "name": "Dreamoon and WiFi", "tags": ["bitmasks", "brute force", "combinatorics", "dp", "math", "probabilities"], "problem_rating": "1300", "solved_by": "x29883"},
{"url": "https://codeforces.com//problemset/problem/476/A", "name": "Dreamoon and Stairs", "tags": ["implementation", "math"], "problem_rating": "1000", "solved_by": "x42475"},
{"url": "https://codeforces.com//problemset/problem/475/F", "name": "Meta-universe", "tags": ["data structures"], "problem_rating": "2900", "solved_by": "x227"},
{"url": "https://codeforces.com//problemset/problem/475/E", "name": "Strongly Connected City 2", "tags": ["dfs and similar"], "problem_rating": "2700", "solved_by": "x406"},
{"url": "https://codeforces.com//problemset/problem/475/D", "name": "CGCDSSQ", "tags": ["brute force", "data structures", "math"], "problem_rating": "2000", "solved_by": "x4674"},
{"url": "https://codeforces.com//problemset/problem/475/C", "name": "Kamal-ol-molk's Painting", "tags": ["brute force", "constructive algorithms", "greedy"], "problem_rating": "2100", "solved_by": "x778"},
{"url": "https://codeforces.com//problemset/problem/475/B", "name": "Strongly Connected City", "tags": ["brute force", "dfs and similar", "graphs", "implementation"], "problem_rating": "1400", "solved_by": "x8365"},
{"url": "https://codeforces.com//problemset/problem/475/A", "name": "Bayan Bus", "tags": ["implementation"], "problem_rating": "1100", "solved_by": "x4740"},
{"url": "https://codeforces.com//problemset/problem/474/F", "name": "Ant colony", "tags": ["data structures", "math", "number theory"], "problem_rating": "2100", "solved_by": "x8239"},
{"url": "https://codeforces.com//problemset/problem/474/E", "name": "Pillars", "tags": ["binary search", "data structures", "dp", "sortings", "trees"], "problem_rating": "2000", "solved_by": "x3221"},
{"url": "https://codeforces.com//problemset/problem/474/D", "name": "Flowers", "tags": ["dp"], "problem_rating": "1700", "solved_by": "x24575"},
{"url": "https://codeforces.com//problemset/problem/474/C", "name": "Captain Marmot", "tags": ["brute force", "geometry"], "problem_rating": "2000", "solved_by": "x3090"},
{"url": "https://codeforces.com//problemset/problem/474/B", "name": "Worms", "tags": ["binary search", "implementation"], "problem_rating": "1200", "solved_by": "x46362"},
{"url": "https://codeforces.com//problemset/problem/474/A", "name": "Keyboard", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x44060"},
{"url": "https://codeforces.com//problemset/problem/472/G", "name": "Design Tutorial: Increase the Constraints", "tags": ["bitmasks", "data structures", "fft"], "problem_rating": "2800", "solved_by": "x396"},
{"url": "https://codeforces.com//problemset/problem/472/F", "name": "Design Tutorial: Change the Goal", "tags": ["constructive algorithms", "math", "matrices"], "problem_rating": "2700", "solved_by": "x250"},
{"url": "https://codeforces.com//problemset/problem/472/E", "name": "Design Tutorial: Learn from a Game", "tags": ["constructive algorithms", "implementation"], "problem_rating": "2800", "solved_by": "x131"},
{"url": "https://codeforces.com//problemset/problem/472/D", "name": "Design Tutorial: Inverse the Problem", "tags": ["dfs and similar", "dsu", "shortest paths", "trees"], "problem_rating": "1900", "solved_by": "x5183"},
{"url": "https://codeforces.com//problemset/problem/472/C", "name": "Design Tutorial: Make It Nondeterministic", "tags": ["greedy"], "problem_rating": "1400", "solved_by": "x6343"},
{"url": "https://codeforces.com//problemset/problem/472/B", "name": "Design Tutorial: Learn from Life", "tags": [], "problem_rating": "1300", "solved_by": "x7395"},
{"url": "https://codeforces.com//problemset/problem/472/A", "name": "Design Tutorial: Learn from Math", "tags": ["math", "number theory"], "problem_rating": "800", "solved_by": "x58425"},
{"url": "https://codeforces.com//problemset/problem/471/E", "name": "MUH and Lots and Lots of Segments", "tags": ["data structures", "dsu"], "problem_rating": "2700", "solved_by": "x81"},
{"url": "https://codeforces.com//problemset/problem/471/D", "name": "MUH and Cube Walls", "tags": ["string suffix structures", "strings"], "problem_rating": "1800", "solved_by": "x7754"},
{"url": "https://codeforces.com//problemset/problem/471/C", "name": "MUH and House of Cards", "tags": ["binary search", "brute force", "greedy", "math"], "problem_rating": "1700", "solved_by": "x3545"},
{"url": "https://codeforces.com//problemset/problem/471/B", "name": "MUH and Important Things", "tags": ["implementation", "sortings"], "problem_rating": "1300", "solved_by": "x5918"},
{"url": "https://codeforces.com//problemset/problem/471/A", "name": "MUH and Sticks", "tags": ["implementation"], "problem_rating": "1100", "solved_by": "x13384"},
{"url": "https://codeforces.com//problemset/problem/470/H", "name": "Array Sorting", "tags": ["*special problem"], "problem_rating": "2300", "solved_by": "x188"},
{"url": "https://codeforces.com//problemset/problem/470/G", "name": "Hamming Distance", "tags": ["*special problem"], "problem_rating": "2300", "solved_by": "x95"},
{"url": "https://codeforces.com//problemset/problem/470/F", "name": "Pairwise Sums", "tags": ["*special problem"], "problem_rating": "2300", "solved_by": "x104"},
{"url": "https://codeforces.com//problemset/problem/470/E", "name": "Chessboard", "tags": ["*special problem"], "problem_rating": "1900", "solved_by": "x196"},
{"url": "https://codeforces.com//problemset/problem/470/D", "name": "Caesar Cipher", "tags": ["*special problem"], "problem_rating": "1900", "solved_by": "x151"},
{"url": "https://codeforces.com//problemset/problem/470/C", "name": "Eval", "tags": ["*special problem"], "problem_rating": "1900", "solved_by": "x238"},
{"url": "https://codeforces.com//problemset/problem/470/B", "name": "Hexakosioihexekontahexaphobia", "tags": ["*special problem"], "problem_rating": "1800", "solved_by": "x258"},
{"url": "https://codeforces.com//problemset/problem/470/A", "name": "Crystal Ball Sequence", "tags": ["*special problem", "implementation"], "problem_rating": "1400", "solved_by": "x670"},
{"url": "https://codeforces.com//problemset/problem/469/B", "name": "Chat Online", "tags": ["implementation"], "problem_rating": "1300", "solved_by": "x12490"},
{"url": "https://codeforces.com//problemset/problem/469/A", "name": "I Wanna Be the Guy", "tags": ["greedy", "implementation"], "problem_rating": "800", "solved_by": "x94297"},
{"url": "https://codeforces.com//problemset/problem/468/E", "name": "Permanent", "tags": ["dp", "graph matchings", "math", "meet-in-the-middle"], "problem_rating": "3100", "solved_by": "x312"},
{"url": "https://codeforces.com//problemset/problem/468/D", "name": "Tree", "tags": ["graph matchings"], "problem_rating": "3100", "solved_by": "x359"},
{"url": "https://codeforces.com//problemset/problem/468/C", "name": "Hack it!", "tags": ["binary search", "constructive algorithms", "math"], "problem_rating": "2500", "solved_by": "x2330"},
{"url": "https://codeforces.com//problemset/problem/468/B", "name": "Two Sets", "tags": ["2-sat", "dfs and similar", "dsu", "graph matchings", "greedy"], "problem_rating": "2000", "solved_by": "x4049"},
{"url": "https://codeforces.com//problemset/problem/468/A", "name": "24 Game", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1500", "solved_by": "x7944"},
{"url": "https://codeforces.com//problemset/problem/467/E", "name": "Alex and Complicated Task", "tags": ["data structures", "dp", "greedy"], "problem_rating": "2300", "solved_by": "x770"},
{"url": "https://codeforces.com//problemset/problem/467/D", "name": "Fedor and Essay", "tags": ["dfs and similar", "dp", "graphs", "hashing", "strings"], "problem_rating": "2400", "solved_by": "x1785"},
{"url": "https://codeforces.com//problemset/problem/467/C", "name": "George and Job", "tags": ["dp", "implementation"], "problem_rating": "1700", "solved_by": "x14347"},
{"url": "https://codeforces.com//problemset/problem/467/B", "name": "Fedor and New Game", "tags": ["bitmasks", "brute force", "constructive algorithms", "implementation"], "problem_rating": "1100", "solved_by": "x36882"},
{"url": "https://codeforces.com//problemset/problem/467/A", "name": "George and Accommodation", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x117544"},
{"url": "https://codeforces.com//problemset/problem/466/E", "name": "Information Graph", "tags": ["dfs and similar", "dsu", "graphs", "trees"], "problem_rating": "2100", "solved_by": "x2162"},
{"url": "https://codeforces.com//problemset/problem/466/D", "name": "Increase Sequence", "tags": ["combinatorics", "dp"], "problem_rating": "2100", "solved_by": "x3098"},
{"url": "https://codeforces.com//problemset/problem/466/C", "name": "Number of Ways", "tags": ["binary search", "brute force", "data structures", "dp", "two pointers"], "problem_rating": "1700", "solved_by": "x35302"},
{"url": "https://codeforces.com//problemset/problem/466/B", "name": "Wonder Room", "tags": ["brute force", "math"], "problem_rating": "2000", "solved_by": "x4841"},
{"url": "https://codeforces.com//problemset/problem/466/A", "name": "Cheap Travel", "tags": ["implementation"], "problem_rating": "1200", "solved_by": "x61501"},
{"url": "https://codeforces.com//problemset/problem/465/B", "name": "Inbox (100500)", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x10333"},
{"url": "https://codeforces.com//problemset/problem/465/A", "name": "inc ARG", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x9978"},
{"url": "https://codeforces.com//problemset/problem/464/E", "name": "The Classic Problem", "tags": ["data structures", "graphs", "shortest paths"], "problem_rating": "3000", "solved_by": "x1392"},
{"url": "https://codeforces.com//problemset/problem/464/D", "name": "World of Darkraft - 2", "tags": ["dp", "probabilities"], "problem_rating": "2700", "solved_by": "x663"},
{"url": "https://codeforces.com//problemset/problem/464/C", "name": "Substitutes in Number", "tags": ["dp"], "problem_rating": "2100", "solved_by": "x1842"},
{"url": "https://codeforces.com//problemset/problem/464/B", "name": "Restore Cube", "tags": ["brute force", "geometry"], "problem_rating": "2000", "solved_by": "x1671"},
{"url": "https://codeforces.com//problemset/problem/464/A", "name": "No to Palindromes!", "tags": ["greedy", "strings"], "problem_rating": "1700", "solved_by": "x5840"},
{"url": "https://codeforces.com//problemset/problem/463/E", "name": "Caisa and Tree", "tags": ["brute force", "dfs and similar", "math", "number theory", "trees"], "problem_rating": "2100", "solved_by": "x1583"},
{"url": "https://codeforces.com//problemset/problem/463/D", "name": "Gargari and Permutations", "tags": ["dfs and similar", "dp", "graphs", "implementation"], "problem_rating": "1900", "solved_by": "x6183"},
{"url": "https://codeforces.com//problemset/problem/463/C", "name": "Gargari and Bishops", "tags": ["greedy", "hashing", "implementation"], "problem_rating": "1900", "solved_by": "x8648"},
{"url": "https://codeforces.com//problemset/problem/463/B", "name": "Caisa and Pylons", "tags": ["brute force", "implementation", "math"], "problem_rating": "1100", "solved_by": "x26572"},
{"url": "https://codeforces.com//problemset/problem/463/A", "name": "Caisa and Sugar", "tags": ["brute force", "implementation"], "problem_rating": "1200", "solved_by": "x9196"},
{"url": "https://codeforces.com//problemset/problem/462/B", "name": "Appleman and Card Game", "tags": ["greedy"], "problem_rating": "1300", "solved_by": "x14244"},
{"url": "https://codeforces.com//problemset/problem/462/A", "name": "Appleman and Easy Task", "tags": ["brute force", "implementation"], "problem_rating": "1000", "solved_by": "x16727"},
{"url": "https://codeforces.com//problemset/problem/461/E", "name": "Appleman and a Game", "tags": ["binary search", "shortest paths", "strings"], "problem_rating": "3000", "solved_by": "x370"},
{"url": "https://codeforces.com//problemset/problem/461/D", "name": "Appleman and Complicated Task", "tags": ["dsu", "math"], "problem_rating": "2800", "solved_by": "x361"},
{"url": "https://codeforces.com//problemset/problem/461/C", "name": "Appleman and a Sheet of Paper", "tags": ["data structures", "implementation"], "problem_rating": "2200", "solved_by": "x1321"},
{"url": "https://codeforces.com//problemset/problem/461/B", "name": "Appleman and Tree", "tags": ["dfs and similar", "dp", "trees"], "problem_rating": "2000", "solved_by": "x5460"},
{"url": "https://codeforces.com//problemset/problem/461/A", "name": "Appleman and Toastman", "tags": ["greedy", "sortings"], "problem_rating": "1200", "solved_by": "x15380"},
{"url": "https://codeforces.com//problemset/problem/460/E", "name": "Roland and Rose", "tags": ["brute force", "geometry", "math", "sortings"], "problem_rating": "2700", "solved_by": "x340"},
{"url": "https://codeforces.com//problemset/problem/460/D", "name": "Little Victor and Set", "tags": ["brute force", "constructive algorithms", "math"], "problem_rating": "2300", "solved_by": "x990"},
{"url": "https://codeforces.com//problemset/problem/460/C", "name": "Present", "tags": ["binary search", "data structures", "greedy"], "problem_rating": "1700", "solved_by": "x6126"},
{"url": "https://codeforces.com//problemset/problem/460/B", "name": "Little Dima and Equation", "tags": ["brute force", "implementation", "math", "number theory"], "problem_rating": "1500", "solved_by": "x12219"},
{"url": "https://codeforces.com//problemset/problem/460/A", "name": "Vasya and Socks", "tags": ["brute force", "implementation", "math"], "problem_rating": "900", "solved_by": "x45052"},
{"url": "https://codeforces.com//problemset/problem/459/E", "name": "Pashmak and Graph", "tags": ["dp", "sortings"], "problem_rating": "1900", "solved_by": "x5317"},
{"url": "https://codeforces.com//problemset/problem/459/D", "name": "Pashmak and Parmida's problem", "tags": ["data structures", "divide and conquer", "sortings"], "problem_rating": "1800", "solved_by": "x9821"},
{"url": "https://codeforces.com//problemset/problem/459/C", "name": "Pashmak and Buses", "tags": ["combinatorics", "constructive algorithms", "math"], "problem_rating": "1900", "solved_by": "x6136"},
{"url": "https://codeforces.com//problemset/problem/459/B", "name": "Pashmak and Flowers", "tags": ["combinatorics", "implementation", "sortings"], "problem_rating": "1300", "solved_by": "x39434"},
{"url": "https://codeforces.com//problemset/problem/459/A", "name": "Pashmak and Garden", "tags": ["implementation"], "problem_rating": "1200", "solved_by": "x32062"},
{"url": "https://codeforces.com//problemset/problem/457/F", "name": "An easy problem about trees", "tags": ["dp", "games", "greedy", "trees"], "problem_rating": "3200", "solved_by": "x105"},
{"url": "https://codeforces.com//problemset/problem/457/E", "name": "Flow Optimality", "tags": ["constructive algorithms", "flows", "math"], "problem_rating": "3000", "solved_by": "x95"},
{"url": "https://codeforces.com//problemset/problem/457/D", "name": "Bingo!", "tags": ["combinatorics", "math", "probabilities"], "problem_rating": "2700", "solved_by": "x276"},
{"url": "https://codeforces.com//problemset/problem/457/C", "name": "Elections", "tags": ["brute force"], "problem_rating": "2100", "solved_by": "x874"},
{"url": "https://codeforces.com//problemset/problem/457/B", "name": "Distributed Join", "tags": ["greedy"], "problem_rating": "1900", "solved_by": "x1128"},
{"url": "https://codeforces.com//problemset/problem/457/A", "name": "Golden System", "tags": ["math", "meet-in-the-middle"], "problem_rating": "1700", "solved_by": "x1267"},
{"url": "https://codeforces.com//problemset/problem/456/B", "name": "Fedya and Maths", "tags": ["math", "number theory"], "problem_rating": "1200", "solved_by": "x16358"},
{"url": "https://codeforces.com//problemset/problem/456/A", "name": "Laptops", "tags": ["sortings"], "problem_rating": "1100", "solved_by": "x46835"},
{"url": "https://codeforces.com//problemset/problem/455/E", "name": "Function", "tags": ["data structures"], "problem_rating": "2900", "solved_by": "x668"},
{"url": "https://codeforces.com//problemset/problem/455/D", "name": "Serega and Fun", "tags": ["data structures"], "problem_rating": "2700", "solved_by": "x2863"},
{"url": "https://codeforces.com//problemset/problem/455/C", "name": "Civilization", "tags": ["dfs and similar", "dp", "dsu", "ternary search", "trees"], "problem_rating": "2100", "solved_by": "x5611"},
{"url": "https://codeforces.com//problemset/problem/455/B", "name": "A Lot of Games", "tags": ["dfs and similar", "dp", "games", "implementation", "strings", "trees"], "problem_rating": "1900", "solved_by": "x5791"},
{"url": "https://codeforces.com//problemset/problem/455/A", "name": "Boredom", "tags": ["dp"], "problem_rating": "1500", "solved_by": "x56179"},
{"url": "https://codeforces.com//problemset/problem/454/B", "name": "Little Pony and Sort by Shift", "tags": ["implementation"], "problem_rating": "1200", "solved_by": "x18013"},
{"url": "https://codeforces.com//problemset/problem/454/A", "name": "Little Pony and Crystal Mine", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x14655"},
{"url": "https://codeforces.com//problemset/problem/453/E", "name": "Little Pony and Lord Tirek", "tags": ["data structures"], "problem_rating": "3100", "solved_by": "x687"},
{"url": "https://codeforces.com//problemset/problem/453/D", "name": "Little Pony and Elements of Harmony", "tags": ["dp", "matrices"], "problem_rating": "3000", "solved_by": "x463"},
{"url": "https://codeforces.com//problemset/problem/453/C", "name": "Little Pony and Summer Sun Celebration", "tags": ["constructive algorithms", "dfs and similar", "graphs"], "problem_rating": "2200", "solved_by": "x1585"},
{"url": "https://codeforces.com//problemset/problem/453/B", "name": "Little Pony and Harmony Chest", "tags": ["bitmasks", "brute force", "dp"], "problem_rating": "2000", "solved_by": "x4611"},
{"url": "https://codeforces.com//problemset/problem/453/A", "name": "Little Pony and Expected Maximum", "tags": ["probabilities"], "problem_rating": "1600", "solved_by": "x10211"},
{"url": "https://codeforces.com//problemset/problem/452/F", "name": "Permutation", "tags": ["data structures", "divide and conquer", "hashing"], "problem_rating": "2700", "solved_by": "x1422"},
{"url": "https://codeforces.com//problemset/problem/452/E", "name": "Three strings", "tags": ["data structures", "dsu", "string suffix structures", "strings"], "problem_rating": "2400", "solved_by": "x1050"},
{"url": "https://codeforces.com//problemset/problem/452/D", "name": "Washer, Dryer, Folder", "tags": ["greedy", "implementation"], "problem_rating": "1900", "solved_by": "x1482"},
{"url": "https://codeforces.com//problemset/problem/452/C", "name": "Magic Trick", "tags": ["combinatorics", "math", "probabilities"], "problem_rating": "2100", "solved_by": "x1607"},
{"url": "https://codeforces.com//problemset/problem/452/B", "name": "4-point polyline", "tags": ["brute force", "constructive algorithms", "geometry", "trees"], "problem_rating": "1800", "solved_by": "x1988"},
{"url": "https://codeforces.com//problemset/problem/452/A", "name": "Eevee", "tags": ["brute force", "implementation", "strings"], "problem_rating": "1000", "solved_by": "x7937"},
{"url": "https://codeforces.com//problemset/problem/451/E", "name": "Devu and Flowers", "tags": ["bitmasks", "combinatorics", "number theory"], "problem_rating": "2300", "solved_by": "x3490"},
{"url": "https://codeforces.com//problemset/problem/451/D", "name": "Count Good Substrings", "tags": ["math"], "problem_rating": "2000", "solved_by": "x4677"},
{"url": "https://codeforces.com//problemset/problem/451/C", "name": "Predict Outcome of the Game", "tags": ["brute force", "implementation", "math"], "problem_rating": "1700", "solved_by": "x3314"},
{"url": "https://codeforces.com//problemset/problem/451/B", "name": "Sort the Array", "tags": ["implementation", "sortings"], "problem_rating": "1300", "solved_by": "x44278"},
{"url": "https://codeforces.com//problemset/problem/451/A", "name": "Game With Sticks", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x64186"},
{"url": "https://codeforces.com//problemset/problem/450/B", "name": "Jzzhu and Sequences", "tags": ["implementation", "math"], "problem_rating": "1300", "solved_by": "x25814"},
{"url": "https://codeforces.com//problemset/problem/450/A", "name": "Jzzhu and Children", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x33440"},
{"url": "https://codeforces.com//problemset/problem/449/E", "name": "Jzzhu and Squares", "tags": ["dp", "math", "number theory"], "problem_rating": "2900", "solved_by": "x285"},
{"url": "https://codeforces.com//problemset/problem/449/D", "name": "Jzzhu and Numbers", "tags": ["bitmasks", "combinatorics", "dp"], "problem_rating": "2400", "solved_by": "x4264"},
{"url": "https://codeforces.com//problemset/problem/449/C", "name": "Jzzhu and Apples", "tags": ["constructive algorithms", "number theory"], "problem_rating": "2500", "solved_by": "x2227"},
{"url": "https://codeforces.com//problemset/problem/449/B", "name": "Jzzhu and Cities", "tags": ["graphs", "greedy", "shortest paths"], "problem_rating": "2000", "solved_by": "x8290"},
{"url": "https://codeforces.com//problemset/problem/449/A", "name": "Jzzhu and Chocolate", "tags": ["greedy", "math"], "problem_rating": "1700", "solved_by": "x3880"},
{"url": "https://codeforces.com//problemset/problem/448/E", "name": "Divisors", "tags": ["brute force", "dfs and similar", "implementation", "number theory"], "problem_rating": "2200", "solved_by": "x1473"},
{"url": "https://codeforces.com//problemset/problem/448/D", "name": "Multiplication Table", "tags": ["binary search", "brute force"], "problem_rating": "1800", "solved_by": "x13628"},
{"url": "https://codeforces.com//problemset/problem/448/C", "name": "Painting Fence", "tags": ["divide and conquer", "dp", "greedy"], "problem_rating": "1900", "solved_by": "x8003"},
{"url": "https://codeforces.com//problemset/problem/448/B", "name": "Suffix Structures", "tags": ["implementation", "strings"], "problem_rating": "1400", "solved_by": "x15893"},
{"url": "https://codeforces.com//problemset/problem/448/A", "name": "Rewards", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x24053"},
{"url": "https://codeforces.com//problemset/problem/447/B", "name": "DZY Loves Strings", "tags": ["greedy", "implementation"], "problem_rating": "1000", "solved_by": "x20157"},
{"url": "https://codeforces.com//problemset/problem/447/A", "name": "DZY Loves Hash", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x9514"},
{"url": "https://codeforces.com//problemset/problem/446/E", "name": "DZY Loves Bridges", "tags": ["math", "matrices"], "problem_rating": "3100", "solved_by": "x122"},
{"url": "https://codeforces.com//problemset/problem/446/D", "name": "DZY Loves Games", "tags": ["math", "matrices", "probabilities"], "problem_rating": "2800", "solved_by": "x388"},
{"url": "https://codeforces.com//problemset/problem/446/C", "name": "DZY Loves Fibonacci Numbers", "tags": ["data structures", "math", "number theory"], "problem_rating": "2400", "solved_by": "x3237"},
{"url": "https://codeforces.com//problemset/problem/446/B", "name": "DZY Loves Modification", "tags": ["brute force", "data structures", "greedy"], "problem_rating": "2000", "solved_by": "x3560"},
{"url": "https://codeforces.com//problemset/problem/446/A", "name": "DZY Loves Sequences", "tags": ["dp", "implementation", "two pointers"], "problem_rating": "1600", "solved_by": "x12391"},
{"url": "https://codeforces.com//problemset/problem/445/B", "name": "DZY Loves Chemistry", "tags": ["dfs and similar", "dsu", "greedy"], "problem_rating": "1400", "solved_by": "x12354"},
{"url": "https://codeforces.com//problemset/problem/445/A", "name": "DZY Loves Chessboard", "tags": ["dfs and similar", "implementation"], "problem_rating": "1200", "solved_by": "x28958"},
{"url": "https://codeforces.com//problemset/problem/444/E", "name": "DZY Loves Planting", "tags": ["binary search", "dsu", "trees"], "problem_rating": "2700", "solved_by": "x750"},
{"url": "https://codeforces.com//problemset/problem/444/D", "name": "DZY Loves Strings", "tags": ["binary search", "hashing", "strings", "two pointers"], "problem_rating": "2500", "solved_by": "x759"},
{"url": "https://codeforces.com//problemset/problem/444/C", "name": "DZY Loves Colors", "tags": ["data structures"], "problem_rating": "2400", "solved_by": "x2853"},
{"url": "https://codeforces.com//problemset/problem/444/B", "name": "DZY Loves FFT", "tags": ["probabilities"], "problem_rating": "2300", "solved_by": "x1056"},
{"url": "https://codeforces.com//problemset/problem/444/A", "name": "DZY Loves Physics", "tags": ["greedy", "math"], "problem_rating": "1600", "solved_by": "x3385"},
{"url": "https://codeforces.com//problemset/problem/443/B", "name": "Kolya and Tandem Repeat", "tags": ["brute force", "implementation", "strings"], "problem_rating": "1500", "solved_by": "x4016"},
{"url": "https://codeforces.com//problemset/problem/443/A", "name": "Anton and Letters", "tags": ["constructive algorithms", "implementation"], "problem_rating": "800", "solved_by": "x86746"},
{"url": "https://codeforces.com//problemset/problem/442/E", "name": "Gena and Second Distance", "tags": ["geometry"], "problem_rating": "3100", "solved_by": "x172"},
{"url": "https://codeforces.com//problemset/problem/442/D", "name": "Adam and Tree", "tags": ["data structures", "trees"], "problem_rating": "2600", "solved_by": "x968"},
{"url": "https://codeforces.com//problemset/problem/442/C", "name": "Artem and Array", "tags": ["data structures", "greedy"], "problem_rating": "2500", "solved_by": "x1721"},
{"url": "https://codeforces.com//problemset/problem/442/B", "name": "Andrey and Problem", "tags": ["greedy", "math", "probabilities"], "problem_rating": "1800", "solved_by": "x5194"},
{"url": "https://codeforces.com//problemset/problem/442/A", "name": "Borya and Hanabi", "tags": ["bitmasks", "brute force", "implementation"], "problem_rating": "1700", "solved_by": "x2100"},
{"url": "https://codeforces.com//problemset/problem/441/E", "name": "Valera and Number", "tags": ["bitmasks", "dp", "math", "probabilities"], "problem_rating": "2400", "solved_by": "x683"},
{"url": "https://codeforces.com//problemset/problem/441/D", "name": "Valera and Swaps", "tags": ["constructive algorithms", "dsu", "graphs", "implementation", "math", "string suffix structures"], "problem_rating": "2100", "solved_by": "x1073"},
{"url": "https://codeforces.com//problemset/problem/441/C", "name": "Valera and Tubes", "tags": ["constructive algorithms", "dfs and similar", "implementation"], "problem_rating": "1500", "solved_by": "x11081"},
{"url": "https://codeforces.com//problemset/problem/441/B", "name": "Valera and Fruits", "tags": ["greedy", "implementation"], "problem_rating": "1400", "solved_by": "x6998"},
{"url": "https://codeforces.com//problemset/problem/441/A", "name": "Valera and Antique Items", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x18341"},
{"url": "https://codeforces.com//problemset/problem/440/D", "name": "Berland Federalization", "tags": ["dp", "trees"], "problem_rating": "2200", "solved_by": "x651"},
{"url": "https://codeforces.com//problemset/problem/440/C", "name": "One-Based Arithmetic", "tags": ["brute force", "dfs and similar", "divide and conquer"], "problem_rating": "1800", "solved_by": "x899"},
{"url": "https://codeforces.com//problemset/problem/440/B", "name": "Balancer", "tags": ["greedy", "implementation"], "problem_rating": "1600", "solved_by": "x1933"},
{"url": "https://codeforces.com//problemset/problem/440/A", "name": "Forgotten Episode", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x7207"},
{"url": "https://codeforces.com//problemset/problem/439/E", "name": "Devu and Birthday Celebration", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2100", "solved_by": "x1516"},
{"url": "https://codeforces.com//problemset/problem/439/D", "name": "Devu and his Brother", "tags": ["binary search", "sortings", "ternary search", "two pointers"], "problem_rating": "1700", "solved_by": "x5943"},
{"url": "https://codeforces.com//problemset/problem/439/C", "name": "Devu and Partitioning of the Array", "tags": ["brute force", "constructive algorithms", "implementation", "number theory"], "problem_rating": "1700", "solved_by": "x3819"},
{"url": "https://codeforces.com//problemset/problem/439/B", "name": "Devu, the Dumb Guy", "tags": ["implementation", "sortings"], "problem_rating": "1200", "solved_by": "x14165"},
{"url": "https://codeforces.com//problemset/problem/439/A", "name": "Devu, the Singer and Churu, the Joker", "tags": ["greedy", "implementation"], "problem_rating": "900", "solved_by": "x25103"},
{"url": "https://codeforces.com//problemset/problem/438/E", "name": "The Child and Binary Tree", "tags": ["combinatorics", "divide and conquer", "fft", "number theory"], "problem_rating": "3100", "solved_by": "x1841"},
{"url": "https://codeforces.com//problemset/problem/438/D", "name": "The Child and Sequence", "tags": ["data structures", "math"], "problem_rating": "2300", "solved_by": "x8186"},
{"url": "https://codeforces.com//problemset/problem/437/E", "name": "The Child and Polygon", "tags": ["dp", "geometry"], "problem_rating": "2500", "solved_by": "x698"},
{"url": "https://codeforces.com//problemset/problem/437/D", "name": "The Child and Zoo", "tags": ["dsu", "sortings"], "problem_rating": "1900", "solved_by": "x3339"},
{"url": "https://codeforces.com//problemset/problem/437/C", "name": "The Child and Toy", "tags": ["graphs", "greedy", "sortings"], "problem_rating": "1400", "solved_by": "x13657"},
{"url": "https://codeforces.com//problemset/problem/437/B", "name": "The Child and Set", "tags": ["bitmasks", "greedy", "implementation", "sortings"], "problem_rating": "1500", "solved_by": "x9326"},
{"url": "https://codeforces.com//problemset/problem/437/A", "name": "The Child and Homework", "tags": ["implementation"], "problem_rating": "1300", "solved_by": "x8946"},
{"url": "https://codeforces.com//problemset/problem/436/F", "name": "Banners", "tags": ["brute force", "data structures", "dp"], "problem_rating": "3000", "solved_by": "x373"},
{"url": "https://codeforces.com//problemset/problem/436/E", "name": "Cardboard Box", "tags": ["data structures", "greedy"], "problem_rating": "2600", "solved_by": "x1298"},
{"url": "https://codeforces.com//problemset/problem/436/D", "name": "Pudding Monsters", "tags": ["dp"], "problem_rating": "2800", "solved_by": "x323"},
{"url": "https://codeforces.com//problemset/problem/436/C", "name": "Dungeons and Candies", "tags": ["dsu", "graphs", "greedy", "trees"], "problem_rating": "1800", "solved_by": "x2601"},
{"url": "https://codeforces.com//problemset/problem/436/B", "name": "Om Nom and Spiders", "tags": ["implementation", "math"], "problem_rating": "1400", "solved_by": "x3046"},
{"url": "https://codeforces.com//problemset/problem/436/A", "name": "Feed with Candy", "tags": ["greedy"], "problem_rating": "1500", "solved_by": "x3436"},
{"url": "https://codeforces.com//problemset/problem/435/E", "name": "Special Graph", "tags": [], "problem_rating": "2500", "solved_by": "x236"},
{"url": "https://codeforces.com//problemset/problem/435/D", "name": "Special Grid", "tags": ["brute force", "dp", "greedy"], "problem_rating": "2000", "solved_by": "x748"},
{"url": "https://codeforces.com//problemset/problem/435/C", "name": "Cardiogram", "tags": ["implementation"], "problem_rating": "1600", "solved_by": "x2554"},
{"url": "https://codeforces.com//problemset/problem/435/B", "name": "Pasha Maximizes", "tags": ["greedy"], "problem_rating": "1400", "solved_by": "x6833"},
{"url": "https://codeforces.com//problemset/problem/435/A", "name": "Queue on Bus Stop", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x10057"},
{"url": "https://codeforces.com//problemset/problem/434/E", "name": "Furukawa Nagisa's Tree", "tags": ["binary search", "divide and conquer", "sortings", "trees"], "problem_rating": "3000", "solved_by": "x258"},
{"url": "https://codeforces.com//problemset/problem/434/D", "name": "Nanami's Power Plant", "tags": ["flows"], "problem_rating": "2900", "solved_by": "x406"},
{"url": "https://codeforces.com//problemset/problem/433/E", "name": "Tachibana Kanade's Tofu", "tags": ["dp"], "problem_rating": "2500", "solved_by": "x474"},
{"url": "https://codeforces.com//problemset/problem/433/D", "name": "Nanami's Digital Board", "tags": ["dsu", "implementation"], "problem_rating": "2000", "solved_by": "x1238"},
{"url": "https://codeforces.com//problemset/problem/433/C", "name": "Ryouko's Memory Note", "tags": ["implementation", "math", "sortings"], "problem_rating": "1800", "solved_by": "x2416"},
{"url": "https://codeforces.com//problemset/problem/433/B", "name": "Kuriyama Mirai's Stones", "tags": ["dp", "implementation", "sortings"], "problem_rating": "1200", "solved_by": "x37782"},
{"url": "https://codeforces.com//problemset/problem/433/A", "name": "Kitahara Haruki's Gift", "tags": ["brute force", "implementation"], "problem_rating": "1100", "solved_by": "x16047"},
{"url": "https://codeforces.com//problemset/problem/432/E", "name": "Square Tiling", "tags": ["constructive algorithms", "greedy"], "problem_rating": "2300", "solved_by": "x683"},
{"url": "https://codeforces.com//problemset/problem/432/D", "name": "Prefixes and Suffixes", "tags": ["dp", "string suffix structures", "strings", "two pointers"], "problem_rating": "2000", "solved_by": "x8645"},
{"url": "https://codeforces.com//problemset/problem/432/C", "name": "Prime Swaps", "tags": ["greedy", "sortings"], "problem_rating": "1800", "solved_by": "x2452"},
{"url": "https://codeforces.com//problemset/problem/432/B", "name": "Football Kit", "tags": ["brute force", "greedy", "implementation"], "problem_rating": "1200", "solved_by": "x11589"},
{"url": "https://codeforces.com//problemset/problem/432/A", "name": "Choosing Teams", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "800", "solved_by": "x58149"},
{"url": "https://codeforces.com//problemset/problem/431/E", "name": "Chemistry Experiment", "tags": ["binary search", "data structures", "ternary search"], "problem_rating": "2200", "solved_by": "x953"},
{"url": "https://codeforces.com//problemset/problem/431/D", "name": "Random Task", "tags": ["binary search", "bitmasks", "combinatorics", "dp", "math"], "problem_rating": "2100", "solved_by": "x2291"},
{"url": "https://codeforces.com//problemset/problem/431/C", "name": "k-Tree", "tags": ["dp", "implementation", "trees"], "problem_rating": "1600", "solved_by": "x25115"},
{"url": "https://codeforces.com//problemset/problem/431/B", "name": "Shower Line", "tags": ["brute force", "implementation"], "problem_rating": "1200", "solved_by": "x10639"},
{"url": "https://codeforces.com//problemset/problem/431/A", "name": "Black Square", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x53157"},
{"url": "https://codeforces.com//problemset/problem/430/B", "name": "Balls Game", "tags": ["brute force", "two pointers"], "problem_rating": "1400", "solved_by": "x3660"},
{"url": "https://codeforces.com//problemset/problem/430/A", "name": "Points and Segments (easy)", "tags": ["constructive algorithms", "sortings"], "problem_rating": "1600", "solved_by": "x2228"},
{"url": "https://codeforces.com//problemset/problem/429/E", "name": "Points and Segments", "tags": ["graphs"], "problem_rating": "3000", "solved_by": "x839"},
{"url": "https://codeforces.com//problemset/problem/429/D", "name": "Tricky Function", "tags": ["data structures", "divide and conquer", "geometry"], "problem_rating": "2200", "solved_by": "x2696"},
{"url": "https://codeforces.com//problemset/problem/429/C", "name": "Guess the Tree", "tags": ["bitmasks", "constructive algorithms", "dp", "greedy", "trees"], "problem_rating": "2300", "solved_by": "x933"},
{"url": "https://codeforces.com//problemset/problem/429/B", "name": "Working out", "tags": ["dp"], "problem_rating": "1600", "solved_by": "x8416"},
{"url": "https://codeforces.com//problemset/problem/429/A", "name": "Xor-tree", "tags": ["dfs and similar", "trees"], "problem_rating": "1300", "solved_by": "x10130"},
{"url": "https://codeforces.com//problemset/problem/427/E", "name": "Police Patrol", "tags": ["greedy", "implementation", "math", "ternary search"], "problem_rating": "2000", "solved_by": "x1412"},
{"url": "https://codeforces.com//problemset/problem/427/D", "name": "Match & Catch", "tags": ["dp", "string suffix structures", "strings"], "problem_rating": "2200", "solved_by": "x2131"},
{"url": "https://codeforces.com//problemset/problem/427/C", "name": "Checkposts", "tags": ["dfs and similar", "graphs", "two pointers"], "problem_rating": "1700", "solved_by": "x13513"},
{"url": "https://codeforces.com//problemset/problem/427/B", "name": "Prison Transfer", "tags": ["data structures", "implementation"], "problem_rating": "1100", "solved_by": "x13823"},
{"url": "https://codeforces.com//problemset/problem/427/A", "name": "Police Recruits", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x75120"},
{"url": "https://codeforces.com//problemset/problem/426/B", "name": "Sereja and Mirroring", "tags": ["implementation"], "problem_rating": "1300", "solved_by": "x3783"},
{"url": "https://codeforces.com//problemset/problem/426/A", "name": "Sereja and Mugs", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x9086"},
{"url": "https://codeforces.com//problemset/problem/425/E", "name": "Sereja and Sets", "tags": ["dp"], "problem_rating": "2500", "solved_by": "x607"},
{"url": "https://codeforces.com//problemset/problem/425/D", "name": "Sereja and Squares", "tags": ["binary search", "data structures", "hashing"], "problem_rating": "2300", "solved_by": "x1416"},
{"url": "https://codeforces.com//problemset/problem/425/C", "name": "Sereja and Two Sequences", "tags": ["data structures", "dp"], "problem_rating": "2300", "solved_by": "x886"},
{"url": "https://codeforces.com//problemset/problem/425/B", "name": "Sereja and Table", "tags": ["bitmasks", "greedy"], "problem_rating": "2200", "solved_by": "x1303"},
{"url": "https://codeforces.com//problemset/problem/425/A", "name": "Sereja and Swaps", "tags": ["brute force", "sortings"], "problem_rating": "1500", "solved_by": "x3833"},
{"url": "https://codeforces.com//problemset/problem/424/E", "name": "Colored Jenga", "tags": ["dfs and similar", "dp", "probabilities"], "problem_rating": "2500", "solved_by": "x130"},
{"url": "https://codeforces.com//problemset/problem/424/D", "name": "Biathlon Track", "tags": ["binary search", "brute force", "constructive algorithms", "data structures", "dp"], "problem_rating": "2300", "solved_by": "x558"},
{"url": "https://codeforces.com//problemset/problem/424/C", "name": "Magic Formulas", "tags": ["math"], "problem_rating": "1600", "solved_by": "x5268"},
{"url": "https://codeforces.com//problemset/problem/424/B", "name": "Megacity", "tags": ["binary search", "greedy", "implementation", "sortings"], "problem_rating": "1200", "solved_by": "x7420"},
{"url": "https://codeforces.com//problemset/problem/424/A", "name": "Squats", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x8313"},
{"url": "https://codeforces.com//problemset/problem/421/D", "name": "Bug in Code", "tags": ["binary search", "data structures", "sortings"], "problem_rating": "1900", "solved_by": "x519"},
{"url": "https://codeforces.com//problemset/problem/421/A", "name": "Pasha and Hamsters", "tags": ["constructive algorithms", "implementation"], "problem_rating": "800", "solved_by": "x5848"},
{"url": "https://codeforces.com//problemset/problem/420/E", "name": "Playing the ball", "tags": ["geometry"], "problem_rating": "2600", "solved_by": "x214"},
{"url": "https://codeforces.com//problemset/problem/420/D", "name": "Cup Trick", "tags": ["data structures"], "problem_rating": "2200", "solved_by": "x782"},
{"url": "https://codeforces.com//problemset/problem/420/C", "name": "Bug in Code", "tags": ["data structures", "graphs", "implementation", "two pointers"], "problem_rating": "1900", "solved_by": "x1241"},
{"url": "https://codeforces.com//problemset/problem/420/B", "name": "Online Meeting", "tags": ["implementation"], "problem_rating": "1800", "solved_by": "x1012"},
{"url": "https://codeforces.com//problemset/problem/420/A", "name": "Start Up", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x6058"},
{"url": "https://codeforces.com//problemset/problem/418/E", "name": "Tricky Password", "tags": ["data structures"], "problem_rating": "3100", "solved_by": "x300"},
{"url": "https://codeforces.com//problemset/problem/418/D", "name": "Big Problems for Organizers", "tags": ["data structures", "graphs", "trees"], "problem_rating": "2800", "solved_by": "x474"},
{"url": "https://codeforces.com//problemset/problem/417/E", "name": "Square Table", "tags": ["constructive algorithms", "math", "probabilities"], "problem_rating": "2400", "solved_by": "x787"},
{"url": "https://codeforces.com//problemset/problem/417/D", "name": "Cunning Gena", "tags": ["bitmasks", "dp", "greedy", "sortings"], "problem_rating": "1900", "solved_by": "x2427"},
{"url": "https://codeforces.com//problemset/problem/417/C", "name": "Football", "tags": ["constructive algorithms", "graphs", "implementation"], "problem_rating": "1400", "solved_by": "x4637"},
{"url": "https://codeforces.com//problemset/problem/417/B", "name": "Crash", "tags": ["implementation"], "problem_rating": "1400", "solved_by": "x1765"},
{"url": "https://codeforces.com//problemset/problem/417/A", "name": "Elimination", "tags": ["dp", "implementation", "math"], "problem_rating": "1500", "solved_by": "x2937"},
{"url": "https://codeforces.com//problemset/problem/416/E", "name": "President's Path", "tags": ["dp", "graphs", "shortest paths"], "problem_rating": "2500", "solved_by": "x1399"},
{"url": "https://codeforces.com//problemset/problem/416/D", "name": "Population Size", "tags": ["greedy", "implementation", "math"], "problem_rating": "2400", "solved_by": "x936"},
{"url": "https://codeforces.com//problemset/problem/416/C", "name": "Booking System", "tags": ["binary search", "dp", "greedy", "implementation"], "problem_rating": "1600", "solved_by": "x7756"},
{"url": "https://codeforces.com//problemset/problem/416/B", "name": "Art Union", "tags": ["brute force", "dp", "implementation"], "problem_rating": "1300", "solved_by": "x8580"},
{"url": "https://codeforces.com//problemset/problem/416/A", "name": "Guess a number!", "tags": ["greedy", "implementation", "two pointers"], "problem_rating": "1400", "solved_by": "x8777"},
{"url": "https://codeforces.com//problemset/problem/415/B", "name": "Mashmokh and Tokens", "tags": ["binary search", "greedy", "implementation", "math"], "problem_rating": "1500", "solved_by": "x6188"},
{"url": "https://codeforces.com//problemset/problem/415/A", "name": "Mashmokh and Lights", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x8896"},
{"url": "https://codeforces.com//problemset/problem/414/E", "name": "Mashmokh's Designed Problem", "tags": ["data structures"], "problem_rating": "3200", "solved_by": "x200"},
{"url": "https://codeforces.com//problemset/problem/414/D", "name": "Mashmokh and Water Tanks", "tags": ["binary search", "data structures", "greedy", "trees", "two pointers"], "problem_rating": "2300", "solved_by": "x676"},
{"url": "https://codeforces.com//problemset/problem/414/C", "name": "Mashmokh and Reverse Operation", "tags": ["combinatorics", "divide and conquer"], "problem_rating": "2100", "solved_by": "x2190"},
{"url": "https://codeforces.com//problemset/problem/414/B", "name": "Mashmokh and ACM", "tags": ["combinatorics", "dp", "number theory"], "problem_rating": "1400", "solved_by": "x21518"},
{"url": "https://codeforces.com//problemset/problem/414/A", "name": "Mashmokh and Numbers", "tags": ["constructive algorithms", "number theory"], "problem_rating": "1500", "solved_by": "x9725"},
{"url": "https://codeforces.com//problemset/problem/413/E", "name": "Maze 2D", "tags": ["data structures", "divide and conquer"], "problem_rating": "2200", "solved_by": "x680"},
{"url": "https://codeforces.com//problemset/problem/413/D", "name": "2048", "tags": ["bitmasks", "dp"], "problem_rating": "2000", "solved_by": "x780"},
{"url": "https://codeforces.com//problemset/problem/413/C", "name": "Jeopardy!", "tags": ["greedy", "math"], "problem_rating": "1400", "solved_by": "x2329"},
{"url": "https://codeforces.com//problemset/problem/413/B", "name": "Spyke Chatting", "tags": ["implementation"], "problem_rating": "1300", "solved_by": "x1686"},
{"url": "https://codeforces.com//problemset/problem/413/A", "name": "Data Recovery", "tags": ["implementation"], "problem_rating": "1200", "solved_by": "x2567"},
{"url": "https://codeforces.com//problemset/problem/412/E", "name": "E-mail Addresses", "tags": ["implementation"], "problem_rating": "1900", "solved_by": "x832"},
{"url": "https://codeforces.com//problemset/problem/412/D", "name": "Giving Awards", "tags": ["dfs and similar"], "problem_rating": "2000", "solved_by": "x1830"},
{"url": "https://codeforces.com//problemset/problem/412/C", "name": "Pattern", "tags": ["implementation", "strings"], "problem_rating": "1200", "solved_by": "x3902"},
{"url": "https://codeforces.com//problemset/problem/412/B", "name": "Network Configuration", "tags": ["greedy", "sortings"], "problem_rating": "900", "solved_by": "x5344"},
{"url": "https://codeforces.com//problemset/problem/412/A", "name": "Poster", "tags": ["greedy", "implementation"], "problem_rating": "900", "solved_by": "x4362"},
{"url": "https://codeforces.com//problemset/problem/411/C", "name": "Kicker", "tags": ["implementation"], "problem_rating": "1700", "solved_by": "x1220"},
{"url": "https://codeforces.com//problemset/problem/411/B", "name": "Multi-core Processor", "tags": ["implementation"], "problem_rating": "1600", "solved_by": "x1272"},
{"url": "https://codeforces.com//problemset/problem/411/A", "name": "Password Check", "tags": ["*special problem", "implementation"], "problem_rating": "800", "solved_by": "x7133"},
{"url": "https://codeforces.com//problemset/problem/409/I", "name": "Feed the Golorp", "tags": ["*special problem"], "problem_rating": "2400", "solved_by": "x118"},
{"url": "https://codeforces.com//problemset/problem/409/H", "name": "A + B Strikes Back", "tags": ["*special problem", "brute force", "constructive algorithms", "dsu", "implementation"], "problem_rating": "1500", "solved_by": "x8778"},
{"url": "https://codeforces.com//problemset/problem/409/G", "name": "On a plane", "tags": ["*special problem", "geometry"], "problem_rating": "2200", "solved_by": "x508"},
{"url": "https://codeforces.com//problemset/problem/409/F", "name": "000001", "tags": ["*special problem"], "problem_rating": "1900", "solved_by": "x2060"},
{"url": "https://codeforces.com//problemset/problem/409/E", "name": "Dome", "tags": ["*special problem"], "problem_rating": "1800", "solved_by": "x565"},
{"url": "https://codeforces.com//problemset/problem/409/D", "name": "Big Data", "tags": ["*special problem"], "problem_rating": "1700", "solved_by": "x1703"},
{"url": "https://codeforces.com//problemset/problem/409/C", "name": "Magnum Opus", "tags": ["*special problem"], "problem_rating": "1700", "solved_by": "x1961"},
{"url": "https://codeforces.com//problemset/problem/409/B", "name": "Mysterious Language", "tags": ["*special problem"], "problem_rating": "1700", "solved_by": "x1350"},
{"url": "https://codeforces.com//problemset/problem/409/A", "name": "The Great Game", "tags": ["*special problem"], "problem_rating": "1700", "solved_by": "x2449"},
{"url": "https://codeforces.com//problemset/problem/408/B", "name": "Garland", "tags": ["implementation"], "problem_rating": "1200", "solved_by": "x9098"},
{"url": "https://codeforces.com//problemset/problem/408/A", "name": "Line to Cashier", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x11129"},
{"url": "https://codeforces.com//problemset/problem/407/E", "name": "k-d-sequence", "tags": ["data structures"], "problem_rating": "3100", "solved_by": "x698"},
{"url": "https://codeforces.com//problemset/problem/407/D", "name": "Largest Submatrix 3", "tags": ["dp", "hashing"], "problem_rating": "2700", "solved_by": "x556"},
{"url": "https://codeforces.com//problemset/problem/407/C", "name": "Curious Array", "tags": ["brute force", "combinatorics", "implementation", "math"], "problem_rating": "2500", "solved_by": "x963"},
{"url": "https://codeforces.com//problemset/problem/407/B", "name": "Long Path", "tags": ["dp", "implementation"], "problem_rating": "1600", "solved_by": "x6463"},
{"url": "https://codeforces.com//problemset/problem/407/A", "name": "Triangle", "tags": ["brute force", "geometry", "implementation", "math"], "problem_rating": "1600", "solved_by": "x4787"},
{"url": "https://codeforces.com//problemset/problem/406/E", "name": "Hamming Triples", "tags": ["implementation", "math", "two pointers"], "problem_rating": "2800", "solved_by": "x233"},
{"url": "https://codeforces.com//problemset/problem/406/D", "name": "Hill Climbing", "tags": ["dfs and similar", "geometry", "trees"], "problem_rating": "2200", "solved_by": "x1145"},
{"url": "https://codeforces.com//problemset/problem/405/E", "name": "Graph Cutting", "tags": ["dfs and similar", "graphs"], "problem_rating": "2300", "solved_by": "x1353"},
{"url": "https://codeforces.com//problemset/problem/405/D", "name": "Toy Sum", "tags": ["greedy", "implementation", "math"], "problem_rating": "1700", "solved_by": "x3101"},
{"url": "https://codeforces.com//problemset/problem/405/C", "name": "Unusual Product", "tags": ["implementation", "math"], "problem_rating": "1600", "solved_by": "x4593"},
{"url": "https://codeforces.com//problemset/problem/405/B", "name": "Domino Effect", "tags": [], "problem_rating": "1100", "solved_by": "x5732"},
{"url": "https://codeforces.com//problemset/problem/405/A", "name": "Gravity Flip", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "900", "solved_by": "x97556"},
{"url": "https://codeforces.com//problemset/problem/404/E", "name": "Maze 1D", "tags": ["binary search", "greedy", "implementation"], "problem_rating": "2200", "solved_by": "x571"},
{"url": "https://codeforces.com//problemset/problem/404/D", "name": "Minesweeper 1D", "tags": ["dp", "implementation"], "problem_rating": "1900", "solved_by": "x2108"},
{"url": "https://codeforces.com//problemset/problem/404/C", "name": "Restore Graph", "tags": ["dfs and similar", "graphs", "sortings"], "problem_rating": "1800", "solved_by": "x5102"},
{"url": "https://codeforces.com//problemset/problem/404/B", "name": "Marathon", "tags": ["implementation", "math"], "problem_rating": "1500", "solved_by": "x2906"},
{"url": "https://codeforces.com//problemset/problem/404/A", "name": "Valera and X", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x23464"},
{"url": "https://codeforces.com//problemset/problem/403/E", "name": "Two Rooted Trees", "tags": ["data structures", "implementation", "trees"], "problem_rating": "2900", "solved_by": "x203"},
{"url": "https://codeforces.com//problemset/problem/403/D", "name": "Beautiful Pairs of Numbers", "tags": ["combinatorics", "dp"], "problem_rating": "2300", "solved_by": "x1078"},
{"url": "https://codeforces.com//problemset/problem/402/E", "name": "Strictly Positive Matrix", "tags": ["graphs", "math"], "problem_rating": "2200", "solved_by": "x2141"},
{"url": "https://codeforces.com//problemset/problem/402/D", "name": "Upgrading Array", "tags": ["dp", "greedy", "math", "number theory"], "problem_rating": "1800", "solved_by": "x2538"},
{"url": "https://codeforces.com//problemset/problem/402/C", "name": "Searching for Graph", "tags": ["brute force", "constructive algorithms", "graphs"], "problem_rating": "1500", "solved_by": "x5764"},
{"url": "https://codeforces.com//problemset/problem/402/B", "name": "Trees in a Row", "tags": ["brute force", "implementation"], "problem_rating": "1400", "solved_by": "x3763"},
{"url": "https://codeforces.com//problemset/problem/402/A", "name": "Nuts", "tags": ["greedy", "math"], "problem_rating": "1100", "solved_by": "x4539"},
{"url": "https://codeforces.com//problemset/problem/401/E", "name": "Olympic Games", "tags": ["math"], "problem_rating": "2500", "solved_by": "x168"},
{"url": "https://codeforces.com//problemset/problem/401/D", "name": "Roman and Numbers", "tags": ["bitmasks", "brute force", "combinatorics", "dp", "number theory"], "problem_rating": "2000", "solved_by": "x4077"},
{"url": "https://codeforces.com//problemset/problem/401/C", "name": "Team", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "1400", "solved_by": "x19675"},
{"url": "https://codeforces.com//problemset/problem/401/B", "name": "Sereja and Contests", "tags": ["greedy", "implementation", "math"], "problem_rating": "1200", "solved_by": "x4416"},
{"url": "https://codeforces.com//problemset/problem/401/A", "name": "Vanya and Cards", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x16007"},
{"url": "https://codeforces.com//problemset/problem/400/E", "name": "Inna and Binary Logic", "tags": ["binary search", "bitmasks", "data structures"], "problem_rating": "2100", "solved_by": "x939"},
{"url": "https://codeforces.com//problemset/problem/400/D", "name": "Dima and Bacteria", "tags": ["dsu", "graphs", "shortest paths"], "problem_rating": "2000", "solved_by": "x2839"},
{"url": "https://codeforces.com//problemset/problem/400/C", "name": "Inna and Huge Candy Matrix", "tags": ["implementation", "math"], "problem_rating": "1500", "solved_by": "x2879"},
{"url": "https://codeforces.com//problemset/problem/400/B", "name": "Inna and New Matrix of Candies", "tags": ["brute force", "implementation", "schedules"], "problem_rating": "1200", "solved_by": "x7514"},
{"url": "https://codeforces.com//problemset/problem/400/A", "name": "Inna and Choose Options", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x6429"},
{"url": "https://codeforces.com//problemset/problem/399/B", "name": "Red and Blue Balls", "tags": [], "problem_rating": [null], "solved_by": "x1824"},
{"url": "https://codeforces.com//problemset/problem/399/A", "name": "Pages", "tags": ["implementation"], "problem_rating": [null], "solved_by": "x4084"},
{"url": "https://codeforces.com//problemset/problem/398/E", "name": "Sorting Permutations", "tags": [], "problem_rating": [null], "solved_by": "x90"},
{"url": "https://codeforces.com//problemset/problem/398/D", "name": "Instant Messanger", "tags": ["data structures"], "problem_rating": [null], "solved_by": "x861"},
{"url": "https://codeforces.com//problemset/problem/398/C", "name": "Tree and Array", "tags": ["constructive algorithms"], "problem_rating": [null], "solved_by": "x210"},
{"url": "https://codeforces.com//problemset/problem/398/B", "name": "Painting The Wall", "tags": ["dp", "probabilities"], "problem_rating": [null], "solved_by": "x1010"},
{"url": "https://codeforces.com//problemset/problem/398/A", "name": "Cards", "tags": ["constructive algorithms", "implementation"], "problem_rating": [null], "solved_by": "x917"},
{"url": "https://codeforces.com//problemset/problem/397/B", "name": "On Corruption and Numbers", "tags": ["constructive algorithms", "implementation", "math"], "problem_rating": [null], "solved_by": "x742"},
{"url": "https://codeforces.com//problemset/problem/397/A", "name": "On Segment's Own Points", "tags": ["implementation"], "problem_rating": [null], "solved_by": "x2601"},
{"url": "https://codeforces.com//problemset/problem/396/E", "name": "On Iteration of One Well-Known Function", "tags": ["math"], "problem_rating": [null], "solved_by": "x148"},
{"url": "https://codeforces.com//problemset/problem/396/D", "name": "On Sum of Number of Inversions in Permutations", "tags": ["combinatorics", "math"], "problem_rating": [null], "solved_by": "x414"},
{"url": "https://codeforces.com//problemset/problem/396/C", "name": "On Changing Tree", "tags": ["data structures", "graphs", "trees"], "problem_rating": [null], "solved_by": "x1558"},
{"url": "https://codeforces.com//problemset/problem/396/B", "name": "On Sum of Fractions", "tags": ["math", "number theory"], "problem_rating": [null], "solved_by": "x1061"},
{"url": "https://codeforces.com//problemset/problem/396/A", "name": "On Number of Decompositions into Multipliers", "tags": ["combinatorics", "math", "number theory"], "problem_rating": [null], "solved_by": "x1493"},
{"url": "https://codeforces.com//problemset/problem/394/E", "name": "Lightbulb for Minister", "tags": ["geometry"], "problem_rating": [null], "solved_by": "x116"},
{"url": "https://codeforces.com//problemset/problem/394/D", "name": "Physical Education and Buns", "tags": ["brute force", "implementation", "math"], "problem_rating": [null], "solved_by": "x264"},
{"url": "https://codeforces.com//problemset/problem/394/C", "name": "Dominoes", "tags": ["constructive algorithms", "greedy"], "problem_rating": [null], "solved_by": "x514"},
{"url": "https://codeforces.com//problemset/problem/394/B", "name": "Very Beautiful Number", "tags": ["math"], "problem_rating": [null], "solved_by": "x570"},
{"url": "https://codeforces.com//problemset/problem/394/A", "name": "Counting Sticks", "tags": ["brute force", "implementation"], "problem_rating": [null], "solved_by": "x2642"},
{"url": "https://codeforces.com//problemset/problem/393/B", "name": "Three matrices", "tags": [], "problem_rating": [null], "solved_by": "x1959"},
{"url": "https://codeforces.com//problemset/problem/393/A", "name": "Nineteen", "tags": [], "problem_rating": [null], "solved_by": "x6564"},
{"url": "https://codeforces.com//problemset/problem/392/E", "name": "Deleting Substrings", "tags": [], "problem_rating": [null], "solved_by": "x176"},
{"url": "https://codeforces.com//problemset/problem/392/D", "name": "Three Arrays", "tags": ["data structures"], "problem_rating": [null], "solved_by": "x213"},
{"url": "https://codeforces.com//problemset/problem/392/C", "name": "Yet Another Number Sequence", "tags": ["combinatorics", "math", "matrices"], "problem_rating": [null], "solved_by": "x586"},
{"url": "https://codeforces.com//problemset/problem/392/B", "name": "Tower of Hanoi", "tags": ["dp"], "problem_rating": [null], "solved_by": "x912"},
{"url": "https://codeforces.com//problemset/problem/392/A", "name": "Blocked Points", "tags": ["math"], "problem_rating": [null], "solved_by": "x968"},
{"url": "https://codeforces.com//problemset/problem/391/F3", "name": "Stock Trading", "tags": [], "problem_rating": [null], "solved_by": "x107"},
{"url": "https://codeforces.com//problemset/problem/391/F2", "name": "Stock Trading", "tags": ["greedy"], "problem_rating": [null], "solved_by": "x107"},
{"url": "https://codeforces.com//problemset/problem/391/F1", "name": "Stock Trading", "tags": ["dp"], "problem_rating": [null], "solved_by": "x172"},
{"url": "https://codeforces.com//problemset/problem/391/E2", "name": "Three Trees", "tags": [], "problem_rating": [null], "solved_by": "x153"},
{"url": "https://codeforces.com//problemset/problem/391/E1", "name": "Three Trees", "tags": [], "problem_rating": [null], "solved_by": "x116"},
{"url": "https://codeforces.com//problemset/problem/391/D2", "name": "Supercollider", "tags": ["data structures"], "problem_rating": [null], "solved_by": "x192"},
{"url": "https://codeforces.com//problemset/problem/391/D1", "name": "Supercollider", "tags": ["brute force"], "problem_rating": [null], "solved_by": "x207"},
{"url": "https://codeforces.com//problemset/problem/391/C3", "name": "The Tournament", "tags": [], "problem_rating": [null], "solved_by": "x166"},
{"url": "https://codeforces.com//problemset/problem/391/C2", "name": "The Tournament", "tags": ["greedy"], "problem_rating": [null], "solved_by": "x133"},
{"url": "https://codeforces.com//problemset/problem/391/C1", "name": "The Tournament", "tags": ["brute force"], "problem_rating": [null], "solved_by": "x184"},
{"url": "https://codeforces.com//problemset/problem/391/B", "name": "Word Folding", "tags": ["brute force"], "problem_rating": [null], "solved_by": "x384"},
{"url": "https://codeforces.com//problemset/problem/391/A", "name": "Genetic Engineering", "tags": ["implementation", "two pointers"], "problem_rating": [null], "solved_by": "x1710"},
{"url": "https://codeforces.com//problemset/problem/390/E", "name": "Inna and Large Sweet Matrix", "tags": [], "problem_rating": [null], "solved_by": "x258"},
{"url": "https://codeforces.com//problemset/problem/390/D", "name": "Inna and Sweet Matrix", "tags": ["constructive algorithms"], "problem_rating": [null], "solved_by": "x510"},
{"url": "https://codeforces.com//problemset/problem/390/C", "name": "Inna and Candy Boxes", "tags": ["data structures"], "problem_rating": [null], "solved_by": "x626"},
{"url": "https://codeforces.com//problemset/problem/390/B", "name": "Inna, Dima and Song", "tags": ["implementation"], "problem_rating": [null], "solved_by": "x1173"},
{"url": "https://codeforces.com//problemset/problem/390/A", "name": "Inna and Alarm Clock", "tags": ["implementation"], "problem_rating": [null], "solved_by": "x3485"},
{"url": "https://codeforces.com//problemset/problem/389/B", "name": "Fox and Cross", "tags": ["greedy", "implementation"], "problem_rating": "1100", "solved_by": "x6850"},
{"url": "https://codeforces.com//problemset/problem/389/A", "name": "Fox and Number Game", "tags": ["greedy", "math"], "problem_rating": "1000", "solved_by": "x13955"},
{"url": "https://codeforces.com//problemset/problem/388/E", "name": "Fox and Meteor Shower", "tags": ["geometry"], "problem_rating": "3100", "solved_by": "x120"},
{"url": "https://codeforces.com//problemset/problem/388/D", "name": "Fox and Perfect Sets", "tags": ["math"], "problem_rating": "2700", "solved_by": "x441"},
{"url": "https://codeforces.com//problemset/problem/388/C", "name": "Fox and Card Game", "tags": ["games", "greedy", "sortings"], "problem_rating": "2000", "solved_by": "x3268"},
{"url": "https://codeforces.com//problemset/problem/388/B", "name": "Fox and Minimal path", "tags": ["bitmasks", "constructive algorithms", "graphs", "implementation", "math"], "problem_rating": "1900", "solved_by": "x2458"},
{"url": "https://codeforces.com//problemset/problem/388/A", "name": "Fox and Box Accumulation", "tags": ["greedy", "sortings"], "problem_rating": "1400", "solved_by": "x11422"},
{"url": "https://codeforces.com//problemset/problem/387/E", "name": "George and Cards", "tags": ["binary search", "data structures"], "problem_rating": "2200", "solved_by": "x870"},
{"url": "https://codeforces.com//problemset/problem/387/D", "name": "George and Interesting Graph", "tags": ["graph matchings"], "problem_rating": "2200", "solved_by": "x972"},
{"url": "https://codeforces.com//problemset/problem/387/C", "name": "George and Number", "tags": ["greedy", "implementation"], "problem_rating": "1700", "solved_by": "x2174"},
{"url": "https://codeforces.com//problemset/problem/387/B", "name": "George and Round", "tags": ["brute force", "greedy", "two pointers"], "problem_rating": "1200", "solved_by": "x12019"},
{"url": "https://codeforces.com//problemset/problem/387/A", "name": "George and Sleep", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x9608"},
{"url": "https://codeforces.com//problemset/problem/386/D", "name": "Game with Points", "tags": ["dp", "graphs", "implementation", "shortest paths"], "problem_rating": "2100", "solved_by": "x419"},
{"url": "https://codeforces.com//problemset/problem/386/C", "name": "Diverse Substrings", "tags": ["dp", "strings", "two pointers"], "problem_rating": "2000", "solved_by": "x761"},
{"url": "https://codeforces.com//problemset/problem/386/B", "name": "Fly, freebies, fly!", "tags": ["binary search", "brute force", "implementation"], "problem_rating": "1400", "solved_by": "x2131"},
{"url": "https://codeforces.com//problemset/problem/386/A", "name": "Second-Price Auction", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x6083"},
{"url": "https://codeforces.com//problemset/problem/385/E", "name": "Bear in the Field", "tags": ["math", "matrices"], "problem_rating": "2300", "solved_by": "x577"},
{"url": "https://codeforces.com//problemset/problem/385/D", "name": "Bear and Floodlight", "tags": ["bitmasks", "dp", "geometry"], "problem_rating": "2200", "solved_by": "x802"},
{"url": "https://codeforces.com//problemset/problem/385/C", "name": "Bear and Prime Numbers", "tags": ["binary search", "brute force", "data structures", "dp", "implementation", "math", "number theory"], "problem_rating": "1700", "solved_by": "x9509"},
{"url": "https://codeforces.com//problemset/problem/385/B", "name": "Bear and Strings", "tags": ["brute force", "greedy", "implementation", "math", "strings"], "problem_rating": "1200", "solved_by": "x9724"},
{"url": "https://codeforces.com//problemset/problem/385/A", "name": "Bear and Raspberry", "tags": ["brute force", "greedy", "implementation"], "problem_rating": "1000", "solved_by": "x16330"},
{"url": "https://codeforces.com//problemset/problem/384/B", "name": "Multitasking", "tags": ["greedy", "implementation", "sortings", "two pointers"], "problem_rating": "1500", "solved_by": "x3507"},
{"url": "https://codeforces.com//problemset/problem/384/A", "name": "Coder", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x16018"},
{"url": "https://codeforces.com//problemset/problem/383/E", "name": "Vowels", "tags": ["combinatorics", "divide and conquer", "dp"], "problem_rating": "2700", "solved_by": "x2932"},
{"url": "https://codeforces.com//problemset/problem/383/D", "name": "Antimatter", "tags": ["dp"], "problem_rating": "2300", "solved_by": "x2948"},
{"url": "https://codeforces.com//problemset/problem/383/C", "name": "Propagating tree", "tags": ["data structures", "dfs and similar", "trees"], "problem_rating": "2000", "solved_by": "x6263"},
{"url": "https://codeforces.com//problemset/problem/383/B", "name": "Volcanoes", "tags": ["binary search", "implementation", "sortings", "two pointers"], "problem_rating": "2500", "solved_by": "x660"},
{"url": "https://codeforces.com//problemset/problem/383/A", "name": "Milking cows", "tags": ["data structures", "greedy"], "problem_rating": "1600", "solved_by": "x5227"},
{"url": "https://codeforces.com//problemset/problem/382/E", "name": "Ksenia and Combinatorics", "tags": ["combinatorics", "dp"], "problem_rating": "2600", "solved_by": "x371"},
{"url": "https://codeforces.com//problemset/problem/382/D", "name": "Ksenia and Pawns", "tags": ["dfs and similar", "graphs", "implementation", "trees"], "problem_rating": "2200", "solved_by": "x658"},
{"url": "https://codeforces.com//problemset/problem/382/C", "name": "Arithmetic Progression", "tags": ["implementation", "sortings"], "problem_rating": "1700", "solved_by": "x8223"},
{"url": "https://codeforces.com//problemset/problem/382/B", "name": "Number Busters", "tags": ["binary search", "math"], "problem_rating": "2000", "solved_by": "x1396"},
{"url": "https://codeforces.com//problemset/problem/382/A", "name": "Ksenia and Pan Scales", "tags": ["greedy", "implementation"], "problem_rating": "1100", "solved_by": "x12074"},
{"url": "https://codeforces.com//problemset/problem/381/B", "name": "Sereja and Stairs", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "1100", "solved_by": "x6658"},
{"url": "https://codeforces.com//problemset/problem/381/A", "name": "Sereja and Dima", "tags": ["greedy", "implementation", "two pointers"], "problem_rating": "800", "solved_by": "x62986"},
{"url": "https://codeforces.com//problemset/problem/380/E", "name": "Sereja and Dividing", "tags": ["data structures"], "problem_rating": "2600", "solved_by": "x296"},
{"url": "https://codeforces.com//problemset/problem/380/D", "name": "Sereja and Cinema", "tags": ["combinatorics", "math"], "problem_rating": "2500", "solved_by": "x459"},
{"url": "https://codeforces.com//problemset/problem/380/C", "name": "Sereja and Brackets", "tags": ["data structures", "schedules"], "problem_rating": "2000", "solved_by": "x14362"},
{"url": "https://codeforces.com//problemset/problem/380/B", "name": "Sereja and Tree", "tags": ["graphs", "implementation"], "problem_rating": "2400", "solved_by": "x531"},
{"url": "https://codeforces.com//problemset/problem/380/A", "name": "Sereja and Prefixes", "tags": ["binary search", "brute force"], "problem_rating": "1600", "solved_by": "x2664"},
{"url": "https://codeforces.com//problemset/problem/379/G", "name": "New Year Cactus", "tags": ["dp"], "problem_rating": "3100", "solved_by": "x141"},
{"url": "https://codeforces.com//problemset/problem/379/F", "name": "New Year Tree", "tags": ["data structures", "divide and conquer", "trees"], "problem_rating": "2400", "solved_by": "x2197"},
{"url": "https://codeforces.com//problemset/problem/379/E", "name": "New Year Tree Decorations", "tags": ["geometry", "schedules", "sortings"], "problem_rating": "2500", "solved_by": "x338"},
{"url": "https://codeforces.com//problemset/problem/379/D", "name": "New Year Letter", "tags": ["bitmasks", "brute force", "dp"], "problem_rating": "2000", "solved_by": "x1529"},
{"url": "https://codeforces.com//problemset/problem/379/C", "name": "New Year Ratings Change", "tags": ["greedy", "sortings"], "problem_rating": "1400", "solved_by": "x6518"},
{"url": "https://codeforces.com//problemset/problem/379/B", "name": "New Year Present", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1200", "solved_by": "x7231"},
{"url": "https://codeforces.com//problemset/problem/379/A", "name": "New Year Candles", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x45402"},
{"url": "https://codeforces.com//problemset/problem/378/B", "name": "Semifinals", "tags": ["implementation", "sortings"], "problem_rating": "1300", "solved_by": "x5173"},
{"url": "https://codeforces.com//problemset/problem/378/A", "name": "Playing with Dice", "tags": ["brute force"], "problem_rating": "800", "solved_by": "x23466"},
{"url": "https://codeforces.com//problemset/problem/377/E", "name": "Cookie Clicker", "tags": ["dp", "geometry"], "problem_rating": "2800", "solved_by": "x448"},
{"url": "https://codeforces.com//problemset/problem/377/D", "name": "Developing Game", "tags": ["data structures"], "problem_rating": "2400", "solved_by": "x1112"},
{"url": "https://codeforces.com//problemset/problem/377/C", "name": "Captains Mode", "tags": ["bitmasks", "dp", "games"], "problem_rating": "2200", "solved_by": "x1118"},
{"url": "https://codeforces.com//problemset/problem/377/B", "name": "Preparing for the Contest", "tags": ["binary search", "data structures", "greedy", "sortings"], "problem_rating": "1900", "solved_by": "x2001"},
{"url": "https://codeforces.com//problemset/problem/377/A", "name": "Maze", "tags": ["dfs and similar"], "problem_rating": "1600", "solved_by": "x21894"},
{"url": "https://codeforces.com//problemset/problem/376/B", "name": "I.O.U.", "tags": ["implementation"], "problem_rating": "1300", "solved_by": "x6266"},
{"url": "https://codeforces.com//problemset/problem/376/A", "name": "Lever", "tags": ["implementation", "math"], "problem_rating": "900", "solved_by": "x9245"},
{"url": "https://codeforces.com//problemset/problem/375/E", "name": "Red and Black Tree", "tags": ["dp", "implementation", "math"], "problem_rating": "3000", "solved_by": "x404"},
{"url": "https://codeforces.com//problemset/problem/375/D", "name": "Tree and Queries", "tags": ["data structures", "dfs and similar", "trees"], "problem_rating": "2400", "solved_by": "x6456"},
{"url": "https://codeforces.com//problemset/problem/375/C", "name": "Circling Round Treasures", "tags": ["bitmasks", "shortest paths"], "problem_rating": "2600", "solved_by": "x478"},
{"url": "https://codeforces.com//problemset/problem/375/B", "name": "Maximum Submatrix 2", "tags": ["data structures", "dp", "implementation", "sortings"], "problem_rating": "1600", "solved_by": "x5015"},
{"url": "https://codeforces.com//problemset/problem/375/A", "name": "Divisible by Seven", "tags": ["math", "number theory"], "problem_rating": "1600", "solved_by": "x4760"},
{"url": "https://codeforces.com//problemset/problem/374/E", "name": "Inna and Babies", "tags": ["binary search", "data structures", "dsu", "geometry", "implementation"], "problem_rating": "2600", "solved_by": "x179"},
{"url": "https://codeforces.com//problemset/problem/374/D", "name": "Inna and Sequence", "tags": ["binary search", "data structures", "dp", "trees"], "problem_rating": "2000", "solved_by": "x854"},
{"url": "https://codeforces.com//problemset/problem/374/C", "name": "Inna and Dima", "tags": ["dfs and similar", "dp", "graphs", "implementation"], "problem_rating": "1900", "solved_by": "x2701"},
{"url": "https://codeforces.com//problemset/problem/374/B", "name": "Inna and Nine", "tags": ["combinatorics", "greedy"], "problem_rating": "1500", "solved_by": "x3264"},
{"url": "https://codeforces.com//problemset/problem/374/A", "name": "Inna and Pink Pony", "tags": ["greedy", "implementation"], "problem_rating": "2000", "solved_by": "x2853"},
{"url": "https://codeforces.com//problemset/problem/373/B", "name": "Making Sequences is Fun", "tags": ["binary search", "implementation", "math"], "problem_rating": "1600", "solved_by": "x2454"},
{"url": "https://codeforces.com//problemset/problem/373/A", "name": "Collecting Beats is Fun", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x10541"},
{"url": "https://codeforces.com//problemset/problem/372/E", "name": "Drawing Circles is Fun", "tags": ["combinatorics", "geometry"], "problem_rating": "3000", "solved_by": "x170"},
{"url": "https://codeforces.com//problemset/problem/372/D", "name": "Choosing Subtree is Fun", "tags": ["binary search", "data structures", "dfs and similar", "trees", "two pointers"], "problem_rating": "2600", "solved_by": "x955"},
{"url": "https://codeforces.com//problemset/problem/372/C", "name": "Watching Fireworks is Fun", "tags": ["data structures", "dp", "math"], "problem_rating": "2100", "solved_by": "x3965"},
{"url": "https://codeforces.com//problemset/problem/372/B", "name": "Counting Rectangles is Fun", "tags": ["brute force", "divide and conquer", "dp"], "problem_rating": "1900", "solved_by": "x2577"},
{"url": "https://codeforces.com//problemset/problem/372/A", "name": "Counting Kangaroos is Fun", "tags": ["binary search", "greedy", "sortings", "two pointers"], "problem_rating": "1600", "solved_by": "x12587"},
{"url": "https://codeforces.com//problemset/problem/371/E", "name": "Subway Innovation", "tags": ["greedy", "math", "two pointers"], "problem_rating": "2000", "solved_by": "x1272"},
{"url": "https://codeforces.com//problemset/problem/371/D", "name": "Vessels", "tags": ["data structures", "dsu", "implementation", "trees"], "problem_rating": "1800", "solved_by": "x5462"},
{"url": "https://codeforces.com//problemset/problem/371/C", "name": "Hamburgers", "tags": ["binary search", "brute force"], "problem_rating": "1600", "solved_by": "x24904"},
{"url": "https://codeforces.com//problemset/problem/371/B", "name": "Fox Dividing Cheese", "tags": ["math", "number theory"], "problem_rating": "1300", "solved_by": "x11168"},
{"url": "https://codeforces.com//problemset/problem/371/A", "name": "K-Periodic Array", "tags": ["greedy", "implementation", "math"], "problem_rating": "1000", "solved_by": "x5993"},
{"url": "https://codeforces.com//problemset/problem/370/E", "name": "Summer Reading", "tags": ["dp", "greedy"], "problem_rating": "2500", "solved_by": "x234"},
{"url": "https://codeforces.com//problemset/problem/370/D", "name": "Broken Monitor", "tags": ["brute force", "constructive algorithms", "greedy", "implementation"], "problem_rating": "2100", "solved_by": "x622"},
{"url": "https://codeforces.com//problemset/problem/370/C", "name": "Mittens", "tags": ["constructive algorithms", "greedy", "sortings"], "problem_rating": "1800", "solved_by": "x1551"},
{"url": "https://codeforces.com//problemset/problem/370/B", "name": "Berland Bingo", "tags": ["implementation"], "problem_rating": "1300", "solved_by": "x2486"},
{"url": "https://codeforces.com//problemset/problem/370/A", "name": "Rook, Bishop and King", "tags": ["graphs", "math", "shortest paths"], "problem_rating": "1100", "solved_by": "x10048"},
{"url": "https://codeforces.com//problemset/problem/369/E", "name": "Valera and Queries", "tags": ["binary search", "data structures"], "problem_rating": "2200", "solved_by": "x2082"},
{"url": "https://codeforces.com//problemset/problem/369/D", "name": "Valera and Fools", "tags": ["dfs and similar", "dp", "graphs", "shortest paths"], "problem_rating": "2200", "solved_by": "x1122"},
{"url": "https://codeforces.com//problemset/problem/369/C", "name": "Valera and Elections", "tags": ["dfs and similar", "graphs", "trees"], "problem_rating": "1600", "solved_by": "x9642"},
{"url": "https://codeforces.com//problemset/problem/369/B", "name": "Valera and Contest", "tags": ["constructive algorithms", "implementation", "math"], "problem_rating": "1400", "solved_by": "x6378"},
{"url": "https://codeforces.com//problemset/problem/369/A", "name": "Valera and Plates", "tags": ["greedy", "implementation"], "problem_rating": "900", "solved_by": "x10896"},
{"url": "https://codeforces.com//problemset/problem/368/B", "name": "Sereja and Suffixes", "tags": ["data structures", "dp"], "problem_rating": "1100", "solved_by": "x40465"},
{"url": "https://codeforces.com//problemset/problem/368/A", "name": "Sereja and Coat Rack", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x7430"},
{"url": "https://codeforces.com//problemset/problem/367/E", "name": "Sereja and Intervals", "tags": ["combinatorics", "dp"], "problem_rating": "2700", "solved_by": "x1100"},
{"url": "https://codeforces.com//problemset/problem/367/D", "name": "Sereja and Sets", "tags": ["bitmasks", "dfs and similar"], "problem_rating": "2400", "solved_by": "x650"},
{"url": "https://codeforces.com//problemset/problem/367/C", "name": "Sereja and the Arrangement of Numbers", "tags": ["graphs", "greedy", "sortings"], "problem_rating": "2000", "solved_by": "x1753"},
{"url": "https://codeforces.com//problemset/problem/367/B", "name": "Sereja ans Anagrams", "tags": ["binary search", "data structures"], "problem_rating": "1900", "solved_by": "x2440"},
{"url": "https://codeforces.com//problemset/problem/367/A", "name": "Sereja and Algorithm", "tags": ["data structures", "implementation"], "problem_rating": "1500", "solved_by": "x4302"},
{"url": "https://codeforces.com//problemset/problem/366/E", "name": "Dima and Magic Guitar", "tags": ["brute force", "implementation", "math"], "problem_rating": "2200", "solved_by": "x759"},
{"url": "https://codeforces.com//problemset/problem/366/D", "name": "Dima and Trap Graph", "tags": ["binary search", "data structures", "dfs and similar", "dsu", "shortest paths", "two pointers"], "problem_rating": "2000", "solved_by": "x1395"},
{"url": "https://codeforces.com//problemset/problem/366/C", "name": "Dima and Salad", "tags": ["dp"], "problem_rating": "1900", "solved_by": "x4679"},
{"url": "https://codeforces.com//problemset/problem/366/B", "name": "Dima and To-do List", "tags": ["brute force", "implementation"], "problem_rating": "1200", "solved_by": "x6779"},
{"url": "https://codeforces.com//problemset/problem/366/A", "name": "Dima and Guards", "tags": ["implementation"], "problem_rating": "1100", "solved_by": "x4500"},
{"url": "https://codeforces.com//problemset/problem/365/B", "name": "The Fibonacci Segment", "tags": ["implementation"], "problem_rating": "1100", "solved_by": "x14304"},
{"url": "https://codeforces.com//problemset/problem/365/A", "name": "Good Number", "tags": ["implementation"], "problem_rating": "1100", "solved_by": "x17992"},
{"url": "https://codeforces.com//problemset/problem/364/E", "name": "Empty Rectangles", "tags": ["divide and conquer", "two pointers"], "problem_rating": "3000", "solved_by": "x539"},
{"url": "https://codeforces.com//problemset/problem/364/D", "name": "Ghd", "tags": ["brute force", "math", "probabilities"], "problem_rating": "2900", "solved_by": "x2012"},
{"url": "https://codeforces.com//problemset/problem/364/C", "name": "Beautiful Set", "tags": ["brute force", "number theory"], "problem_rating": "2300", "solved_by": "x590"},
{"url": "https://codeforces.com//problemset/problem/364/B", "name": "Free Market", "tags": ["dp", "greedy"], "problem_rating": "2200", "solved_by": "x1155"},
{"url": "https://codeforces.com//problemset/problem/364/A", "name": "Matrix", "tags": ["combinatorics", "data structures", "implementation"], "problem_rating": "1600", "solved_by": "x4637"},
{"url": "https://codeforces.com//problemset/problem/363/E", "name": "Two Circles", "tags": ["brute force", "data structures", "implementation"], "problem_rating": "2500", "solved_by": "x199"},
{"url": "https://codeforces.com//problemset/problem/363/D", "name": "Renting Bikes", "tags": ["binary search", "greedy"], "problem_rating": "1800", "solved_by": "x3789"},
{"url": "https://codeforces.com//problemset/problem/363/C", "name": "Fixing Typos", "tags": ["greedy", "implementation"], "problem_rating": "1400", "solved_by": "x13191"},
{"url": "https://codeforces.com//problemset/problem/363/B", "name": "Fence", "tags": ["brute force", "dp"], "problem_rating": "1100", "solved_by": "x51129"},
{"url": "https://codeforces.com//problemset/problem/363/A", "name": "Soroban", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x10631"},
{"url": "https://codeforces.com//problemset/problem/362/E", "name": "Petya and Pipes", "tags": ["flows", "graphs", "shortest paths"], "problem_rating": "2300", "solved_by": "x804"},
{"url": "https://codeforces.com//problemset/problem/362/D", "name": "Fools and Foolproof Roads", "tags": ["data structures", "dfs and similar", "dsu", "graphs", "greedy"], "problem_rating": "2100", "solved_by": "x919"},
{"url": "https://codeforces.com//problemset/problem/362/C", "name": "Insertion Sort", "tags": ["data structures", "dp", "implementation", "math"], "problem_rating": "1900", "solved_by": "x1701"},
{"url": "https://codeforces.com//problemset/problem/362/B", "name": "Petya and Staircases", "tags": ["implementation", "sortings"], "problem_rating": "1100", "solved_by": "x13663"},
{"url": "https://codeforces.com//problemset/problem/362/A", "name": "Two Semiknights Meet", "tags": ["greedy", "math"], "problem_rating": "1500", "solved_by": "x2646"},
{"url": "https://codeforces.com//problemset/problem/361/B", "name": "Levko and Permutation", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "1200", "solved_by": "x7962"},
{"url": "https://codeforces.com//problemset/problem/361/A", "name": "Levko and Table", "tags": ["constructive algorithms", "implementation"], "problem_rating": "800", "solved_by": "x16470"},
{"url": "https://codeforces.com//problemset/problem/360/E", "name": "Levko and Game", "tags": ["graphs", "greedy", "shortest paths"], "problem_rating": "2800", "solved_by": "x685"},
{"url": "https://codeforces.com//problemset/problem/360/D", "name": "Levko and Sets", "tags": ["number theory"], "problem_rating": "2600", "solved_by": "x399"},
{"url": "https://codeforces.com//problemset/problem/360/C", "name": "Levko and Strings", "tags": ["combinatorics", "dp"], "problem_rating": "2500", "solved_by": "x1099"},
{"url": "https://codeforces.com//problemset/problem/360/B", "name": "Levko and Array", "tags": ["binary search", "dp"], "problem_rating": "2000", "solved_by": "x2787"},
{"url": "https://codeforces.com//problemset/problem/360/A", "name": "Levko and Array Recovery", "tags": ["greedy", "implementation"], "problem_rating": "1700", "solved_by": "x2041"},
{"url": "https://codeforces.com//problemset/problem/359/E", "name": "Neatness", "tags": ["constructive algorithms", "dfs and similar"], "problem_rating": "2400", "solved_by": "x462"},
{"url": "https://codeforces.com//problemset/problem/359/D", "name": "Pair of Numbers", "tags": ["binary search", "brute force", "data structures", "math", "two pointers"], "problem_rating": "2000", "solved_by": "x4972"},
{"url": "https://codeforces.com//problemset/problem/359/C", "name": "Prime Number", "tags": ["math", "number theory"], "problem_rating": "1900", "solved_by": "x2992"},
{"url": "https://codeforces.com//problemset/problem/359/B", "name": "Permutation", "tags": ["constructive algorithms", "dp", "math"], "problem_rating": "1400", "solved_by": "x7844"},
{"url": "https://codeforces.com//problemset/problem/359/A", "name": "Table", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "1000", "solved_by": "x8458"},
{"url": "https://codeforces.com//problemset/problem/358/E", "name": "Dima and Kicks", "tags": ["brute force", "dsu", "graphs", "implementation"], "problem_rating": "2300", "solved_by": "x391"},
{"url": "https://codeforces.com//problemset/problem/358/D", "name": "Dima and Hares", "tags": ["dp", "greedy"], "problem_rating": "1800", "solved_by": "x3973"},
{"url": "https://codeforces.com//problemset/problem/358/C", "name": "Dima and Containers", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "2000", "solved_by": "x1975"},
{"url": "https://codeforces.com//problemset/problem/358/B", "name": "Dima and Text Messages", "tags": ["brute force", "strings"], "problem_rating": "1500", "solved_by": "x3701"},
{"url": "https://codeforces.com//problemset/problem/358/A", "name": "Dima and Continuous Line", "tags": ["brute force", "implementation"], "problem_rating": "1400", "solved_by": "x7659"},
{"url": "https://codeforces.com//problemset/problem/357/B", "name": "Flag Day", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1400", "solved_by": "x8108"},
{"url": "https://codeforces.com//problemset/problem/357/A", "name": "Group of Students", "tags": ["brute force", "greedy", "implementation"], "problem_rating": "1000", "solved_by": "x6769"},
{"url": "https://codeforces.com//problemset/problem/356/E", "name": "Xenia and String Problem", "tags": ["dp", "hashing", "implementation", "string suffix structures", "strings"], "problem_rating": "3000", "solved_by": "x408"},
{"url": "https://codeforces.com//problemset/problem/356/D", "name": "Bags and Coins", "tags": ["bitmasks", "constructive algorithms", "dp", "greedy"], "problem_rating": "2700", "solved_by": "x944"},
{"url": "https://codeforces.com//problemset/problem/356/C", "name": "Compartments", "tags": ["combinatorics", "constructive algorithms", "greedy", "implementation"], "problem_rating": "2100", "solved_by": "x1240"},
{"url": "https://codeforces.com//problemset/problem/356/B", "name": "Xenia and Hamming", "tags": ["implementation", "math"], "problem_rating": "1900", "solved_by": "x1914"},
{"url": "https://codeforces.com//problemset/problem/356/A", "name": "Knight Tournament", "tags": ["data structures", "dsu"], "problem_rating": "1500", "solved_by": "x13190"},
{"url": "https://codeforces.com//problemset/problem/355/B", "name": "Vasya and Public Transport", "tags": ["greedy", "implementation"], "problem_rating": "1100", "solved_by": "x4477"},
{"url": "https://codeforces.com//problemset/problem/355/A", "name": "Vasya and Digital Root", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1100", "solved_by": "x9338"},
{"url": "https://codeforces.com//problemset/problem/354/E", "name": "Lucky Number Representation", "tags": ["constructive algorithms", "dfs and similar", "dp"], "problem_rating": "2200", "solved_by": "x874"},
{"url": "https://codeforces.com//problemset/problem/354/D", "name": "Transferring Pyramid", "tags": ["dp"], "problem_rating": "2900", "solved_by": "x460"},
{"url": "https://codeforces.com//problemset/problem/354/C", "name": "Vasya and Beautiful Arrays", "tags": ["brute force", "dp", "number theory"], "problem_rating": "2100", "solved_by": "x3025"},
{"url": "https://codeforces.com//problemset/problem/354/B", "name": "Game with Strings", "tags": ["bitmasks", "dp", "games"], "problem_rating": "2400", "solved_by": "x451"},
{"url": "https://codeforces.com//problemset/problem/354/A", "name": "Vasya and Robot", "tags": ["brute force", "greedy", "math"], "problem_rating": "1500", "solved_by": "x5451"},
{"url": "https://codeforces.com//problemset/problem/353/E", "name": "Antichain", "tags": ["dp", "graph matchings", "greedy"], "problem_rating": "2200", "solved_by": "x577"},
{"url": "https://codeforces.com//problemset/problem/353/D", "name": "Queue", "tags": ["constructive algorithms", "dp"], "problem_rating": "2000", "solved_by": "x2768"},
{"url": "https://codeforces.com//problemset/problem/353/C", "name": "Find Maximum", "tags": ["implementation", "math", "number theory"], "problem_rating": "1600", "solved_by": "x4779"},
{"url": "https://codeforces.com//problemset/problem/353/B", "name": "Two Heaps", "tags": ["combinatorics", "constructive algorithms", "greedy", "implementation", "math", "sortings"], "problem_rating": "1900", "solved_by": "x2268"},
{"url": "https://codeforces.com//problemset/problem/353/A", "name": "Domino", "tags": ["implementation", "math"], "problem_rating": "1200", "solved_by": "x18226"},
{"url": "https://codeforces.com//problemset/problem/352/B", "name": "Jeff and Periods", "tags": ["implementation", "sortings"], "problem_rating": "1300", "solved_by": "x16140"},
{"url": "https://codeforces.com//problemset/problem/352/A", "name": "Jeff and Digits", "tags": ["brute force", "implementation", "math"], "problem_rating": "1000", "solved_by": "x25078"},
{"url": "https://codeforces.com//problemset/problem/351/E", "name": "Jeff and Permutation", "tags": ["greedy"], "problem_rating": "2200", "solved_by": "x1552"},
{"url": "https://codeforces.com//problemset/problem/351/D", "name": "Jeff and Removing Periods", "tags": ["data structures"], "problem_rating": "2700", "solved_by": "x1034"},
{"url": "https://codeforces.com//problemset/problem/351/C", "name": "Jeff and Brackets", "tags": ["dp", "matrices"], "problem_rating": "2500", "solved_by": "x543"},
{"url": "https://codeforces.com//problemset/problem/351/B", "name": "Jeff and Furik", "tags": ["combinatorics", "dp", "probabilities"], "problem_rating": "1900", "solved_by": "x2345"},
{"url": "https://codeforces.com//problemset/problem/351/A", "name": "Jeff and Rounding", "tags": ["dp", "greedy", "implementation", "math"], "problem_rating": "1800", "solved_by": "x2908"},
{"url": "https://codeforces.com//problemset/problem/350/E", "name": "Wrong Floyd", "tags": ["brute force", "constructive algorithms", "dfs and similar", "graphs"], "problem_rating": "2200", "solved_by": "x758"},
{"url": "https://codeforces.com//problemset/problem/350/D", "name": "Looking for Owls", "tags": ["binary search", "data structures", "geometry", "hashing", "sortings"], "problem_rating": "2400", "solved_by": "x260"},
{"url": "https://codeforces.com//problemset/problem/350/C", "name": "Bombs", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "1600", "solved_by": "x6501"},
{"url": "https://codeforces.com//problemset/problem/350/B", "name": "Resort", "tags": ["graphs"], "problem_rating": "1500", "solved_by": "x3101"},
{"url": "https://codeforces.com//problemset/problem/350/A", "name": "TL", "tags": ["brute force", "greedy", "implementation"], "problem_rating": "1200", "solved_by": "x16177"},
{"url": "https://codeforces.com//problemset/problem/349/B", "name": "Color the Fence", "tags": ["data structures", "dp", "greedy", "implementation"], "problem_rating": "1700", "solved_by": "x13771"},
{"url": "https://codeforces.com//problemset/problem/349/A", "name": "Cinema Line", "tags": ["greedy", "implementation"], "problem_rating": "1100", "solved_by": "x29310"},
{"url": "https://codeforces.com//problemset/problem/348/E", "name": "Pilgrims", "tags": ["dfs and similar", "dp", "trees"], "problem_rating": "2800", "solved_by": "x435"},
{"url": "https://codeforces.com//problemset/problem/348/D", "name": "Turtles", "tags": ["dp", "matrices"], "problem_rating": "2500", "solved_by": "x1660"},
{"url": "https://codeforces.com//problemset/problem/348/C", "name": "Subset Sums", "tags": ["brute force", "data structures"], "problem_rating": "2500", "solved_by": "x2138"},
{"url": "https://codeforces.com//problemset/problem/348/B", "name": "Apple Tree", "tags": ["dfs and similar", "number theory", "trees"], "problem_rating": "2100", "solved_by": "x2068"},
{"url": "https://codeforces.com//problemset/problem/348/A", "name": "Mafia", "tags": ["binary search", "math", "sortings"], "problem_rating": "1600", "solved_by": "x12823"},
{"url": "https://codeforces.com//problemset/problem/347/B", "name": "Fixed Points", "tags": ["brute force", "implementation", "math"], "problem_rating": "1100", "solved_by": "x9222"},
{"url": "https://codeforces.com//problemset/problem/347/A", "name": "Difference Row", "tags": ["constructive algorithms", "implementation", "sortings"], "problem_rating": "1300", "solved_by": "x8871"},
{"url": "https://codeforces.com//problemset/problem/346/E", "name": "Doodle Jump", "tags": ["math", "number theory"], "problem_rating": "3000", "solved_by": "x260"},
{"url": "https://codeforces.com//problemset/problem/346/D", "name": "Robot Control", "tags": ["dp", "graphs", "shortest paths"], "problem_rating": "2600", "solved_by": "x712"},
{"url": "https://codeforces.com//problemset/problem/346/C", "name": "Number Transformation II", "tags": ["greedy", "math"], "problem_rating": "2200", "solved_by": "x1428"},
{"url": "https://codeforces.com//problemset/problem/346/B", "name": "Lucky Common Subsequence", "tags": ["dp", "strings"], "problem_rating": "2000", "solved_by": "x3410"},
{"url": "https://codeforces.com//problemset/problem/346/A", "name": "Alice and Bob", "tags": ["games", "math", "number theory"], "problem_rating": "1600", "solved_by": "x8593"},
{"url": "https://codeforces.com//problemset/problem/345/G", "name": "Suffix Subgroup", "tags": ["*special problem", "strings"], "problem_rating": "2200", "solved_by": "x55"},
{"url": "https://codeforces.com//problemset/problem/345/F", "name": "Superstitions Inspection", "tags": ["*special problem"], "problem_rating": "2700", "solved_by": "x47"},
{"url": "https://codeforces.com//problemset/problem/345/E", "name": "Black Cat Rush", "tags": ["*special problem"], "problem_rating": "2700", "solved_by": "x47"},
{"url": "https://codeforces.com//problemset/problem/345/D", "name": "Chain Letter", "tags": ["*special problem", "dfs and similar", "graphs"], "problem_rating": "2200", "solved_by": "x79"},
{"url": "https://codeforces.com//problemset/problem/345/C", "name": "Counting Fridays", "tags": ["*special problem"], "problem_rating": "2000", "solved_by": "x126"},
{"url": "https://codeforces.com//problemset/problem/345/B", "name": "Triskaidekaphobia", "tags": ["*special problem"], "problem_rating": "2100", "solved_by": "x125"},
{"url": "https://codeforces.com//problemset/problem/345/A", "name": "Expecting Trouble", "tags": ["*special problem", "probabilities"], "problem_rating": "1500", "solved_by": "x480"},
{"url": "https://codeforces.com//problemset/problem/344/B", "name": "Simple Molecules", "tags": ["brute force", "graphs", "math"], "problem_rating": "1200", "solved_by": "x8770"},
{"url": "https://codeforces.com//problemset/problem/344/A", "name": "Magnets", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x115707"},
{"url": "https://codeforces.com//problemset/problem/343/E", "name": "Pumping Stations", "tags": ["brute force", "dfs and similar", "divide and conquer", "flows", "graphs", "greedy", "trees"], "problem_rating": "2900", "solved_by": "x702"},
{"url": "https://codeforces.com//problemset/problem/343/D", "name": "Water Tree", "tags": ["data structures", "dfs and similar", "graphs", "trees"], "problem_rating": "2100", "solved_by": "x5638"},
{"url": "https://codeforces.com//problemset/problem/343/C", "name": "Read Time", "tags": ["binary search", "greedy", "two pointers"], "problem_rating": "1900", "solved_by": "x2979"},
{"url": "https://codeforces.com//problemset/problem/343/B", "name": "Alternating Current", "tags": ["data structures", "greedy", "implementation"], "problem_rating": "1600", "solved_by": "x13421"},
{"url": "https://codeforces.com//problemset/problem/343/A", "name": "Rational Resistance", "tags": ["math", "number theory"], "problem_rating": "1600", "solved_by": "x8636"},
{"url": "https://codeforces.com//problemset/problem/342/E", "name": "Xenia and Tree", "tags": ["data structures", "divide and conquer", "trees"], "problem_rating": "2400", "solved_by": "x7958"},
{"url": "https://codeforces.com//problemset/problem/342/D", "name": "Xenia and Dominoes", "tags": ["bitmasks", "dfs and similar", "dp"], "problem_rating": "2100", "solved_by": "x492"},
{"url": "https://codeforces.com//problemset/problem/342/C", "name": "Cupboard and Balloons", "tags": ["geometry"], "problem_rating": "1900", "solved_by": "x1828"},
{"url": "https://codeforces.com//problemset/problem/342/B", "name": "Xenia and Spies", "tags": ["brute force", "greedy", "implementation"], "problem_rating": "1500", "solved_by": "x4001"},
{"url": "https://codeforces.com//problemset/problem/342/A", "name": "Xenia and Divisors", "tags": ["greedy", "implementation"], "problem_rating": "1200", "solved_by": "x12346"},
{"url": "https://codeforces.com//problemset/problem/341/E", "name": "Candies Game", "tags": ["constructive algorithms", "greedy"], "problem_rating": "3000", "solved_by": "x441"},
{"url": "https://codeforces.com//problemset/problem/341/D", "name": "Iahub and Xors", "tags": ["data structures"], "problem_rating": "2500", "solved_by": "x1172"},
{"url": "https://codeforces.com//problemset/problem/340/E", "name": "Iahub and Permutations", "tags": ["combinatorics", "math"], "problem_rating": "2000", "solved_by": "x2336"},
{"url": "https://codeforces.com//problemset/problem/340/D", "name": "Bubble Sort Graph", "tags": ["binary search", "data structures", "dp"], "problem_rating": "1500", "solved_by": "x7099"},
{"url": "https://codeforces.com//problemset/problem/340/C", "name": "Tourist Problem", "tags": ["combinatorics", "implementation", "math"], "problem_rating": "1600", "solved_by": "x4191"},
{"url": "https://codeforces.com//problemset/problem/340/B", "name": "Maximal Area Quadrilateral", "tags": ["brute force", "geometry"], "problem_rating": "2100", "solved_by": "x2050"},
{"url": "https://codeforces.com//problemset/problem/340/A", "name": "The Wall", "tags": ["math"], "problem_rating": "1200", "solved_by": "x7503"},
{"url": "https://codeforces.com//problemset/problem/339/E", "name": "Three Swaps", "tags": ["constructive algorithms", "dfs and similar", "greedy"], "problem_rating": "2700", "solved_by": "x542"},
{"url": "https://codeforces.com//problemset/problem/339/D", "name": "Xenia and Bit Operations", "tags": ["data structures", "trees"], "problem_rating": "1700", "solved_by": "x24646"},
{"url": "https://codeforces.com//problemset/problem/339/C", "name": "Xenia and Weights", "tags": ["constructive algorithms", "dfs and similar", "dp", "graphs", "greedy", "shortest paths"], "problem_rating": "1700", "solved_by": "x8230"},
{"url": "https://codeforces.com//problemset/problem/339/B", "name": "Xenia and Ringroad", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x68130"},
{"url": "https://codeforces.com//problemset/problem/339/A", "name": "Helpful Maths", "tags": ["greedy", "implementation", "sortings", "strings"], "problem_rating": "800", "solved_by": "x205317"},
{"url": "https://codeforces.com//problemset/problem/338/E", "name": "Optimize!", "tags": ["data structures"], "problem_rating": "2600", "solved_by": "x964"},
{"url": "https://codeforces.com//problemset/problem/338/D", "name": "GCD Table", "tags": ["chinese remainder theorem", "math", "number theory"], "problem_rating": "2900", "solved_by": "x1107"},
{"url": "https://codeforces.com//problemset/problem/337/E", "name": "Divisor Tree", "tags": ["brute force", "number theory", "trees"], "problem_rating": "2200", "solved_by": "x1013"},
{"url": "https://codeforces.com//problemset/problem/337/D", "name": "Book of Evil", "tags": ["dfs and similar", "divide and conquer", "dp", "trees"], "problem_rating": "2000", "solved_by": "x5980"},
{"url": "https://codeforces.com//problemset/problem/337/C", "name": "Quiz", "tags": ["binary search", "greedy", "math", "matrices", "number theory"], "problem_rating": "1600", "solved_by": "x4838"},
{"url": "https://codeforces.com//problemset/problem/337/B", "name": "Routine Problem", "tags": ["greedy", "math", "number theory"], "problem_rating": "1400", "solved_by": "x9223"},
{"url": "https://codeforces.com//problemset/problem/337/A", "name": "Puzzles", "tags": ["greedy"], "problem_rating": "900", "solved_by": "x77460"},
{"url": "https://codeforces.com//problemset/problem/336/E", "name": "Vasily the Bear and Painting Square", "tags": ["bitmasks", "combinatorics", "dp", "implementation"], "problem_rating": "2700", "solved_by": "x113"},
{"url": "https://codeforces.com//problemset/problem/336/D", "name": "Vasily the Bear and Beautiful Strings", "tags": ["combinatorics", "math", "number theory"], "problem_rating": "2100", "solved_by": "x939"},
{"url": "https://codeforces.com//problemset/problem/336/C", "name": "Vasily the Bear and Sequence", "tags": ["brute force", "greedy", "implementation", "number theory"], "problem_rating": "1800", "solved_by": "x2434"},
{"url": "https://codeforces.com//problemset/problem/336/B", "name": "Vasily the Bear and Fly", "tags": ["math"], "problem_rating": "1900", "solved_by": "x1208"},
{"url": "https://codeforces.com//problemset/problem/336/A", "name": "Vasily the Bear and Triangle", "tags": ["implementation", "math"], "problem_rating": "1000", "solved_by": "x9982"},
{"url": "https://codeforces.com//problemset/problem/335/F", "name": "Buy One, Get One Free", "tags": ["dp", "greedy"], "problem_rating": "3000", "solved_by": "x508"},
{"url": "https://codeforces.com//problemset/problem/335/E", "name": "Counting Skyscrapers", "tags": ["dp", "math", "probabilities"], "problem_rating": "2800", "solved_by": "x219"},
{"url": "https://codeforces.com//problemset/problem/335/D", "name": "Rectangles and Square", "tags": ["brute force", "dp"], "problem_rating": "2400", "solved_by": "x325"},
{"url": "https://codeforces.com//problemset/problem/335/C", "name": "More Reclamation", "tags": ["games"], "problem_rating": "2100", "solved_by": "x521"},
{"url": "https://codeforces.com//problemset/problem/335/B", "name": "Palindrome", "tags": ["constructive algorithms", "dp"], "problem_rating": "1900", "solved_by": "x2043"},
{"url": "https://codeforces.com//problemset/problem/335/A", "name": "Banana", "tags": ["binary search", "constructive algorithms", "greedy"], "problem_rating": "1400", "solved_by": "x2538"},
{"url": "https://codeforces.com//problemset/problem/334/B", "name": "Eight Point Sets", "tags": ["sortings"], "problem_rating": "1400", "solved_by": "x3562"},
{"url": "https://codeforces.com//problemset/problem/334/A", "name": "Candy Bags", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x18285"},
{"url": "https://codeforces.com//problemset/problem/333/E", "name": "Summer Earnings", "tags": ["binary search", "bitmasks", "brute force", "geometry", "sortings"], "problem_rating": "2500", "solved_by": "x1088"},
{"url": "https://codeforces.com//problemset/problem/333/D", "name": "Characteristics of Rectangles", "tags": ["binary search", "bitmasks", "brute force", "implementation", "sortings"], "problem_rating": "2100", "solved_by": "x2065"},
{"url": "https://codeforces.com//problemset/problem/333/C", "name": "Lucky Tickets", "tags": ["brute force", "constructive algorithms"], "problem_rating": "2700", "solved_by": "x375"},
{"url": "https://codeforces.com//problemset/problem/333/B", "name": "Chips", "tags": ["greedy"], "problem_rating": "1800", "solved_by": "x2612"},
{"url": "https://codeforces.com//problemset/problem/333/A", "name": "Secrets", "tags": ["greedy"], "problem_rating": "1600", "solved_by": "x3953"},
{"url": "https://codeforces.com//problemset/problem/332/E", "name": "Binary Key", "tags": ["dp", "greedy", "implementation"], "problem_rating": "2400", "solved_by": "x299"},
{"url": "https://codeforces.com//problemset/problem/332/D", "name": "Theft of Blueprints", "tags": ["graphs", "math"], "problem_rating": "2400", "solved_by": "x383"},
{"url": "https://codeforces.com//problemset/problem/332/C", "name": "Students' Revenge", "tags": ["data structures", "greedy", "sortings"], "problem_rating": "2200", "solved_by": "x900"},
{"url": "https://codeforces.com//problemset/problem/332/B", "name": "Maximum Absurdity", "tags": ["data structures", "dp", "implementation"], "problem_rating": "1500", "solved_by": "x7888"},
{"url": "https://codeforces.com//problemset/problem/332/A", "name": "Down the Hatch!", "tags": ["implementation"], "problem_rating": "1300", "solved_by": "x3546"},
{"url": "https://codeforces.com//problemset/problem/331/E2", "name": "Deja Vu", "tags": ["constructive algorithms", "dp"], "problem_rating": "3100", "solved_by": "x218"},
{"url": "https://codeforces.com//problemset/problem/331/E1", "name": "Deja Vu", "tags": ["constructive algorithms", "graphs", "implementation"], "problem_rating": "2900", "solved_by": "x164"},
{"url": "https://codeforces.com//problemset/problem/331/D3", "name": "Escaping on Beaveractor", "tags": ["data structures", "implementation", "trees"], "problem_rating": "3000", "solved_by": "x175"},
{"url": "https://codeforces.com//problemset/problem/331/D2", "name": "Escaping on Beaveractor", "tags": ["graphs"], "problem_rating": "2600", "solved_by": "x134"},
{"url": "https://codeforces.com//problemset/problem/331/D1", "name": "Escaping on Beaveractor", "tags": ["dfs and similar", "implementation"], "problem_rating": "2400", "solved_by": "x203"},
{"url": "https://codeforces.com//problemset/problem/331/C3", "name": "The Great Julya Calendar", "tags": ["dp"], "problem_rating": "2500", "solved_by": "x471"},
{"url": "https://codeforces.com//problemset/problem/331/C2", "name": "The Great Julya Calendar", "tags": ["dp"], "problem_rating": "2400", "solved_by": "x373"},
{"url": "https://codeforces.com//problemset/problem/331/C1", "name": "The Great Julya Calendar", "tags": ["dp"], "problem_rating": "1100", "solved_by": "x6018"},
{"url": "https://codeforces.com//problemset/problem/331/B2", "name": "Shave Beaver!", "tags": ["data structures"], "problem_rating": "1900", "solved_by": "x715"},
{"url": "https://codeforces.com//problemset/problem/331/B1", "name": "Shave Beaver!", "tags": ["implementation"], "problem_rating": "1700", "solved_by": "x733"},
{"url": "https://codeforces.com//problemset/problem/331/A2", "name": "Oh Sweet Beaverette", "tags": ["data structures", "sortings"], "problem_rating": "1500", "solved_by": "x1397"},
{"url": "https://codeforces.com//problemset/problem/331/A1", "name": "Oh Sweet Beaverette", "tags": ["brute force", "implementation"], "problem_rating": "1400", "solved_by": "x1350"},
{"url": "https://codeforces.com//problemset/problem/330/B", "name": "Road Construction", "tags": ["constructive algorithms", "graphs"], "problem_rating": "1300", "solved_by": "x16590"},
{"url": "https://codeforces.com//problemset/problem/330/A", "name": "Cakeminator", "tags": ["brute force", "implementation"], "problem_rating": "800", "solved_by": "x27971"},
{"url": "https://codeforces.com//problemset/problem/329/E", "name": "Evil", "tags": ["math"], "problem_rating": "3100", "solved_by": "x167"},
{"url": "https://codeforces.com//problemset/problem/329/D", "name": "The Evil Temple and the Moving Rocks", "tags": ["constructive algorithms"], "problem_rating": "2500", "solved_by": "x392"},
{"url": "https://codeforces.com//problemset/problem/329/C", "name": "Graph Reconstruction", "tags": ["constructive algorithms"], "problem_rating": "2400", "solved_by": "x893"},
{"url": "https://codeforces.com//problemset/problem/329/B", "name": "Biridian Forest", "tags": ["dfs and similar", "shortest paths"], "problem_rating": "1500", "solved_by": "x6242"},
{"url": "https://codeforces.com//problemset/problem/329/A", "name": "Purification", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1500", "solved_by": "x4615"},
{"url": "https://codeforces.com//problemset/problem/328/B", "name": "Sheldon and Ice Pieces", "tags": ["greedy"], "problem_rating": "1500", "solved_by": "x1286"},
{"url": "https://codeforces.com//problemset/problem/328/A", "name": "IQ Test", "tags": ["implementation"], "problem_rating": "1800", "solved_by": "x2009"},
{"url": "https://codeforces.com//problemset/problem/327/E", "name": "Axis Walking", "tags": ["bitmasks", "combinatorics", "constructive algorithms", "dp", "meet-in-the-middle"], "problem_rating": "2300", "solved_by": "x1365"},
{"url": "https://codeforces.com//problemset/problem/327/D", "name": "Block Tower", "tags": ["constructive algorithms", "dfs and similar", "graphs"], "problem_rating": "1900", "solved_by": "x2255"},
{"url": "https://codeforces.com//problemset/problem/327/C", "name": "Magic Five", "tags": ["combinatorics", "math"], "problem_rating": "1700", "solved_by": "x3168"},
{"url": "https://codeforces.com//problemset/problem/327/B", "name": "Hungry Sequence", "tags": ["math"], "problem_rating": "1200", "solved_by": "x19347"},
{"url": "https://codeforces.com//problemset/problem/327/A", "name": "Flipping Game", "tags": ["brute force", "dp", "implementation"], "problem_rating": "1200", "solved_by": "x40929"},
{"url": "https://codeforces.com//problemset/problem/325/E", "name": "The Red Button", "tags": ["combinatorics", "dfs and similar", "dsu", "graphs", "greedy"], "problem_rating": "2800", "solved_by": "x763"},
{"url": "https://codeforces.com//problemset/problem/325/D", "name": "Reclamation", "tags": ["dsu"], "problem_rating": "2900", "solved_by": "x522"},
{"url": "https://codeforces.com//problemset/problem/325/C", "name": "Monsters and Diamonds", "tags": ["dfs and similar", "graphs", "shortest paths"], "problem_rating": "2600", "solved_by": "x333"},
{"url": "https://codeforces.com//problemset/problem/325/B", "name": "Stadium and Games", "tags": ["binary search", "math"], "problem_rating": "1800", "solved_by": "x1492"},
{"url": "https://codeforces.com//problemset/problem/325/A", "name": "Square and Rectangles", "tags": ["implementation"], "problem_rating": "1500", "solved_by": "x2141"},
{"url": "https://codeforces.com//problemset/problem/323/C", "name": "Two permutations", "tags": ["data structures"], "problem_rating": "2400", "solved_by": "x582"},
{"url": "https://codeforces.com//problemset/problem/323/B", "name": "Tournament-graph", "tags": ["constructive algorithms", "graphs"], "problem_rating": "2200", "solved_by": "x386"},
{"url": "https://codeforces.com//problemset/problem/323/A", "name": "Black-and-White Cube", "tags": ["combinatorics", "constructive algorithms"], "problem_rating": "1600", "solved_by": "x727"},
{"url": "https://codeforces.com//problemset/problem/322/B", "name": "Ciel and Flowers", "tags": ["combinatorics", "math"], "problem_rating": "1600", "solved_by": "x11635"},
{"url": "https://codeforces.com//problemset/problem/322/A", "name": "Ciel and Dancing", "tags": ["greedy"], "problem_rating": "1000", "solved_by": "x8128"},
{"url": "https://codeforces.com//problemset/problem/321/E", "name": "Ciel and Gondolas", "tags": ["data structures", "divide and conquer", "dp"], "problem_rating": "2600", "solved_by": "x4769"},
{"url": "https://codeforces.com//problemset/problem/321/D", "name": "Ciel and Flipboard", "tags": ["dp", "greedy", "math"], "problem_rating": "2900", "solved_by": "x530"},
{"url": "https://codeforces.com//problemset/problem/321/C", "name": "Ciel the Commander", "tags": ["constructive algorithms", "dfs and similar", "divide and conquer", "greedy", "trees"], "problem_rating": "2100", "solved_by": "x7045"},
{"url": "https://codeforces.com//problemset/problem/321/B", "name": "Ciel and Duel", "tags": ["dp", "flows", "greedy"], "problem_rating": "1900", "solved_by": "x3025"},
{"url": "https://codeforces.com//problemset/problem/321/A", "name": "Ciel and Robot", "tags": ["binary search", "implementation", "math"], "problem_rating": "1700", "solved_by": "x3589"},
{"url": "https://codeforces.com//problemset/problem/320/B", "name": "Ping-Pong (Easy Version)", "tags": ["dfs and similar", "graphs"], "problem_rating": "1500", "solved_by": "x7147"},
{"url": "https://codeforces.com//problemset/problem/320/A", "name": "Magic Numbers", "tags": ["brute force", "greedy"], "problem_rating": "900", "solved_by": "x34733"},
{"url": "https://codeforces.com//problemset/problem/319/E", "name": "Ping-Pong", "tags": ["data structures"], "problem_rating": "3000", "solved_by": "x640"},
{"url": "https://codeforces.com//problemset/problem/319/D", "name": "Have You Ever Heard About the Word?", "tags": ["greedy", "hashing", "string suffix structures", "strings"], "problem_rating": "2800", "solved_by": "x634"},
{"url": "https://codeforces.com//problemset/problem/319/C", "name": "Kalila and Dimna in the Logging Industry", "tags": ["dp", "geometry"], "problem_rating": "2100", "solved_by": "x5026"},
{"url": "https://codeforces.com//problemset/problem/319/B", "name": "Psychos in a Line", "tags": ["data structures", "implementation"], "problem_rating": "1900", "solved_by": "x4085"},
{"url": "https://codeforces.com//problemset/problem/319/A", "name": "Malek Dance Club", "tags": ["combinatorics", "math"], "problem_rating": "1600", "solved_by": "x2776"},
{"url": "https://codeforces.com//problemset/problem/318/B", "name": "Strings of Power", "tags": ["implementation", "strings", "two pointers"], "problem_rating": "1300", "solved_by": "x7448"},
{"url": "https://codeforces.com//problemset/problem/318/A", "name": "Even Odds", "tags": ["math"], "problem_rating": "900", "solved_by": "x109674"},
{"url": "https://codeforces.com//problemset/problem/317/E", "name": "Princess and Her Shadow", "tags": ["constructive algorithms", "shortest paths"], "problem_rating": "3100", "solved_by": "x153"},
{"url": "https://codeforces.com//problemset/problem/317/D", "name": "Game with Powers", "tags": ["dp", "games"], "problem_rating": "2300", "solved_by": "x1031"},
{"url": "https://codeforces.com//problemset/problem/317/C", "name": "Balance", "tags": ["constructive algorithms", "dfs and similar", "graphs", "trees"], "problem_rating": "2500", "solved_by": "x491"},
{"url": "https://codeforces.com//problemset/problem/317/B", "name": "Ants", "tags": ["brute force", "implementation"], "problem_rating": "2000", "solved_by": "x1590"},
{"url": "https://codeforces.com//problemset/problem/317/A", "name": "Perfect Pair", "tags": ["brute force"], "problem_rating": "1600", "solved_by": "x4613"},
{"url": "https://codeforces.com//problemset/problem/316/G3", "name": "Good Substrings", "tags": ["string suffix structures"], "problem_rating": "2400", "solved_by": "x490"},
{"url": "https://codeforces.com//problemset/problem/316/G2", "name": "Good Substrings", "tags": ["string suffix structures"], "problem_rating": "2200", "solved_by": "x468"},
{"url": "https://codeforces.com//problemset/problem/316/G1", "name": "Good Substrings", "tags": ["hashing", "strings"], "problem_rating": "1700", "solved_by": "x940"},
{"url": "https://codeforces.com//problemset/problem/316/F3", "name": "Suns and Rays", "tags": ["constructive algorithms", "dfs and similar", "implementation"], "problem_rating": "2200", "solved_by": "x164"},
{"url": "https://codeforces.com//problemset/problem/316/F2", "name": "Suns and Rays", "tags": [], "problem_rating": "2300", "solved_by": "x150"},
{"url": "https://codeforces.com//problemset/problem/316/F1", "name": "Suns and Rays", "tags": ["dfs and similar", "implementation"], "problem_rating": "2200", "solved_by": "x165"},
{"url": "https://codeforces.com//problemset/problem/316/E3", "name": "Summer Homework", "tags": ["data structures", "math"], "problem_rating": "2300", "solved_by": "x522"},
{"url": "https://codeforces.com//problemset/problem/316/E2", "name": "Summer Homework", "tags": ["data structures", "math"], "problem_rating": "2300", "solved_by": "x391"},
{"url": "https://codeforces.com//problemset/problem/316/E1", "name": "Summer Homework", "tags": ["brute force", "data structures"], "problem_rating": "1500", "solved_by": "x1464"},
{"url": "https://codeforces.com//problemset/problem/316/D3", "name": "PE Lesson", "tags": ["dp", "math"], "problem_rating": "2400", "solved_by": "x559"},
{"url": "https://codeforces.com//problemset/problem/316/D2", "name": "PE Lesson", "tags": ["dp"], "problem_rating": "2300", "solved_by": "x441"},
{"url": "https://codeforces.com//problemset/problem/316/D1", "name": "PE Lesson", "tags": ["brute force", "dp"], "problem_rating": "2300", "solved_by": "x503"},
{"url": "https://codeforces.com//problemset/problem/316/C2", "name": "Tidying Up", "tags": ["flows", "graph matchings"], "problem_rating": "2300", "solved_by": "x620"},
{"url": "https://codeforces.com//problemset/problem/316/C1", "name": "Tidying Up", "tags": ["flows"], "problem_rating": "2200", "solved_by": "x551"},
{"url": "https://codeforces.com//problemset/problem/316/B2", "name": "EKG", "tags": ["dfs and similar", "dp"], "problem_rating": "1600", "solved_by": "x1574"},
{"url": "https://codeforces.com//problemset/problem/316/B1", "name": "EKG", "tags": ["brute force", "dfs and similar"], "problem_rating": "1500", "solved_by": "x1364"},
{"url": "https://codeforces.com//problemset/problem/316/A2", "name": "Special Task", "tags": ["math"], "problem_rating": "1400", "solved_by": "x2119"},
{"url": "https://codeforces.com//problemset/problem/316/A1", "name": "Special Task", "tags": ["greedy"], "problem_rating": "1100", "solved_by": "x2618"},
{"url": "https://codeforces.com//problemset/problem/315/B", "name": "Sereja and Array", "tags": ["implementation"], "problem_rating": "1200", "solved_by": "x6933"},
{"url": "https://codeforces.com//problemset/problem/315/A", "name": "Sereja and Bottles", "tags": ["brute force"], "problem_rating": "1400", "solved_by": "x10927"},
{"url": "https://codeforces.com//problemset/problem/314/E", "name": "Sereja and Squares", "tags": ["dp"], "problem_rating": "2900", "solved_by": "x366"},
{"url": "https://codeforces.com//problemset/problem/314/D", "name": "Sereja and Straight Lines", "tags": ["binary search", "data structures", "geometry", "sortings", "two pointers"], "problem_rating": "2500", "solved_by": "x518"},
{"url": "https://codeforces.com//problemset/problem/314/C", "name": "Sereja and Subsequences", "tags": ["data structures", "dp"], "problem_rating": "2000", "solved_by": "x1815"},
{"url": "https://codeforces.com//problemset/problem/314/B", "name": "Sereja and Periods", "tags": ["binary search", "dfs and similar", "strings"], "problem_rating": "2000", "solved_by": "x1459"},
{"url": "https://codeforces.com//problemset/problem/314/A", "name": "Sereja and Contest", "tags": ["implementation"], "problem_rating": "1600", "solved_by": "x2063"},
{"url": "https://codeforces.com//problemset/problem/313/E", "name": "Ilya and Two Numbers", "tags": ["constructive algorithms", "data structures", "dsu", "greedy"], "problem_rating": "2300", "solved_by": "x542"},
{"url": "https://codeforces.com//problemset/problem/313/D", "name": "Ilya and Roads", "tags": ["dp"], "problem_rating": "2100", "solved_by": "x1449"},
{"url": "https://codeforces.com//problemset/problem/313/C", "name": "Ilya and Matrix", "tags": ["constructive algorithms", "greedy", "implementation", "sortings"], "problem_rating": "1400", "solved_by": "x5576"},
{"url": "https://codeforces.com//problemset/problem/313/B", "name": "Ilya and Queries", "tags": ["dp", "implementation"], "problem_rating": "1100", "solved_by": "x42662"},
{"url": "https://codeforces.com//problemset/problem/313/A", "name": "Ilya and Bank Account", "tags": ["implementation", "number theory"], "problem_rating": "900", "solved_by": "x54908"},
{"url": "https://codeforces.com//problemset/problem/312/B", "name": "Archer", "tags": ["math", "probabilities"], "problem_rating": "1300", "solved_by": "x11307"},
{"url": "https://codeforces.com//problemset/problem/312/A", "name": "Whose sentence is it?", "tags": ["implementation", "strings"], "problem_rating": "1100", "solved_by": "x4936"},
{"url": "https://codeforces.com//problemset/problem/311/E", "name": "Biologist", "tags": ["flows"], "problem_rating": "2300", "solved_by": "x1100"},
{"url": "https://codeforces.com//problemset/problem/311/D", "name": "Interval Cubing", "tags": ["data structures", "math"], "problem_rating": "2600", "solved_by": "x661"},
{"url": "https://codeforces.com//problemset/problem/311/C", "name": "Fetch the Treasure", "tags": ["brute force", "data structures", "graphs", "shortest paths"], "problem_rating": "2500", "solved_by": "x478"},
{"url": "https://codeforces.com//problemset/problem/311/B", "name": "Cats Transport", "tags": ["data structures", "dp"], "problem_rating": "2400", "solved_by": "x3342"},
{"url": "https://codeforces.com//problemset/problem/311/A", "name": "The Closest Pair", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1300", "solved_by": "x4013"},
{"url": "https://codeforces.com//problemset/problem/309/E", "name": "Sheep", "tags": ["binary search", "greedy"], "problem_rating": "2900", "solved_by": "x220"},
{"url": "https://codeforces.com//problemset/problem/309/D", "name": "Tennis Rackets", "tags": ["brute force", "geometry"], "problem_rating": "2700", "solved_by": "x173"},
{"url": "https://codeforces.com//problemset/problem/309/C", "name": "Memory for Arrays", "tags": ["binary search", "bitmasks", "greedy"], "problem_rating": "1900", "solved_by": "x1300"},
{"url": "https://codeforces.com//problemset/problem/309/B", "name": "Context Advertising", "tags": ["dp", "two pointers"], "problem_rating": "2100", "solved_by": "x707"},
{"url": "https://codeforces.com//problemset/problem/309/A", "name": "Morning run", "tags": ["binary search", "math", "two pointers"], "problem_rating": "2000", "solved_by": "x461"},
{"url": "https://codeforces.com//problemset/problem/306/D", "name": "Polygon", "tags": ["constructive algorithms", "geometry"], "problem_rating": "2300", "solved_by": "x267"},
{"url": "https://codeforces.com//problemset/problem/306/C", "name": "White, Black and White Again", "tags": ["combinatorics", "number theory"], "problem_rating": "2100", "solved_by": "x471"},
{"url": "https://codeforces.com//problemset/problem/306/B", "name": "Optimizer", "tags": ["data structures", "greedy", "sortings"], "problem_rating": "2100", "solved_by": "x440"},
{"url": "https://codeforces.com//problemset/problem/306/A", "name": "Candies", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x6663"},
{"url": "https://codeforces.com//problemset/problem/305/E", "name": "Playing with String", "tags": ["games"], "problem_rating": "2300", "solved_by": "x610"},
{"url": "https://codeforces.com//problemset/problem/305/D", "name": "Olya and Graph", "tags": ["combinatorics", "math"], "problem_rating": "2200", "solved_by": "x504"},
{"url": "https://codeforces.com//problemset/problem/305/C", "name": "Ivan and Powers of Two", "tags": ["greedy", "implementation"], "problem_rating": "1600", "solved_by": "x2432"},
{"url": "https://codeforces.com//problemset/problem/305/B", "name": "Continued Fractions", "tags": ["brute force", "implementation", "math"], "problem_rating": "1700", "solved_by": "x2047"},
{"url": "https://codeforces.com//problemset/problem/305/A", "name": "Strange Addition", "tags": ["brute force", "constructive algorithms", "implementation"], "problem_rating": "1600", "solved_by": "x4693"},
{"url": "https://codeforces.com//problemset/problem/304/B", "name": "Calendar", "tags": ["brute force", "implementation"], "problem_rating": "1300", "solved_by": "x2954"},
{"url": "https://codeforces.com//problemset/problem/304/A", "name": "Pythagorean Theorem II", "tags": ["brute force", "math"], "problem_rating": "1200", "solved_by": "x10336"},
{"url": "https://codeforces.com//problemset/problem/303/E", "name": "Random Ranking", "tags": ["dp", "math", "probabilities"], "problem_rating": "3000", "solved_by": "x316"},
{"url": "https://codeforces.com//problemset/problem/303/D", "name": "Rotatable Number", "tags": ["math", "number theory"], "problem_rating": "2600", "solved_by": "x293"},
{"url": "https://codeforces.com//problemset/problem/303/C", "name": "Minimum Modular", "tags": ["brute force", "graphs", "math", "number theory"], "problem_rating": "2400", "solved_by": "x866"},
{"url": "https://codeforces.com//problemset/problem/303/B", "name": "Rectangle Puzzle II", "tags": ["implementation", "math"], "problem_rating": "1700", "solved_by": "x1336"},
{"url": "https://codeforces.com//problemset/problem/303/A", "name": "Lucky Permutation Triple", "tags": ["constructive algorithms", "implementation", "math"], "problem_rating": "1300", "solved_by": "x7804"},
{"url": "https://codeforces.com//problemset/problem/302/B", "name": "Eugeny and Play List", "tags": ["binary search", "implementation", "two pointers"], "problem_rating": "1200", "solved_by": "x7947"},
{"url": "https://codeforces.com//problemset/problem/302/A", "name": "Eugeny and Array", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x9014"},
{"url": "https://codeforces.com//problemset/problem/301/E", "name": "Yaroslav and Arrangements", "tags": ["dp"], "problem_rating": "2800", "solved_by": "x364"},
{"url": "https://codeforces.com//problemset/problem/301/D", "name": "Yaroslav and Divisors", "tags": ["data structures"], "problem_rating": "2200", "solved_by": "x2297"},
{"url": "https://codeforces.com//problemset/problem/301/C", "name": "Yaroslav and Algorithm", "tags": ["constructive algorithms"], "problem_rating": "2500", "solved_by": "x461"},
{"url": "https://codeforces.com//problemset/problem/301/B", "name": "Yaroslav and Time", "tags": ["binary search", "graphs", "shortest paths"], "problem_rating": "2100", "solved_by": "x2370"},
{"url": "https://codeforces.com//problemset/problem/301/A", "name": "Yaroslav and Sequence", "tags": ["constructive algorithms"], "problem_rating": "1800", "solved_by": "x3059"},
{"url": "https://codeforces.com//problemset/problem/300/E", "name": "Empire Strikes Back", "tags": ["binary search", "math", "number theory"], "problem_rating": "2300", "solved_by": "x1029"},
{"url": "https://codeforces.com//problemset/problem/300/D", "name": "Painting Square", "tags": ["dp", "fft"], "problem_rating": "2300", "solved_by": "x743"},
{"url": "https://codeforces.com//problemset/problem/300/C", "name": "Beautiful Numbers", "tags": ["brute force", "combinatorics"], "problem_rating": "1800", "solved_by": "x9137"},
{"url": "https://codeforces.com//problemset/problem/300/B", "name": "Coach", "tags": ["brute force", "dfs and similar", "graphs"], "problem_rating": "1500", "solved_by": "x6201"},
{"url": "https://codeforces.com//problemset/problem/300/A", "name": "Array", "tags": ["brute force", "constructive algorithms", "implementation"], "problem_rating": "1100", "solved_by": "x22358"},
{"url": "https://codeforces.com//problemset/problem/299/B", "name": "Ksusha the Squirrel", "tags": ["brute force", "implementation"], "problem_rating": "900", "solved_by": "x5229"},
{"url": "https://codeforces.com//problemset/problem/299/A", "name": "Ksusha and Array", "tags": ["brute force", "number theory", "sortings"], "problem_rating": "1000", "solved_by": "x7857"},
{"url": "https://codeforces.com//problemset/problem/298/B", "name": "Sail", "tags": ["brute force", "greedy", "implementation"], "problem_rating": "1200", "solved_by": "x13809"},
{"url": "https://codeforces.com//problemset/problem/298/A", "name": "Snow Footprints", "tags": ["greedy", "implementation"], "problem_rating": "1300", "solved_by": "x10719"},
{"url": "https://codeforces.com//problemset/problem/297/E", "name": "Mystic Carvings", "tags": ["data structures"], "problem_rating": "3000", "solved_by": "x367"},
{"url": "https://codeforces.com//problemset/problem/297/D", "name": "Color the Carpet", "tags": ["constructive algorithms"], "problem_rating": "2500", "solved_by": "x501"},
{"url": "https://codeforces.com//problemset/problem/297/C", "name": "Splitting the Uniqueness", "tags": ["constructive algorithms"], "problem_rating": "2400", "solved_by": "x934"},
{"url": "https://codeforces.com//problemset/problem/297/B", "name": "Fish Weight", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1600", "solved_by": "x3464"},
{"url": "https://codeforces.com//problemset/problem/297/A", "name": "Parity Game", "tags": ["constructive algorithms"], "problem_rating": "1700", "solved_by": "x3603"},
{"url": "https://codeforces.com//problemset/problem/296/B", "name": "Yaroslav and Two Strings", "tags": ["combinatorics", "dp"], "problem_rating": "2000", "solved_by": "x2171"},
{"url": "https://codeforces.com//problemset/problem/296/A", "name": "Yaroslav and Permutations", "tags": ["greedy", "math"], "problem_rating": "1100", "solved_by": "x22571"},
{"url": "https://codeforces.com//problemset/problem/295/E", "name": "Yaroslav and Points", "tags": ["data structures"], "problem_rating": "2500", "solved_by": "x659"},
{"url": "https://codeforces.com//problemset/problem/295/D", "name": "Greg and Caves", "tags": ["combinatorics", "dp"], "problem_rating": "2400", "solved_by": "x642"},
{"url": "https://codeforces.com//problemset/problem/295/C", "name": "Greg and Friends", "tags": ["combinatorics", "dp", "graphs", "shortest paths"], "problem_rating": "2100", "solved_by": "x1671"},
{"url": "https://codeforces.com//problemset/problem/295/B", "name": "Greg and Graph", "tags": ["dp", "graphs", "shortest paths"], "problem_rating": "1700", "solved_by": "x13599"},
{"url": "https://codeforces.com//problemset/problem/295/A", "name": "Greg and Array", "tags": ["data structures", "implementation"], "problem_rating": "1400", "solved_by": "x16895"},
{"url": "https://codeforces.com//problemset/problem/294/E", "name": "Shaass the Great", "tags": ["dp", "trees"], "problem_rating": "2300", "solved_by": "x920"},
{"url": "https://codeforces.com//problemset/problem/294/D", "name": "Shaass and Painter Robot", "tags": ["brute force", "implementation", "number theory"], "problem_rating": "2500", "solved_by": "x309"},
{"url": "https://codeforces.com//problemset/problem/294/C", "name": "Shaass and Lights", "tags": ["combinatorics", "number theory"], "problem_rating": "1900", "solved_by": "x3755"},
{"url": "https://codeforces.com//problemset/problem/294/B", "name": "Shaass and Bookshelf", "tags": ["dp", "greedy"], "problem_rating": "1700", "solved_by": "x4459"},
{"url": "https://codeforces.com//problemset/problem/294/A", "name": "Shaass and Oskols", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x22821"},
{"url": "https://codeforces.com//problemset/problem/293/E", "name": "Close Vertices", "tags": ["data structures", "divide and conquer", "trees"], "problem_rating": "2700", "solved_by": "x1375"},
{"url": "https://codeforces.com//problemset/problem/293/D", "name": "Ksusha and Square", "tags": ["geometry", "math", "probabilities", "two pointers"], "problem_rating": "2700", "solved_by": "x236"},
{"url": "https://codeforces.com//problemset/problem/293/C", "name": "Cube Problem", "tags": ["brute force", "math", "number theory"], "problem_rating": "2400", "solved_by": "x564"},
{"url": "https://codeforces.com//problemset/problem/293/B", "name": "Distinct Paths", "tags": ["brute force", "combinatorics"], "problem_rating": "2700", "solved_by": "x840"},
{"url": "https://codeforces.com//problemset/problem/293/A", "name": "Weird Game", "tags": ["games", "greedy"], "problem_rating": "1500", "solved_by": "x2853"},
{"url": "https://codeforces.com//problemset/problem/292/E", "name": "Copying Data", "tags": ["data structures"], "problem_rating": "1900", "solved_by": "x4012"},
{"url": "https://codeforces.com//problemset/problem/292/D", "name": "Connected Components", "tags": ["data structures", "dfs and similar", "dp", "dsu"], "problem_rating": "1900", "solved_by": "x2377"},
{"url": "https://codeforces.com//problemset/problem/292/C", "name": "Beautiful IP Addresses", "tags": ["brute force"], "problem_rating": "2000", "solved_by": "x1158"},
{"url": "https://codeforces.com//problemset/problem/292/B", "name": "Network Topology", "tags": ["graphs", "implementation"], "problem_rating": "1200", "solved_by": "x8005"},
{"url": "https://codeforces.com//problemset/problem/292/A", "name": "SMSC", "tags": ["implementation"], "problem_rating": "1100", "solved_by": "x2675"},
{"url": "https://codeforces.com//problemset/problem/291/E", "name": "Tree-String Problem", "tags": ["*special problem", "dfs and similar", "hashing", "strings"], "problem_rating": "2000", "solved_by": "x1288"},
{"url": "https://codeforces.com//problemset/problem/291/D", "name": "Parallel Programming", "tags": ["*special problem", "greedy"], "problem_rating": "1600", "solved_by": "x1470"},
{"url": "https://codeforces.com//problemset/problem/291/C", "name": "Network Mask", "tags": ["*special problem", "bitmasks", "brute force", "implementation"], "problem_rating": "1600", "solved_by": "x1670"},
{"url": "https://codeforces.com//problemset/problem/291/B", "name": "Command Line Arguments", "tags": ["*special problem", "implementation", "strings"], "problem_rating": "1300", "solved_by": "x3021"},
{"url": "https://codeforces.com//problemset/problem/291/A", "name": "Spyke Talks", "tags": ["*special problem", "implementation", "sortings"], "problem_rating": "800", "solved_by": "x6035"},
{"url": "https://codeforces.com//problemset/problem/290/F", "name": "Greedy Petya", "tags": ["*special problem", "dfs and similar", "graphs", "greedy"], "problem_rating": "2800", "solved_by": "x130"},
{"url": "https://codeforces.com//problemset/problem/290/E", "name": "HQ", "tags": ["*special problem", "constructive algorithms"], "problem_rating": "2500", "solved_by": "x198"},
{"url": "https://codeforces.com//problemset/problem/290/D", "name": "Orange", "tags": ["*special problem", "implementation"], "problem_rating": "1400", "solved_by": "x1789"},
{"url": "https://codeforces.com//problemset/problem/290/C", "name": "WTF?", "tags": ["*special problem", "graph matchings", "implementation", "trees"], "problem_rating": "1700", "solved_by": "x1529"},
{"url": "https://codeforces.com//problemset/problem/290/B", "name": "QR code", "tags": ["*special problem", "implementation"], "problem_rating": "1500", "solved_by": "x2417"},
{"url": "https://codeforces.com//problemset/problem/290/A", "name": "Mysterious strings", "tags": ["*special problem", "implementation"], "problem_rating": "1400", "solved_by": "x2979"},
{"url": "https://codeforces.com//problemset/problem/289/B", "name": "Polo the Penguin and Matrix", "tags": ["brute force", "dp", "implementation", "sortings", "ternary search"], "problem_rating": "1400", "solved_by": "x17041"},
{"url": "https://codeforces.com//problemset/problem/289/A", "name": "Polo the Penguin and Segments", "tags": ["brute force", "implementation"], "problem_rating": "1100", "solved_by": "x8968"},
{"url": "https://codeforces.com//problemset/problem/288/E", "name": "Polo the Penguin and Lucky Numbers", "tags": ["dp", "implementation", "math"], "problem_rating": "2800", "solved_by": "x288"},
{"url": "https://codeforces.com//problemset/problem/288/D", "name": "Polo the Penguin and Trees", "tags": ["combinatorics", "dfs and similar", "trees"], "problem_rating": "2400", "solved_by": "x737"},
{"url": "https://codeforces.com//problemset/problem/288/C", "name": "Polo the Penguin and XOR operation", "tags": ["implementation", "math"], "problem_rating": "1700", "solved_by": "x2268"},
{"url": "https://codeforces.com//problemset/problem/288/B", "name": "Polo the Penguin and Houses", "tags": ["combinatorics"], "problem_rating": "1500", "solved_by": "x2893"},
{"url": "https://codeforces.com//problemset/problem/288/A", "name": "Polo the Penguin and Strings", "tags": ["greedy"], "problem_rating": "1300", "solved_by": "x6461"},
{"url": "https://codeforces.com//problemset/problem/287/B", "name": "Pipeline", "tags": ["binary search", "math"], "problem_rating": "1700", "solved_by": "x9292"},
{"url": "https://codeforces.com//problemset/problem/287/A", "name": "IQ Test", "tags": ["brute force", "implementation"], "problem_rating": "1100", "solved_by": "x19290"},
{"url": "https://codeforces.com//problemset/problem/286/E", "name": "Ladies' Shop", "tags": ["constructive algorithms", "fft", "math"], "problem_rating": "2800", "solved_by": "x826"},
{"url": "https://codeforces.com//problemset/problem/286/D", "name": "Tourists", "tags": ["data structures", "sortings"], "problem_rating": "2600", "solved_by": "x374"},
{"url": "https://codeforces.com//problemset/problem/286/C", "name": "Main Sequence", "tags": ["greedy", "implementation"], "problem_rating": "2100", "solved_by": "x1478"},
{"url": "https://codeforces.com//problemset/problem/286/B", "name": "Shifting", "tags": ["implementation"], "problem_rating": "2200", "solved_by": "x1110"},
{"url": "https://codeforces.com//problemset/problem/286/A", "name": "Lucky Permutation", "tags": ["constructive algorithms", "math"], "problem_rating": "1400", "solved_by": "x3138"},
{"url": "https://codeforces.com//problemset/problem/285/E", "name": "Positions in Permutations", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2600", "solved_by": "x964"},
{"url": "https://codeforces.com//problemset/problem/285/D", "name": "Permutation Sum", "tags": ["bitmasks", "combinatorics", "dp", "implementation", "meet-in-the-middle"], "problem_rating": "1900", "solved_by": "x1513"},
{"url": "https://codeforces.com//problemset/problem/285/C", "name": "Building Permutation", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "1200", "solved_by": "x22836"},
{"url": "https://codeforces.com//problemset/problem/285/B", "name": "Find Marble", "tags": ["implementation"], "problem_rating": "1200", "solved_by": "x14887"},
{"url": "https://codeforces.com//problemset/problem/285/A", "name": "Slightly Decreasing Permutations", "tags": ["greedy", "implementation"], "problem_rating": "1100", "solved_by": "x13224"},
{"url": "https://codeforces.com//problemset/problem/284/B", "name": "Cows and Poker Game", "tags": ["brute force", "implementation"], "problem_rating": "1000", "solved_by": "x6721"},
{"url": "https://codeforces.com//problemset/problem/284/A", "name": "Cows and Primitive Roots", "tags": ["implementation", "math", "number theory"], "problem_rating": "1400", "solved_by": "x6490"},
{"url": "https://codeforces.com//problemset/problem/283/E", "name": "Cow Tennis Tournament", "tags": ["combinatorics", "data structures", "math"], "problem_rating": "2800", "solved_by": "x727"},
{"url": "https://codeforces.com//problemset/problem/283/D", "name": "Cows and Cool Sequences", "tags": ["dp", "math", "number theory"], "problem_rating": "2400", "solved_by": "x529"},
{"url": "https://codeforces.com//problemset/problem/283/C", "name": "Coin Troubles", "tags": ["dp"], "problem_rating": "2100", "solved_by": "x1419"},
{"url": "https://codeforces.com//problemset/problem/283/B", "name": "Cow Program", "tags": ["dfs and similar", "dp", "graphs"], "problem_rating": "1700", "solved_by": "x3632"},
{"url": "https://codeforces.com//problemset/problem/283/A", "name": "Cows and Sequence", "tags": ["constructive algorithms", "data structures", "implementation"], "problem_rating": "1600", "solved_by": "x6517"},
{"url": "https://codeforces.com//problemset/problem/282/E", "name": "Sausage Maximization", "tags": ["bitmasks", "data structures", "trees"], "problem_rating": "2200", "solved_by": "x3512"},
{"url": "https://codeforces.com//problemset/problem/282/D", "name": "Yet Another Number Game", "tags": ["dp", "games"], "problem_rating": "2100", "solved_by": "x1396"},
{"url": "https://codeforces.com//problemset/problem/282/C", "name": "XOR and OR", "tags": ["constructive algorithms", "implementation", "math"], "problem_rating": "1500", "solved_by": "x9233"},
{"url": "https://codeforces.com//problemset/problem/282/B", "name": "Painting Eggs", "tags": ["greedy", "math"], "problem_rating": "1500", "solved_by": "x12753"},
{"url": "https://codeforces.com//problemset/problem/282/A", "name": "Bit++", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x247399"},
{"url": "https://codeforces.com//problemset/problem/281/B", "name": "Nearest Fraction", "tags": ["brute force", "implementation", "two pointers"], "problem_rating": "1700", "solved_by": "x2953"},
{"url": "https://codeforces.com//problemset/problem/281/A", "name": "Word Capitalization", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x202667"},
{"url": "https://codeforces.com//problemset/problem/280/E", "name": "Sequence Transformation", "tags": ["brute force", "data structures", "dp", "implementation", "math"], "problem_rating": "3000", "solved_by": "x203"},
{"url": "https://codeforces.com//problemset/problem/280/D", "name": "k-Maximum Subsequence Sum", "tags": ["data structures", "flows", "graphs", "implementation"], "problem_rating": "2800", "solved_by": "x1238"},
{"url": "https://codeforces.com//problemset/problem/280/C", "name": "Game on Tree", "tags": ["implementation", "math", "probabilities", "trees"], "problem_rating": "2200", "solved_by": "x3816"},
{"url": "https://codeforces.com//problemset/problem/280/B", "name": "Maximum Xor Secondary", "tags": ["data structures", "implementation", "two pointers"], "problem_rating": "1800", "solved_by": "x4484"},
{"url": "https://codeforces.com//problemset/problem/280/A", "name": "Rectangle Puzzle", "tags": ["geometry"], "problem_rating": "2000", "solved_by": "x1453"},
{"url": "https://codeforces.com//problemset/problem/279/E", "name": "Beautiful Decomposition", "tags": ["dp", "games", "greedy", "number theory"], "problem_rating": "1900", "solved_by": "x1420"},
{"url": "https://codeforces.com//problemset/problem/279/D", "name": "The Minimum Number of Variables", "tags": ["bitmasks", "dp"], "problem_rating": "2200", "solved_by": "x719"},
{"url": "https://codeforces.com//problemset/problem/279/C", "name": "Ladder", "tags": ["dp", "implementation", "two pointers"], "problem_rating": "1700", "solved_by": "x8149"},
{"url": "https://codeforces.com//problemset/problem/279/B", "name": "Books", "tags": ["binary search", "brute force", "implementation", "two pointers"], "problem_rating": "1400", "solved_by": "x50213"},
{"url": "https://codeforces.com//problemset/problem/279/A", "name": "Point on Spiral", "tags": ["brute force", "geometry", "implementation"], "problem_rating": "1400", "solved_by": "x5550"},
{"url": "https://codeforces.com//problemset/problem/278/B", "name": "New Problem", "tags": ["brute force", "strings"], "problem_rating": "1500", "solved_by": "x3437"},
{"url": "https://codeforces.com//problemset/problem/278/A", "name": "Circle Line", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x11559"},
{"url": "https://codeforces.com//problemset/problem/277/E", "name": "Binary Tree on Plane", "tags": ["flows", "trees"], "problem_rating": "2400", "solved_by": "x1255"},
{"url": "https://codeforces.com//problemset/problem/277/D", "name": "Google Code Jam", "tags": ["dp", "probabilities"], "problem_rating": "2800", "solved_by": "x332"},
{"url": "https://codeforces.com//problemset/problem/277/C", "name": "Game", "tags": ["games", "implementation"], "problem_rating": "2400", "solved_by": "x448"},
{"url": "https://codeforces.com//problemset/problem/277/B", "name": "Set of Points", "tags": ["constructive algorithms", "geometry"], "problem_rating": "2300", "solved_by": "x791"},
{"url": "https://codeforces.com//problemset/problem/277/A", "name": "Learning Languages", "tags": ["dfs and similar", "dsu"], "problem_rating": "1400", "solved_by": "x18457"},
{"url": "https://codeforces.com//problemset/problem/276/E", "name": "Little Girl and Problem on Trees", "tags": ["data structures", "graphs", "trees"], "problem_rating": "2100", "solved_by": "x1577"},
{"url": "https://codeforces.com//problemset/problem/276/D", "name": "Little Girl and Maximum XOR", "tags": ["bitmasks", "dp", "greedy", "implementation", "math"], "problem_rating": "1700", "solved_by": "x13432"},
{"url": "https://codeforces.com//problemset/problem/276/C", "name": "Little Girl and Maximum Sum", "tags": ["data structures", "greedy", "implementation", "sortings"], "problem_rating": "1500", "solved_by": "x25185"},
{"url": "https://codeforces.com//problemset/problem/276/B", "name": "Little Girl and Game", "tags": ["games", "greedy"], "problem_rating": "1300", "solved_by": "x27905"},
{"url": "https://codeforces.com//problemset/problem/276/A", "name": "Lunch Rush", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x27174"},
{"url": "https://codeforces.com//problemset/problem/275/B", "name": "Convex Shape", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1700", "solved_by": "x2800"},
{"url": "https://codeforces.com//problemset/problem/275/A", "name": "Lights Out", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x29336"},
{"url": "https://codeforces.com//problemset/problem/274/E", "name": "Mirror Room", "tags": ["data structures", "implementation"], "problem_rating": "3000", "solved_by": "x306"},
{"url": "https://codeforces.com//problemset/problem/274/D", "name": "Lovely Matrix", "tags": ["dfs and similar", "graphs", "greedy", "sortings"], "problem_rating": "2200", "solved_by": "x1017"},
{"url": "https://codeforces.com//problemset/problem/274/C", "name": "The Last Hole!", "tags": ["brute force", "geometry"], "problem_rating": "2600", "solved_by": "x348"},
{"url": "https://codeforces.com//problemset/problem/274/B", "name": "Zero Tree", "tags": ["dfs and similar", "dp", "greedy", "trees"], "problem_rating": "1800", "solved_by": "x4944"},
{"url": "https://codeforces.com//problemset/problem/274/A", "name": "k-Multiple Free Set", "tags": ["binary search", "greedy", "sortings"], "problem_rating": "1500", "solved_by": "x9948"},
{"url": "https://codeforces.com//problemset/problem/273/E", "name": "Dima and Game", "tags": ["dp", "games"], "problem_rating": "2600", "solved_by": "x364"},
{"url": "https://codeforces.com//problemset/problem/273/D", "name": "Dima and Figure", "tags": ["dp"], "problem_rating": "2400", "solved_by": "x391"},
{"url": "https://codeforces.com//problemset/problem/272/E", "name": "Dima and Horses", "tags": ["combinatorics", "constructive algorithms", "graphs"], "problem_rating": "2200", "solved_by": "x1210"},
{"url": "https://codeforces.com//problemset/problem/272/D", "name": "Dima and Two Sequences", "tags": ["combinatorics", "math", "sortings"], "problem_rating": "1600", "solved_by": "x2601"},
{"url": "https://codeforces.com//problemset/problem/272/C", "name": "Dima and Staircase", "tags": ["data structures", "implementation"], "problem_rating": "1500", "solved_by": "x6725"},
{"url": "https://codeforces.com//problemset/problem/272/B", "name": "Dima and Sequence", "tags": ["implementation", "math"], "problem_rating": "1400", "solved_by": "x3979"},
{"url": "https://codeforces.com//problemset/problem/272/A", "name": "Dima and Friends", "tags": ["implementation", "math"], "problem_rating": "1000", "solved_by": "x24031"},
{"url": "https://codeforces.com//problemset/problem/271/E", "name": "Three Horses", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "2200", "solved_by": "x482"},
{"url": "https://codeforces.com//problemset/problem/271/D", "name": "Good Substrings", "tags": ["data structures", "strings"], "problem_rating": "1800", "solved_by": "x10780"},
{"url": "https://codeforces.com//problemset/problem/271/C", "name": "Secret", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1500", "solved_by": "x2921"},
{"url": "https://codeforces.com//problemset/problem/271/B", "name": "Prime Matrix", "tags": ["binary search", "brute force", "math", "number theory"], "problem_rating": "1300", "solved_by": "x12721"},
{"url": "https://codeforces.com//problemset/problem/271/A", "name": "Beautiful Year", "tags": ["brute force"], "problem_rating": "800", "solved_by": "x132035"},
{"url": "https://codeforces.com//problemset/problem/270/B", "name": "Multithreading", "tags": ["data structures", "greedy", "implementation"], "problem_rating": "1400", "solved_by": "x4106"},
{"url": "https://codeforces.com//problemset/problem/270/A", "name": "Fancy Fence", "tags": ["geometry", "implementation", "math"], "problem_rating": "1100", "solved_by": "x44406"},
{"url": "https://codeforces.com//problemset/problem/269/E", "name": "String Theory", "tags": ["geometry", "math", "strings"], "problem_rating": "3100", "solved_by": "x108"},
{"url": "https://codeforces.com//problemset/problem/269/D", "name": "Maximum Waterfall", "tags": ["data structures", "dp", "graphs", "sortings"], "problem_rating": "2600", "solved_by": "x446"},
{"url": "https://codeforces.com//problemset/problem/269/C", "name": "Flawed Flow", "tags": ["constructive algorithms", "flows", "graphs", "greedy"], "problem_rating": "2100", "solved_by": "x1629"},
{"url": "https://codeforces.com//problemset/problem/269/B", "name": "Greenhouse Effect", "tags": ["dp"], "problem_rating": "1700", "solved_by": "x6230"},
{"url": "https://codeforces.com//problemset/problem/269/A", "name": "Magical Boxes", "tags": ["greedy", "math"], "problem_rating": "1600", "solved_by": "x3496"},
{"url": "https://codeforces.com//problemset/problem/268/E", "name": "Playlist", "tags": ["math", "probabilities", "sortings"], "problem_rating": "2100", "solved_by": "x982"},
{"url": "https://codeforces.com//problemset/problem/268/D", "name": "Wall Bars", "tags": ["dp"], "problem_rating": "2300", "solved_by": "x504"},
{"url": "https://codeforces.com//problemset/problem/268/C", "name": "Beautiful Sets of Points", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1500", "solved_by": "x13511"},
{"url": "https://codeforces.com//problemset/problem/268/B", "name": "Buttons", "tags": ["implementation", "math"], "problem_rating": "1000", "solved_by": "x31624"},
{"url": "https://codeforces.com//problemset/problem/268/A", "name": "Games", "tags": ["brute force"], "problem_rating": "800", "solved_by": "x83600"},
{"url": "https://codeforces.com//problemset/problem/267/C", "name": "Berland Traffic", "tags": ["math", "matrices"], "problem_rating": "2700", "solved_by": "x160"},
{"url": "https://codeforces.com//problemset/problem/267/B", "name": "Dominoes", "tags": ["dfs and similar", "graphs"], "problem_rating": "2000", "solved_by": "x621"},
{"url": "https://codeforces.com//problemset/problem/267/A", "name": "Subtractions", "tags": ["math", "number theory"], "problem_rating": "900", "solved_by": "x7320"},
{"url": "https://codeforces.com//problemset/problem/266/E", "name": "More Queries to Array...", "tags": ["data structures", "math"], "problem_rating": "2500", "solved_by": "x772"},
{"url": "https://codeforces.com//problemset/problem/266/D", "name": "BerDonalds", "tags": ["graphs", "math", "shortest paths"], "problem_rating": "2400", "solved_by": "x759"},
{"url": "https://codeforces.com//problemset/problem/266/C", "name": "Below the Diagonal", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "2100", "solved_by": "x1340"},
{"url": "https://codeforces.com//problemset/problem/266/B", "name": "Queue at the School", "tags": ["constructive algorithms", "graph matchings", "implementation", "shortest paths"], "problem_rating": "800", "solved_by": "x130456"},
{"url": "https://codeforces.com//problemset/problem/266/A", "name": "Stones on the Table", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x183547"},
{"url": "https://codeforces.com//problemset/problem/265/B", "name": "Roadside Trees (Simplified Edition)", "tags": ["greedy", "implementation"], "problem_rating": "1000", "solved_by": "x17039"},
{"url": "https://codeforces.com//problemset/problem/265/A", "name": "Colorful Stones (Simplified Edition)", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x35489"},
{"url": "https://codeforces.com//problemset/problem/264/E", "name": "Roadside Trees", "tags": ["data structures", "dp"], "problem_rating": "3000", "solved_by": "x427"},
{"url": "https://codeforces.com//problemset/problem/264/D", "name": "Colorful Stones", "tags": ["dp", "two pointers"], "problem_rating": "2500", "solved_by": "x412"},
{"url": "https://codeforces.com//problemset/problem/264/C", "name": "Choosing Balls", "tags": ["dp"], "problem_rating": "2000", "solved_by": "x2808"},
{"url": "https://codeforces.com//problemset/problem/264/B", "name": "Good Sequences", "tags": ["dp", "number theory"], "problem_rating": "1500", "solved_by": "x9895"},
{"url": "https://codeforces.com//problemset/problem/264/A", "name": "Escape from Stones", "tags": ["constructive algorithms", "data structures", "implementation", "two pointers"], "problem_rating": "1200", "solved_by": "x10679"},
{"url": "https://codeforces.com//problemset/problem/263/E", "name": "Rhombus", "tags": ["brute force", "data structures", "dp"], "problem_rating": "2500", "solved_by": "x397"},
{"url": "https://codeforces.com//problemset/problem/263/D", "name": "Cycle in Graph", "tags": ["dfs and similar", "graphs"], "problem_rating": "1800", "solved_by": "x3396"},
{"url": "https://codeforces.com//problemset/problem/263/C", "name": "Circle of Numbers", "tags": ["brute force", "dfs and similar", "implementation"], "problem_rating": "2000", "solved_by": "x1064"},
{"url": "https://codeforces.com//problemset/problem/263/B", "name": "Squares", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "900", "solved_by": "x8818"},
{"url": "https://codeforces.com//problemset/problem/263/A", "name": "Beautiful Matrix", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x233588"},
{"url": "https://codeforces.com//problemset/problem/262/B", "name": "Roma and Changing Signs", "tags": ["greedy"], "problem_rating": "1200", "solved_by": "x11144"},
{"url": "https://codeforces.com//problemset/problem/262/A", "name": "Roma and Lucky Numbers", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x19483"},
{"url": "https://codeforces.com//problemset/problem/261/E", "name": "Maxim and Calculator", "tags": ["brute force", "dp", "two pointers"], "problem_rating": "2800", "solved_by": "x408"},
{"url": "https://codeforces.com//problemset/problem/261/D", "name": "Maxim and Increasing Subsequence", "tags": ["dp"], "problem_rating": "2600", "solved_by": "x557"},
{"url": "https://codeforces.com//problemset/problem/261/C", "name": "Maxim and Matrix", "tags": ["constructive algorithms", "dp", "math"], "problem_rating": "2000", "solved_by": "x765"},
{"url": "https://codeforces.com//problemset/problem/261/B", "name": "Maxim and Restaurant", "tags": ["dp", "math", "probabilities"], "problem_rating": "1900", "solved_by": "x1379"},
{"url": "https://codeforces.com//problemset/problem/261/A", "name": "Maxim and Discounts", "tags": ["greedy", "sortings"], "problem_rating": "1400", "solved_by": "x5129"},
{"url": "https://codeforces.com//problemset/problem/260/E", "name": "Dividing Kingdom", "tags": ["binary search", "brute force", "data structures"], "problem_rating": "2500", "solved_by": "x453"},
{"url": "https://codeforces.com//problemset/problem/260/D", "name": "Black and White Tree", "tags": ["constructive algorithms", "dsu", "graphs", "greedy", "trees"], "problem_rating": "2100", "solved_by": "x1520"},
{"url": "https://codeforces.com//problemset/problem/260/C", "name": "Balls and Boxes", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "1700", "solved_by": "x2944"},
{"url": "https://codeforces.com//problemset/problem/260/B", "name": "Ancient Prophesy", "tags": ["brute force", "implementation", "strings"], "problem_rating": "1600", "solved_by": "x3785"},
{"url": "https://codeforces.com//problemset/problem/260/A", "name": "Adding Digits", "tags": ["implementation", "math"], "problem_rating": "1400", "solved_by": "x14376"},
{"url": "https://codeforces.com//problemset/problem/259/B", "name": "Little Elephant and Magic Square", "tags": ["brute force", "implementation"], "problem_rating": "1100", "solved_by": "x13832"},
{"url": "https://codeforces.com//problemset/problem/259/A", "name": "Little Elephant and Chess", "tags": ["brute force", "strings"], "problem_rating": "1000", "solved_by": "x9002"},
{"url": "https://codeforces.com//problemset/problem/258/E", "name": "Little Elephant and Tree", "tags": ["data structures", "dfs and similar", "trees"], "problem_rating": "2400", "solved_by": "x1079"},
{"url": "https://codeforces.com//problemset/problem/258/D", "name": "Little Elephant and Broken Sorting", "tags": ["dp", "math", "probabilities"], "problem_rating": "2600", "solved_by": "x1240"},
{"url": "https://codeforces.com//problemset/problem/258/C", "name": "Little Elephant and LCM", "tags": ["binary search", "combinatorics", "dp", "math"], "problem_rating": "2000", "solved_by": "x1771"},
{"url": "https://codeforces.com//problemset/problem/258/B", "name": "Little Elephant and Elections", "tags": ["brute force", "combinatorics", "dp"], "problem_rating": "1900", "solved_by": "x1429"},
{"url": "https://codeforces.com//problemset/problem/258/A", "name": "Little Elephant and Bits", "tags": ["greedy", "math"], "problem_rating": "1100", "solved_by": "x22465"},
{"url": "https://codeforces.com//problemset/problem/257/E", "name": "Greedy Elevator", "tags": ["data structures", "implementation"], "problem_rating": "2200", "solved_by": "x281"},
{"url": "https://codeforces.com//problemset/problem/257/D", "name": "Sum", "tags": ["greedy", "math"], "problem_rating": "1900", "solved_by": "x1561"},
{"url": "https://codeforces.com//problemset/problem/257/C", "name": "View Angle", "tags": ["brute force", "geometry", "math"], "problem_rating": "1800", "solved_by": "x4248"},
{"url": "https://codeforces.com//problemset/problem/257/B", "name": "Playing Cubes", "tags": ["games", "greedy", "implementation"], "problem_rating": "1300", "solved_by": "x6962"},
{"url": "https://codeforces.com//problemset/problem/257/A", "name": "Sockets", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "1100", "solved_by": "x6434"},
{"url": "https://codeforces.com//problemset/problem/256/E", "name": "Lucky Arrays", "tags": ["data structures"], "problem_rating": "2400", "solved_by": "x659"},
{"url": "https://codeforces.com//problemset/problem/256/D", "name": "Liars and Serge", "tags": ["dp"], "problem_rating": "2700", "solved_by": "x256"},
{"url": "https://codeforces.com//problemset/problem/255/E", "name": "Furlo and Rublo and Game", "tags": ["games", "implementation", "math"], "problem_rating": "2200", "solved_by": "x836"},
{"url": "https://codeforces.com//problemset/problem/255/D", "name": "Mr. Bender and Square", "tags": ["binary search", "implementation", "math"], "problem_rating": "1800", "solved_by": "x1941"},
{"url": "https://codeforces.com//problemset/problem/255/C", "name": "Almost Arithmetical Progression", "tags": ["brute force", "dp"], "problem_rating": "1500", "solved_by": "x4667"},
{"url": "https://codeforces.com//problemset/problem/255/B", "name": "Code Parsing", "tags": ["implementation"], "problem_rating": "1200", "solved_by": "x4914"},
{"url": "https://codeforces.com//problemset/problem/255/A", "name": "Greg's Workout", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x28091"},
{"url": "https://codeforces.com//problemset/problem/254/E", "name": "Dormitory", "tags": ["dp", "implementation"], "problem_rating": "2100", "solved_by": "x662"},
{"url": "https://codeforces.com//problemset/problem/254/D", "name": "Rats", "tags": ["brute force", "dfs and similar", "graphs", "implementation", "shortest paths"], "problem_rating": "2300", "solved_by": "x529"},
{"url": "https://codeforces.com//problemset/problem/254/C", "name": "Anagram", "tags": ["greedy", "strings"], "problem_rating": "1800", "solved_by": "x1481"},
{"url": "https://codeforces.com//problemset/problem/254/B", "name": "Jury Size", "tags": ["brute force", "implementation"], "problem_rating": "1500", "solved_by": "x2136"},
{"url": "https://codeforces.com//problemset/problem/254/A", "name": "Cards with Numbers", "tags": ["constructive algorithms", "sortings"], "problem_rating": "1200", "solved_by": "x6942"},
{"url": "https://codeforces.com//problemset/problem/253/E", "name": "Printer", "tags": ["binary search", "data structures", "implementation", "sortings"], "problem_rating": "2200", "solved_by": "x525"},
{"url": "https://codeforces.com//problemset/problem/253/D", "name": "Table with Letters - 2", "tags": ["brute force", "two pointers"], "problem_rating": "2000", "solved_by": "x825"},
{"url": "https://codeforces.com//problemset/problem/253/C", "name": "Text Editor", "tags": ["data structures", "dfs and similar", "graphs", "greedy", "shortest paths"], "problem_rating": "1600", "solved_by": "x2557"},
{"url": "https://codeforces.com//problemset/problem/253/B", "name": "Physics Practical", "tags": ["binary search", "dp", "sortings", "two pointers"], "problem_rating": "1400", "solved_by": "x10490"},
{"url": "https://codeforces.com//problemset/problem/253/A", "name": "Boys and Girls", "tags": ["greedy"], "problem_rating": "1100", "solved_by": "x11082"},
{"url": "https://codeforces.com//problemset/problem/252/B", "name": "Unsorting Array", "tags": ["brute force", "sortings"], "problem_rating": "1800", "solved_by": "x1701"},
{"url": "https://codeforces.com//problemset/problem/252/A", "name": "Little Xor", "tags": ["brute force", "implementation"], "problem_rating": "1100", "solved_by": "x5218"},
{"url": "https://codeforces.com//problemset/problem/251/E", "name": "Tree and Table", "tags": ["dfs and similar", "dp", "implementation", "trees"], "problem_rating": "3000", "solved_by": "x169"},
{"url": "https://codeforces.com//problemset/problem/251/D", "name": "Two Sets", "tags": ["bitmasks", "math"], "problem_rating": "2700", "solved_by": "x470"},
{"url": "https://codeforces.com//problemset/problem/251/C", "name": "Number Transformation", "tags": ["dp", "greedy", "number theory"], "problem_rating": "2000", "solved_by": "x1013"},
{"url": "https://codeforces.com//problemset/problem/251/B", "name": "Playing with Permutations", "tags": ["implementation", "math"], "problem_rating": "1800", "solved_by": "x1260"},
{"url": "https://codeforces.com//problemset/problem/251/A", "name": "Points on Line", "tags": ["binary search", "combinatorics", "two pointers"], "problem_rating": "1300", "solved_by": "x17090"},
{"url": "https://codeforces.com//problemset/problem/250/E", "name": "Mad Joe", "tags": ["brute force"], "problem_rating": "2000", "solved_by": "x461"},
{"url": "https://codeforces.com//problemset/problem/250/D", "name": "Building Bridge", "tags": ["geometry", "ternary search", "two pointers"], "problem_rating": "1900", "solved_by": "x882"},
{"url": "https://codeforces.com//problemset/problem/250/C", "name": "Movie Critics", "tags": ["greedy"], "problem_rating": "1600", "solved_by": "x1901"},
{"url": "https://codeforces.com//problemset/problem/250/B", "name": "Restoring IPv6", "tags": ["implementation", "strings"], "problem_rating": "1500", "solved_by": "x1967"},
{"url": "https://codeforces.com//problemset/problem/250/A", "name": "Paper Work", "tags": ["greedy"], "problem_rating": "1000", "solved_by": "x4037"},
{"url": "https://codeforces.com//problemset/problem/249/E", "name": "Endless Matrix", "tags": ["math"], "problem_rating": "2600", "solved_by": "x301"},
{"url": "https://codeforces.com//problemset/problem/249/D", "name": "Donkey and Stars", "tags": ["data structures", "dp", "geometry", "math", "sortings"], "problem_rating": "2700", "solved_by": "x450"},
{"url": "https://codeforces.com//problemset/problem/248/E", "name": "Piglet's Birthday", "tags": ["dp", "math", "probabilities"], "problem_rating": "2600", "solved_by": "x571"},
{"url": "https://codeforces.com//problemset/problem/248/D", "name": "Sweets for Everyone!", "tags": ["binary search", "greedy", "implementation"], "problem_rating": "2300", "solved_by": "x488"},
{"url": "https://codeforces.com//problemset/problem/248/C", "name": "Robo-Footballer", "tags": ["binary search", "geometry"], "problem_rating": "2000", "solved_by": "x806"},
{"url": "https://codeforces.com//problemset/problem/248/B", "name": "Chilly Willy", "tags": ["math", "number theory"], "problem_rating": "1400", "solved_by": "x5251"},
{"url": "https://codeforces.com//problemset/problem/248/A", "name": "Cupboards", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x21815"},
{"url": "https://codeforces.com//problemset/problem/246/E", "name": "Blood Cousins Return", "tags": ["binary search", "data structures", "dfs and similar", "dp", "sortings"], "problem_rating": "2400", "solved_by": "x3080"},
{"url": "https://codeforces.com//problemset/problem/246/D", "name": "Colorful Graph", "tags": ["brute force", "dfs and similar", "graphs"], "problem_rating": "1600", "solved_by": "x9319"},
{"url": "https://codeforces.com//problemset/problem/246/C", "name": "Beauty Pageant", "tags": ["brute force", "constructive algorithms", "greedy"], "problem_rating": "1600", "solved_by": "x2613"},
{"url": "https://codeforces.com//problemset/problem/246/B", "name": "Increase and Decrease", "tags": ["greedy", "math"], "problem_rating": "1300", "solved_by": "x11110"},
{"url": "https://codeforces.com//problemset/problem/246/A", "name": "Buggy Sorting", "tags": ["constructive algorithms", "greedy", "sortings"], "problem_rating": "900", "solved_by": "x9155"},
{"url": "https://codeforces.com//problemset/problem/245/H", "name": "Queries for Number of Palindromes", "tags": ["dp", "hashing", "strings"], "problem_rating": "1800", "solved_by": "x6313"},
{"url": "https://codeforces.com//problemset/problem/245/G", "name": "Suggested Friends", "tags": ["brute force", "graphs"], "problem_rating": "2200", "solved_by": "x428"},
{"url": "https://codeforces.com//problemset/problem/245/F", "name": "Log Stream Analysis", "tags": ["binary search", "brute force", "implementation", "strings"], "problem_rating": "2000", "solved_by": "x872"},
{"url": "https://codeforces.com//problemset/problem/245/E", "name": "Mishap in Club", "tags": ["greedy", "implementation"], "problem_rating": "1400", "solved_by": "x3247"},
{"url": "https://codeforces.com//problemset/problem/245/D", "name": "Restoring Table", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1500", "solved_by": "x2265"},
{"url": "https://codeforces.com//problemset/problem/245/C", "name": "Game with Coins", "tags": ["greedy"], "problem_rating": "1700", "solved_by": "x1530"},
{"url": "https://codeforces.com//problemset/problem/245/B", "name": "Internet Address", "tags": ["implementation", "strings"], "problem_rating": "1100", "solved_by": "x5166"},
{"url": "https://codeforces.com//problemset/problem/245/A", "name": "System Administrator", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x8337"},
{"url": "https://codeforces.com//problemset/problem/244/B", "name": "Undoubtedly Lucky Numbers", "tags": ["bitmasks", "brute force", "dfs and similar"], "problem_rating": "1600", "solved_by": "x4427"},
{"url": "https://codeforces.com//problemset/problem/244/A", "name": "Dividing Orange", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x7818"},
{"url": "https://codeforces.com//problemset/problem/243/E", "name": "Matrix", "tags": ["data structures"], "problem_rating": "3000", "solved_by": "x188"},
{"url": "https://codeforces.com//problemset/problem/243/D", "name": "Cubes", "tags": ["data structures", "dp", "geometry", "two pointers"], "problem_rating": "2700", "solved_by": "x211"},
{"url": "https://codeforces.com//problemset/problem/243/C", "name": "Colorado Potato Beetle", "tags": ["dfs and similar", "implementation"], "problem_rating": "2200", "solved_by": "x524"},
{"url": "https://codeforces.com//problemset/problem/243/B", "name": "Hydra", "tags": ["graphs", "sortings"], "problem_rating": "2000", "solved_by": "x1213"},
{"url": "https://codeforces.com//problemset/problem/243/A", "name": "The Brand New Function", "tags": ["bitmasks"], "problem_rating": "1600", "solved_by": "x3850"},
{"url": "https://codeforces.com//problemset/problem/242/E", "name": "XOR on Segment", "tags": ["bitmasks", "data structures"], "problem_rating": "2000", "solved_by": "x8781"},
{"url": "https://codeforces.com//problemset/problem/242/D", "name": "Dispute", "tags": ["dfs and similar", "graphs", "greedy"], "problem_rating": "2100", "solved_by": "x1856"},
{"url": "https://codeforces.com//problemset/problem/242/C", "name": "King's Path", "tags": ["dfs and similar", "graphs", "hashing", "shortest paths"], "problem_rating": "1800", "solved_by": "x8328"},
{"url": "https://codeforces.com//problemset/problem/242/B", "name": "Big Segment", "tags": ["implementation", "sortings"], "problem_rating": "1100", "solved_by": "x15469"},
{"url": "https://codeforces.com//problemset/problem/242/A", "name": "Heads or Tails", "tags": ["brute force", "implementation"], "problem_rating": "1100", "solved_by": "x6314"},
{"url": "https://codeforces.com//problemset/problem/241/G", "name": "Challenging Balloons", "tags": ["constructive algorithms"], "problem_rating": "1900", "solved_by": "x543"},
{"url": "https://codeforces.com//problemset/problem/241/F", "name": "Race", "tags": ["brute force", "implementation"], "problem_rating": "2300", "solved_by": "x261"},
{"url": "https://codeforces.com//problemset/problem/241/E", "name": "Flights", "tags": ["graphs", "shortest paths"], "problem_rating": "2600", "solved_by": "x1018"},
{"url": "https://codeforces.com//problemset/problem/241/D", "name": "Numbers", "tags": [], "problem_rating": "2900", "solved_by": "x365"},
{"url": "https://codeforces.com//problemset/problem/241/C", "name": "Mirror Box", "tags": ["geometry", "implementation"], "problem_rating": "2000", "solved_by": "x509"},
{"url": "https://codeforces.com//problemset/problem/241/B", "name": "Friends", "tags": ["binary search", "bitmasks", "data structures", "math"], "problem_rating": "2700", "solved_by": "x772"},
{"url": "https://codeforces.com//problemset/problem/241/A", "name": "Old Peykan", "tags": ["greedy"], "problem_rating": "1300", "solved_by": "x2217"},
{"url": "https://codeforces.com//problemset/problem/240/F", "name": "TorCoder", "tags": ["data structures"], "problem_rating": "2600", "solved_by": "x1879"},
{"url": "https://codeforces.com//problemset/problem/240/E", "name": "Road Repairs", "tags": ["dfs and similar", "graphs", "greedy"], "problem_rating": "2800", "solved_by": "x354"},
{"url": "https://codeforces.com//problemset/problem/239/B", "name": "Easy Tape Programming", "tags": ["brute force", "implementation"], "problem_rating": "1500", "solved_by": "x1365"},
{"url": "https://codeforces.com//problemset/problem/239/A", "name": "Two Bags of Potatoes", "tags": ["greedy", "implementation", "math"], "problem_rating": "1200", "solved_by": "x18454"},
{"url": "https://codeforces.com//problemset/problem/238/E", "name": "Meeting Her", "tags": ["dp", "graphs", "shortest paths"], "problem_rating": "2600", "solved_by": "x349"},
{"url": "https://codeforces.com//problemset/problem/238/D", "name": "Tape Programming", "tags": ["data structures", "implementation"], "problem_rating": "2900", "solved_by": "x247"},
{"url": "https://codeforces.com//problemset/problem/238/C", "name": "World Eater Brothers", "tags": ["dfs and similar", "dp", "greedy", "trees"], "problem_rating": "2100", "solved_by": "x1218"},
{"url": "https://codeforces.com//problemset/problem/238/B", "name": "Boring Partition", "tags": ["constructive algorithms"], "problem_rating": "1800", "solved_by": "x1280"},
{"url": "https://codeforces.com//problemset/problem/238/A", "name": "Not Wool Sequences", "tags": ["constructive algorithms", "math"], "problem_rating": "1300", "solved_by": "x2023"},
{"url": "https://codeforces.com//problemset/problem/237/E", "name": "Build String", "tags": ["flows", "graphs"], "problem_rating": "2000", "solved_by": "x1687"},
{"url": "https://codeforces.com//problemset/problem/237/D", "name": "T-decomposition", "tags": ["dfs and similar", "graphs", "greedy", "trees"], "problem_rating": "2000", "solved_by": "x550"},
{"url": "https://codeforces.com//problemset/problem/237/C", "name": "Primes on Interval", "tags": ["binary search", "number theory", "two pointers"], "problem_rating": "1600", "solved_by": "x5646"},
{"url": "https://codeforces.com//problemset/problem/237/B", "name": "Young Table", "tags": ["implementation", "sortings"], "problem_rating": "1500", "solved_by": "x2224"},
{"url": "https://codeforces.com//problemset/problem/237/A", "name": "Free Cash", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x26303"},
{"url": "https://codeforces.com//problemset/problem/236/B", "name": "Easy Number Challenge", "tags": ["implementation", "number theory"], "problem_rating": "1300", "solved_by": "x13842"},
{"url": "https://codeforces.com//problemset/problem/236/A", "name": "Boy or Girl", "tags": ["brute force", "implementation", "strings"], "problem_rating": "800", "solved_by": "x200728"},
{"url": "https://codeforces.com//problemset/problem/235/E", "name": "Number Challenge", "tags": ["combinatorics", "dp", "implementation", "math", "number theory"], "problem_rating": "2600", "solved_by": "x766"},
{"url": "https://codeforces.com//problemset/problem/235/D", "name": "Graph Game", "tags": ["graphs"], "problem_rating": "3000", "solved_by": "x496"},
{"url": "https://codeforces.com//problemset/problem/235/C", "name": "Cyclical Quest", "tags": ["data structures", "string suffix structures", "strings"], "problem_rating": "2700", "solved_by": "x2056"},
{"url": "https://codeforces.com//problemset/problem/235/B", "name": "Let's Play Osu!", "tags": ["dp", "math", "probabilities"], "problem_rating": "2000", "solved_by": "x3425"},
{"url": "https://codeforces.com//problemset/problem/235/A", "name": "LCM Challenge", "tags": ["number theory"], "problem_rating": "1600", "solved_by": "x17315"},
{"url": "https://codeforces.com//problemset/problem/234/H", "name": "Merging Two Decks", "tags": ["constructive algorithms", "greedy"], "problem_rating": "2000", "solved_by": "x558"},
{"url": "https://codeforces.com//problemset/problem/234/G", "name": "Practice", "tags": ["constructive algorithms", "divide and conquer", "implementation"], "problem_rating": "1600", "solved_by": "x1465"},
{"url": "https://codeforces.com//problemset/problem/234/F", "name": "Fence", "tags": ["dp"], "problem_rating": "1800", "solved_by": "x1721"},
{"url": "https://codeforces.com//problemset/problem/234/E", "name": "Champions' League", "tags": ["implementation"], "problem_rating": "1600", "solved_by": "x993"},
{"url": "https://codeforces.com//problemset/problem/234/D", "name": "Cinema", "tags": ["implementation"], "problem_rating": "1600", "solved_by": "x1525"},
{"url": "https://codeforces.com//problemset/problem/234/C", "name": "Weather", "tags": ["dp", "implementation"], "problem_rating": "1300", "solved_by": "x5397"},
{"url": "https://codeforces.com//problemset/problem/234/B", "name": "Reading", "tags": ["sortings"], "problem_rating": "1000", "solved_by": "x7056"},
{"url": "https://codeforces.com//problemset/problem/234/A", "name": "Lefthanders and Righthanders", "tags": ["implementation"], "problem_rating": "1200", "solved_by": "x4403"},
{"url": "https://codeforces.com//problemset/problem/233/B", "name": "Non-square Equation", "tags": ["binary search", "brute force", "math"], "problem_rating": "1400", "solved_by": "x7384"},
{"url": "https://codeforces.com//problemset/problem/233/A", "name": "Perfect Permutation", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x41412"},
{"url": "https://codeforces.com//problemset/problem/232/E", "name": "Quick Tortoise", "tags": ["bitmasks", "divide and conquer", "dp"], "problem_rating": "3000", "solved_by": "x684"},
{"url": "https://codeforces.com//problemset/problem/232/D", "name": "Fence", "tags": ["binary search", "data structures", "string suffix structures"], "problem_rating": "2900", "solved_by": "x445"},
{"url": "https://codeforces.com//problemset/problem/232/C", "name": "Doe Graphs", "tags": ["constructive algorithms", "divide and conquer", "dp", "graphs", "shortest paths"], "problem_rating": "2600", "solved_by": "x285"},
{"url": "https://codeforces.com//problemset/problem/232/B", "name": "Table", "tags": ["bitmasks", "combinatorics", "dp", "math"], "problem_rating": "1900", "solved_by": "x1395"},
{"url": "https://codeforces.com//problemset/problem/232/A", "name": "Cycles", "tags": ["binary search", "constructive algorithms", "graphs", "greedy"], "problem_rating": "1600", "solved_by": "x2485"},
{"url": "https://codeforces.com//problemset/problem/231/E", "name": "Cactus", "tags": ["data structures", "dfs and similar", "dp", "graphs", "trees"], "problem_rating": "2100", "solved_by": "x1770"},
{"url": "https://codeforces.com//problemset/problem/231/D", "name": "Magic Box", "tags": ["brute force", "geometry"], "problem_rating": "1600", "solved_by": "x4055"},
{"url": "https://codeforces.com//problemset/problem/231/C", "name": "To Add or Not to Add", "tags": ["binary search", "sortings", "two pointers"], "problem_rating": "1600", "solved_by": "x8491"},
{"url": "https://codeforces.com//problemset/problem/231/B", "name": "Magic, Wizardry and Wonders", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1500", "solved_by": "x3577"},
{"url": "https://codeforces.com//problemset/problem/231/A", "name": "Team", "tags": ["brute force", "greedy"], "problem_rating": "800", "solved_by": "x310179"},
{"url": "https://codeforces.com//problemset/problem/230/B", "name": "T-primes", "tags": ["binary search", "implementation", "math", "number theory"], "problem_rating": "1300", "solved_by": "x72569"},
{"url": "https://codeforces.com//problemset/problem/230/A", "name": "Dragons", "tags": ["greedy", "sortings"], "problem_rating": "1000", "solved_by": "x76729"},
{"url": "https://codeforces.com//problemset/problem/229/E", "name": "Gifts", "tags": ["combinatorics", "dp", "math", "probabilities"], "problem_rating": "2600", "solved_by": "x456"},
{"url": "https://codeforces.com//problemset/problem/229/D", "name": "Towers", "tags": ["dp", "greedy", "two pointers"], "problem_rating": "2100", "solved_by": "x2183"},
{"url": "https://codeforces.com//problemset/problem/229/C", "name": "Triangles", "tags": ["combinatorics", "graphs", "math"], "problem_rating": "1900", "solved_by": "x1605"},
{"url": "https://codeforces.com//problemset/problem/229/B", "name": "Planets", "tags": ["binary search", "data structures", "graphs", "shortest paths"], "problem_rating": "1700", "solved_by": "x4552"},
{"url": "https://codeforces.com//problemset/problem/229/A", "name": "Shifts", "tags": ["brute force", "two pointers"], "problem_rating": "1500", "solved_by": "x3471"},
{"url": "https://codeforces.com//problemset/problem/228/E", "name": "The Road to Berland is Paved With Good Intentions", "tags": ["2-sat", "dfs and similar", "dsu", "graphs"], "problem_rating": "1900", "solved_by": "x2378"},
{"url": "https://codeforces.com//problemset/problem/228/D", "name": "Zigzag", "tags": ["data structures"], "problem_rating": "2100", "solved_by": "x377"},
{"url": "https://codeforces.com//problemset/problem/228/C", "name": "Fractal Detector", "tags": ["dp", "hashing"], "problem_rating": "2000", "solved_by": "x446"},
{"url": "https://codeforces.com//problemset/problem/228/B", "name": "Two Tables", "tags": ["brute force", "implementation"], "problem_rating": "1400", "solved_by": "x3444"},
{"url": "https://codeforces.com//problemset/problem/228/A", "name": "Is your horseshoe on the other hoof?", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x105608"},
{"url": "https://codeforces.com//problemset/problem/227/B", "name": "Effective Approach", "tags": ["implementation"], "problem_rating": "1100", "solved_by": "x27230"},
{"url": "https://codeforces.com//problemset/problem/227/A", "name": "Where do I Turn?", "tags": ["geometry"], "problem_rating": "1300", "solved_by": "x4095"},
{"url": "https://codeforces.com//problemset/problem/226/E", "name": "Noble Knight's Path", "tags": ["data structures", "trees"], "problem_rating": "2900", "solved_by": "x453"},
{"url": "https://codeforces.com//problemset/problem/226/D", "name": "The table", "tags": ["constructive algorithms", "greedy"], "problem_rating": "2100", "solved_by": "x956"},
{"url": "https://codeforces.com//problemset/problem/226/C", "name": "Anniversary", "tags": ["data structures", "implementation", "math", "matrices", "number theory"], "problem_rating": "2400", "solved_by": "x853"},
{"url": "https://codeforces.com//problemset/problem/226/B", "name": "Naughty Stone Piles", "tags": ["greedy"], "problem_rating": "1900", "solved_by": "x1543"},
{"url": "https://codeforces.com//problemset/problem/226/A", "name": "Flying Saucer Segments", "tags": ["math"], "problem_rating": "1400", "solved_by": "x3944"},
{"url": "https://codeforces.com//problemset/problem/225/E", "name": "Unsolvable", "tags": ["math", "number theory"], "problem_rating": "2100", "solved_by": "x792"},
{"url": "https://codeforces.com//problemset/problem/225/D", "name": "Snake", "tags": ["bitmasks", "dfs and similar", "graphs", "implementation"], "problem_rating": "2200", "solved_by": "x920"},
{"url": "https://codeforces.com//problemset/problem/225/C", "name": "Barcode", "tags": ["dp", "matrices"], "problem_rating": "1700", "solved_by": "x8919"},
{"url": "https://codeforces.com//problemset/problem/225/B", "name": "Well-known Numbers", "tags": ["binary search", "greedy", "number theory"], "problem_rating": "1600", "solved_by": "x3125"},
{"url": "https://codeforces.com//problemset/problem/225/A", "name": "Dice Tower", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1100", "solved_by": "x11393"},
{"url": "https://codeforces.com//problemset/problem/224/B", "name": "Array", "tags": ["bitmasks", "implementation", "two pointers"], "problem_rating": "1500", "solved_by": "x7232"},
{"url": "https://codeforces.com//problemset/problem/224/A", "name": "Parallelepiped", "tags": ["brute force", "geometry", "math"], "problem_rating": "1100", "solved_by": "x26019"},
{"url": "https://codeforces.com//problemset/problem/223/E", "name": "Planar Graph", "tags": ["flows", "geometry", "graphs"], "problem_rating": "3000", "solved_by": "x191"},
{"url": "https://codeforces.com//problemset/problem/223/D", "name": "Spider", "tags": ["geometry", "graphs"], "problem_rating": "3000", "solved_by": "x70"},
{"url": "https://codeforces.com//problemset/problem/223/C", "name": "Partial Sums", "tags": ["combinatorics", "math", "number theory"], "problem_rating": "1900", "solved_by": "x1532"},
{"url": "https://codeforces.com//problemset/problem/223/B", "name": "Two Strings", "tags": ["data structures", "dp", "strings"], "problem_rating": "1900", "solved_by": "x1746"},
{"url": "https://codeforces.com//problemset/problem/223/A", "name": "Bracket Sequence", "tags": ["data structures", "expression parsing", "implementation"], "problem_rating": "1700", "solved_by": "x2501"},
{"url": "https://codeforces.com//problemset/problem/222/E", "name": "Decoding Genome", "tags": ["dp", "matrices"], "problem_rating": "1900", "solved_by": "x2663"},
{"url": "https://codeforces.com//problemset/problem/222/D", "name": "Olympiad", "tags": ["binary search", "greedy", "sortings", "two pointers"], "problem_rating": "1900", "solved_by": "x2145"},
{"url": "https://codeforces.com//problemset/problem/222/C", "name": "Reducing Fractions", "tags": ["implementation", "math", "number theory", "sortings"], "problem_rating": "1800", "solved_by": "x2124"},
{"url": "https://codeforces.com//problemset/problem/222/B", "name": "Cosmic Tables", "tags": ["data structures", "implementation"], "problem_rating": "1300", "solved_by": "x6034"},
{"url": "https://codeforces.com//problemset/problem/222/A", "name": "Shooshuns and Sequence", "tags": ["brute force", "implementation"], "problem_rating": "1200", "solved_by": "x10605"},
{"url": "https://codeforces.com//problemset/problem/221/B", "name": "Little Elephant and Numbers", "tags": ["implementation"], "problem_rating": "1300", "solved_by": "x4532"},
{"url": "https://codeforces.com//problemset/problem/221/A", "name": "Little Elephant and Function", "tags": ["implementation", "math"], "problem_rating": "1000", "solved_by": "x14961"},
{"url": "https://codeforces.com//problemset/problem/220/E", "name": "Little Elephant and Inversions", "tags": ["data structures", "two pointers"], "problem_rating": "2400", "solved_by": "x1352"},
{"url": "https://codeforces.com//problemset/problem/220/D", "name": "Little Elephant and Triangle", "tags": ["geometry", "math"], "problem_rating": "2500", "solved_by": "x280"},
{"url": "https://codeforces.com//problemset/problem/220/C", "name": "Little Elephant and Shifts", "tags": ["data structures"], "problem_rating": "2100", "solved_by": "x929"},
{"url": "https://codeforces.com//problemset/problem/220/B", "name": "Little Elephant and Array", "tags": ["constructive algorithms", "data structures"], "problem_rating": "1800", "solved_by": "x9733"},
{"url": "https://codeforces.com//problemset/problem/220/A", "name": "Little Elephant and Problem", "tags": ["implementation", "sortings"], "problem_rating": "1300", "solved_by": "x11897"},
{"url": "https://codeforces.com//problemset/problem/219/E", "name": "Parking Lot", "tags": ["data structures"], "problem_rating": "2200", "solved_by": "x606"},
{"url": "https://codeforces.com//problemset/problem/219/D", "name": "Choosing Capital for Treeland", "tags": ["dfs and similar", "dp", "graphs", "trees"], "problem_rating": "1700", "solved_by": "x9027"},
{"url": "https://codeforces.com//problemset/problem/219/C", "name": "Color Stripe", "tags": ["brute force", "dp", "greedy"], "problem_rating": "1600", "solved_by": "x6597"},
{"url": "https://codeforces.com//problemset/problem/219/B", "name": "Special Offer! Super Price 999 Bourles!", "tags": ["implementation"], "problem_rating": "1400", "solved_by": "x5765"},
{"url": "https://codeforces.com//problemset/problem/219/A", "name": "k-String", "tags": ["implementation", "strings"], "problem_rating": "1000", "solved_by": "x26884"},
{"url": "https://codeforces.com//problemset/problem/218/B", "name": "Airport", "tags": ["implementation"], "problem_rating": "1100", "solved_by": "x16075"},
{"url": "https://codeforces.com//problemset/problem/218/A", "name": "Mountain Scenery", "tags": ["brute force", "constructive algorithms", "implementation"], "problem_rating": "1100", "solved_by": "x9163"},
{"url": "https://codeforces.com//problemset/problem/217/E", "name": "Alien DNA", "tags": ["data structures", "dsu", "trees"], "problem_rating": "2800", "solved_by": "x315"},
{"url": "https://codeforces.com//problemset/problem/217/D", "name": "Bitonix' Patrol", "tags": ["bitmasks", "brute force", "combinatorics", "dfs and similar", "math"], "problem_rating": "2900", "solved_by": "x246"},
{"url": "https://codeforces.com//problemset/problem/217/C", "name": "Formurosa", "tags": ["divide and conquer", "dp", "expression parsing"], "problem_rating": "2600", "solved_by": "x328"},
{"url": "https://codeforces.com//problemset/problem/217/B", "name": "Blackboard Fibonacci", "tags": ["brute force", "math"], "problem_rating": "2100", "solved_by": "x880"},
{"url": "https://codeforces.com//problemset/problem/217/A", "name": "Ice Skating", "tags": ["brute force", "dfs and similar", "dsu", "graphs"], "problem_rating": "1200", "solved_by": "x20768"},
{"url": "https://codeforces.com//problemset/problem/216/E", "name": "Martian Luck", "tags": ["math", "number theory"], "problem_rating": "2000", "solved_by": "x565"},
{"url": "https://codeforces.com//problemset/problem/216/D", "name": "Spider's Web", "tags": ["binary search", "sortings", "two pointers"], "problem_rating": "1700", "solved_by": "x1338"},
{"url": "https://codeforces.com//problemset/problem/216/C", "name": "Hiring Staff", "tags": ["greedy"], "problem_rating": "1800", "solved_by": "x1827"},
{"url": "https://codeforces.com//problemset/problem/216/B", "name": "Forming Teams", "tags": ["dfs and similar", "implementation"], "problem_rating": "1700", "solved_by": "x6223"},
{"url": "https://codeforces.com//problemset/problem/216/A", "name": "Tiling with Hexagons", "tags": ["implementation", "math"], "problem_rating": "1200", "solved_by": "x4960"},
{"url": "https://codeforces.com//problemset/problem/215/E", "name": "Periodical Numbers", "tags": ["combinatorics", "dp", "number theory"], "problem_rating": "2100", "solved_by": "x545"},
{"url": "https://codeforces.com//problemset/problem/215/D", "name": "Hot Days", "tags": ["greedy"], "problem_rating": "1900", "solved_by": "x1585"},
{"url": "https://codeforces.com//problemset/problem/215/C", "name": "Crosses", "tags": ["brute force", "implementation"], "problem_rating": "2100", "solved_by": "x661"},
{"url": "https://codeforces.com//problemset/problem/215/B", "name": "Olympic Medal", "tags": ["greedy", "math"], "problem_rating": "1300", "solved_by": "x5463"},
{"url": "https://codeforces.com//problemset/problem/215/A", "name": "Bicycle Chain", "tags": ["brute force", "implementation"], "problem_rating": "900", "solved_by": "x14230"},
{"url": "https://codeforces.com//problemset/problem/214/B", "name": "Hometask", "tags": ["brute force", "constructive algorithms", "greedy", "math"], "problem_rating": "1600", "solved_by": "x4929"},
{"url": "https://codeforces.com//problemset/problem/214/A", "name": "System of Equations", "tags": ["brute force"], "problem_rating": "800", "solved_by": "x34463"},
{"url": "https://codeforces.com//problemset/problem/213/E", "name": "Two Permutations", "tags": ["data structures", "hashing", "strings"], "problem_rating": "2700", "solved_by": "x779"},
{"url": "https://codeforces.com//problemset/problem/213/D", "name": "Stars", "tags": ["constructive algorithms", "geometry"], "problem_rating": "2300", "solved_by": "x336"},
{"url": "https://codeforces.com//problemset/problem/213/C", "name": "Relay Race", "tags": ["dp"], "problem_rating": "2000", "solved_by": "x2788"},
{"url": "https://codeforces.com//problemset/problem/213/B", "name": "Numbers", "tags": ["combinatorics", "dp"], "problem_rating": "1900", "solved_by": "x1675"},
{"url": "https://codeforces.com//problemset/problem/213/A", "name": "Game", "tags": ["dfs and similar", "greedy"], "problem_rating": "1700", "solved_by": "x1706"},
{"url": "https://codeforces.com//problemset/problem/212/E", "name": "IT Restaurants", "tags": ["dfs and similar", "dp", "trees"], "problem_rating": "1500", "solved_by": "x1692"},
{"url": "https://codeforces.com//problemset/problem/212/D", "name": "Cutting a Fence", "tags": ["binary search", "data structures", "dsu"], "problem_rating": "2500", "solved_by": "x463"},
{"url": "https://codeforces.com//problemset/problem/212/C", "name": "Cowboys", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2100", "solved_by": "x377"},
{"url": "https://codeforces.com//problemset/problem/212/B", "name": "Polycarpus is Looking for Good Substrings", "tags": ["bitmasks", "hashing", "implementation"], "problem_rating": "2300", "solved_by": "x329"},
{"url": "https://codeforces.com//problemset/problem/212/A", "name": "Privatization", "tags": ["flows", "graphs"], "problem_rating": "3000", "solved_by": "x199"},
{"url": "https://codeforces.com//problemset/problem/209/C", "name": "Trails and Glades", "tags": ["constructive algorithms", "dsu", "graphs", "greedy"], "problem_rating": "2400", "solved_by": "x722"},
{"url": "https://codeforces.com//problemset/problem/209/B", "name": "Pixels", "tags": ["constructive algorithms", "math"], "problem_rating": "2100", "solved_by": "x363"},
{"url": "https://codeforces.com//problemset/problem/209/A", "name": "Multicolored Marbles", "tags": ["dp", "math"], "problem_rating": "1600", "solved_by": "x2284"},
{"url": "https://codeforces.com//problemset/problem/208/E", "name": "Blood Cousins", "tags": ["binary search", "data structures", "dfs and similar", "trees"], "problem_rating": "2100", "solved_by": "x6330"},
{"url": "https://codeforces.com//problemset/problem/208/D", "name": "Prizes, Prizes, more Prizes", "tags": ["implementation"], "problem_rating": "1200", "solved_by": "x7531"},
{"url": "https://codeforces.com//problemset/problem/208/C", "name": "Police Station", "tags": ["dp", "graphs", "shortest paths"], "problem_rating": "1900", "solved_by": "x1807"},
{"url": "https://codeforces.com//problemset/problem/208/B", "name": "Solitaire", "tags": ["dfs and similar", "dp"], "problem_rating": "1900", "solved_by": "x1350"},
{"url": "https://codeforces.com//problemset/problem/208/A", "name": "Dubstep", "tags": ["strings"], "problem_rating": "900", "solved_by": "x85959"},
{"url": "https://codeforces.com//problemset/problem/207/D9", "name": "The Beaver's Problem - 3", "tags": [], "problem_rating": "1800", "solved_by": "x84"},
{"url": "https://codeforces.com//problemset/problem/207/D8", "name": "The Beaver's Problem - 3", "tags": [], "problem_rating": "2300", "solved_by": "x89"},
{"url": "https://codeforces.com//problemset/problem/207/D7", "name": "The Beaver's Problem - 3", "tags": [], "problem_rating": "1600", "solved_by": "x97"},
{"url": "https://codeforces.com//problemset/problem/207/D6", "name": "The Beaver's Problem - 3", "tags": [], "problem_rating": "2100", "solved_by": "x80"},
{"url": "https://codeforces.com//problemset/problem/207/D5", "name": "The Beaver's Problem - 3", "tags": [], "problem_rating": "1600", "solved_by": "x138"},
{"url": "https://codeforces.com//problemset/problem/207/D4", "name": "The Beaver's Problem - 3", "tags": [], "problem_rating": "2100", "solved_by": "x149"},
{"url": "https://codeforces.com//problemset/problem/207/D3", "name": "The Beaver's Problem - 3", "tags": [], "problem_rating": "2000", "solved_by": "x136"},
{"url": "https://codeforces.com//problemset/problem/207/D2", "name": "The Beaver's Problem - 3", "tags": [], "problem_rating": "2000", "solved_by": "x105"},
{"url": "https://codeforces.com//problemset/problem/207/D10", "name": "The Beaver's Problem - 3", "tags": [], "problem_rating": "2100", "solved_by": "x82"},
{"url": "https://codeforces.com//problemset/problem/207/D1", "name": "The Beaver's Problem - 3", "tags": [], "problem_rating": "1800", "solved_by": "x117"},
{"url": "https://codeforces.com//problemset/problem/207/C3", "name": "Game with Two Trees", "tags": ["data structures"], "problem_rating": "2700", "solved_by": "x127"},
{"url": "https://codeforces.com//problemset/problem/207/C2", "name": "Game with Two Trees", "tags": [], "problem_rating": "2200", "solved_by": "x83"},
{"url": "https://codeforces.com//problemset/problem/207/C1", "name": "Game with Two Trees", "tags": [], "problem_rating": "2100", "solved_by": "x107"},
{"url": "https://codeforces.com//problemset/problem/207/B3", "name": "Military Trainings", "tags": [], "problem_rating": "1700", "solved_by": "x163"},
{"url": "https://codeforces.com//problemset/problem/207/B2", "name": "Military Trainings", "tags": [], "problem_rating": "1900", "solved_by": "x181"},
{"url": "https://codeforces.com//problemset/problem/207/B1", "name": "Military Trainings", "tags": [], "problem_rating": "1600", "solved_by": "x262"},
{"url": "https://codeforces.com//problemset/problem/207/A3", "name": "Beaver's Calculator 1.0", "tags": ["greedy"], "problem_rating": "2000", "solved_by": "x206"},
{"url": "https://codeforces.com//problemset/problem/207/A2", "name": "Beaver's Calculator 1.0", "tags": ["greedy"], "problem_rating": "1800", "solved_by": "x227"},
{"url": "https://codeforces.com//problemset/problem/207/A1", "name": "Beaver's Calculator 1.0", "tags": ["greedy"], "problem_rating": "1600", "solved_by": "x278"},
{"url": "https://codeforces.com//problemset/problem/205/B", "name": "Little Elephant and Sorting", "tags": ["brute force", "greedy"], "problem_rating": "1400", "solved_by": "x5979"},
{"url": "https://codeforces.com//problemset/problem/205/A", "name": "Little Elephant and Rozdil", "tags": ["brute force", "implementation"], "problem_rating": "900", "solved_by": "x21948"},
{"url": "https://codeforces.com//problemset/problem/204/E", "name": "Little Elephant and Strings", "tags": ["data structures", "implementation", "string suffix structures", "two pointers"], "problem_rating": "2800", "solved_by": "x1131"},
{"url": "https://codeforces.com//problemset/problem/204/D", "name": "Little Elephant and Retro Strings", "tags": ["dp"], "problem_rating": "2400", "solved_by": "x446"},
{"url": "https://codeforces.com//problemset/problem/204/C", "name": "Little Elephant and Furik and Rubik", "tags": ["math", "probabilities"], "problem_rating": "2000", "solved_by": "x1090"},
{"url": "https://codeforces.com//problemset/problem/204/B", "name": "Little Elephant and Cards", "tags": ["binary search", "data structures"], "problem_rating": "1500", "solved_by": "x5098"},
{"url": "https://codeforces.com//problemset/problem/204/A", "name": "Little Elephant and Interval", "tags": ["binary search", "combinatorics", "dp"], "problem_rating": "1500", "solved_by": "x5611"},
{"url": "https://codeforces.com//problemset/problem/203/E", "name": "Transportation", "tags": ["greedy", "sortings", "two pointers"], "problem_rating": "2300", "solved_by": "x279"},
{"url": "https://codeforces.com//problemset/problem/203/D", "name": "Hit Ball", "tags": ["geometry", "implementation", "math"], "problem_rating": "1700", "solved_by": "x1408"},
{"url": "https://codeforces.com//problemset/problem/203/C", "name": "Photographer", "tags": ["greedy", "sortings"], "problem_rating": "1400", "solved_by": "x5625"},
{"url": "https://codeforces.com//problemset/problem/203/B", "name": "Game on Paper", "tags": ["brute force", "implementation"], "problem_rating": "1300", "solved_by": "x2567"},
{"url": "https://codeforces.com//problemset/problem/203/A", "name": "Two Problems", "tags": ["brute force", "implementation"], "problem_rating": "1200", "solved_by": "x4128"},
{"url": "https://codeforces.com//problemset/problem/202/B", "name": "Brand New Easy Problem", "tags": ["brute force"], "problem_rating": "1700", "solved_by": "x811"},
{"url": "https://codeforces.com//problemset/problem/202/A", "name": "LLPS", "tags": ["binary search", "bitmasks", "brute force", "greedy", "implementation", "strings"], "problem_rating": "800", "solved_by": "x16318"},
{"url": "https://codeforces.com//problemset/problem/201/E", "name": "Thoroughly Bureaucratic Organization", "tags": ["binary search", "combinatorics"], "problem_rating": "2600", "solved_by": "x408"},
{"url": "https://codeforces.com//problemset/problem/201/D", "name": "Brand New Problem", "tags": ["bitmasks", "brute force", "dp"], "problem_rating": "2600", "solved_by": "x402"},
{"url": "https://codeforces.com//problemset/problem/201/C", "name": "Fragile Bridges", "tags": ["dp"], "problem_rating": "2000", "solved_by": "x1305"},
{"url": "https://codeforces.com//problemset/problem/201/B", "name": "Guess That Car!", "tags": ["math", "ternary search"], "problem_rating": "1800", "solved_by": "x1258"},
{"url": "https://codeforces.com//problemset/problem/201/A", "name": "Clear Symmetry", "tags": ["constructive algorithms", "dp", "math"], "problem_rating": "1700", "solved_by": "x2984"},
{"url": "https://codeforces.com//problemset/problem/200/E", "name": "Tractor College", "tags": ["implementation", "math", "number theory", "ternary search"], "problem_rating": "2400", "solved_by": "x340"},
{"url": "https://codeforces.com//problemset/problem/200/D", "name": "Programming Language", "tags": ["binary search", "brute force", "expression parsing", "implementation"], "problem_rating": "1800", "solved_by": "x901"},
{"url": "https://codeforces.com//problemset/problem/200/C", "name": "Football Championship", "tags": ["brute force", "implementation"], "problem_rating": "1800", "solved_by": "x1047"},
{"url": "https://codeforces.com//problemset/problem/200/B", "name": "Drinks", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x111506"},
{"url": "https://codeforces.com//problemset/problem/200/A", "name": "Cinema", "tags": ["brute force", "data structures"], "problem_rating": "2400", "solved_by": "x675"},
{"url": "https://codeforces.com//problemset/problem/199/B", "name": "Special Olympics", "tags": ["geometry"], "problem_rating": "1900", "solved_by": "x789"},
{"url": "https://codeforces.com//problemset/problem/199/A", "name": "Hexadecimal's theorem", "tags": ["brute force", "constructive algorithms", "implementation", "number theory"], "problem_rating": "900", "solved_by": "x25765"},
{"url": "https://codeforces.com//problemset/problem/198/E", "name": "Gripping Story", "tags": ["binary search", "data structures", "sortings"], "problem_rating": "2400", "solved_by": "x405"},
{"url": "https://codeforces.com//problemset/problem/198/D", "name": "Cube Snake", "tags": ["constructive algorithms"], "problem_rating": "2700", "solved_by": "x105"},
{"url": "https://codeforces.com//problemset/problem/198/C", "name": "Delivering Carcinogen", "tags": ["binary search", "geometry"], "problem_rating": "2400", "solved_by": "x370"},
{"url": "https://codeforces.com//problemset/problem/198/B", "name": "Jumping on Walls", "tags": ["shortest paths"], "problem_rating": "1400", "solved_by": "x4167"},
{"url": "https://codeforces.com//problemset/problem/198/A", "name": "About Bacteria", "tags": ["implementation", "math"], "problem_rating": "1700", "solved_by": "x3127"},
{"url": "https://codeforces.com//problemset/problem/197/B", "name": "Limit", "tags": ["math"], "problem_rating": "1400", "solved_by": "x4607"},
{"url": "https://codeforces.com//problemset/problem/197/A", "name": "Plate Game", "tags": ["constructive algorithms", "games", "math"], "problem_rating": "1600", "solved_by": "x6205"},
{"url": "https://codeforces.com//problemset/problem/196/E", "name": "Opening Portals", "tags": ["dsu", "graphs", "shortest paths"], "problem_rating": "2600", "solved_by": "x849"},
{"url": "https://codeforces.com//problemset/problem/196/D", "name": "The Next Good String", "tags": ["data structures", "greedy", "hashing", "strings"], "problem_rating": "2800", "solved_by": "x526"},
{"url": "https://codeforces.com//problemset/problem/196/C", "name": "Paint Tree", "tags": ["constructive algorithms", "divide and conquer", "geometry", "sortings", "trees"], "problem_rating": "2200", "solved_by": "x810"},
{"url": "https://codeforces.com//problemset/problem/196/B", "name": "Infinite Maze", "tags": ["dfs and similar", "graphs"], "problem_rating": "2000", "solved_by": "x2151"},
{"url": "https://codeforces.com//problemset/problem/196/A", "name": "Lexicographically Maximum Subsequence", "tags": ["greedy", "strings"], "problem_rating": "1100", "solved_by": "x5345"},
{"url": "https://codeforces.com//problemset/problem/195/E", "name": "Building Forest", "tags": ["data structures", "dsu", "graphs"], "problem_rating": "2000", "solved_by": "x694"},
{"url": "https://codeforces.com//problemset/problem/195/D", "name": "Analyzing Polyline", "tags": ["geometry", "math", "sortings"], "problem_rating": "1900", "solved_by": "x1016"},
{"url": "https://codeforces.com//problemset/problem/195/C", "name": "Try and Catch", "tags": ["expression parsing", "implementation"], "problem_rating": "1800", "solved_by": "x1130"},
{"url": "https://codeforces.com//problemset/problem/195/B", "name": "After Training", "tags": ["data structures", "implementation", "math"], "problem_rating": "1300", "solved_by": "x5152"},
{"url": "https://codeforces.com//problemset/problem/195/A", "name": "Let's Watch Football", "tags": ["binary search", "brute force", "math"], "problem_rating": "1000", "solved_by": "x8679"},
{"url": "https://codeforces.com//problemset/problem/194/B", "name": "Square", "tags": ["math"], "problem_rating": "1200", "solved_by": "x3468"},
{"url": "https://codeforces.com//problemset/problem/194/A", "name": "Exams", "tags": ["implementation", "math"], "problem_rating": "900", "solved_by": "x9760"},
{"url": "https://codeforces.com//problemset/problem/193/E", "name": "Fibonacci Number", "tags": ["brute force", "math", "matrices"], "problem_rating": "2900", "solved_by": "x327"},
{"url": "https://codeforces.com//problemset/problem/193/D", "name": "Two Segments", "tags": ["data structures"], "problem_rating": "2900", "solved_by": "x389"},
{"url": "https://codeforces.com//problemset/problem/193/C", "name": "Hamming Distance", "tags": ["constructive algorithms", "greedy", "math", "matrices"], "problem_rating": "2400", "solved_by": "x508"},
{"url": "https://codeforces.com//problemset/problem/193/B", "name": "Xor", "tags": ["brute force"], "problem_rating": "2000", "solved_by": "x999"},
{"url": "https://codeforces.com//problemset/problem/193/A", "name": "Cutting Figure", "tags": ["constructive algorithms", "graphs", "trees"], "problem_rating": "1700", "solved_by": "x3892"},
{"url": "https://codeforces.com//problemset/problem/192/B", "name": "Walking in the Rain", "tags": ["brute force", "implementation"], "problem_rating": "1100", "solved_by": "x6199"},
{"url": "https://codeforces.com//problemset/problem/192/A", "name": "Funky Numbers", "tags": ["binary search", "brute force", "implementation"], "problem_rating": "1300", "solved_by": "x10242"},
{"url": "https://codeforces.com//problemset/problem/191/E", "name": "Thwarting Demonstrations", "tags": ["binary search", "data structures", "trees"], "problem_rating": "2200", "solved_by": "x818"},
{"url": "https://codeforces.com//problemset/problem/191/D", "name": "Metro Scheme", "tags": ["graphs", "greedy"], "problem_rating": "2700", "solved_by": "x349"},
{"url": "https://codeforces.com//problemset/problem/191/C", "name": "Fools and Roads", "tags": ["data structures", "dfs and similar", "trees"], "problem_rating": "1900", "solved_by": "x6972"},
{"url": "https://codeforces.com//problemset/problem/191/B", "name": "Demonstration", "tags": ["greedy"], "problem_rating": "1700", "solved_by": "x1003"},
{"url": "https://codeforces.com//problemset/problem/191/A", "name": "Dynasty Puzzles", "tags": ["dp"], "problem_rating": "1500", "solved_by": "x3881"},
{"url": "https://codeforces.com//problemset/problem/190/E", "name": "Counter Attack", "tags": ["data structures", "dsu", "graphs", "hashing", "sortings"], "problem_rating": "2100", "solved_by": "x1489"},
{"url": "https://codeforces.com//problemset/problem/190/D", "name": "Non-Secret Cypher", "tags": ["two pointers"], "problem_rating": "1900", "solved_by": "x2267"},
{"url": "https://codeforces.com//problemset/problem/190/C", "name": "STL", "tags": ["dfs and similar"], "problem_rating": "1500", "solved_by": "x2762"},
{"url": "https://codeforces.com//problemset/problem/190/B", "name": "Surrounded", "tags": ["geometry"], "problem_rating": "1800", "solved_by": "x2805"},
{"url": "https://codeforces.com//problemset/problem/190/A", "name": "Vasya and the Bus", "tags": ["greedy", "math"], "problem_rating": "1100", "solved_by": "x5791"},
{"url": "https://codeforces.com//problemset/problem/189/B", "name": "Counting Rhombi", "tags": ["brute force", "math"], "problem_rating": "1300", "solved_by": "x3913"},
{"url": "https://codeforces.com//problemset/problem/189/A", "name": "Cut Ribbon", "tags": ["brute force", "dp"], "problem_rating": "1300", "solved_by": "x64606"},
{"url": "https://codeforces.com//problemset/problem/188/H", "name": "Stack", "tags": ["*special problem", "expression parsing", "implementation"], "problem_rating": "1800", "solved_by": "x249"},
{"url": "https://codeforces.com//problemset/problem/188/G", "name": "Array Sorting", "tags": ["*special problem", "implementation"], "problem_rating": "1600", "solved_by": "x331"},
{"url": "https://codeforces.com//problemset/problem/188/F", "name": "Binary Notation", "tags": ["*special problem", "implementation"], "problem_rating": "1400", "solved_by": "x295"},
{"url": "https://codeforces.com//problemset/problem/188/E", "name": "HQ9+", "tags": ["*special problem", "implementation"], "problem_rating": "1400", "solved_by": "x496"},
{"url": "https://codeforces.com//problemset/problem/188/D", "name": "Asterisks", "tags": ["*special problem", "implementation"], "problem_rating": "1100", "solved_by": "x666"},
{"url": "https://codeforces.com//problemset/problem/188/C", "name": "LCM", "tags": ["*special problem", "implementation", "math"], "problem_rating": "1400", "solved_by": "x446"},
{"url": "https://codeforces.com//problemset/problem/188/B", "name": "A + Reverse B", "tags": ["*special problem", "implementation"], "problem_rating": "1300", "solved_by": "x723"},
{"url": "https://codeforces.com//problemset/problem/188/A", "name": "Hexagonal Numbers", "tags": ["*special problem"], "problem_rating": "1100", "solved_by": "x773"},
{"url": "https://codeforces.com//problemset/problem/187/E", "name": "Heaven Tour", "tags": ["data structures", "greedy"], "problem_rating": "2900", "solved_by": "x97"},
{"url": "https://codeforces.com//problemset/problem/187/D", "name": "BRT Contract", "tags": ["data structures"], "problem_rating": "2800", "solved_by": "x504"},
{"url": "https://codeforces.com//problemset/problem/187/C", "name": "Weak Memory", "tags": ["dfs and similar", "dsu"], "problem_rating": "2000", "solved_by": "x1308"},
{"url": "https://codeforces.com//problemset/problem/187/B", "name": "AlgoRace", "tags": ["dp", "shortest paths"], "problem_rating": "1800", "solved_by": "x1948"},
{"url": "https://codeforces.com//problemset/problem/187/A", "name": "Permutations", "tags": ["greedy"], "problem_rating": "1500", "solved_by": "x2737"},
{"url": "https://codeforces.com//problemset/problem/186/B", "name": "Growing Mushrooms", "tags": ["greedy", "sortings"], "problem_rating": "1200", "solved_by": "x5440"},
{"url": "https://codeforces.com//problemset/problem/186/A", "name": "Comparing Strings", "tags": ["implementation", "strings"], "problem_rating": "1100", "solved_by": "x16507"},
{"url": "https://codeforces.com//problemset/problem/185/E", "name": "Soap Time! - 2", "tags": ["binary search", "data structures"], "problem_rating": "3000", "solved_by": "x104"},
{"url": "https://codeforces.com//problemset/problem/185/D", "name": "Visit of the Great", "tags": ["math", "number theory"], "problem_rating": "2600", "solved_by": "x392"},
{"url": "https://codeforces.com//problemset/problem/185/C", "name": "Clever Fat Rat", "tags": ["dp"], "problem_rating": "2500", "solved_by": "x133"},
{"url": "https://codeforces.com//problemset/problem/185/B", "name": "Mushroom Scientists", "tags": ["math", "ternary search"], "problem_rating": "1800", "solved_by": "x1611"},
{"url": "https://codeforces.com//problemset/problem/185/A", "name": "Plant", "tags": ["math"], "problem_rating": "1300", "solved_by": "x5782"},
{"url": "https://codeforces.com//problemset/problem/183/E", "name": "Candy Shop", "tags": ["greedy"], "problem_rating": "2900", "solved_by": "x134"},
{"url": "https://codeforces.com//problemset/problem/183/D", "name": "T-shirt", "tags": ["dp", "greedy", "probabilities"], "problem_rating": "2700", "solved_by": "x400"},
{"url": "https://codeforces.com//problemset/problem/183/C", "name": "Cyclic Coloring", "tags": ["dfs and similar"], "problem_rating": "2200", "solved_by": "x605"},
{"url": "https://codeforces.com//problemset/problem/183/B", "name": "Zoo", "tags": ["brute force", "geometry"], "problem_rating": "1700", "solved_by": "x685"},
{"url": "https://codeforces.com//problemset/problem/183/A", "name": "Headquarters", "tags": ["constructive algorithms", "math"], "problem_rating": "1700", "solved_by": "x537"},
{"url": "https://codeforces.com//problemset/problem/182/E", "name": "Wooden Fence", "tags": ["dp"], "problem_rating": "1800", "solved_by": "x1442"},
{"url": "https://codeforces.com//problemset/problem/182/D", "name": "Common Divisors", "tags": ["brute force", "hashing", "implementation", "math", "strings"], "problem_rating": "1400", "solved_by": "x7928"},
{"url": "https://codeforces.com//problemset/problem/182/C", "name": "Optimal Sum", "tags": ["data structures", "greedy"], "problem_rating": "2000", "solved_by": "x714"},
{"url": "https://codeforces.com//problemset/problem/182/B", "name": "Vasya's Calendar", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x6854"},
{"url": "https://codeforces.com//problemset/problem/182/A", "name": "Battlefield", "tags": ["geometry", "graphs", "implementation", "shortest paths"], "problem_rating": "2200", "solved_by": "x280"},
{"url": "https://codeforces.com//problemset/problem/181/B", "name": "Number of Triplets", "tags": ["binary search", "brute force"], "problem_rating": "1300", "solved_by": "x2935"},
{"url": "https://codeforces.com//problemset/problem/181/A", "name": "Series of Crimes", "tags": ["brute force", "geometry", "implementation"], "problem_rating": "800", "solved_by": "x6849"},
{"url": "https://codeforces.com//problemset/problem/180/F", "name": "Mathematical Analysis Rocks!", "tags": ["constructive algorithms", "implementation", "math"], "problem_rating": "1200", "solved_by": "x2483"},
{"url": "https://codeforces.com//problemset/problem/180/E", "name": "Cubes", "tags": ["binary search", "dp", "two pointers"], "problem_rating": "1800", "solved_by": "x1743"},
{"url": "https://codeforces.com//problemset/problem/180/D", "name": "Name", "tags": ["greedy", "strings"], "problem_rating": "1900", "solved_by": "x720"},
{"url": "https://codeforces.com//problemset/problem/180/C", "name": "Letter", "tags": ["dp"], "problem_rating": "1400", "solved_by": "x7205"},
{"url": "https://codeforces.com//problemset/problem/180/B", "name": "Divisibility Rules", "tags": ["math", "number theory"], "problem_rating": "2300", "solved_by": "x331"},
{"url": "https://codeforces.com//problemset/problem/180/A", "name": "Defragmentation", "tags": ["implementation"], "problem_rating": "1800", "solved_by": "x528"},
{"url": "https://codeforces.com//problemset/problem/178/F3", "name": "Representative Sampling", "tags": [], "problem_rating": "2500", "solved_by": "x412"},
{"url": "https://codeforces.com//problemset/problem/178/F2", "name": "Representative Sampling", "tags": ["dp", "sortings", "strings"], "problem_rating": "2200", "solved_by": "x322"},
{"url": "https://codeforces.com//problemset/problem/178/F1", "name": "Representative Sampling", "tags": [], "problem_rating": "1800", "solved_by": "x378"},
{"url": "https://codeforces.com//problemset/problem/178/E3", "name": "The Beaver's Problem - 2", "tags": [], "problem_rating": "2300", "solved_by": "x201"},
{"url": "https://codeforces.com//problemset/problem/178/E2", "name": "The Beaver's Problem - 2", "tags": [], "problem_rating": "2000", "solved_by": "x230"},
{"url": "https://codeforces.com//problemset/problem/178/E1", "name": "The Beaver's Problem - 2", "tags": [], "problem_rating": "1900", "solved_by": "x289"},
{"url": "https://codeforces.com//problemset/problem/178/D3", "name": "Magic Squares", "tags": [], "problem_rating": "2100", "solved_by": "x243"},
{"url": "https://codeforces.com//problemset/problem/178/D2", "name": "Magic Squares", "tags": [], "problem_rating": "1900", "solved_by": "x267"},
{"url": "https://codeforces.com//problemset/problem/178/D1", "name": "Magic Squares", "tags": [], "problem_rating": "1500", "solved_by": "x623"},
{"url": "https://codeforces.com//problemset/problem/178/C3", "name": "Smart Beaver and Resolving Collisions", "tags": [], "problem_rating": "2000", "solved_by": "x300"},
{"url": "https://codeforces.com//problemset/problem/178/C2", "name": "Smart Beaver and Resolving Collisions", "tags": [], "problem_rating": "1900", "solved_by": "x292"},
{"url": "https://codeforces.com//problemset/problem/178/C1", "name": "Smart Beaver and Resolving Collisions", "tags": [], "problem_rating": "1600", "solved_by": "x475"},
{"url": "https://codeforces.com//problemset/problem/178/B3", "name": "Greedy Merchants", "tags": [], "problem_rating": "1800", "solved_by": "x1141"},
{"url": "https://codeforces.com//problemset/problem/178/B2", "name": "Greedy Merchants", "tags": [], "problem_rating": "1600", "solved_by": "x654"},
{"url": "https://codeforces.com//problemset/problem/178/B1", "name": "Greedy Merchants", "tags": [], "problem_rating": "1600", "solved_by": "x738"},
{"url": "https://codeforces.com//problemset/problem/178/A3", "name": "Educational Game", "tags": ["greedy"], "problem_rating": "1100", "solved_by": "x1409"},
{"url": "https://codeforces.com//problemset/problem/178/A2", "name": "Educational Game", "tags": ["greedy"], "problem_rating": "1000", "solved_by": "x1596"},
{"url": "https://codeforces.com//problemset/problem/178/A1", "name": "Educational Game", "tags": [], "problem_rating": "1000", "solved_by": "x1572"},
{"url": "https://codeforces.com//problemset/problem/177/G2", "name": "Fibonacci Strings", "tags": ["matrices", "strings"], "problem_rating": "2600", "solved_by": "x177"},
{"url": "https://codeforces.com//problemset/problem/177/G1", "name": "Fibonacci Strings", "tags": ["strings"], "problem_rating": "2400", "solved_by": "x170"},
{"url": "https://codeforces.com//problemset/problem/177/F2", "name": "Script Generation", "tags": [], "problem_rating": "2300", "solved_by": "x204"},
{"url": "https://codeforces.com//problemset/problem/177/F1", "name": "Script Generation", "tags": [], "problem_rating": "1800", "solved_by": "x298"},
{"url": "https://codeforces.com//problemset/problem/177/E2", "name": "Space Voyage", "tags": ["binary search"], "problem_rating": "1900", "solved_by": "x417"},
{"url": "https://codeforces.com//problemset/problem/177/E1", "name": "Space Voyage", "tags": ["binary search"], "problem_rating": "1700", "solved_by": "x591"},
{"url": "https://codeforces.com//problemset/problem/177/D2", "name": "Encrypting Messages", "tags": ["data structures"], "problem_rating": "1500", "solved_by": "x1865"},
{"url": "https://codeforces.com//problemset/problem/177/D1", "name": "Encrypting Messages", "tags": ["brute force"], "problem_rating": "1200", "solved_by": "x2104"},
{"url": "https://codeforces.com//problemset/problem/177/C2", "name": "Party", "tags": ["brute force", "dfs and similar", "dsu", "graphs"], "problem_rating": "1500", "solved_by": "x2495"},
{"url": "https://codeforces.com//problemset/problem/177/C1", "name": "Party", "tags": ["dfs and similar", "dsu", "graphs"], "problem_rating": "1500", "solved_by": "x2507"},
{"url": "https://codeforces.com//problemset/problem/177/B2", "name": "Rectangular Game", "tags": ["number theory"], "problem_rating": "1200", "solved_by": "x2900"},
{"url": "https://codeforces.com//problemset/problem/177/B1", "name": "Rectangular Game", "tags": ["number theory"], "problem_rating": "1000", "solved_by": "x4085"},
{"url": "https://codeforces.com//problemset/problem/177/A2", "name": "Good Matrix Elements", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x7162"},
{"url": "https://codeforces.com//problemset/problem/177/A1", "name": "Good Matrix Elements", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x8365"},
{"url": "https://codeforces.com//problemset/problem/176/E", "name": "Archaeology", "tags": ["data structures", "dfs and similar", "trees"], "problem_rating": "3100", "solved_by": "x1096"},
{"url": "https://codeforces.com//problemset/problem/176/D", "name": "Hyper String", "tags": ["dp"], "problem_rating": "2500", "solved_by": "x305"},
{"url": "https://codeforces.com//problemset/problem/176/C", "name": "Playing with Superglue", "tags": ["combinatorics", "constructive algorithms"], "problem_rating": "2000", "solved_by": "x470"},
{"url": "https://codeforces.com//problemset/problem/176/B", "name": "Word Cut", "tags": ["dp"], "problem_rating": "1700", "solved_by": "x1739"},
{"url": "https://codeforces.com//problemset/problem/176/A", "name": "Trading Business", "tags": ["greedy", "sortings"], "problem_rating": "1200", "solved_by": "x1432"},
{"url": "https://codeforces.com//problemset/problem/175/F", "name": "Gnomes of Might and Magic", "tags": ["data structures", "graphs", "implementation", "shortest paths"], "problem_rating": "3000", "solved_by": "x65"},
{"url": "https://codeforces.com//problemset/problem/175/E", "name": "Power Defence", "tags": ["brute force", "dp", "geometry", "greedy"], "problem_rating": "2600", "solved_by": "x261"},
{"url": "https://codeforces.com//problemset/problem/175/D", "name": "Plane of Tanks: Duel", "tags": ["brute force", "dp", "math", "probabilities"], "problem_rating": "2400", "solved_by": "x296"},
{"url": "https://codeforces.com//problemset/problem/175/C", "name": "Geometry Horse", "tags": ["greedy", "implementation", "sortings", "two pointers"], "problem_rating": "1600", "solved_by": "x1303"},
{"url": "https://codeforces.com//problemset/problem/175/B", "name": "Plane of Tanks: Pro", "tags": ["implementation"], "problem_rating": "1400", "solved_by": "x1391"},
{"url": "https://codeforces.com//problemset/problem/175/A", "name": "Robot Bicorn Attack", "tags": ["brute force", "implementation"], "problem_rating": "1400", "solved_by": "x2363"},
{"url": "https://codeforces.com//problemset/problem/174/C", "name": "Range Increments", "tags": ["data structures", "greedy"], "problem_rating": "1800", "solved_by": "x1075"},
{"url": "https://codeforces.com//problemset/problem/174/B", "name": "File List", "tags": ["dp", "greedy", "implementation"], "problem_rating": "1400", "solved_by": "x2213"},
{"url": "https://codeforces.com//problemset/problem/174/A", "name": "Problem About Equation", "tags": ["math"], "problem_rating": "1100", "solved_by": "x2757"},
{"url": "https://codeforces.com//problemset/problem/173/E", "name": "Camping Groups", "tags": ["data structures", "sortings"], "problem_rating": "2600", "solved_by": "x540"},
{"url": "https://codeforces.com//problemset/problem/173/D", "name": "Deputies", "tags": ["constructive algorithms", "graphs", "greedy", "implementation"], "problem_rating": "2500", "solved_by": "x247"},
{"url": "https://codeforces.com//problemset/problem/173/C", "name": "Spiral Maximum", "tags": ["brute force", "dp"], "problem_rating": "1900", "solved_by": "x969"},
{"url": "https://codeforces.com//problemset/problem/173/B", "name": "Chamber of Secrets", "tags": ["dfs and similar", "shortest paths"], "problem_rating": "1800", "solved_by": "x2965"},
{"url": "https://codeforces.com//problemset/problem/173/A", "name": "Rock-Paper-Scissors", "tags": ["implementation", "math"], "problem_rating": "1300", "solved_by": "x2255"},
{"url": "https://codeforces.com//problemset/problem/172/E", "name": "BHTML+BCSS", "tags": ["*special problem", "dfs and similar", "expression parsing"], "problem_rating": "2200", "solved_by": "x269"},
{"url": "https://codeforces.com//problemset/problem/172/D", "name": "Calendar Reform", "tags": ["*special problem", "number theory"], "problem_rating": "1500", "solved_by": "x1388"},
{"url": "https://codeforces.com//problemset/problem/172/C", "name": "Bus", "tags": ["*special problem", "implementation", "sortings"], "problem_rating": "1500", "solved_by": "x1132"},
{"url": "https://codeforces.com//problemset/problem/172/B", "name": "Pseudorandom Sequence Period", "tags": ["*special problem", "implementation", "number theory"], "problem_rating": "1200", "solved_by": "x2700"},
{"url": "https://codeforces.com//problemset/problem/172/A", "name": "Phone Code", "tags": ["*special problem", "brute force", "implementation"], "problem_rating": "800", "solved_by": "x6015"},
{"url": "https://codeforces.com//problemset/problem/171/H", "name": "A polyline", "tags": ["*special problem", "implementation"], "problem_rating": "1700", "solved_by": "x273"},
{"url": "https://codeforces.com//problemset/problem/171/G", "name": "Mysterious numbers - 2", "tags": ["*special problem"], "problem_rating": "1600", "solved_by": "x911"},
{"url": "https://codeforces.com//problemset/problem/171/F", "name": "ucyhf", "tags": ["*special problem", "brute force", "implementation", "number theory"], "problem_rating": "1600", "solved_by": "x1262"},
{"url": "https://codeforces.com//problemset/problem/171/E", "name": "MYSTERIOUS LANGUAGE", "tags": ["*special problem"], "problem_rating": "2000", "solved_by": "x1436"},
{"url": "https://codeforces.com//problemset/problem/171/D", "name": "Broken checker", "tags": ["*special problem", "brute force"], "problem_rating": "1300", "solved_by": "x2550"},
{"url": "https://codeforces.com//problemset/problem/171/C", "name": "A Piece of Cake", "tags": ["*special problem", "implementation"], "problem_rating": "2000", "solved_by": "x1068"},
{"url": "https://codeforces.com//problemset/problem/171/B", "name": "Star", "tags": ["*special problem", "combinatorics"], "problem_rating": "1300", "solved_by": "x4000"},
{"url": "https://codeforces.com//problemset/problem/171/A", "name": "Mysterious numbers - 1", "tags": ["*special problem", "constructive algorithms"], "problem_rating": "1200", "solved_by": "x4411"},
{"url": "https://codeforces.com//problemset/problem/169/B", "name": "Replacing Digits", "tags": ["greedy"], "problem_rating": "1100", "solved_by": "x3231"},
{"url": "https://codeforces.com//problemset/problem/169/A", "name": "Chores", "tags": ["sortings"], "problem_rating": "800", "solved_by": "x6637"},
{"url": "https://codeforces.com//problemset/problem/168/B", "name": "Wizards and Minimal Spell", "tags": ["implementation", "strings"], "problem_rating": "1700", "solved_by": "x1210"},
{"url": "https://codeforces.com//problemset/problem/168/A", "name": "Wizards and Demonstration", "tags": ["implementation", "math"], "problem_rating": "900", "solved_by": "x10430"},
{"url": "https://codeforces.com//problemset/problem/167/E", "name": "Wizards and Bets", "tags": ["dfs and similar", "graphs", "math", "matrices"], "problem_rating": "2900", "solved_by": "x555"},
{"url": "https://codeforces.com//problemset/problem/167/D", "name": "Wizards and Roads", "tags": ["data structures", "divide and conquer", "graph matchings", "graphs", "greedy"], "problem_rating": "3000", "solved_by": "x192"},
{"url": "https://codeforces.com//problemset/problem/167/C", "name": "Wizards and Numbers", "tags": ["games", "math"], "problem_rating": "2300", "solved_by": "x659"},
{"url": "https://codeforces.com//problemset/problem/167/B", "name": "Wizards and Huge Prize", "tags": ["dp", "math", "probabilities"], "problem_rating": "1800", "solved_by": "x2121"},
{"url": "https://codeforces.com//problemset/problem/167/A", "name": "Wizards and Trolleybuses", "tags": ["implementation", "math"], "problem_rating": "1600", "solved_by": "x2019"},
{"url": "https://codeforces.com//problemset/problem/166/E", "name": "Tetrahedron", "tags": ["dp", "math", "matrices"], "problem_rating": "1500", "solved_by": "x20456"},
{"url": "https://codeforces.com//problemset/problem/166/D", "name": "Shoe Store", "tags": ["dp", "graph matchings", "greedy", "sortings", "two pointers"], "problem_rating": "2500", "solved_by": "x349"},
{"url": "https://codeforces.com//problemset/problem/166/C", "name": "Median", "tags": ["greedy", "math", "sortings"], "problem_rating": "1500", "solved_by": "x6402"},
{"url": "https://codeforces.com//problemset/problem/166/B", "name": "Polygons", "tags": ["geometry", "sortings"], "problem_rating": "2100", "solved_by": "x2374"},
{"url": "https://codeforces.com//problemset/problem/166/A", "name": "Rank List", "tags": ["binary search", "implementation", "sortings"], "problem_rating": "1100", "solved_by": "x17240"},
{"url": "https://codeforces.com//problemset/problem/165/E", "name": "Compatible Numbers", "tags": ["bitmasks", "brute force", "dfs and similar", "dp"], "problem_rating": "2200", "solved_by": "x6496"},
{"url": "https://codeforces.com//problemset/problem/165/D", "name": "Beard Graph", "tags": ["data structures", "dsu", "trees"], "problem_rating": "2100", "solved_by": "x1608"},
{"url": "https://codeforces.com//problemset/problem/165/C", "name": "Another Problem on Strings", "tags": ["binary search", "brute force", "dp", "math", "strings", "two pointers"], "problem_rating": "1600", "solved_by": "x12057"},
{"url": "https://codeforces.com//problemset/problem/165/B", "name": "Burning Midnight Oil", "tags": ["binary search", "implementation"], "problem_rating": "1500", "solved_by": "x17148"},
{"url": "https://codeforces.com//problemset/problem/165/A", "name": "Supercentral Point", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x23106"},
{"url": "https://codeforces.com//problemset/problem/164/E", "name": "Polycarpus and Tasks", "tags": [], "problem_rating": "3100", "solved_by": "x67"},
{"url": "https://codeforces.com//problemset/problem/164/D", "name": "Minimum Diameter", "tags": ["binary search", "brute force"], "problem_rating": "3100", "solved_by": "x230"},
{"url": "https://codeforces.com//problemset/problem/164/C", "name": "Machine Programming", "tags": ["flows", "graphs"], "problem_rating": "2400", "solved_by": "x888"},
{"url": "https://codeforces.com//problemset/problem/164/B", "name": "Ancient Berland Hieroglyphs", "tags": ["two pointers"], "problem_rating": "2000", "solved_by": "x451"},
{"url": "https://codeforces.com//problemset/problem/164/A", "name": "Variable, or There and Back Again", "tags": ["dfs and similar", "graphs"], "problem_rating": "1700", "solved_by": "x989"},
{"url": "https://codeforces.com//problemset/problem/163/E", "name": "e-Government", "tags": ["data structures", "dfs and similar", "dp", "strings", "trees"], "problem_rating": "2800", "solved_by": "x1557"},
{"url": "https://codeforces.com//problemset/problem/163/D", "name": "Large Refrigerator", "tags": ["brute force"], "problem_rating": "2900", "solved_by": "x488"},
{"url": "https://codeforces.com//problemset/problem/163/C", "name": "Conveyor", "tags": ["sortings", "two pointers"], "problem_rating": "2100", "solved_by": "x538"},
{"url": "https://codeforces.com//problemset/problem/163/B", "name": "Lemmings", "tags": ["binary search"], "problem_rating": "2000", "solved_by": "x1050"},
{"url": "https://codeforces.com//problemset/problem/163/A", "name": "Substring and Subsequence", "tags": ["dp"], "problem_rating": "1700", "solved_by": "x2643"},
{"url": "https://codeforces.com//problemset/problem/162/J", "name": "Brackets", "tags": ["*special problem"], "problem_rating": "1800", "solved_by": "x94"},
{"url": "https://codeforces.com//problemset/problem/162/I", "name": "Truncatable primes", "tags": ["*special problem"], "problem_rating": "2000", "solved_by": "x77"},
{"url": "https://codeforces.com//problemset/problem/162/H", "name": "Alternating case", "tags": ["*special problem"], "problem_rating": "1800", "solved_by": "x218"},
{"url": "https://codeforces.com//problemset/problem/162/G", "name": "Non-decimal sum", "tags": ["*special problem"], "problem_rating": "2000", "solved_by": "x62"},
{"url": "https://codeforces.com//problemset/problem/162/F", "name": "Factorial zeros", "tags": ["*special problem"], "problem_rating": "1800", "solved_by": "x201"},
{"url": "https://codeforces.com//problemset/problem/162/E", "name": "HQ9+", "tags": ["*special problem"], "problem_rating": "1800", "solved_by": "x177"},
{"url": "https://codeforces.com//problemset/problem/162/D", "name": "Remove digits", "tags": ["*special problem"], "problem_rating": "1900", "solved_by": "x228"},
{"url": "https://codeforces.com//problemset/problem/162/C", "name": "Prime factorization", "tags": ["*special problem"], "problem_rating": "1800", "solved_by": "x781"},
{"url": "https://codeforces.com//problemset/problem/162/B", "name": "Binary notation", "tags": ["*special problem"], "problem_rating": "1800", "solved_by": "x313"},
{"url": "https://codeforces.com//problemset/problem/162/A", "name": "Pentagonal numbers", "tags": ["*special problem", "implementation"], "problem_rating": "1100", "solved_by": "x802"},
{"url": "https://codeforces.com//problemset/problem/161/E", "name": "Polycarpus the Safecracker", "tags": ["brute force", "dp"], "problem_rating": "2500", "solved_by": "x464"},
{"url": "https://codeforces.com//problemset/problem/161/D", "name": "Distance in Tree", "tags": ["dfs and similar", "dp", "trees"], "problem_rating": "1800", "solved_by": "x14208"},
{"url": "https://codeforces.com//problemset/problem/161/C", "name": "Abracadabra", "tags": ["divide and conquer"], "problem_rating": "2400", "solved_by": "x643"},
{"url": "https://codeforces.com//problemset/problem/161/B", "name": "Discounts", "tags": ["constructive algorithms", "greedy", "sortings"], "problem_rating": "1700", "solved_by": "x1944"},
{"url": "https://codeforces.com//problemset/problem/161/A", "name": "Dress'em in Vests!", "tags": ["binary search", "brute force", "greedy", "two pointers"], "problem_rating": "1300", "solved_by": "x4776"},
{"url": "https://codeforces.com//problemset/problem/160/E", "name": "Buses and People", "tags": ["binary search", "data structures", "sortings"], "problem_rating": "2400", "solved_by": "x581"},
{"url": "https://codeforces.com//problemset/problem/160/D", "name": "Edges in MST", "tags": ["dfs and similar", "dsu", "graphs", "sortings"], "problem_rating": "2300", "solved_by": "x2425"},
{"url": "https://codeforces.com//problemset/problem/160/C", "name": "Find Pair", "tags": ["implementation", "math", "sortings"], "problem_rating": "1700", "solved_by": "x3419"},
{"url": "https://codeforces.com//problemset/problem/160/B", "name": "Unlucky Ticket", "tags": ["greedy", "sortings"], "problem_rating": "1100", "solved_by": "x13764"},
{"url": "https://codeforces.com//problemset/problem/160/A", "name": "Twins", "tags": ["greedy", "sortings"], "problem_rating": "900", "solved_by": "x113980"},
{"url": "https://codeforces.com//problemset/problem/159/E", "name": "Zebra Tower", "tags": ["*special problem", "data structures", "greedy", "sortings"], "problem_rating": "1700", "solved_by": "x996"},
{"url": "https://codeforces.com//problemset/problem/159/D", "name": "Palindrome pairs", "tags": ["*special problem", "brute force", "dp", "strings"], "problem_rating": "1500", "solved_by": "x4291"},
{"url": "https://codeforces.com//problemset/problem/159/C", "name": "String Manipulation 1.0", "tags": ["*special problem", "binary search", "brute force", "data structures", "strings"], "problem_rating": "1400", "solved_by": "x2957"},
{"url": "https://codeforces.com//problemset/problem/159/B", "name": "Matchmaker", "tags": ["*special problem", "greedy", "sortings"], "problem_rating": "1100", "solved_by": "x3727"},
{"url": "https://codeforces.com//problemset/problem/159/A", "name": "Friends or Not", "tags": ["*special problem", "greedy", "implementation"], "problem_rating": "1400", "solved_by": "x2468"},
{"url": "https://codeforces.com//problemset/problem/158/E", "name": "Phone Talks", "tags": ["*special problem", "dp", "sortings"], "problem_rating": "1900", "solved_by": "x1453"},
{"url": "https://codeforces.com//problemset/problem/158/D", "name": "Ice Sculptures", "tags": ["*special problem", "brute force", "number theory"], "problem_rating": "1300", "solved_by": "x6206"},
{"url": "https://codeforces.com//problemset/problem/158/C", "name": "Cd and pwd commands", "tags": ["*special problem", "data structures", "implementation"], "problem_rating": "1400", "solved_by": "x9028"},
{"url": "https://codeforces.com//problemset/problem/158/B", "name": "Taxi", "tags": ["*special problem", "greedy", "implementation"], "problem_rating": "1100", "solved_by": "x84484"},
{"url": "https://codeforces.com//problemset/problem/158/A", "name": "Next Round", "tags": ["*special problem", "implementation"], "problem_rating": "800", "solved_by": "x239616"},
{"url": "https://codeforces.com//problemset/problem/157/B", "name": "Trace", "tags": ["geometry", "sortings"], "problem_rating": "1000", "solved_by": "x13011"},
{"url": "https://codeforces.com//problemset/problem/157/A", "name": "Game Outcome", "tags": ["brute force"], "problem_rating": "800", "solved_by": "x7487"},
{"url": "https://codeforces.com//problemset/problem/156/E", "name": "Mrs. Hudson's Pancakes", "tags": ["brute force", "dp"], "problem_rating": "3000", "solved_by": "x162"},
{"url": "https://codeforces.com//problemset/problem/156/D", "name": "Clues", "tags": ["combinatorics", "graphs"], "problem_rating": "2500", "solved_by": "x1514"},
{"url": "https://codeforces.com//problemset/problem/156/C", "name": "Cipher", "tags": ["combinatorics", "dp"], "problem_rating": "2000", "solved_by": "x2349"},
{"url": "https://codeforces.com//problemset/problem/156/B", "name": "Suspects", "tags": ["constructive algorithms", "data structures", "implementation"], "problem_rating": "1600", "solved_by": "x2208"},
{"url": "https://codeforces.com//problemset/problem/156/A", "name": "Message", "tags": ["brute force"], "problem_rating": "1700", "solved_by": "x3022"},
{"url": "https://codeforces.com//problemset/problem/155/B", "name": "Combination", "tags": ["greedy", "sortings"], "problem_rating": "1100", "solved_by": "x10113"},
{"url": "https://codeforces.com//problemset/problem/155/A", "name": "I_love_\\%username\\%", "tags": ["brute force"], "problem_rating": "800", "solved_by": "x72777"},
{"url": "https://codeforces.com//problemset/problem/154/E", "name": "Martian Colony", "tags": ["geometry"], "problem_rating": "3000", "solved_by": "x92"},
{"url": "https://codeforces.com//problemset/problem/154/D", "name": "Flatland Fencing", "tags": ["games", "math"], "problem_rating": "2400", "solved_by": "x423"},
{"url": "https://codeforces.com//problemset/problem/154/C", "name": "Double Profiles", "tags": ["graphs", "hashing", "sortings"], "problem_rating": "2300", "solved_by": "x2730"},
{"url": "https://codeforces.com//problemset/problem/154/B", "name": "Colliders", "tags": ["math", "number theory"], "problem_rating": "1600", "solved_by": "x4410"},
{"url": "https://codeforces.com//problemset/problem/154/A", "name": "Hometask", "tags": ["greedy"], "problem_rating": "1600", "solved_by": "x4014"},
{"url": "https://codeforces.com//problemset/problem/153/E", "name": "Euclidean Distance", "tags": ["*special problem"], "problem_rating": "2100", "solved_by": "x78"},
{"url": "https://codeforces.com//problemset/problem/153/D", "name": "Date Change", "tags": ["*special problem"], "problem_rating": "2000", "solved_by": "x82"},
{"url": "https://codeforces.com//problemset/problem/153/C", "name": "Caesar Cipher", "tags": ["*special problem"], "problem_rating": "2200", "solved_by": "x374"},
{"url": "https://codeforces.com//problemset/problem/153/B", "name": "Binary notation", "tags": ["*special problem"], "problem_rating": "1800", "solved_by": "x156"},
{"url": "https://codeforces.com//problemset/problem/153/A", "name": "A + B", "tags": ["*special problem"], "problem_rating": "1600", "solved_by": "x768"},
{"url": "https://codeforces.com//problemset/problem/152/E", "name": "Garden", "tags": ["bitmasks", "dp", "graphs", "trees"], "problem_rating": "2500", "solved_by": "x467"},
{"url": "https://codeforces.com//problemset/problem/152/D", "name": "Frames", "tags": ["brute force"], "problem_rating": "2600", "solved_by": "x240"},
{"url": "https://codeforces.com//problemset/problem/152/C", "name": "Pocket Book", "tags": ["combinatorics"], "problem_rating": "1400", "solved_by": "x10456"},
{"url": "https://codeforces.com//problemset/problem/152/B", "name": "Steps", "tags": ["binary search", "implementation"], "problem_rating": "1300", "solved_by": "x6504"},
{"url": "https://codeforces.com//problemset/problem/152/A", "name": "Marks", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x16467"},
{"url": "https://codeforces.com//problemset/problem/151/B", "name": "Phone Numbers", "tags": ["implementation", "strings"], "problem_rating": "1200", "solved_by": "x6300"},
{"url": "https://codeforces.com//problemset/problem/151/A", "name": "Soft Drinking", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x69099"},
{"url": "https://codeforces.com//problemset/problem/150/E", "name": "Freezing with Style", "tags": ["binary search", "data structures", "divide and conquer", "trees"], "problem_rating": "3000", "solved_by": "x822"},
{"url": "https://codeforces.com//problemset/problem/150/D", "name": "Mission Impassable", "tags": ["dp", "strings"], "problem_rating": "2600", "solved_by": "x593"},
{"url": "https://codeforces.com//problemset/problem/150/C", "name": "Smart Cheater", "tags": ["data structures", "math", "probabilities"], "problem_rating": "2200", "solved_by": "x638"},
{"url": "https://codeforces.com//problemset/problem/150/B", "name": "Quantity of Strings", "tags": ["combinatorics", "dfs and similar", "graphs", "math"], "problem_rating": "1600", "solved_by": "x4052"},
{"url": "https://codeforces.com//problemset/problem/150/A", "name": "Win or Freeze", "tags": ["games", "math", "number theory"], "problem_rating": "1400", "solved_by": "x7670"},
{"url": "https://codeforces.com//problemset/problem/149/E", "name": "Martian Strings", "tags": ["string suffix structures", "strings"], "problem_rating": "2300", "solved_by": "x2226"},
{"url": "https://codeforces.com//problemset/problem/149/D", "name": "Coloring Brackets", "tags": ["dp"], "problem_rating": "1900", "solved_by": "x3689"},
{"url": "https://codeforces.com//problemset/problem/149/C", "name": "Division into Teams", "tags": ["greedy", "math", "sortings"], "problem_rating": "1500", "solved_by": "x5326"},
{"url": "https://codeforces.com//problemset/problem/149/B", "name": "Martian Clock", "tags": ["implementation"], "problem_rating": "1600", "solved_by": "x2237"},
{"url": "https://codeforces.com//problemset/problem/149/A", "name": "Business trip", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "900", "solved_by": "x38753"},
{"url": "https://codeforces.com//problemset/problem/148/E", "name": "Porcelain", "tags": ["dp"], "problem_rating": "1900", "solved_by": "x3880"},
{"url": "https://codeforces.com//problemset/problem/148/D", "name": "Bag of mice", "tags": ["dp", "games", "math", "probabilities"], "problem_rating": "1800", "solved_by": "x6976"},
{"url": "https://codeforces.com//problemset/problem/148/C", "name": "Terse princess", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1700", "solved_by": "x3082"},
{"url": "https://codeforces.com//problemset/problem/148/B", "name": "Escape", "tags": ["implementation", "math"], "problem_rating": "1500", "solved_by": "x5365"},
{"url": "https://codeforces.com//problemset/problem/148/A", "name": "Insomnia cure", "tags": ["constructive algorithms", "implementation", "math"], "problem_rating": "800", "solved_by": "x89679"},
{"url": "https://codeforces.com//problemset/problem/147/B", "name": "Smile House", "tags": ["binary search", "graphs", "matrices"], "problem_rating": "2500", "solved_by": "x765"},
{"url": "https://codeforces.com//problemset/problem/147/A", "name": "Punctuation", "tags": ["implementation", "strings"], "problem_rating": "1300", "solved_by": "x3585"},
{"url": "https://codeforces.com//problemset/problem/146/B", "name": "Lucky Mask", "tags": ["brute force", "implementation"], "problem_rating": "1300", "solved_by": "x4296"},
{"url": "https://codeforces.com//problemset/problem/146/A", "name": "Lucky Ticket", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x14843"},
{"url": "https://codeforces.com//problemset/problem/145/E", "name": "Lucky Queries", "tags": ["data structures"], "problem_rating": "2400", "solved_by": "x3000"},
{"url": "https://codeforces.com//problemset/problem/145/D", "name": "Lucky Pair", "tags": ["combinatorics", "data structures", "implementation"], "problem_rating": "2900", "solved_by": "x242"},
{"url": "https://codeforces.com//problemset/problem/145/C", "name": "Lucky Subsequence", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2100", "solved_by": "x1899"},
{"url": "https://codeforces.com//problemset/problem/145/B", "name": "Lucky Number 2", "tags": ["constructive algorithms"], "problem_rating": "1800", "solved_by": "x2171"},
{"url": "https://codeforces.com//problemset/problem/145/A", "name": "Lucky Conversion", "tags": ["greedy", "implementation"], "problem_rating": "1200", "solved_by": "x7009"},
{"url": "https://codeforces.com//problemset/problem/144/E", "name": "Competition", "tags": ["data structures", "greedy"], "problem_rating": "2200", "solved_by": "x574"},
{"url": "https://codeforces.com//problemset/problem/144/D", "name": "Missile Silos", "tags": ["data structures", "dfs and similar", "graphs", "shortest paths"], "problem_rating": "1900", "solved_by": "x3872"},
{"url": "https://codeforces.com//problemset/problem/144/C", "name": "Anagram Search", "tags": ["implementation", "strings"], "problem_rating": "1500", "solved_by": "x3931"},
{"url": "https://codeforces.com//problemset/problem/144/B", "name": "Meeting", "tags": ["implementation"], "problem_rating": "1300", "solved_by": "x5153"},
{"url": "https://codeforces.com//problemset/problem/144/A", "name": "Arrival of the General", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x92225"},
{"url": "https://codeforces.com//problemset/problem/143/B", "name": "Help Kingdom of Far Far Away 2", "tags": ["implementation", "strings"], "problem_rating": "1200", "solved_by": "x4952"},
{"url": "https://codeforces.com//problemset/problem/143/A", "name": "Help Vasilisa the Wise 2", "tags": ["brute force", "math"], "problem_rating": "1000", "solved_by": "x13470"},
{"url": "https://codeforces.com//problemset/problem/142/E", "name": "Help Greg the Dwarf 2", "tags": ["geometry"], "problem_rating": "3000", "solved_by": "x80"},
{"url": "https://codeforces.com//problemset/problem/142/D", "name": "Help Shrek and Donkey 2", "tags": ["games"], "problem_rating": "2600", "solved_by": "x341"},
{"url": "https://codeforces.com//problemset/problem/142/C", "name": "Help Caretaker", "tags": ["brute force", "dp"], "problem_rating": "2300", "solved_by": "x907"},
{"url": "https://codeforces.com//problemset/problem/142/B", "name": "Help General", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "1800", "solved_by": "x2190"},
{"url": "https://codeforces.com//problemset/problem/142/A", "name": "Help Farmer", "tags": ["brute force", "math"], "problem_rating": "1600", "solved_by": "x2590"},
{"url": "https://codeforces.com//problemset/problem/141/E", "name": "Clearing Up", "tags": ["constructive algorithms", "dp", "dsu", "graphs"], "problem_rating": "2300", "solved_by": "x918"},
{"url": "https://codeforces.com//problemset/problem/141/D", "name": "Take-off Ramps", "tags": ["graphs", "shortest paths"], "problem_rating": "2300", "solved_by": "x889"},
{"url": "https://codeforces.com//problemset/problem/141/C", "name": "Queue", "tags": ["constructive algorithms", "greedy", "sortings"], "problem_rating": "1800", "solved_by": "x2410"},
{"url": "https://codeforces.com//problemset/problem/141/B", "name": "Hopscotch", "tags": ["geometry", "math"], "problem_rating": "1400", "solved_by": "x5250"},
{"url": "https://codeforces.com//problemset/problem/141/A", "name": "Amusing Joke", "tags": ["implementation", "sortings", "strings"], "problem_rating": "800", "solved_by": "x80301"},
{"url": "https://codeforces.com//problemset/problem/140/F", "name": "New Year Snowflake", "tags": ["geometry", "sortings"], "problem_rating": "2600", "solved_by": "x365"},
{"url": "https://codeforces.com//problemset/problem/140/E", "name": "New Year Garland", "tags": ["combinatorics", "dp"], "problem_rating": "2600", "solved_by": "x883"},
{"url": "https://codeforces.com//problemset/problem/140/D", "name": "New Year Contest", "tags": ["greedy", "sortings"], "problem_rating": "1800", "solved_by": "x2198"},
{"url": "https://codeforces.com//problemset/problem/140/C", "name": "New Year Snowmen", "tags": ["binary search", "data structures", "greedy"], "problem_rating": "1800", "solved_by": "x4303"},
{"url": "https://codeforces.com//problemset/problem/140/B", "name": "New Year Cards", "tags": ["brute force", "greedy", "implementation"], "problem_rating": "1800", "solved_by": "x1669"},
{"url": "https://codeforces.com//problemset/problem/140/A", "name": "New Year Table", "tags": ["geometry", "math"], "problem_rating": "1700", "solved_by": "x4115"},
{"url": "https://codeforces.com//problemset/problem/139/B", "name": "Wallpaper", "tags": ["implementation", "math"], "problem_rating": "1600", "solved_by": "x1288"},
{"url": "https://codeforces.com//problemset/problem/139/A", "name": "Petr and Book", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x29950"},
{"url": "https://codeforces.com//problemset/problem/138/E", "name": "Hellish Constraints", "tags": ["brute force", "dp", "two pointers"], "problem_rating": "2900", "solved_by": "x171"},
{"url": "https://codeforces.com//problemset/problem/138/D", "name": "World of Darkraft", "tags": ["dp", "games"], "problem_rating": "2500", "solved_by": "x478"},
{"url": "https://codeforces.com//problemset/problem/138/C", "name": "Mushroom Gnomes - 2", "tags": ["binary search", "data structures", "probabilities", "sortings"], "problem_rating": "2200", "solved_by": "x859"},
{"url": "https://codeforces.com//problemset/problem/138/B", "name": "Digits Permutations", "tags": ["greedy"], "problem_rating": "1900", "solved_by": "x1015"},
{"url": "https://codeforces.com//problemset/problem/138/A", "name": "Literature Lesson", "tags": ["implementation"], "problem_rating": "1600", "solved_by": "x2364"},
{"url": "https://codeforces.com//problemset/problem/137/E", "name": "Last Chance", "tags": ["data structures", "implementation", "strings"], "problem_rating": "2000", "solved_by": "x1200"},
{"url": "https://codeforces.com//problemset/problem/137/D", "name": "Palindromes", "tags": ["dp", "strings"], "problem_rating": "1900", "solved_by": "x1488"},
{"url": "https://codeforces.com//problemset/problem/137/C", "name": "History", "tags": ["sortings"], "problem_rating": "1500", "solved_by": "x7134"},
{"url": "https://codeforces.com//problemset/problem/137/B", "name": "Permutation", "tags": ["greedy"], "problem_rating": "1000", "solved_by": "x13493"},
{"url": "https://codeforces.com//problemset/problem/137/A", "name": "Postcards and photos", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x7032"},
{"url": "https://codeforces.com//problemset/problem/136/B", "name": "Ternary Logic", "tags": ["implementation", "math"], "problem_rating": "1100", "solved_by": "x4812"},
{"url": "https://codeforces.com//problemset/problem/136/A", "name": "Presents", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x113055"},
{"url": "https://codeforces.com//problemset/problem/135/E", "name": "Weak Subsequence", "tags": ["combinatorics"], "problem_rating": "3000", "solved_by": "x269"},
{"url": "https://codeforces.com//problemset/problem/135/D", "name": "Cycle", "tags": ["brute force", "dfs and similar", "implementation"], "problem_rating": "2500", "solved_by": "x295"},
{"url": "https://codeforces.com//problemset/problem/135/C", "name": "Zero-One", "tags": ["constructive algorithms", "games", "greedy"], "problem_rating": "1900", "solved_by": "x1325"},
{"url": "https://codeforces.com//problemset/problem/135/B", "name": "Rectangle and Square", "tags": ["brute force", "geometry", "math"], "problem_rating": "1600", "solved_by": "x2322"},
{"url": "https://codeforces.com//problemset/problem/135/A", "name": "Replacement", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "1300", "solved_by": "x7492"},
{"url": "https://codeforces.com//problemset/problem/134/C", "name": "Swaps", "tags": ["constructive algorithms", "graphs", "greedy"], "problem_rating": "2200", "solved_by": "x466"},
{"url": "https://codeforces.com//problemset/problem/134/B", "name": "Pairs of Numbers", "tags": ["brute force", "dfs and similar", "math", "number theory"], "problem_rating": "1900", "solved_by": "x1973"},
{"url": "https://codeforces.com//problemset/problem/134/A", "name": "Average Numbers", "tags": ["brute force", "implementation"], "problem_rating": "1200", "solved_by": "x3854"},
{"url": "https://codeforces.com//problemset/problem/133/B", "name": "Unary", "tags": ["implementation"], "problem_rating": "1200", "solved_by": "x8732"},
{"url": "https://codeforces.com//problemset/problem/133/A", "name": "HQ9+", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x102622"},
{"url": "https://codeforces.com//problemset/problem/132/E", "name": "Bits of merry old England", "tags": ["flows", "graphs"], "problem_rating": "2700", "solved_by": "x528"},
{"url": "https://codeforces.com//problemset/problem/132/D", "name": "Constants in the language of Shakespeare", "tags": ["constructive algorithms", "dp", "greedy"], "problem_rating": "2100", "solved_by": "x608"},
{"url": "https://codeforces.com//problemset/problem/132/C", "name": "Logo Turtle", "tags": ["dp"], "problem_rating": "1800", "solved_by": "x2292"},
{"url": "https://codeforces.com//problemset/problem/132/B", "name": "Piet", "tags": ["implementation"], "problem_rating": "2100", "solved_by": "x659"},
{"url": "https://codeforces.com//problemset/problem/132/A", "name": "Turing Tape", "tags": ["implementation"], "problem_rating": "1300", "solved_by": "x2752"},
{"url": "https://codeforces.com//problemset/problem/131/F", "name": "Present to Mom", "tags": ["binary search", "two pointers"], "problem_rating": "2000", "solved_by": "x636"},
{"url": "https://codeforces.com//problemset/problem/131/E", "name": "Yet Another Task with Queens", "tags": ["sortings"], "problem_rating": "1700", "solved_by": "x1828"},
{"url": "https://codeforces.com//problemset/problem/131/D", "name": "Subway", "tags": ["dfs and similar", "graphs"], "problem_rating": "1600", "solved_by": "x4585"},
{"url": "https://codeforces.com//problemset/problem/131/C", "name": "The World is a Theatre", "tags": ["combinatorics", "math"], "problem_rating": "1400", "solved_by": "x10890"},
{"url": "https://codeforces.com//problemset/problem/131/B", "name": "Opposites Attract", "tags": ["implementation", "math"], "problem_rating": "1200", "solved_by": "x6924"},
{"url": "https://codeforces.com//problemset/problem/131/A", "name": "cAPS lOCK", "tags": ["implementation", "strings"], "problem_rating": "1000", "solved_by": "x83408"},
{"url": "https://codeforces.com//problemset/problem/130/J", "name": "Date calculation", "tags": ["*special problem"], "problem_rating": "1800", "solved_by": "x329"},
{"url": "https://codeforces.com//problemset/problem/130/I", "name": "Array sorting", "tags": ["*special problem", "sortings"], "problem_rating": "2300", "solved_by": "x167"},
{"url": "https://codeforces.com//problemset/problem/130/H", "name": "Balanced brackets", "tags": ["*special problem"], "problem_rating": "1600", "solved_by": "x545"},
{"url": "https://codeforces.com//problemset/problem/130/G", "name": "CAPS LOCK ON", "tags": ["*special problem"], "problem_rating": "1700", "solved_by": "x276"},
{"url": "https://codeforces.com//problemset/problem/130/F", "name": "Prime factorization", "tags": ["*special problem"], "problem_rating": "1600", "solved_by": "x276"},
{"url": "https://codeforces.com//problemset/problem/130/E", "name": "Tribonacci numbers", "tags": ["*special problem"], "problem_rating": "1600", "solved_by": "x295"},
{"url": "https://codeforces.com//problemset/problem/130/D", "name": "Exponentiation", "tags": ["*special problem"], "problem_rating": "1500", "solved_by": "x389"},
{"url": "https://codeforces.com//problemset/problem/130/C", "name": "Decimal sum", "tags": ["*special problem"], "problem_rating": "1500", "solved_by": "x491"},
{"url": "https://codeforces.com//problemset/problem/130/B", "name": "Gnikool Ssalg", "tags": ["*special problem", "implementation", "strings"], "problem_rating": "1400", "solved_by": "x524"},
{"url": "https://codeforces.com//problemset/problem/130/A", "name": "Hexagonal numbers", "tags": ["*special problem", "implementation"], "problem_rating": "900", "solved_by": "x1593"},
{"url": "https://codeforces.com//problemset/problem/129/B", "name": "Students and Shoelaces", "tags": ["brute force", "dfs and similar", "graphs", "implementation"], "problem_rating": "1200", "solved_by": "x11928"},
{"url": "https://codeforces.com//problemset/problem/129/A", "name": "Cookies", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x22227"},
{"url": "https://codeforces.com//problemset/problem/128/E", "name": "Birthday", "tags": ["geometry", "math"], "problem_rating": "2900", "solved_by": "x97"},
{"url": "https://codeforces.com//problemset/problem/128/D", "name": "Numbers", "tags": ["constructive algorithms", "implementation"], "problem_rating": "2000", "solved_by": "x1101"},
{"url": "https://codeforces.com//problemset/problem/128/C", "name": "Games with Rectangle", "tags": ["combinatorics", "dp"], "problem_rating": "2000", "solved_by": "x2749"},
{"url": "https://codeforces.com//problemset/problem/128/B", "name": "String", "tags": ["brute force", "constructive algorithms", "hashing", "implementation", "string suffix structures", "strings"], "problem_rating": "2100", "solved_by": "x2492"},
{"url": "https://codeforces.com//problemset/problem/128/A", "name": "Statues", "tags": ["dfs and similar"], "problem_rating": "1500", "solved_by": "x3153"},
{"url": "https://codeforces.com//problemset/problem/127/B", "name": "Canvas Frames", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x8475"},
{"url": "https://codeforces.com//problemset/problem/127/A", "name": "Wasted Time", "tags": ["geometry"], "problem_rating": "900", "solved_by": "x10942"},
{"url": "https://codeforces.com//problemset/problem/126/E", "name": "Pills", "tags": ["brute force", "flows"], "problem_rating": "2900", "solved_by": "x83"},
{"url": "https://codeforces.com//problemset/problem/126/D", "name": "Fibonacci Sums", "tags": ["dp", "math"], "problem_rating": "2300", "solved_by": "x813"},
{"url": "https://codeforces.com//problemset/problem/126/C", "name": "E-reader Display", "tags": ["constructive algorithms", "greedy"], "problem_rating": "2000", "solved_by": "x715"},
{"url": "https://codeforces.com//problemset/problem/126/B", "name": "Password", "tags": ["binary search", "dp", "hashing", "string suffix structures", "strings"], "problem_rating": "1700", "solved_by": "x18664"},
{"url": "https://codeforces.com//problemset/problem/126/A", "name": "Hot Bath", "tags": ["binary search", "brute force", "math"], "problem_rating": "1900", "solved_by": "x1423"},
{"url": "https://codeforces.com//problemset/problem/125/E", "name": "MST Company", "tags": ["binary search", "graphs"], "problem_rating": "2400", "solved_by": "x1041"},
{"url": "https://codeforces.com//problemset/problem/125/D", "name": "Two progressions", "tags": ["constructive algorithms", "greedy"], "problem_rating": "2200", "solved_by": "x394"},
{"url": "https://codeforces.com//problemset/problem/125/C", "name": "Hobbits' Party", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1600", "solved_by": "x908"},
{"url": "https://codeforces.com//problemset/problem/125/B", "name": "Simple XML", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x2815"},
{"url": "https://codeforces.com//problemset/problem/125/A", "name": "Measuring Lengths in Baden", "tags": ["math"], "problem_rating": "1400", "solved_by": "x2668"},
{"url": "https://codeforces.com//problemset/problem/124/B", "name": "Permutations", "tags": ["brute force", "combinatorics", "implementation"], "problem_rating": "1400", "solved_by": "x3831"},
{"url": "https://codeforces.com//problemset/problem/124/A", "name": "The number of positions", "tags": ["math"], "problem_rating": "1000", "solved_by": "x37188"},
{"url": "https://codeforces.com//problemset/problem/123/E", "name": "Maze", "tags": ["dfs and similar", "dp", "probabilities", "trees"], "problem_rating": "2500", "solved_by": "x706"},
{"url": "https://codeforces.com//problemset/problem/123/D", "name": "String", "tags": ["string suffix structures"], "problem_rating": "2300", "solved_by": "x1191"},
{"url": "https://codeforces.com//problemset/problem/123/C", "name": "Brackets", "tags": ["combinatorics", "dp", "greedy"], "problem_rating": "2300", "solved_by": "x598"},
{"url": "https://codeforces.com//problemset/problem/123/B", "name": "Squares", "tags": ["math"], "problem_rating": "1800", "solved_by": "x1104"},
{"url": "https://codeforces.com//problemset/problem/123/A", "name": "Prime Permutation", "tags": ["implementation", "number theory", "strings"], "problem_rating": "1300", "solved_by": "x3548"},
{"url": "https://codeforces.com//problemset/problem/122/B", "name": "Lucky Substring", "tags": ["brute force", "implementation"], "problem_rating": "1000", "solved_by": "x12176"},
{"url": "https://codeforces.com//problemset/problem/122/A", "name": "Lucky Division", "tags": ["brute force", "number theory"], "problem_rating": "1000", "solved_by": "x119475"},
{"url": "https://codeforces.com//problemset/problem/121/E", "name": "Lucky Array", "tags": ["data structures"], "problem_rating": "2400", "solved_by": "x1682"},
{"url": "https://codeforces.com//problemset/problem/121/D", "name": "Lucky Segments", "tags": ["binary search", "implementation", "two pointers"], "problem_rating": "2500", "solved_by": "x273"},
{"url": "https://codeforces.com//problemset/problem/121/C", "name": "Lucky Permutation", "tags": ["brute force", "combinatorics", "number theory"], "problem_rating": "1900", "solved_by": "x1274"},
{"url": "https://codeforces.com//problemset/problem/121/B", "name": "Lucky Transformation", "tags": ["strings"], "problem_rating": "1500", "solved_by": "x2552"},
{"url": "https://codeforces.com//problemset/problem/121/A", "name": "Lucky Sum", "tags": ["implementation"], "problem_rating": "1100", "solved_by": "x9000"},
{"url": "https://codeforces.com//problemset/problem/120/J", "name": "Minimum Sum", "tags": ["divide and conquer", "geometry", "sortings"], "problem_rating": "1900", "solved_by": "x911"},
{"url": "https://codeforces.com//problemset/problem/120/I", "name": "Luck is in Numbers", "tags": ["greedy"], "problem_rating": "2200", "solved_by": "x303"},
{"url": "https://codeforces.com//problemset/problem/120/H", "name": "Brevity is Soul of Wit", "tags": ["graph matchings"], "problem_rating": "1800", "solved_by": "x1364"},
{"url": "https://codeforces.com//problemset/problem/120/G", "name": "Boom", "tags": ["implementation"], "problem_rating": "1800", "solved_by": "x684"},
{"url": "https://codeforces.com//problemset/problem/120/F", "name": "Spiders", "tags": ["dp", "greedy", "trees"], "problem_rating": "1400", "solved_by": "x3540"},
{"url": "https://codeforces.com//problemset/problem/120/E", "name": "Put Knight!", "tags": ["games", "math"], "problem_rating": "1400", "solved_by": "x2676"},
{"url": "https://codeforces.com//problemset/problem/120/D", "name": "Three Sons", "tags": ["brute force"], "problem_rating": "1400", "solved_by": "x1908"},
{"url": "https://codeforces.com//problemset/problem/120/C", "name": "Winnie-the-Pooh and honey", "tags": ["implementation", "math"], "problem_rating": "1100", "solved_by": "x3622"},
{"url": "https://codeforces.com//problemset/problem/120/B", "name": "Quiz League", "tags": ["implementation"], "problem_rating": "1100", "solved_by": "x3394"},
{"url": "https://codeforces.com//problemset/problem/120/A", "name": "Elevator", "tags": ["brute force", "implementation", "math"], "problem_rating": "1000", "solved_by": "x4535"},
{"url": "https://codeforces.com//problemset/problem/119/E", "name": "Alternative Reality", "tags": ["geometry"], "problem_rating": "2400", "solved_by": "x94"},
{"url": "https://codeforces.com//problemset/problem/119/D", "name": "String Transformation", "tags": ["hashing", "strings"], "problem_rating": "2500", "solved_by": "x482"},
{"url": "https://codeforces.com//problemset/problem/119/C", "name": "Education Reform", "tags": ["dp"], "problem_rating": "2000", "solved_by": "x879"},
{"url": "https://codeforces.com//problemset/problem/119/B", "name": "Before Exam", "tags": ["constructive algorithms", "implementation", "sortings"], "problem_rating": "1900", "solved_by": "x1071"},
{"url": "https://codeforces.com//problemset/problem/119/A", "name": "Epic Game", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x27155"},
{"url": "https://codeforces.com//problemset/problem/118/E", "name": "Bertown roads", "tags": ["dfs and similar", "graphs"], "problem_rating": "2000", "solved_by": "x6366"},
{"url": "https://codeforces.com//problemset/problem/118/D", "name": "Caesar's Legions", "tags": ["dp"], "problem_rating": "1700", "solved_by": "x17088"},
{"url": "https://codeforces.com//problemset/problem/118/C", "name": "Fancy Number", "tags": ["brute force", "greedy", "sortings", "strings"], "problem_rating": "1900", "solved_by": "x2556"},
{"url": "https://codeforces.com//problemset/problem/118/B", "name": "Present from Lena", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1000", "solved_by": "x29213"},
{"url": "https://codeforces.com//problemset/problem/118/A", "name": "String Task", "tags": ["implementation", "strings"], "problem_rating": "1000", "solved_by": "x186430"},
{"url": "https://codeforces.com//problemset/problem/117/E", "name": "Tree or not Tree", "tags": ["data structures", "divide and conquer", "implementation", "trees"], "problem_rating": "2900", "solved_by": "x319"},
{"url": "https://codeforces.com//problemset/problem/117/D", "name": "Not Quick Transformation", "tags": ["divide and conquer", "math"], "problem_rating": "2500", "solved_by": "x332"},
{"url": "https://codeforces.com//problemset/problem/117/C", "name": "Cycle", "tags": ["dfs and similar", "graphs"], "problem_rating": "2000", "solved_by": "x2581"},
{"url": "https://codeforces.com//problemset/problem/117/B", "name": "Very Interesting Game", "tags": ["brute force", "number theory"], "problem_rating": "1800", "solved_by": "x1547"},
{"url": "https://codeforces.com//problemset/problem/117/A", "name": "Elevator", "tags": ["implementation", "math"], "problem_rating": "1300", "solved_by": "x1987"},
{"url": "https://codeforces.com//problemset/problem/116/B", "name": "Little Pigs and Wolves", "tags": ["greedy", "implementation"], "problem_rating": "1100", "solved_by": "x13602"},
{"url": "https://codeforces.com//problemset/problem/116/A", "name": "Tram", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x136363"},
{"url": "https://codeforces.com//problemset/problem/115/E", "name": "Linear Kingdom Races", "tags": ["data structures", "dp"], "problem_rating": "2400", "solved_by": "x1436"},
{"url": "https://codeforces.com//problemset/problem/115/D", "name": "Unambiguous Arithmetic Expression", "tags": ["dp", "expression parsing"], "problem_rating": "2600", "solved_by": "x379"},
{"url": "https://codeforces.com//problemset/problem/115/C", "name": "Plumber", "tags": ["math"], "problem_rating": "2200", "solved_by": "x591"},
{"url": "https://codeforces.com//problemset/problem/115/B", "name": "Lawnmower", "tags": ["greedy", "sortings"], "problem_rating": "1500", "solved_by": "x2453"},
{"url": "https://codeforces.com//problemset/problem/115/A", "name": "Party", "tags": ["dfs and similar", "graphs", "trees"], "problem_rating": "900", "solved_by": "x33616"},
{"url": "https://codeforces.com//problemset/problem/114/B", "name": "PFAST Inc.", "tags": ["bitmasks", "brute force", "graphs"], "problem_rating": "1500", "solved_by": "x3571"},
{"url": "https://codeforces.com//problemset/problem/114/A", "name": "Cifera", "tags": ["math"], "problem_rating": "1000", "solved_by": "x13992"},
{"url": "https://codeforces.com//problemset/problem/113/E", "name": "Sleeping", "tags": ["combinatorics", "implementation", "math"], "problem_rating": "2700", "solved_by": "x118"},
{"url": "https://codeforces.com//problemset/problem/113/D", "name": "Museum", "tags": ["math", "matrices", "probabilities"], "problem_rating": "2700", "solved_by": "x658"},
{"url": "https://codeforces.com//problemset/problem/113/C", "name": "Double Happiness", "tags": ["brute force", "math", "number theory"], "problem_rating": "2200", "solved_by": "x1217"},
{"url": "https://codeforces.com//problemset/problem/113/B", "name": "Petr#", "tags": ["brute force", "data structures", "hashing", "strings"], "problem_rating": "2000", "solved_by": "x2764"},
{"url": "https://codeforces.com//problemset/problem/113/A", "name": "Grammar Lessons", "tags": ["implementation", "strings"], "problem_rating": "1600", "solved_by": "x2271"},
{"url": "https://codeforces.com//problemset/problem/112/B", "name": "Petya and Square", "tags": ["implementation", "math"], "problem_rating": "1200", "solved_by": "x4106"},
{"url": "https://codeforces.com//problemset/problem/112/A", "name": "Petya and Strings", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x216180"},
{"url": "https://codeforces.com//problemset/problem/111/E", "name": "Petya and Rectangle", "tags": [], "problem_rating": "2900", "solved_by": "x65"},
{"url": "https://codeforces.com//problemset/problem/111/D", "name": "Petya and Coloring", "tags": ["combinatorics", "dp"], "problem_rating": "2300", "solved_by": "x727"},
{"url": "https://codeforces.com//problemset/problem/111/C", "name": "Petya and Spiders", "tags": ["bitmasks", "dp", "dsu"], "problem_rating": "2100", "solved_by": "x1333"},
{"url": "https://codeforces.com//problemset/problem/111/B", "name": "Petya and Divisors", "tags": ["binary search", "data structures", "number theory"], "problem_rating": "1900", "solved_by": "x3618"},
{"url": "https://codeforces.com//problemset/problem/111/A", "name": "Petya and Inequiations", "tags": ["greedy"], "problem_rating": "1400", "solved_by": "x4703"},
{"url": "https://codeforces.com//problemset/problem/110/B", "name": "Lucky String", "tags": ["constructive algorithms", "strings"], "problem_rating": "1100", "solved_by": "x10087"},
{"url": "https://codeforces.com//problemset/problem/110/A", "name": "Nearly Lucky Number", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x147893"},
{"url": "https://codeforces.com//problemset/problem/109/E", "name": "Lucky Interval", "tags": ["brute force", "math"], "problem_rating": "2700", "solved_by": "x101"},
{"url": "https://codeforces.com//problemset/problem/109/D", "name": "Lucky Sorting", "tags": ["constructive algorithms", "sortings"], "problem_rating": "2000", "solved_by": "x659"},
{"url": "https://codeforces.com//problemset/problem/109/C", "name": "Lucky Tree", "tags": ["dp", "dsu", "trees"], "problem_rating": "1900", "solved_by": "x3289"},
{"url": "https://codeforces.com//problemset/problem/109/B", "name": "Lucky Probability", "tags": ["brute force", "probabilities"], "problem_rating": "1900", "solved_by": "x1395"},
{"url": "https://codeforces.com//problemset/problem/109/A", "name": "Lucky Sum of Digits", "tags": ["brute force", "implementation"], "problem_rating": "1000", "solved_by": "x17077"},
{"url": "https://codeforces.com//problemset/problem/108/B", "name": "Datatypes", "tags": ["math", "sortings"], "problem_rating": "1400", "solved_by": "x2434"},
{"url": "https://codeforces.com//problemset/problem/108/A", "name": "Palindromic Times", "tags": ["implementation", "strings"], "problem_rating": "1000", "solved_by": "x9290"},
{"url": "https://codeforces.com//problemset/problem/107/E", "name": "Darts", "tags": ["geometry", "probabilities"], "problem_rating": "2700", "solved_by": "x128"},
{"url": "https://codeforces.com//problemset/problem/107/D", "name": "Crime Management", "tags": ["dp", "graphs", "matrices"], "problem_rating": "2400", "solved_by": "x402"},
{"url": "https://codeforces.com//problemset/problem/107/C", "name": "Arrangement", "tags": ["bitmasks", "dp"], "problem_rating": "2400", "solved_by": "x364"},
{"url": "https://codeforces.com//problemset/problem/107/B", "name": "Basketball Team", "tags": ["combinatorics", "dp", "math", "probabilities"], "problem_rating": "1600", "solved_by": "x3390"},
{"url": "https://codeforces.com//problemset/problem/107/A", "name": "Dorm Water Supply", "tags": ["dfs and similar", "graphs"], "problem_rating": "1400", "solved_by": "x5017"},
{"url": "https://codeforces.com//problemset/problem/106/E", "name": "Space Rescuers", "tags": ["geometry", "ternary search"], "problem_rating": "2100", "solved_by": "x854"},
{"url": "https://codeforces.com//problemset/problem/106/D", "name": "Treasure Island", "tags": ["brute force", "implementation"], "problem_rating": "1700", "solved_by": "x1306"},
{"url": "https://codeforces.com//problemset/problem/106/C", "name": "Buns", "tags": ["dp"], "problem_rating": "1700", "solved_by": "x5835"},
{"url": "https://codeforces.com//problemset/problem/106/B", "name": "Choosing Laptop", "tags": ["brute force", "implementation"], "problem_rating": "1000", "solved_by": "x6027"},
{"url": "https://codeforces.com//problemset/problem/106/A", "name": "Card Game", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x7524"},
{"url": "https://codeforces.com//problemset/problem/105/E", "name": "Lift and Throw", "tags": ["brute force"], "problem_rating": "2500", "solved_by": "x184"},
{"url": "https://codeforces.com//problemset/problem/105/D", "name": "Entertaining Geodetics", "tags": ["brute force", "dsu", "implementation"], "problem_rating": "2700", "solved_by": "x138"},
{"url": "https://codeforces.com//problemset/problem/105/C", "name": "Item World", "tags": ["brute force", "implementation", "sortings"], "problem_rating": "2200", "solved_by": "x330"},
{"url": "https://codeforces.com//problemset/problem/105/B", "name": "Dark Assembly", "tags": ["brute force", "probabilities"], "problem_rating": "1800", "solved_by": "x806"},
{"url": "https://codeforces.com//problemset/problem/105/A", "name": "Transmigration", "tags": ["implementation"], "problem_rating": "1700", "solved_by": "x1825"},
{"url": "https://codeforces.com//problemset/problem/104/A", "name": "Blackjack", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x15137"},
{"url": "https://codeforces.com//problemset/problem/103/E", "name": "Buying Sets", "tags": ["flows", "graph matchings"], "problem_rating": "2900", "solved_by": "x845"},
{"url": "https://codeforces.com//problemset/problem/103/D", "name": "Time to Raid Cowavans", "tags": ["brute force", "data structures", "sortings"], "problem_rating": "2100", "solved_by": "x2042"},
{"url": "https://codeforces.com//problemset/problem/103/C", "name": "Russian Roulette", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1900", "solved_by": "x940"},
{"url": "https://codeforces.com//problemset/problem/103/B", "name": "Cthulhu", "tags": ["dfs and similar", "dsu", "graphs"], "problem_rating": "1500", "solved_by": "x8658"},
{"url": "https://codeforces.com//problemset/problem/103/A", "name": "Testing Pants for Sadness", "tags": ["greedy", "implementation", "math"], "problem_rating": "1100", "solved_by": "x5927"},
{"url": "https://codeforces.com//problemset/problem/102/B", "name": "Sum of Digits", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x25482"},
{"url": "https://codeforces.com//problemset/problem/102/A", "name": "Clothes", "tags": ["brute force"], "problem_rating": "1200", "solved_by": "x2959"},
{"url": "https://codeforces.com//problemset/problem/101/E", "name": "Candies and Stones", "tags": ["divide and conquer", "dp"], "problem_rating": "2500", "solved_by": "x480"},
{"url": "https://codeforces.com//problemset/problem/101/D", "name": "Castle", "tags": ["dp", "greedy", "probabilities", "sortings", "trees"], "problem_rating": "2300", "solved_by": "x675"},
{"url": "https://codeforces.com//problemset/problem/101/C", "name": "Vectors", "tags": ["implementation", "math"], "problem_rating": "2000", "solved_by": "x690"},
{"url": "https://codeforces.com//problemset/problem/101/B", "name": "Buses", "tags": ["binary search", "data structures", "dp"], "problem_rating": "1700", "solved_by": "x2529"},
{"url": "https://codeforces.com//problemset/problem/101/A", "name": "Homework", "tags": ["greedy"], "problem_rating": "1200", "solved_by": "x3756"},
{"url": "https://codeforces.com//problemset/problem/100/J", "name": "Interval Coloring", "tags": ["*special problem", "greedy", "math"], "problem_rating": "2400", "solved_by": "x62"},
{"url": "https://codeforces.com//problemset/problem/100/I", "name": "Rotation", "tags": ["*special problem", "geometry", "math"], "problem_rating": "1500", "solved_by": "x345"},
{"url": "https://codeforces.com//problemset/problem/100/H", "name": "Battleship", "tags": ["*special problem", "dfs and similar", "implementation"], "problem_rating": "2100", "solved_by": "x76"},
{"url": "https://codeforces.com//problemset/problem/100/G", "name": "Name the album", "tags": ["*special problem", "data structures", "implementation"], "problem_rating": "1800", "solved_by": "x112"},
{"url": "https://codeforces.com//problemset/problem/100/F", "name": "Polynom", "tags": ["*special problem", "implementation"], "problem_rating": "1800", "solved_by": "x135"},
{"url": "https://codeforces.com//problemset/problem/100/E", "name": "Lamps in a Line", "tags": ["*special problem", "math"], "problem_rating": "1600", "solved_by": "x269"},
{"url": "https://codeforces.com//problemset/problem/100/D", "name": "World of Mouth", "tags": ["*special problem", "strings"], "problem_rating": "1500", "solved_by": "x302"},
{"url": "https://codeforces.com//problemset/problem/100/C", "name": "A+B", "tags": ["*special problem", "implementation"], "problem_rating": "1400", "solved_by": "x526"},
{"url": "https://codeforces.com//problemset/problem/100/B", "name": "Friendly Numbers", "tags": ["*special problem", "implementation"], "problem_rating": "1500", "solved_by": "x539"},
{"url": "https://codeforces.com//problemset/problem/100/A", "name": "Carpeting the Room", "tags": ["*special problem", "implementation"], "problem_rating": "1100", "solved_by": "x909"},
{"url": "https://codeforces.com//problemset/problem/99/B", "name": "Help Chef Gerasim", "tags": ["implementation", "sortings"], "problem_rating": "1300", "solved_by": "x2927"},
{"url": "https://codeforces.com//problemset/problem/99/A", "name": "Help Far Away Kingdom", "tags": ["strings"], "problem_rating": "800", "solved_by": "x6612"},
{"url": "https://codeforces.com//problemset/problem/98/E", "name": "Help Shrek and Donkey", "tags": ["dp", "games", "math", "probabilities"], "problem_rating": "2700", "solved_by": "x467"},
{"url": "https://codeforces.com//problemset/problem/98/D", "name": "Help Monks", "tags": ["constructive algorithms"], "problem_rating": "2500", "solved_by": "x182"},
{"url": "https://codeforces.com//problemset/problem/98/C", "name": "Help Greg the Dwarf", "tags": ["geometry", "ternary search"], "problem_rating": "2500", "solved_by": "x303"},
{"url": "https://codeforces.com//problemset/problem/98/B", "name": "Help King", "tags": ["implementation", "probabilities", "trees"], "problem_rating": "2200", "solved_by": "x118"},
{"url": "https://codeforces.com//problemset/problem/98/A", "name": "Help Victoria the Wise", "tags": ["brute force", "implementation"], "problem_rating": "1700", "solved_by": "x1176"},
{"url": "https://codeforces.com//problemset/problem/97/E", "name": "Leaders", "tags": ["dfs and similar", "dsu", "graphs", "trees"], "problem_rating": "2200", "solved_by": "x375"},
{"url": "https://codeforces.com//problemset/problem/97/D", "name": "Robot in Basement", "tags": ["bitmasks", "brute force", "implementation"], "problem_rating": "2700", "solved_by": "x243"},
{"url": "https://codeforces.com//problemset/problem/97/C", "name": "Winning Strategy", "tags": ["binary search", "graphs", "math", "shortest paths"], "problem_rating": "2400", "solved_by": "x302"},
{"url": "https://codeforces.com//problemset/problem/97/B", "name": "Superset", "tags": ["constructive algorithms", "divide and conquer"], "problem_rating": "2300", "solved_by": "x811"},
{"url": "https://codeforces.com//problemset/problem/97/A", "name": "Domino", "tags": ["brute force", "implementation"], "problem_rating": "2400", "solved_by": "x258"},
{"url": "https://codeforces.com//problemset/problem/96/B", "name": "Lucky Numbers (easy)", "tags": ["binary search", "bitmasks", "brute force"], "problem_rating": "1300", "solved_by": "x14921"},
{"url": "https://codeforces.com//problemset/problem/96/A", "name": "Football", "tags": ["implementation", "strings"], "problem_rating": "900", "solved_by": "x153304"},
{"url": "https://codeforces.com//problemset/problem/95/E", "name": "Lucky Country", "tags": ["dp", "dsu", "graphs"], "problem_rating": "2500", "solved_by": "x1429"},
{"url": "https://codeforces.com//problemset/problem/95/D", "name": "Horse Races", "tags": ["dp", "math"], "problem_rating": "2500", "solved_by": "x420"},
{"url": "https://codeforces.com//problemset/problem/95/C", "name": "Volleyball", "tags": ["shortest paths"], "problem_rating": "1900", "solved_by": "x2733"},
{"url": "https://codeforces.com//problemset/problem/95/B", "name": "Lucky Numbers", "tags": ["dp", "greedy"], "problem_rating": "1800", "solved_by": "x1199"},
{"url": "https://codeforces.com//problemset/problem/95/A", "name": "Hockey", "tags": ["implementation", "strings"], "problem_rating": "1600", "solved_by": "x1650"},
{"url": "https://codeforces.com//problemset/problem/94/B", "name": "Friends", "tags": ["graphs", "implementation", "math"], "problem_rating": "1300", "solved_by": "x4566"},
{"url": "https://codeforces.com//problemset/problem/94/A", "name": "Restoring Password", "tags": ["implementation", "strings"], "problem_rating": "900", "solved_by": "x10347"},
{"url": "https://codeforces.com//problemset/problem/93/E", "name": "Lostborn", "tags": ["dp", "math", "number theory"], "problem_rating": "2600", "solved_by": "x465"},
{"url": "https://codeforces.com//problemset/problem/93/D", "name": "Flags", "tags": ["dp", "math", "matrices"], "problem_rating": "2500", "solved_by": "x340"},
{"url": "https://codeforces.com//problemset/problem/93/C", "name": "Azembler", "tags": ["brute force", "implementation"], "problem_rating": "2500", "solved_by": "x413"},
{"url": "https://codeforces.com//problemset/problem/93/B", "name": "End of Exams", "tags": ["greedy"], "problem_rating": "1900", "solved_by": "x906"},
{"url": "https://codeforces.com//problemset/problem/93/A", "name": "Frames", "tags": ["implementation"], "problem_rating": "1700", "solved_by": "x1921"},
{"url": "https://codeforces.com//problemset/problem/92/B", "name": "Binary Number", "tags": ["greedy"], "problem_rating": "1300", "solved_by": "x4747"},
{"url": "https://codeforces.com//problemset/problem/92/A", "name": "Chips", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x18504"},
{"url": "https://codeforces.com//problemset/problem/91/E", "name": "Igloo Skyscraper", "tags": ["data structures", "geometry"], "problem_rating": "2500", "solved_by": "x592"},
{"url": "https://codeforces.com//problemset/problem/91/D", "name": "Grocer's Problem", "tags": ["constructive algorithms", "graphs", "greedy"], "problem_rating": "2600", "solved_by": "x264"},
{"url": "https://codeforces.com//problemset/problem/91/C", "name": "Ski Base", "tags": ["combinatorics", "dsu", "graphs"], "problem_rating": "2300", "solved_by": "x868"},
{"url": "https://codeforces.com//problemset/problem/91/B", "name": "Queue", "tags": ["binary search", "data structures"], "problem_rating": "1500", "solved_by": "x6671"},
{"url": "https://codeforces.com//problemset/problem/91/A", "name": "Newspaper Headline", "tags": ["greedy", "strings"], "problem_rating": "1500", "solved_by": "x3543"},
{"url": "https://codeforces.com//problemset/problem/90/B", "name": "African Crossword", "tags": ["implementation", "strings"], "problem_rating": "1100", "solved_by": "x5241"},
{"url": "https://codeforces.com//problemset/problem/90/A", "name": "Cableway", "tags": ["greedy", "math"], "problem_rating": "1000", "solved_by": "x4577"},
{"url": "https://codeforces.com//problemset/problem/89/E", "name": "Fire and Ice", "tags": ["greedy"], "problem_rating": "2900", "solved_by": "x99"},
{"url": "https://codeforces.com//problemset/problem/89/D", "name": "Space mines", "tags": ["geometry"], "problem_rating": "2500", "solved_by": "x231"},
{"url": "https://codeforces.com//problemset/problem/89/C", "name": "Chip Play", "tags": ["brute force", "data structures", "implementation"], "problem_rating": "2300", "solved_by": "x615"},
{"url": "https://codeforces.com//problemset/problem/89/B", "name": "Widget Library", "tags": ["dp", "expression parsing", "graphs", "implementation"], "problem_rating": "2300", "solved_by": "x513"},
{"url": "https://codeforces.com//problemset/problem/89/A", "name": "Robbery", "tags": ["greedy"], "problem_rating": "1800", "solved_by": "x1465"},
{"url": "https://codeforces.com//problemset/problem/88/B", "name": "Keyboard", "tags": ["implementation"], "problem_rating": "1500", "solved_by": "x4501"},
{"url": "https://codeforces.com//problemset/problem/88/A", "name": "Chord", "tags": ["brute force", "implementation"], "problem_rating": "1200", "solved_by": "x3786"},
{"url": "https://codeforces.com//problemset/problem/87/E", "name": "Mogohu-Rea Idol", "tags": ["geometry"], "problem_rating": "2600", "solved_by": "x556"},
{"url": "https://codeforces.com//problemset/problem/87/D", "name": "Beautiful Road", "tags": ["dfs and similar", "dp", "dsu", "graphs", "implementation", "sortings", "trees"], "problem_rating": "2300", "solved_by": "x862"},
{"url": "https://codeforces.com//problemset/problem/87/C", "name": "Interesting Game", "tags": ["dp", "games", "math"], "problem_rating": "2000", "solved_by": "x1316"},
{"url": "https://codeforces.com//problemset/problem/87/B", "name": "Vasya and Types", "tags": ["implementation", "strings"], "problem_rating": "1800", "solved_by": "x1122"},
{"url": "https://codeforces.com//problemset/problem/87/A", "name": "Trains", "tags": ["implementation", "math"], "problem_rating": "1500", "solved_by": "x5269"},
{"url": "https://codeforces.com//problemset/problem/86/E", "name": "Long sequence", "tags": ["brute force", "math", "matrices"], "problem_rating": "2700", "solved_by": "x180"},
{"url": "https://codeforces.com//problemset/problem/86/D", "name": "Powerful array", "tags": ["data structures", "implementation", "math", "two pointers"], "problem_rating": "2200", "solved_by": "x13150"},
{"url": "https://codeforces.com//problemset/problem/86/C", "name": "Genetic engineering", "tags": ["dp", "string suffix structures", "trees"], "problem_rating": "2500", "solved_by": "x698"},
{"url": "https://codeforces.com//problemset/problem/86/B", "name": "Tetris revisited", "tags": ["constructive algorithms", "graph matchings", "greedy", "math"], "problem_rating": "2200", "solved_by": "x403"},
{"url": "https://codeforces.com//problemset/problem/86/A", "name": "Reflection", "tags": ["math"], "problem_rating": "1600", "solved_by": "x1354"},
{"url": "https://codeforces.com//problemset/problem/85/E", "name": "Guard Towers", "tags": ["binary search", "dsu", "geometry", "graphs", "sortings"], "problem_rating": "2600", "solved_by": "x939"},
{"url": "https://codeforces.com//problemset/problem/85/D", "name": "Sum of Medians", "tags": ["binary search", "brute force", "data structures", "implementation"], "problem_rating": "2300", "solved_by": "x1969"},
{"url": "https://codeforces.com//problemset/problem/85/C", "name": "Petya and Tree", "tags": ["binary search", "dfs and similar", "probabilities", "sortings", "trees"], "problem_rating": "2200", "solved_by": "x524"},
{"url": "https://codeforces.com//problemset/problem/85/B", "name": "Embassy Queue", "tags": ["data structures", "greedy"], "problem_rating": "1800", "solved_by": "x963"},
{"url": "https://codeforces.com//problemset/problem/85/A", "name": "Domino", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1300", "solved_by": "x1774"},
{"url": "https://codeforces.com//problemset/problem/84/C", "name": "Biathlon", "tags": ["binary search", "implementation"], "problem_rating": "1700", "solved_by": "x1599"},
{"url": "https://codeforces.com//problemset/problem/84/A", "name": "Toy Army", "tags": ["math", "number theory"], "problem_rating": "900", "solved_by": "x14763"},
{"url": "https://codeforces.com//problemset/problem/83/E", "name": "Two Subsequences", "tags": ["bitmasks", "dp"], "problem_rating": "2800", "solved_by": "x465"},
{"url": "https://codeforces.com//problemset/problem/83/D", "name": "Numbers", "tags": ["dp", "math", "number theory"], "problem_rating": "2400", "solved_by": "x841"},
{"url": "https://codeforces.com//problemset/problem/83/C", "name": "Track", "tags": ["graphs", "greedy", "shortest paths"], "problem_rating": "2400", "solved_by": "x409"},
{"url": "https://codeforces.com//problemset/problem/83/B", "name": "Doctor", "tags": ["binary search", "math", "sortings"], "problem_rating": "1800", "solved_by": "x1629"},
{"url": "https://codeforces.com//problemset/problem/83/A", "name": "Magical Array", "tags": ["math"], "problem_rating": "1300", "solved_by": "x6158"},
{"url": "https://codeforces.com//problemset/problem/82/E", "name": "Corridor", "tags": ["geometry"], "problem_rating": "2600", "solved_by": "x217"},
{"url": "https://codeforces.com//problemset/problem/82/D", "name": "Two out of Three", "tags": ["dp"], "problem_rating": "2000", "solved_by": "x1952"},
{"url": "https://codeforces.com//problemset/problem/82/C", "name": "General Mobilization", "tags": ["data structures", "dfs and similar", "sortings"], "problem_rating": "2000", "solved_by": "x804"},
{"url": "https://codeforces.com//problemset/problem/82/B", "name": "Sets", "tags": ["constructive algorithms", "hashing", "implementation"], "problem_rating": "1700", "solved_by": "x2022"},
{"url": "https://codeforces.com//problemset/problem/82/A", "name": "Double Cola", "tags": ["implementation", "math"], "problem_rating": "1100", "solved_by": "x29836"},
{"url": "https://codeforces.com//problemset/problem/81/E", "name": "Pairs", "tags": ["dfs and similar", "dp", "dsu", "graphs", "implementation", "trees"], "problem_rating": "2700", "solved_by": "x331"},
{"url": "https://codeforces.com//problemset/problem/81/D", "name": "Polycarp's Picture Gallery", "tags": ["constructive algorithms", "greedy"], "problem_rating": "2100", "solved_by": "x641"},
{"url": "https://codeforces.com//problemset/problem/81/C", "name": "Average Score", "tags": ["greedy", "math", "sortings"], "problem_rating": "1700", "solved_by": "x1653"},
{"url": "https://codeforces.com//problemset/problem/81/B", "name": "Sequence Formatting", "tags": ["implementation", "strings"], "problem_rating": "1700", "solved_by": "x1924"},
{"url": "https://codeforces.com//problemset/problem/81/A", "name": "Plug-in", "tags": ["implementation"], "problem_rating": "1400", "solved_by": "x10433"},
{"url": "https://codeforces.com//problemset/problem/80/B", "name": "Depression", "tags": ["geometry", "math"], "problem_rating": "1200", "solved_by": "x4288"},
{"url": "https://codeforces.com//problemset/problem/80/A", "name": "Panoramix's Prediction", "tags": ["brute force"], "problem_rating": "800", "solved_by": "x51366"},
{"url": "https://codeforces.com//problemset/problem/79/E", "name": "Security System", "tags": ["math"], "problem_rating": "2900", "solved_by": "x127"},
{"url": "https://codeforces.com//problemset/problem/79/D", "name": "Password", "tags": ["bitmasks", "dp", "shortest paths"], "problem_rating": "2800", "solved_by": "x1065"},
{"url": "https://codeforces.com//problemset/problem/79/C", "name": "Beaver", "tags": ["data structures", "dp", "greedy", "hashing", "strings", "two pointers"], "problem_rating": "1800", "solved_by": "x1742"},
{"url": "https://codeforces.com//problemset/problem/79/B", "name": "Colorful Field", "tags": ["implementation", "sortings"], "problem_rating": "1400", "solved_by": "x6989"},
{"url": "https://codeforces.com//problemset/problem/79/A", "name": "Bus Game", "tags": ["greedy"], "problem_rating": "1200", "solved_by": "x4010"},
{"url": "https://codeforces.com//problemset/problem/78/E", "name": "Evacuation", "tags": ["flows", "graphs", "shortest paths"], "problem_rating": "2300", "solved_by": "x531"},
{"url": "https://codeforces.com//problemset/problem/78/D", "name": "Archer's Shot", "tags": ["binary search", "geometry", "math", "two pointers"], "problem_rating": "2300", "solved_by": "x307"},
{"url": "https://codeforces.com//problemset/problem/78/C", "name": "Beaver Game", "tags": ["dp", "games", "number theory"], "problem_rating": "2000", "solved_by": "x1830"},
{"url": "https://codeforces.com//problemset/problem/78/B", "name": "Easter Eggs", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1200", "solved_by": "x13094"},
{"url": "https://codeforces.com//problemset/problem/78/A", "name": "Haiku", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x12202"},
{"url": "https://codeforces.com//problemset/problem/77/E", "name": "Martian Food", "tags": ["geometry"], "problem_rating": "2800", "solved_by": "x370"},
{"url": "https://codeforces.com//problemset/problem/77/D", "name": "Domino Carpet", "tags": ["dp", "implementation"], "problem_rating": "2300", "solved_by": "x316"},
{"url": "https://codeforces.com//problemset/problem/77/C", "name": "Beavermuncher-0xFF", "tags": ["dfs and similar", "dp", "dsu", "greedy", "trees"], "problem_rating": "2100", "solved_by": "x985"},
{"url": "https://codeforces.com//problemset/problem/77/B", "name": "Falling Anvils", "tags": ["math", "probabilities"], "problem_rating": "1800", "solved_by": "x2576"},
{"url": "https://codeforces.com//problemset/problem/77/A", "name": "Heroes", "tags": ["brute force", "implementation"], "problem_rating": "1400", "solved_by": "x1755"},
{"url": "https://codeforces.com//problemset/problem/76/F", "name": "Tourist", "tags": ["binary search", "data structures", "dp"], "problem_rating": "2300", "solved_by": "x620"},
{"url": "https://codeforces.com//problemset/problem/76/E", "name": "Points", "tags": ["implementation", "math"], "problem_rating": "1700", "solved_by": "x1691"},
{"url": "https://codeforces.com//problemset/problem/76/D", "name": "Plus and xor", "tags": ["dp", "greedy", "math"], "problem_rating": "1700", "solved_by": "x2037"},
{"url": "https://codeforces.com//problemset/problem/76/C", "name": "Mutation", "tags": ["bitmasks", "dp", "math"], "problem_rating": "2700", "solved_by": "x306"},
{"url": "https://codeforces.com//problemset/problem/76/B", "name": "Mice", "tags": ["greedy", "two pointers"], "problem_rating": "2100", "solved_by": "x725"},
{"url": "https://codeforces.com//problemset/problem/76/A", "name": "Gift", "tags": ["dsu", "graphs", "sortings", "trees"], "problem_rating": "2200", "solved_by": "x1546"},
{"url": "https://codeforces.com//problemset/problem/75/E", "name": "Ship's Shortest Path", "tags": ["geometry", "shortest paths"], "problem_rating": "2400", "solved_by": "x272"},
{"url": "https://codeforces.com//problemset/problem/75/D", "name": "Big Maximum Sum", "tags": ["data structures", "dp", "greedy", "implementation", "math", "trees"], "problem_rating": "2000", "solved_by": "x1759"},
{"url": "https://codeforces.com//problemset/problem/75/C", "name": "Modified GCD", "tags": ["binary search", "number theory"], "problem_rating": "1600", "solved_by": "x12352"},
{"url": "https://codeforces.com//problemset/problem/75/B", "name": "Facetook Priority Wall", "tags": ["expression parsing", "implementation", "strings"], "problem_rating": "1500", "solved_by": "x3265"},
{"url": "https://codeforces.com//problemset/problem/75/A", "name": "Life Without Zeros", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x25566"},
{"url": "https://codeforces.com//problemset/problem/74/E", "name": "Shift It!", "tags": ["constructive algorithms"], "problem_rating": "2800", "solved_by": "x150"},
{"url": "https://codeforces.com//problemset/problem/74/D", "name": "Hanger", "tags": ["data structures"], "problem_rating": "2400", "solved_by": "x366"},
{"url": "https://codeforces.com//problemset/problem/74/C", "name": "Chessboard Billiard", "tags": ["dfs and similar", "dsu", "graphs", "number theory"], "problem_rating": "2100", "solved_by": "x1270"},
{"url": "https://codeforces.com//problemset/problem/74/B", "name": "Train", "tags": ["dp", "games", "greedy"], "problem_rating": "1500", "solved_by": "x1523"},
{"url": "https://codeforces.com//problemset/problem/74/A", "name": "Room Leader", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x5020"},
{"url": "https://codeforces.com//problemset/problem/73/F", "name": "Plane of Tanks", "tags": ["brute force", "geometry"], "problem_rating": "2900", "solved_by": "x77"},
{"url": "https://codeforces.com//problemset/problem/73/E", "name": "Morrowindows", "tags": ["math", "number theory"], "problem_rating": "2400", "solved_by": "x329"},
{"url": "https://codeforces.com//problemset/problem/73/D", "name": "FreeDiv", "tags": ["dfs and similar", "graphs", "greedy"], "problem_rating": "2200", "solved_by": "x623"},
{"url": "https://codeforces.com//problemset/problem/73/C", "name": "LionAge II", "tags": ["dp"], "problem_rating": "1800", "solved_by": "x2080"},
{"url": "https://codeforces.com//problemset/problem/73/B", "name": "Need For Brake", "tags": ["binary search", "greedy", "sortings"], "problem_rating": "2000", "solved_by": "x492"},
{"url": "https://codeforces.com//problemset/problem/73/A", "name": "The Elder Trolls IV: Oblivon", "tags": ["greedy", "math"], "problem_rating": "1600", "solved_by": "x1322"},
{"url": "https://codeforces.com//problemset/problem/72/I", "name": "Goofy Numbers", "tags": ["*special problem", "implementation"], "problem_rating": "1500", "solved_by": "x458"},
{"url": "https://codeforces.com//problemset/problem/72/H", "name": "Reverse It!", "tags": ["*special problem", "implementation"], "problem_rating": "1600", "solved_by": "x263"},
{"url": "https://codeforces.com//problemset/problem/72/G", "name": "Fibonacci army", "tags": ["*special problem", "dp"], "problem_rating": "1000", "solved_by": "x2085"},
{"url": "https://codeforces.com//problemset/problem/72/F", "name": "Oil", "tags": ["*special problem", "greedy", "math"], "problem_rating": "1900", "solved_by": "x118"},
{"url": "https://codeforces.com//problemset/problem/72/E", "name": "Ali goes shopping", "tags": ["*special problem", "brute force", "strings"], "problem_rating": "1800", "solved_by": "x153"},
{"url": "https://codeforces.com//problemset/problem/72/D", "name": "Perse-script", "tags": ["*special problem", "expression parsing"], "problem_rating": "2300", "solved_by": "x74"},
{"url": "https://codeforces.com//problemset/problem/72/C", "name": "Extraordinarily Nice Numbers", "tags": ["*special problem", "math"], "problem_rating": "1200", "solved_by": "x910"},
{"url": "https://codeforces.com//problemset/problem/72/B", "name": "INI-file", "tags": ["*special problem", "implementation"], "problem_rating": "2200", "solved_by": "x77"},
{"url": "https://codeforces.com//problemset/problem/72/A", "name": "Goshtasp, Vishtasp and Eidi", "tags": ["*special problem", "greedy", "math"], "problem_rating": "1800", "solved_by": "x185"},
{"url": "https://codeforces.com//problemset/problem/71/E", "name": "Nuclear Fusion", "tags": ["bitmasks", "dp"], "problem_rating": "2200", "solved_by": "x695"},
{"url": "https://codeforces.com//problemset/problem/71/D", "name": "Solitaire", "tags": ["brute force", "implementation"], "problem_rating": "2200", "solved_by": "x632"},
{"url": "https://codeforces.com//problemset/problem/71/C", "name": "Round Table Knights", "tags": ["dp", "math", "number theory"], "problem_rating": "1600", "solved_by": "x6322"},
{"url": "https://codeforces.com//problemset/problem/71/B", "name": "Progress Bar", "tags": ["implementation", "math"], "problem_rating": "1300", "solved_by": "x4446"},
{"url": "https://codeforces.com//problemset/problem/71/A", "name": "Way Too Long Words", "tags": ["strings"], "problem_rating": "800", "solved_by": "x366603"},
{"url": "https://codeforces.com//problemset/problem/70/E", "name": "Information Reform", "tags": ["dp", "implementation", "trees"], "problem_rating": "2700", "solved_by": "x483"},
{"url": "https://codeforces.com//problemset/problem/70/D", "name": "Professor's task", "tags": ["data structures", "geometry"], "problem_rating": "2700", "solved_by": "x975"},
{"url": "https://codeforces.com//problemset/problem/70/C", "name": "Lucky Tickets", "tags": ["binary search", "data structures", "sortings", "two pointers"], "problem_rating": "2200", "solved_by": "x564"},
{"url": "https://codeforces.com//problemset/problem/70/B", "name": "Text Messaging", "tags": ["expression parsing", "greedy", "strings"], "problem_rating": "1600", "solved_by": "x1740"},
{"url": "https://codeforces.com//problemset/problem/70/A", "name": "Cookies", "tags": ["math"], "problem_rating": "1300", "solved_by": "x3249"},
{"url": "https://codeforces.com//problemset/problem/69/E", "name": "Subsegments", "tags": ["data structures", "implementation"], "problem_rating": "1800", "solved_by": "x4193"},
{"url": "https://codeforces.com//problemset/problem/69/D", "name": "Dot", "tags": ["dp", "games"], "problem_rating": "1900", "solved_by": "x971"},
{"url": "https://codeforces.com//problemset/problem/69/C", "name": "Game", "tags": ["implementation"], "problem_rating": "2000", "solved_by": "x577"},
{"url": "https://codeforces.com//problemset/problem/69/B", "name": "Bets", "tags": ["greedy", "implementation"], "problem_rating": "1200", "solved_by": "x3222"},
{"url": "https://codeforces.com//problemset/problem/69/A", "name": "Young Physicist", "tags": ["implementation", "math"], "problem_rating": "1000", "solved_by": "x159644"},
{"url": "https://codeforces.com//problemset/problem/68/E", "name": "Contact", "tags": ["geometry"], "problem_rating": "2900", "solved_by": "x71"},
{"url": "https://codeforces.com//problemset/problem/68/D", "name": "Half-decay tree", "tags": ["data structures", "divide and conquer", "dp", "math", "probabilities"], "problem_rating": "2500", "solved_by": "x453"},
{"url": "https://codeforces.com//problemset/problem/68/C", "name": "Synchrophasotron", "tags": ["brute force"], "problem_rating": "2200", "solved_by": "x305"},
{"url": "https://codeforces.com//problemset/problem/68/B", "name": "Energy exchange", "tags": ["binary search"], "problem_rating": "1600", "solved_by": "x4268"},
{"url": "https://codeforces.com//problemset/problem/68/A", "name": "Irrational problem", "tags": ["implementation", "number theory"], "problem_rating": "1100", "solved_by": "x4881"},
{"url": "https://codeforces.com//problemset/problem/67/E", "name": "Save the City!", "tags": ["geometry"], "problem_rating": "2500", "solved_by": "x315"},
{"url": "https://codeforces.com//problemset/problem/67/D", "name": "Optical Experiment", "tags": ["binary search", "data structures", "dp"], "problem_rating": "1900", "solved_by": "x1384"},
{"url": "https://codeforces.com//problemset/problem/67/C", "name": "Sequence of Balls", "tags": ["dp"], "problem_rating": "2600", "solved_by": "x669"},
{"url": "https://codeforces.com//problemset/problem/67/B", "name": "Restoration of the Permutation", "tags": ["greedy"], "problem_rating": "1800", "solved_by": "x758"},
{"url": "https://codeforces.com//problemset/problem/67/A", "name": "Partial Teacher", "tags": ["dp", "graphs", "greedy", "implementation"], "problem_rating": "1800", "solved_by": "x2090"},
{"url": "https://codeforces.com//problemset/problem/66/E", "name": "Petya and Post", "tags": ["data structures", "dp"], "problem_rating": "2000", "solved_by": "x698"},
{"url": "https://codeforces.com//problemset/problem/66/D", "name": "Petya and His Friends", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "1700", "solved_by": "x3101"},
{"url": "https://codeforces.com//problemset/problem/66/C", "name": "Petya and File System", "tags": ["data structures", "implementation"], "problem_rating": "1800", "solved_by": "x1004"},
{"url": "https://codeforces.com//problemset/problem/66/B", "name": "Petya and Countryside", "tags": ["brute force", "implementation"], "problem_rating": "1100", "solved_by": "x20077"},
{"url": "https://codeforces.com//problemset/problem/66/A", "name": "Petya and Java", "tags": ["implementation", "strings"], "problem_rating": "1300", "solved_by": "x6291"},
{"url": "https://codeforces.com//problemset/problem/65/E", "name": "Harry Potter and Moving Staircases", "tags": ["dfs and similar", "implementation"], "problem_rating": "2900", "solved_by": "x89"},
{"url": "https://codeforces.com//problemset/problem/65/D", "name": "Harry Potter and the Sorting Hat", "tags": ["brute force", "dfs and similar", "hashing"], "problem_rating": "2200", "solved_by": "x422"},
{"url": "https://codeforces.com//problemset/problem/65/C", "name": "Harry Potter and the Golden Snitch", "tags": ["binary search", "geometry"], "problem_rating": "2100", "solved_by": "x774"},
{"url": "https://codeforces.com//problemset/problem/65/B", "name": "Harry Potter and the History of Magic", "tags": ["brute force", "greedy", "implementation"], "problem_rating": "1700", "solved_by": "x1330"},
{"url": "https://codeforces.com//problemset/problem/65/A", "name": "Harry Potter and Three Spells", "tags": ["implementation", "math"], "problem_rating": "1800", "solved_by": "x1796"},
{"url": "https://codeforces.com//problemset/problem/64/I", "name": "Sort the Table", "tags": ["*special problem", "sortings"], "problem_rating": "2400", "solved_by": "x87"},
{"url": "https://codeforces.com//problemset/problem/64/H", "name": "Table Bowling", "tags": ["*special problem", "sortings"], "problem_rating": "2300", "solved_by": "x112"},
{"url": "https://codeforces.com//problemset/problem/64/G", "name": "Path Canonization", "tags": ["*special problem"], "problem_rating": "2200", "solved_by": "x118"},
{"url": "https://codeforces.com//problemset/problem/64/F", "name": "Domain", "tags": ["*special problem", "expression parsing"], "problem_rating": "2000", "solved_by": "x179"},
{"url": "https://codeforces.com//problemset/problem/64/E", "name": "Prime Segment", "tags": ["*special problem", "brute force", "math", "number theory"], "problem_rating": "1800", "solved_by": "x239"},
{"url": "https://codeforces.com//problemset/problem/64/D", "name": "Presents", "tags": ["*special problem", "greedy"], "problem_rating": "1800", "solved_by": "x286"},
{"url": "https://codeforces.com//problemset/problem/64/C", "name": "Table", "tags": ["*special problem", "greedy", "implementation", "math"], "problem_rating": "1600", "solved_by": "x335"},
{"url": "https://codeforces.com//problemset/problem/64/B", "name": "Expression", "tags": ["*special problem", "expression parsing"], "problem_rating": "1500", "solved_by": "x1006"},
{"url": "https://codeforces.com//problemset/problem/64/A", "name": "Factorial", "tags": ["*special problem", "implementation"], "problem_rating": "1300", "solved_by": "x2745"},
{"url": "https://codeforces.com//problemset/problem/63/E", "name": "Sweets Game", "tags": ["bitmasks", "dfs and similar", "dp", "games", "implementation"], "problem_rating": "2000", "solved_by": "x720"},
{"url": "https://codeforces.com//problemset/problem/63/D", "name": "Dividing Island", "tags": ["constructive algorithms"], "problem_rating": "1900", "solved_by": "x1243"},
{"url": "https://codeforces.com//problemset/problem/63/C", "name": "Bulls and Cows", "tags": ["brute force", "implementation"], "problem_rating": "1700", "solved_by": "x1656"},
{"url": "https://codeforces.com//problemset/problem/63/B", "name": "Settlers' Training", "tags": ["implementation"], "problem_rating": "1200", "solved_by": "x4777"},
{"url": "https://codeforces.com//problemset/problem/63/A", "name": "Sinking Ship", "tags": ["implementation", "sortings", "strings"], "problem_rating": "900", "solved_by": "x11099"},
{"url": "https://codeforces.com//problemset/problem/62/E", "name": "World Evil", "tags": ["dp", "flows"], "problem_rating": "2700", "solved_by": "x227"},
{"url": "https://codeforces.com//problemset/problem/62/D", "name": "Wormhouse", "tags": ["dfs and similar", "graphs"], "problem_rating": "2300", "solved_by": "x351"},
{"url": "https://codeforces.com//problemset/problem/62/C", "name": "Inquisition", "tags": ["geometry", "implementation", "sortings"], "problem_rating": "2300", "solved_by": "x248"},
{"url": "https://codeforces.com//problemset/problem/62/B", "name": "Tyndex.Brome", "tags": ["binary search", "implementation"], "problem_rating": "1800", "solved_by": "x1269"},
{"url": "https://codeforces.com//problemset/problem/62/A", "name": "A Student's Dream", "tags": ["greedy", "math"], "problem_rating": "1300", "solved_by": "x3410"},
{"url": "https://codeforces.com//problemset/problem/61/E", "name": "Enemy is weak", "tags": ["data structures", "trees"], "problem_rating": "1900", "solved_by": "x10550"},
{"url": "https://codeforces.com//problemset/problem/61/D", "name": "Eternal Victory", "tags": ["dfs and similar", "graphs", "greedy", "shortest paths", "trees"], "problem_rating": "1800", "solved_by": "x6385"},
{"url": "https://codeforces.com//problemset/problem/61/C", "name": "Capture Valerian", "tags": ["math"], "problem_rating": "2000", "solved_by": "x699"},
{"url": "https://codeforces.com//problemset/problem/61/B", "name": "Hard Work", "tags": ["strings"], "problem_rating": "1300", "solved_by": "x3821"},
{"url": "https://codeforces.com//problemset/problem/61/A", "name": "Ultra-Fast Mathematician", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x106862"},
{"url": "https://codeforces.com//problemset/problem/60/E", "name": "Mushroom Gnomes", "tags": ["math", "matrices"], "problem_rating": "2600", "solved_by": "x321"},
{"url": "https://codeforces.com//problemset/problem/60/D", "name": "Savior", "tags": ["brute force", "dsu", "math"], "problem_rating": "2500", "solved_by": "x402"},
{"url": "https://codeforces.com//problemset/problem/60/C", "name": "Mushroom Strife", "tags": ["brute force", "dfs and similar"], "problem_rating": "2100", "solved_by": "x558"},
{"url": "https://codeforces.com//problemset/problem/60/B", "name": "Serial Time!", "tags": ["dfs and similar", "dsu"], "problem_rating": "1400", "solved_by": "x4527"},
{"url": "https://codeforces.com//problemset/problem/60/A", "name": "Where Are My Flakes?", "tags": ["implementation", "two pointers"], "problem_rating": "1300", "solved_by": "x3571"},
{"url": "https://codeforces.com//problemset/problem/59/E", "name": "Shortest Path", "tags": ["graphs", "shortest paths"], "problem_rating": "2000", "solved_by": "x3236"},
{"url": "https://codeforces.com//problemset/problem/59/D", "name": "Team Arrangement", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "2000", "solved_by": "x610"},
{"url": "https://codeforces.com//problemset/problem/59/C", "name": "Title", "tags": ["expression parsing"], "problem_rating": "1600", "solved_by": "x2045"},
{"url": "https://codeforces.com//problemset/problem/59/B", "name": "Fortune Telling", "tags": ["implementation", "number theory"], "problem_rating": "1200", "solved_by": "x6785"},
{"url": "https://codeforces.com//problemset/problem/59/A", "name": "Word", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x168002"},
{"url": "https://codeforces.com//problemset/problem/58/E", "name": "Expression", "tags": ["dp"], "problem_rating": "2400", "solved_by": "x352"},
{"url": "https://codeforces.com//problemset/problem/58/D", "name": "Calendar", "tags": ["greedy", "strings"], "problem_rating": "2000", "solved_by": "x717"},
{"url": "https://codeforces.com//problemset/problem/58/C", "name": "Trees", "tags": ["brute force"], "problem_rating": "1800", "solved_by": "x1992"},
{"url": "https://codeforces.com//problemset/problem/58/B", "name": "Coins", "tags": ["greedy"], "problem_rating": "1300", "solved_by": "x12033"},
{"url": "https://codeforces.com//problemset/problem/58/A", "name": "Chat room", "tags": ["greedy", "strings"], "problem_rating": "1000", "solved_by": "x125730"},
{"url": "https://codeforces.com//problemset/problem/57/E", "name": "Chess", "tags": ["math", "shortest paths"], "problem_rating": "3000", "solved_by": "x256"},
{"url": "https://codeforces.com//problemset/problem/57/D", "name": "Journey", "tags": ["dp", "math"], "problem_rating": "2500", "solved_by": "x334"},
{"url": "https://codeforces.com//problemset/problem/57/C", "name": "Array", "tags": ["combinatorics", "math"], "problem_rating": "1900", "solved_by": "x2436"},
{"url": "https://codeforces.com//problemset/problem/57/B", "name": "Martian Architecture", "tags": ["implementation"], "problem_rating": "1600", "solved_by": "x998"},
{"url": "https://codeforces.com//problemset/problem/57/A", "name": "Square Earth?", "tags": ["dfs and similar", "greedy", "implementation"], "problem_rating": "1300", "solved_by": "x2846"},
{"url": "https://codeforces.com//problemset/problem/56/E", "name": "Domino Principle", "tags": ["binary search", "data structures", "sortings"], "problem_rating": "2200", "solved_by": "x2273"},
{"url": "https://codeforces.com//problemset/problem/56/D", "name": "Changing a String", "tags": ["dp"], "problem_rating": "2100", "solved_by": "x1565"},
{"url": "https://codeforces.com//problemset/problem/56/C", "name": "Corporation Mail", "tags": ["data structures", "expression parsing", "implementation"], "problem_rating": "1700", "solved_by": "x1134"},
{"url": "https://codeforces.com//problemset/problem/56/B", "name": "Spoilt Permutation", "tags": ["implementation"], "problem_rating": "1300", "solved_by": "x3674"},
{"url": "https://codeforces.com//problemset/problem/56/A", "name": "Bar", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x8462"},
{"url": "https://codeforces.com//problemset/problem/55/E", "name": "Very simple problem", "tags": ["geometry", "two pointers"], "problem_rating": "2500", "solved_by": "x687"},
{"url": "https://codeforces.com//problemset/problem/55/D", "name": "Beautiful numbers", "tags": ["dp", "number theory"], "problem_rating": "2500", "solved_by": "x3746"},
{"url": "https://codeforces.com//problemset/problem/55/C", "name": "Pie or die", "tags": ["games"], "problem_rating": "1900", "solved_by": "x1606"},
{"url": "https://codeforces.com//problemset/problem/55/B", "name": "Smallest number", "tags": ["brute force"], "problem_rating": "1600", "solved_by": "x2776"},
{"url": "https://codeforces.com//problemset/problem/55/A", "name": "Flea travel", "tags": ["implementation", "math"], "problem_rating": "1200", "solved_by": "x3369"},
{"url": "https://codeforces.com//problemset/problem/54/E", "name": "Vacuum Сleaner", "tags": ["geometry"], "problem_rating": "2700", "solved_by": "x189"},
{"url": "https://codeforces.com//problemset/problem/54/D", "name": "Writing a Song", "tags": ["brute force", "dp", "strings"], "problem_rating": "2100", "solved_by": "x528"},
{"url": "https://codeforces.com//problemset/problem/54/C", "name": "First Digit Law", "tags": ["dp", "math", "probabilities"], "problem_rating": "2000", "solved_by": "x1261"},
{"url": "https://codeforces.com//problemset/problem/54/B", "name": "Cutting Jigsaw Puzzle", "tags": ["hashing", "implementation"], "problem_rating": "1800", "solved_by": "x750"},
{"url": "https://codeforces.com//problemset/problem/54/A", "name": "Presents", "tags": ["implementation"], "problem_rating": "1300", "solved_by": "x2038"},
{"url": "https://codeforces.com//problemset/problem/53/E", "name": "Dead Ends", "tags": ["bitmasks", "dp"], "problem_rating": "2500", "solved_by": "x934"},
{"url": "https://codeforces.com//problemset/problem/53/D", "name": "Physical Education", "tags": ["sortings"], "problem_rating": "1500", "solved_by": "x1976"},
{"url": "https://codeforces.com//problemset/problem/53/C", "name": "Little Frog", "tags": ["constructive algorithms"], "problem_rating": "1200", "solved_by": "x6358"},
{"url": "https://codeforces.com//problemset/problem/53/B", "name": "Blog Photo", "tags": ["binary search", "implementation"], "problem_rating": "1700", "solved_by": "x1388"},
{"url": "https://codeforces.com//problemset/problem/53/A", "name": "Autocomplete", "tags": ["implementation"], "problem_rating": "1100", "solved_by": "x4940"},
{"url": "https://codeforces.com//problemset/problem/52/C", "name": "Circular RMQ", "tags": ["data structures"], "problem_rating": "2200", "solved_by": "x8583"},
{"url": "https://codeforces.com//problemset/problem/52/B", "name": "Right Triangles", "tags": ["combinatorics"], "problem_rating": "1600", "solved_by": "x2005"},
{"url": "https://codeforces.com//problemset/problem/52/A", "name": "123-sequence", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x8475"},
{"url": "https://codeforces.com//problemset/problem/51/F", "name": "Caterpillar", "tags": ["dfs and similar", "dp", "graphs", "trees"], "problem_rating": "2800", "solved_by": "x552"},
{"url": "https://codeforces.com//problemset/problem/51/E", "name": "Pentagon", "tags": ["combinatorics", "graphs", "matrices"], "problem_rating": "2400", "solved_by": "x373"},
{"url": "https://codeforces.com//problemset/problem/51/D", "name": "Geometrical problem", "tags": ["implementation"], "problem_rating": "2200", "solved_by": "x461"},
{"url": "https://codeforces.com//problemset/problem/51/C", "name": "Three Base Stations", "tags": ["binary search", "greedy"], "problem_rating": "1800", "solved_by": "x1872"},
{"url": "https://codeforces.com//problemset/problem/51/B", "name": "bHTML Tables Analisys", "tags": ["expression parsing"], "problem_rating": "1700", "solved_by": "x854"},
{"url": "https://codeforces.com//problemset/problem/51/A", "name": "Cheaterius's Problem", "tags": ["implementation"], "problem_rating": "1300", "solved_by": "x1798"},
{"url": "https://codeforces.com//problemset/problem/50/E", "name": "Square Equation Roots", "tags": ["math"], "problem_rating": "2300", "solved_by": "x348"},
{"url": "https://codeforces.com//problemset/problem/50/D", "name": "Bombing", "tags": ["binary search", "dp", "probabilities"], "problem_rating": "2100", "solved_by": "x609"},
{"url": "https://codeforces.com//problemset/problem/50/C", "name": "Happy Farm 5", "tags": ["geometry"], "problem_rating": "2000", "solved_by": "x741"},
{"url": "https://codeforces.com//problemset/problem/50/B", "name": "Choosing Symbol Pairs", "tags": ["strings"], "problem_rating": "1500", "solved_by": "x5602"},
{"url": "https://codeforces.com//problemset/problem/50/A", "name": "Domino piling", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x236170"},
{"url": "https://codeforces.com//problemset/problem/49/E", "name": "Common ancestor", "tags": ["dp"], "problem_rating": "2300", "solved_by": "x652"},
{"url": "https://codeforces.com//problemset/problem/49/D", "name": "Game", "tags": ["brute force", "dp", "implementation"], "problem_rating": "1800", "solved_by": "x1867"},
{"url": "https://codeforces.com//problemset/problem/49/C", "name": "Disposition", "tags": ["constructive algorithms", "math"], "problem_rating": "1700", "solved_by": "x1666"},
{"url": "https://codeforces.com//problemset/problem/49/B", "name": "Sum", "tags": ["math"], "problem_rating": "1500", "solved_by": "x2434"},
{"url": "https://codeforces.com//problemset/problem/49/A", "name": "Sleuth", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x13116"},
{"url": "https://codeforces.com//problemset/problem/48/H", "name": "Black and White", "tags": ["constructive algorithms"], "problem_rating": "2800", "solved_by": "x137"},
{"url": "https://codeforces.com//problemset/problem/48/G", "name": "Galaxy Union", "tags": ["dp", "trees", "two pointers"], "problem_rating": "2700", "solved_by": "x256"},
{"url": "https://codeforces.com//problemset/problem/48/F", "name": "Snow sellers", "tags": ["greedy", "sortings"], "problem_rating": "2800", "solved_by": "x144"},
{"url": "https://codeforces.com//problemset/problem/48/E", "name": "Ivan the Fool VS Gorynych the Dragon", "tags": ["dp", "games", "graphs"], "problem_rating": "2100", "solved_by": "x569"},
{"url": "https://codeforces.com//problemset/problem/48/D", "name": "Permutations", "tags": ["greedy"], "problem_rating": "1500", "solved_by": "x2444"},
{"url": "https://codeforces.com//problemset/problem/48/C", "name": "The Race", "tags": ["math"], "problem_rating": "1800", "solved_by": "x765"},
{"url": "https://codeforces.com//problemset/problem/48/B", "name": "Land Lot", "tags": ["brute force", "implementation"], "problem_rating": "1200", "solved_by": "x2636"},
{"url": "https://codeforces.com//problemset/problem/48/A", "name": "Rock-paper-scissors", "tags": ["implementation", "schedules"], "problem_rating": "900", "solved_by": "x5825"},
{"url": "https://codeforces.com//problemset/problem/47/E", "name": "Cannon", "tags": ["data structures", "geometry", "sortings"], "problem_rating": "2200", "solved_by": "x358"},
{"url": "https://codeforces.com//problemset/problem/47/D", "name": "Safe", "tags": ["brute force"], "problem_rating": "2200", "solved_by": "x759"},
{"url": "https://codeforces.com//problemset/problem/47/C", "name": "Crossword", "tags": ["implementation"], "problem_rating": "2000", "solved_by": "x767"},
{"url": "https://codeforces.com//problemset/problem/47/B", "name": "Coins", "tags": ["implementation"], "problem_rating": "1200", "solved_by": "x13491"},
{"url": "https://codeforces.com//problemset/problem/47/A", "name": "Triangular numbers", "tags": ["brute force", "math"], "problem_rating": "800", "solved_by": "x14708"},
{"url": "https://codeforces.com//problemset/problem/46/G", "name": "Emperor's Problem", "tags": ["geometry"], "problem_rating": "2500", "solved_by": "x110"},
{"url": "https://codeforces.com//problemset/problem/46/F", "name": "Hercule Poirot Problem", "tags": ["dsu", "graphs"], "problem_rating": "2300", "solved_by": "x319"},
{"url": "https://codeforces.com//problemset/problem/46/E", "name": "Comb", "tags": ["data structures", "dp"], "problem_rating": "1900", "solved_by": "x934"},
{"url": "https://codeforces.com//problemset/problem/46/D", "name": "Parking Lot", "tags": ["data structures", "implementation"], "problem_rating": "1800", "solved_by": "x966"},
{"url": "https://codeforces.com//problemset/problem/46/C", "name": "Hamsters and Tigers", "tags": ["two pointers"], "problem_rating": "1600", "solved_by": "x2343"},
{"url": "https://codeforces.com//problemset/problem/46/B", "name": "T-shirts from Sponsor", "tags": ["implementation"], "problem_rating": "1100", "solved_by": "x3607"},
{"url": "https://codeforces.com//problemset/problem/46/A", "name": "Ball Game", "tags": ["brute force", "implementation"], "problem_rating": "800", "solved_by": "x8569"},
{"url": "https://codeforces.com//problemset/problem/45/J", "name": "Planting Trees", "tags": ["constructive algorithms"], "problem_rating": "1800", "solved_by": "x924"},
{"url": "https://codeforces.com//problemset/problem/45/I", "name": "TCMCF+++", "tags": ["greedy"], "problem_rating": "1400", "solved_by": "x2342"},
{"url": "https://codeforces.com//problemset/problem/45/H", "name": "Road Problem", "tags": ["graphs"], "problem_rating": "2100", "solved_by": "x178"},
{"url": "https://codeforces.com//problemset/problem/45/G", "name": "Prime Problem", "tags": ["number theory"], "problem_rating": "2200", "solved_by": "x1006"},
{"url": "https://codeforces.com//problemset/problem/45/F", "name": "Goats and Wolves", "tags": ["greedy"], "problem_rating": "2500", "solved_by": "x127"},
{"url": "https://codeforces.com//problemset/problem/45/E", "name": "Director", "tags": ["constructive algorithms", "greedy"], "problem_rating": "2000", "solved_by": "x533"},
{"url": "https://codeforces.com//problemset/problem/45/D", "name": "Event Dates", "tags": ["greedy", "meet-in-the-middle", "sortings"], "problem_rating": "1900", "solved_by": "x1654"},
{"url": "https://codeforces.com//problemset/problem/45/C", "name": "Dancing Lessons", "tags": ["data structures"], "problem_rating": "1900", "solved_by": "x866"},
{"url": "https://codeforces.com//problemset/problem/45/B", "name": "School", "tags": ["dp", "dsu"], "problem_rating": "2200", "solved_by": "x271"},
{"url": "https://codeforces.com//problemset/problem/45/A", "name": "Codecraft III", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x6550"},
{"url": "https://codeforces.com//problemset/problem/44/J", "name": "Triminoes", "tags": ["constructive algorithms", "greedy"], "problem_rating": "2000", "solved_by": "x559"},
{"url": "https://codeforces.com//problemset/problem/44/I", "name": "Toys", "tags": ["brute force", "combinatorics"], "problem_rating": "2300", "solved_by": "x185"},
{"url": "https://codeforces.com//problemset/problem/44/H", "name": "Phone Number", "tags": ["dp"], "problem_rating": "1700", "solved_by": "x1706"},
{"url": "https://codeforces.com//problemset/problem/44/G", "name": "Shooting Gallery", "tags": ["data structures", "implementation"], "problem_rating": "2500", "solved_by": "x394"},
{"url": "https://codeforces.com//problemset/problem/44/F", "name": "BerPaint", "tags": ["geometry", "graphs"], "problem_rating": "2700", "solved_by": "x66"},
{"url": "https://codeforces.com//problemset/problem/44/E", "name": "Anfisa the Monkey", "tags": ["dp"], "problem_rating": "1400", "solved_by": "x4969"},
{"url": "https://codeforces.com//problemset/problem/44/D", "name": "Hyperdrive", "tags": ["math"], "problem_rating": "1800", "solved_by": "x702"},
{"url": "https://codeforces.com//problemset/problem/44/C", "name": "Holidays", "tags": ["implementation"], "problem_rating": "1300", "solved_by": "x3274"},
{"url": "https://codeforces.com//problemset/problem/44/B", "name": "Cola", "tags": ["implementation"], "problem_rating": "1500", "solved_by": "x1935"},
{"url": "https://codeforces.com//problemset/problem/44/A", "name": "Indian Summer", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x10119"},
{"url": "https://codeforces.com//problemset/problem/43/E", "name": "Race", "tags": ["brute force", "implementation", "two pointers"], "problem_rating": "2300", "solved_by": "x388"},
{"url": "https://codeforces.com//problemset/problem/43/D", "name": "Journey", "tags": ["brute force", "constructive algorithms", "implementation"], "problem_rating": "2000", "solved_by": "x1069"},
{"url": "https://codeforces.com//problemset/problem/43/C", "name": "Lucky Tickets", "tags": ["greedy"], "problem_rating": "1300", "solved_by": "x4209"},
{"url": "https://codeforces.com//problemset/problem/43/B", "name": "Letter", "tags": ["implementation", "strings"], "problem_rating": "1100", "solved_by": "x16203"},
{"url": "https://codeforces.com//problemset/problem/43/A", "name": "Football", "tags": ["strings"], "problem_rating": "1000", "solved_by": "x54180"},
{"url": "https://codeforces.com//problemset/problem/42/E", "name": "Baldman and the military", "tags": ["dfs and similar", "graphs", "trees"], "problem_rating": "2700", "solved_by": "x197"},
{"url": "https://codeforces.com//problemset/problem/42/D", "name": "Strange town", "tags": ["constructive algorithms", "math"], "problem_rating": "2300", "solved_by": "x393"},
{"url": "https://codeforces.com//problemset/problem/42/C", "name": "Safe cracking", "tags": ["brute force", "constructive algorithms"], "problem_rating": "2200", "solved_by": "x472"},
{"url": "https://codeforces.com//problemset/problem/42/B", "name": "Game of chess unfinished", "tags": ["implementation"], "problem_rating": "1700", "solved_by": "x930"},
{"url": "https://codeforces.com//problemset/problem/42/A", "name": "Guilty --- to the kitchen!", "tags": ["greedy", "implementation"], "problem_rating": "1400", "solved_by": "x2796"},
{"url": "https://codeforces.com//problemset/problem/41/E", "name": "3-cycles", "tags": ["constructive algorithms", "graphs", "greedy"], "problem_rating": "1900", "solved_by": "x1923"},
{"url": "https://codeforces.com//problemset/problem/41/D", "name": "Pawn", "tags": ["dp"], "problem_rating": "1900", "solved_by": "x2253"},
{"url": "https://codeforces.com//problemset/problem/41/C", "name": "Email address", "tags": ["expression parsing", "implementation"], "problem_rating": "1300", "solved_by": "x3691"},
{"url": "https://codeforces.com//problemset/problem/41/B", "name": "Martian Dollar", "tags": ["brute force"], "problem_rating": "1400", "solved_by": "x3937"},
{"url": "https://codeforces.com//problemset/problem/41/A", "name": "Translation", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x139610"},
{"url": "https://codeforces.com//problemset/problem/40/E", "name": "Number Table", "tags": ["combinatorics"], "problem_rating": "2500", "solved_by": "x660"},
{"url": "https://codeforces.com//problemset/problem/40/D", "name": "Interesting Sequence", "tags": ["math"], "problem_rating": "2600", "solved_by": "x129"},
{"url": "https://codeforces.com//problemset/problem/40/C", "name": "Berland Square", "tags": ["implementation", "math"], "problem_rating": "2300", "solved_by": "x243"},
{"url": "https://codeforces.com//problemset/problem/40/B", "name": "Repaintings", "tags": ["math"], "problem_rating": "1600", "solved_by": "x1133"},
{"url": "https://codeforces.com//problemset/problem/40/A", "name": "Find Color", "tags": ["constructive algorithms", "geometry", "implementation", "math"], "problem_rating": "1300", "solved_by": "x3947"},
{"url": "https://codeforces.com//problemset/problem/39/K", "name": "Testing", "tags": [], "problem_rating": "2600", "solved_by": "x84"},
{"url": "https://codeforces.com//problemset/problem/39/J", "name": "Spelling Check", "tags": ["hashing", "implementation", "strings"], "problem_rating": "1500", "solved_by": "x2896"},
{"url": "https://codeforces.com//problemset/problem/39/I", "name": "Tram", "tags": [], "problem_rating": "2500", "solved_by": "x134"},
{"url": "https://codeforces.com//problemset/problem/39/H", "name": "Multiplication Table", "tags": ["implementation"], "problem_rating": "1300", "solved_by": "x2656"},
{"url": "https://codeforces.com//problemset/problem/39/G", "name": "Inverse Function", "tags": ["implementation"], "problem_rating": "2400", "solved_by": "x126"},
{"url": "https://codeforces.com//problemset/problem/39/F", "name": "Pacifist frogs", "tags": ["implementation"], "problem_rating": "1300", "solved_by": "x1523"},
{"url": "https://codeforces.com//problemset/problem/39/E", "name": "What Has Dirichlet Got to Do with That?", "tags": ["dp", "games"], "problem_rating": "2000", "solved_by": "x862"},
{"url": "https://codeforces.com//problemset/problem/39/D", "name": "Cubical Planet", "tags": ["math"], "problem_rating": "1100", "solved_by": "x3846"},
{"url": "https://codeforces.com//problemset/problem/39/C", "name": "Moon Craters", "tags": ["dp", "sortings"], "problem_rating": "2100", "solved_by": "x573"},
{"url": "https://codeforces.com//problemset/problem/39/B", "name": "Company Income Growth", "tags": ["greedy"], "problem_rating": "1300", "solved_by": "x2602"},
{"url": "https://codeforces.com//problemset/problem/39/A", "name": "C*++ Calculations", "tags": ["expression parsing", "greedy"], "problem_rating": "2000", "solved_by": "x668"},
{"url": "https://codeforces.com//problemset/problem/38/H", "name": "The Great Marathon", "tags": ["dp"], "problem_rating": "2400", "solved_by": "x279"},
{"url": "https://codeforces.com//problemset/problem/38/G", "name": "Queue", "tags": ["data structures"], "problem_rating": "2300", "solved_by": "x695"},
{"url": "https://codeforces.com//problemset/problem/38/F", "name": "Smart Boy", "tags": ["dp", "games", "strings"], "problem_rating": "2100", "solved_by": "x380"},
{"url": "https://codeforces.com//problemset/problem/38/E", "name": "Let's Go Rolling!", "tags": ["dp", "sortings"], "problem_rating": "1800", "solved_by": "x2531"},
{"url": "https://codeforces.com//problemset/problem/38/D", "name": "Vasya the Architect", "tags": ["implementation"], "problem_rating": "1900", "solved_by": "x483"},
{"url": "https://codeforces.com//problemset/problem/38/C", "name": "Blinds", "tags": ["brute force"], "problem_rating": "1400", "solved_by": "x2118"},
{"url": "https://codeforces.com//problemset/problem/38/B", "name": "Chess", "tags": ["brute force", "implementation", "math"], "problem_rating": "1200", "solved_by": "x3464"},
{"url": "https://codeforces.com//problemset/problem/38/A", "name": "Army", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x20814"},
{"url": "https://codeforces.com//problemset/problem/37/E", "name": "Trial for Chief", "tags": ["graphs", "greedy", "shortest paths"], "problem_rating": "2600", "solved_by": "x608"},
{"url": "https://codeforces.com//problemset/problem/37/D", "name": "Lesson Timetable", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2300", "solved_by": "x391"},
{"url": "https://codeforces.com//problemset/problem/37/C", "name": "Old Berland Language", "tags": ["data structures", "greedy", "trees"], "problem_rating": "1900", "solved_by": "x1625"},
{"url": "https://codeforces.com//problemset/problem/37/B", "name": "Computer Game", "tags": ["greedy", "implementation"], "problem_rating": "1800", "solved_by": "x873"},
{"url": "https://codeforces.com//problemset/problem/37/A", "name": "Towers", "tags": ["sortings"], "problem_rating": "1000", "solved_by": "x23969"},
{"url": "https://codeforces.com//problemset/problem/36/E", "name": "Two Paths", "tags": ["constructive algorithms", "dsu", "graphs", "implementation"], "problem_rating": "2600", "solved_by": "x502"},
{"url": "https://codeforces.com//problemset/problem/36/D", "name": "New Game with a Chess Piece", "tags": ["games"], "problem_rating": "2300", "solved_by": "x688"},
{"url": "https://codeforces.com//problemset/problem/36/C", "name": "Bowls", "tags": ["geometry", "implementation"], "problem_rating": "2200", "solved_by": "x332"},
{"url": "https://codeforces.com//problemset/problem/36/B", "name": "Fractal", "tags": ["implementation"], "problem_rating": "1600", "solved_by": "x1453"},
{"url": "https://codeforces.com//problemset/problem/36/A", "name": "Extra-terrestrial Intelligence", "tags": ["implementation"], "problem_rating": "1300", "solved_by": "x2949"},
{"url": "https://codeforces.com//problemset/problem/35/E", "name": "Parade", "tags": ["data structures", "sortings"], "problem_rating": "2100", "solved_by": "x725"},
{"url": "https://codeforces.com//problemset/problem/35/D", "name": "Animals", "tags": ["dp", "greedy"], "problem_rating": "1700", "solved_by": "x3231"},
{"url": "https://codeforces.com//problemset/problem/35/C", "name": "Fire Again", "tags": ["brute force", "dfs and similar", "shortest paths"], "problem_rating": "1500", "solved_by": "x6630"},
{"url": "https://codeforces.com//problemset/problem/35/B", "name": "Warehouse", "tags": ["implementation"], "problem_rating": "1700", "solved_by": "x999"},
{"url": "https://codeforces.com//problemset/problem/35/A", "name": "Shell Game", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x6710"},
{"url": "https://codeforces.com//problemset/problem/34/E", "name": "Collisions", "tags": ["brute force", "implementation", "math"], "problem_rating": "2000", "solved_by": "x574"},
{"url": "https://codeforces.com//problemset/problem/34/D", "name": "Road Map", "tags": ["dfs and similar", "graphs"], "problem_rating": "1600", "solved_by": "x4968"},
{"url": "https://codeforces.com//problemset/problem/34/C", "name": "Page Numbers", "tags": ["expression parsing", "implementation", "sortings", "strings"], "problem_rating": "1300", "solved_by": "x4140"},
{"url": "https://codeforces.com//problemset/problem/34/B", "name": "Sale", "tags": ["greedy", "sortings"], "problem_rating": "900", "solved_by": "x50360"},
{"url": "https://codeforces.com//problemset/problem/34/A", "name": "Reconnaissance 2", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x29139"},
{"url": "https://codeforces.com//problemset/problem/33/E", "name": "Helper", "tags": [], "problem_rating": "2600", "solved_by": "x126"},
{"url": "https://codeforces.com//problemset/problem/33/D", "name": "Knights", "tags": ["geometry", "graphs", "shortest paths", "sortings"], "problem_rating": "2000", "solved_by": "x1163"},
{"url": "https://codeforces.com//problemset/problem/33/C", "name": "Wonderful Randomized Sum", "tags": ["greedy"], "problem_rating": "1800", "solved_by": "x2933"},
{"url": "https://codeforces.com//problemset/problem/33/B", "name": "String Problem", "tags": ["shortest paths"], "problem_rating": "1800", "solved_by": "x4312"},
{"url": "https://codeforces.com//problemset/problem/33/A", "name": "What is for dinner?", "tags": ["greedy", "implementation"], "problem_rating": "1200", "solved_by": "x3963"},
{"url": "https://codeforces.com//problemset/problem/32/E", "name": "Hide-and-Seek", "tags": ["geometry", "implementation"], "problem_rating": "2400", "solved_by": "x327"},
{"url": "https://codeforces.com//problemset/problem/32/D", "name": "Constellation", "tags": ["implementation"], "problem_rating": "1600", "solved_by": "x1256"},
{"url": "https://codeforces.com//problemset/problem/32/C", "name": "Flea", "tags": ["math"], "problem_rating": "1700", "solved_by": "x2102"},
{"url": "https://codeforces.com//problemset/problem/32/B", "name": "Borze", "tags": ["expression parsing", "implementation"], "problem_rating": "800", "solved_by": "x61321"},
{"url": "https://codeforces.com//problemset/problem/32/A", "name": "Reconnaissance", "tags": ["brute force"], "problem_rating": "800", "solved_by": "x12240"},
{"url": "https://codeforces.com//problemset/problem/31/E", "name": "TV Game", "tags": ["dp"], "problem_rating": "2400", "solved_by": "x1061"},
{"url": "https://codeforces.com//problemset/problem/31/D", "name": "Chocolate", "tags": ["dfs and similar", "implementation"], "problem_rating": "2000", "solved_by": "x1017"},
{"url": "https://codeforces.com//problemset/problem/31/C", "name": "Schedule", "tags": ["implementation"], "problem_rating": "1700", "solved_by": "x1766"},
{"url": "https://codeforces.com//problemset/problem/31/B", "name": "Sysadmin Bob", "tags": ["greedy", "implementation", "strings"], "problem_rating": "1500", "solved_by": "x4192"},
{"url": "https://codeforces.com//problemset/problem/31/A", "name": "Worms Evolution", "tags": ["implementation"], "problem_rating": "1200", "solved_by": "x10106"},
{"url": "https://codeforces.com//problemset/problem/30/E", "name": "Tricky and Clever Password", "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "hashing", "strings"], "problem_rating": "2800", "solved_by": "x708"},
{"url": "https://codeforces.com//problemset/problem/30/D", "name": "King's Problem?", "tags": ["geometry", "greedy"], "problem_rating": "2600", "solved_by": "x424"},
{"url": "https://codeforces.com//problemset/problem/30/C", "name": "Shooting Gallery", "tags": ["dp", "probabilities"], "problem_rating": "1800", "solved_by": "x1905"},
{"url": "https://codeforces.com//problemset/problem/30/B", "name": "Codeforces World Finals", "tags": ["implementation"], "problem_rating": "1700", "solved_by": "x1165"},
{"url": "https://codeforces.com//problemset/problem/30/A", "name": "Accounting", "tags": ["brute force", "math"], "problem_rating": "1400", "solved_by": "x3392"},
{"url": "https://codeforces.com//problemset/problem/29/E", "name": "Quarrel", "tags": ["graphs", "shortest paths"], "problem_rating": "2400", "solved_by": "x879"},
{"url": "https://codeforces.com//problemset/problem/29/D", "name": "Ant on the Tree", "tags": ["constructive algorithms", "dfs and similar", "trees"], "problem_rating": "2000", "solved_by": "x2386"},
{"url": "https://codeforces.com//problemset/problem/29/C", "name": "Mail Stamps", "tags": ["data structures", "dfs and similar", "graphs", "implementation"], "problem_rating": "1700", "solved_by": "x4738"},
{"url": "https://codeforces.com//problemset/problem/29/B", "name": "Traffic Lights", "tags": ["implementation"], "problem_rating": "1500", "solved_by": "x2902"},
{"url": "https://codeforces.com//problemset/problem/29/A", "name": "Spit Problem", "tags": ["brute force"], "problem_rating": "1000", "solved_by": "x6956"},
{"url": "https://codeforces.com//problemset/problem/28/E", "name": "DravDe saves the world", "tags": ["geometry", "math"], "problem_rating": "2800", "solved_by": "x87"},
{"url": "https://codeforces.com//problemset/problem/28/D", "name": "Don't fear, DravDe is kind", "tags": ["binary search", "data structures", "dp", "hashing"], "problem_rating": "2400", "solved_by": "x599"},
{"url": "https://codeforces.com//problemset/problem/28/C", "name": "Bath Queue", "tags": ["combinatorics", "dp", "probabilities"], "problem_rating": "2200", "solved_by": "x1013"},
{"url": "https://codeforces.com//problemset/problem/28/B", "name": "pSort", "tags": ["dfs and similar", "dsu", "graphs"], "problem_rating": "1600", "solved_by": "x4509"},
{"url": "https://codeforces.com//problemset/problem/28/A", "name": "Bender Problem", "tags": ["implementation"], "problem_rating": "1600", "solved_by": "x779"},
{"url": "https://codeforces.com//problemset/problem/27/E", "name": "Number With The Given Amount Of Divisors", "tags": ["brute force", "dp", "number theory"], "problem_rating": "2000", "solved_by": "x4079"},
{"url": "https://codeforces.com//problemset/problem/27/D", "name": "Ring Road 2", "tags": ["2-sat", "dfs and similar", "dsu", "graphs"], "problem_rating": "2200", "solved_by": "x2406"},
{"url": "https://codeforces.com//problemset/problem/27/C", "name": "Unordered Subsequence", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1900", "solved_by": "x2742"},
{"url": "https://codeforces.com//problemset/problem/27/B", "name": "Tournament", "tags": ["bitmasks", "brute force", "dfs and similar", "greedy"], "problem_rating": "1300", "solved_by": "x5266"},
{"url": "https://codeforces.com//problemset/problem/27/A", "name": "Next Test", "tags": ["implementation", "sortings"], "problem_rating": "1200", "solved_by": "x19803"},
{"url": "https://codeforces.com//problemset/problem/26/E", "name": "Multithreading", "tags": ["constructive algorithms"], "problem_rating": "2400", "solved_by": "x368"},
{"url": "https://codeforces.com//problemset/problem/26/D", "name": "Tickets", "tags": ["combinatorics", "math", "probabilities"], "problem_rating": "2400", "solved_by": "x768"},
{"url": "https://codeforces.com//problemset/problem/26/C", "name": "Parquet", "tags": ["combinatorics", "constructive algorithms", "greedy", "implementation"], "problem_rating": "2000", "solved_by": "x839"},
{"url": "https://codeforces.com//problemset/problem/26/B", "name": "Regular Bracket Sequence", "tags": ["greedy"], "problem_rating": "1400", "solved_by": "x18347"},
{"url": "https://codeforces.com//problemset/problem/26/A", "name": "Almost Prime", "tags": ["number theory"], "problem_rating": "900", "solved_by": "x29898"},
{"url": "https://codeforces.com//problemset/problem/25/E", "name": "Test", "tags": ["hashing", "strings"], "problem_rating": "2200", "solved_by": "x2313"},
{"url": "https://codeforces.com//problemset/problem/25/D", "name": "Roads not only in Berland", "tags": ["dsu", "graphs", "trees"], "problem_rating": "1900", "solved_by": "x10774"},
{"url": "https://codeforces.com//problemset/problem/25/C", "name": "Roads in Berland", "tags": ["graphs", "shortest paths"], "problem_rating": "1900", "solved_by": "x6033"},
{"url": "https://codeforces.com//problemset/problem/25/B", "name": "Phone numbers", "tags": ["implementation"], "problem_rating": "1100", "solved_by": "x9520"},
{"url": "https://codeforces.com//problemset/problem/25/A", "name": "IQ test", "tags": ["brute force"], "problem_rating": "1300", "solved_by": "x83588"},
{"url": "https://codeforces.com//problemset/problem/24/E", "name": "Berland collider", "tags": ["binary search"], "problem_rating": "2300", "solved_by": "x876"},
{"url": "https://codeforces.com//problemset/problem/24/D", "name": "Broken robot", "tags": ["dp", "math", "probabilities"], "problem_rating": "2400", "solved_by": "x1865"},
{"url": "https://codeforces.com//problemset/problem/24/C", "name": "Sequence of points", "tags": ["geometry", "implementation", "math"], "problem_rating": "1800", "solved_by": "x1227"},
{"url": "https://codeforces.com//problemset/problem/24/B", "name": "F1 Champions", "tags": ["implementation"], "problem_rating": "1500", "solved_by": "x1750"},
{"url": "https://codeforces.com//problemset/problem/24/A", "name": "Ring road", "tags": ["graphs"], "problem_rating": "1400", "solved_by": "x4943"},
{"url": "https://codeforces.com//problemset/problem/23/E", "name": "Tree", "tags": ["dp"], "problem_rating": "2500", "solved_by": "x597"},
{"url": "https://codeforces.com//problemset/problem/23/D", "name": "Tetragon", "tags": ["geometry", "math"], "problem_rating": "2600", "solved_by": "x330"},
{"url": "https://codeforces.com//problemset/problem/23/C", "name": "Oranges and Apples", "tags": ["constructive algorithms", "sortings"], "problem_rating": "2500", "solved_by": "x1387"},
{"url": "https://codeforces.com//problemset/problem/23/B", "name": "Party", "tags": ["constructive algorithms", "graphs", "math"], "problem_rating": "1600", "solved_by": "x3262"},
{"url": "https://codeforces.com//problemset/problem/23/A", "name": "You're Given a String...", "tags": ["brute force", "greedy"], "problem_rating": "1200", "solved_by": "x5178"},
{"url": "https://codeforces.com//problemset/problem/22/E", "name": "Scheme", "tags": ["dfs and similar", "graphs", "trees"], "problem_rating": "2300", "solved_by": "x1579"},
{"url": "https://codeforces.com//problemset/problem/22/D", "name": "Segments", "tags": ["greedy", "sortings"], "problem_rating": "1900", "solved_by": "x2656"},
{"url": "https://codeforces.com//problemset/problem/22/C", "name": "System Administrator", "tags": ["graphs"], "problem_rating": "1700", "solved_by": "x3030"},
{"url": "https://codeforces.com//problemset/problem/22/B", "name": "Bargaining Table", "tags": ["brute force", "dp"], "problem_rating": "1500", "solved_by": "x4147"},
{"url": "https://codeforces.com//problemset/problem/22/A", "name": "Second Order Statistics", "tags": ["brute force"], "problem_rating": "800", "solved_by": "x21527"},
{"url": "https://codeforces.com//problemset/problem/21/D", "name": "Traveling Graph", "tags": ["bitmasks", "graph matchings", "graphs"], "problem_rating": "2400", "solved_by": "x850"},
{"url": "https://codeforces.com//problemset/problem/21/C", "name": "Stripe 2", "tags": ["binary search", "dp", "sortings"], "problem_rating": "2000", "solved_by": "x2066"},
{"url": "https://codeforces.com//problemset/problem/21/B", "name": "Intersection", "tags": ["implementation", "math"], "problem_rating": "2000", "solved_by": "x1322"},
{"url": "https://codeforces.com//problemset/problem/21/A", "name": "Jabber ID", "tags": ["implementation", "strings"], "problem_rating": "1900", "solved_by": "x1808"},
{"url": "https://codeforces.com//problemset/problem/20/C", "name": "Dijkstra?", "tags": ["graphs", "shortest paths"], "problem_rating": "1900", "solved_by": "x31466"},
{"url": "https://codeforces.com//problemset/problem/20/B", "name": "Equation", "tags": ["math"], "problem_rating": "2000", "solved_by": "x3758"},
{"url": "https://codeforces.com//problemset/problem/20/A", "name": "BerOS file system", "tags": ["implementation"], "problem_rating": "1700", "solved_by": "x6076"},
{"url": "https://codeforces.com//problemset/problem/19/E", "name": "Fairy", "tags": ["dfs and similar", "divide and conquer", "dsu"], "problem_rating": "2900", "solved_by": "x1746"},
{"url": "https://codeforces.com//problemset/problem/19/D", "name": "Points", "tags": ["data structures"], "problem_rating": "2800", "solved_by": "x2214"},
{"url": "https://codeforces.com//problemset/problem/19/C", "name": "Deletion of Repeats", "tags": ["greedy", "hashing", "string suffix structures"], "problem_rating": "2200", "solved_by": "x1077"},
{"url": "https://codeforces.com//problemset/problem/19/B", "name": "Checkout Assistant", "tags": ["dp"], "problem_rating": "1900", "solved_by": "x4587"},
{"url": "https://codeforces.com//problemset/problem/19/A", "name": "World Football Cup", "tags": ["implementation"], "problem_rating": "1400", "solved_by": "x2693"},
{"url": "https://codeforces.com//problemset/problem/18/E", "name": "Flag 2", "tags": ["dp"], "problem_rating": "2000", "solved_by": "x1038"},
{"url": "https://codeforces.com//problemset/problem/18/D", "name": "Seller Bob", "tags": ["brute force", "dp", "greedy"], "problem_rating": "2000", "solved_by": "x1051"},
{"url": "https://codeforces.com//problemset/problem/18/C", "name": "Stripe", "tags": ["data structures", "implementation"], "problem_rating": "1200", "solved_by": "x12776"},
{"url": "https://codeforces.com//problemset/problem/18/B", "name": "Platforms", "tags": ["brute force", "math"], "problem_rating": "1700", "solved_by": "x2098"},
{"url": "https://codeforces.com//problemset/problem/18/A", "name": "Triangle", "tags": ["brute force", "geometry"], "problem_rating": "1500", "solved_by": "x5820"},
{"url": "https://codeforces.com//problemset/problem/17/E", "name": "Palisection", "tags": ["strings"], "problem_rating": "2900", "solved_by": "x1538"},
{"url": "https://codeforces.com//problemset/problem/17/D", "name": "Notepad", "tags": ["number theory"], "problem_rating": "2400", "solved_by": "x1049"},
{"url": "https://codeforces.com//problemset/problem/17/C", "name": "Balance", "tags": ["dp"], "problem_rating": "2500", "solved_by": "x830"},
{"url": "https://codeforces.com//problemset/problem/17/B", "name": "Hierarchy", "tags": ["dfs and similar", "dsu", "greedy", "shortest paths"], "problem_rating": "1500", "solved_by": "x4641"},
{"url": "https://codeforces.com//problemset/problem/17/A", "name": "Noldbach problem", "tags": ["brute force", "math", "number theory"], "problem_rating": "1000", "solved_by": "x15742"},
{"url": "https://codeforces.com//problemset/problem/16/E", "name": "Fish", "tags": ["bitmasks", "dp", "probabilities"], "problem_rating": "1900", "solved_by": "x4872"},
{"url": "https://codeforces.com//problemset/problem/16/D", "name": "Logging", "tags": ["implementation", "strings"], "problem_rating": "1900", "solved_by": "x1541"},
{"url": "https://codeforces.com//problemset/problem/16/C", "name": "Monitor", "tags": ["binary search", "number theory"], "problem_rating": "1800", "solved_by": "x4642"},
{"url": "https://codeforces.com//problemset/problem/16/B", "name": "Burglar and Matches", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "900", "solved_by": "x17433"},
{"url": "https://codeforces.com//problemset/problem/16/A", "name": "Flag", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x14015"},
{"url": "https://codeforces.com//problemset/problem/15/E", "name": "Triangles", "tags": ["combinatorics", "dp"], "problem_rating": "2600", "solved_by": "x563"},
{"url": "https://codeforces.com//problemset/problem/15/D", "name": "Map", "tags": ["data structures", "implementation", "sortings"], "problem_rating": "2500", "solved_by": "x738"},
{"url": "https://codeforces.com//problemset/problem/15/C", "name": "Industrial Nim", "tags": ["games"], "problem_rating": "2000", "solved_by": "x2194"},
{"url": "https://codeforces.com//problemset/problem/15/B", "name": "Laser", "tags": ["math"], "problem_rating": "1800", "solved_by": "x1436"},
{"url": "https://codeforces.com//problemset/problem/15/A", "name": "Cottage Village", "tags": ["implementation", "sortings"], "problem_rating": "1200", "solved_by": "x3842"},
{"url": "https://codeforces.com//problemset/problem/14/E", "name": "Camels", "tags": ["dp"], "problem_rating": "1900", "solved_by": "x1644"},
{"url": "https://codeforces.com//problemset/problem/14/D", "name": "Two Paths", "tags": ["dfs and similar", "dp", "graphs", "shortest paths", "trees", "two pointers"], "problem_rating": "1900", "solved_by": "x4401"},
{"url": "https://codeforces.com//problemset/problem/14/C", "name": "Four Segments", "tags": ["brute force", "constructive algorithms", "geometry", "implementation", "math"], "problem_rating": "1700", "solved_by": "x3294"},
{"url": "https://codeforces.com//problemset/problem/14/B", "name": "Young Photographer", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x6946"},
{"url": "https://codeforces.com//problemset/problem/14/A", "name": "Letter", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x10415"},
{"url": "https://codeforces.com//problemset/problem/13/E", "name": "Holes", "tags": ["data structures", "dsu"], "problem_rating": "2700", "solved_by": "x5625"},
{"url": "https://codeforces.com//problemset/problem/13/D", "name": "Triangles", "tags": ["dp", "geometry"], "problem_rating": "2600", "solved_by": "x605"},
{"url": "https://codeforces.com//problemset/problem/13/C", "name": "Sequence", "tags": ["dp", "sortings"], "problem_rating": "2200", "solved_by": "x4431"},
{"url": "https://codeforces.com//problemset/problem/13/B", "name": "Letter A", "tags": ["geometry", "implementation"], "problem_rating": "2000", "solved_by": "x986"},
{"url": "https://codeforces.com//problemset/problem/13/A", "name": "Numbers", "tags": ["implementation", "math"], "problem_rating": "1000", "solved_by": "x7650"},
{"url": "https://codeforces.com//problemset/problem/12/E", "name": "Start of the session", "tags": ["constructive algorithms"], "problem_rating": "2100", "solved_by": "x1179"},
{"url": "https://codeforces.com//problemset/problem/12/D", "name": "Ball", "tags": ["data structures", "sortings"], "problem_rating": "2400", "solved_by": "x2212"},
{"url": "https://codeforces.com//problemset/problem/12/C", "name": "Fruits", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "1100", "solved_by": "x6080"},
{"url": "https://codeforces.com//problemset/problem/12/B", "name": "Correct Solution?", "tags": ["implementation", "sortings"], "problem_rating": "1100", "solved_by": "x8383"},
{"url": "https://codeforces.com//problemset/problem/12/A", "name": "Super Agent", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x12827"},
{"url": "https://codeforces.com//problemset/problem/11/E", "name": "Forward, march!", "tags": ["binary search", "dp", "greedy"], "problem_rating": "2800", "solved_by": "x355"},
{"url": "https://codeforces.com//problemset/problem/11/D", "name": "A Simple Task", "tags": ["bitmasks", "dp", "graphs"], "problem_rating": "2200", "solved_by": "x4639"},
{"url": "https://codeforces.com//problemset/problem/11/C", "name": "How Many Squares?", "tags": ["implementation"], "problem_rating": "2200", "solved_by": "x608"},
{"url": "https://codeforces.com//problemset/problem/11/B", "name": "Jumping Jack", "tags": ["math"], "problem_rating": "1600", "solved_by": "x4589"},
{"url": "https://codeforces.com//problemset/problem/11/A", "name": "Increasing Sequence", "tags": ["constructive algorithms", "implementation", "math"], "problem_rating": "900", "solved_by": "x12918"},
{"url": "https://codeforces.com//problemset/problem/10/E", "name": "Greedy Change", "tags": ["constructive algorithms"], "problem_rating": "2600", "solved_by": "x819"},
{"url": "https://codeforces.com//problemset/problem/10/D", "name": "LCIS", "tags": ["dp"], "problem_rating": "2800", "solved_by": "x4205"},
{"url": "https://codeforces.com//problemset/problem/10/C", "name": "Digital Root", "tags": ["number theory"], "problem_rating": "2000", "solved_by": "x1426"},
{"url": "https://codeforces.com//problemset/problem/10/B", "name": "Cinema Cashier", "tags": ["dp", "implementation"], "problem_rating": "1500", "solved_by": "x1741"},
{"url": "https://codeforces.com//problemset/problem/10/A", "name": "Power Consumption Calculation", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x7007"},
{"url": "https://codeforces.com//problemset/problem/9/E", "name": "Interestring graph and Apples", "tags": ["dfs and similar", "dsu", "graphs"], "problem_rating": "2300", "solved_by": "x1015"},
{"url": "https://codeforces.com//problemset/problem/9/D", "name": "How many trees?", "tags": ["combinatorics", "divide and conquer", "dp"], "problem_rating": "1900", "solved_by": "x3760"},
{"url": "https://codeforces.com//problemset/problem/9/C", "name": "Hexadecimal's Numbers", "tags": ["brute force", "implementation", "math"], "problem_rating": "1200", "solved_by": "x12751"},
{"url": "https://codeforces.com//problemset/problem/9/B", "name": "Running Student", "tags": ["brute force", "geometry", "implementation"], "problem_rating": "1200", "solved_by": "x5432"},
{"url": "https://codeforces.com//problemset/problem/9/A", "name": "Die Roll", "tags": ["math", "probabilities"], "problem_rating": "800", "solved_by": "x54549"},
{"url": "https://codeforces.com//problemset/problem/8/E", "name": "Beads", "tags": ["dp", "graphs"], "problem_rating": "2600", "solved_by": "x674"},
{"url": "https://codeforces.com//problemset/problem/8/D", "name": "Two Friends", "tags": ["binary search", "geometry"], "problem_rating": "2600", "solved_by": "x518"},
{"url": "https://codeforces.com//problemset/problem/8/C", "name": "Looking for Order", "tags": ["bitmasks", "dp"], "problem_rating": "2000", "solved_by": "x3450"},
{"url": "https://codeforces.com//problemset/problem/8/B", "name": "Obsession with Robots", "tags": ["constructive algorithms", "graphs", "implementation"], "problem_rating": "1400", "solved_by": "x4291"},
{"url": "https://codeforces.com//problemset/problem/8/A", "name": "Train and Peter", "tags": ["strings"], "problem_rating": "1200", "solved_by": "x5754"},
{"url": "https://codeforces.com//problemset/problem/7/E", "name": "Defining Macros", "tags": ["dp", "expression parsing", "implementation"], "problem_rating": "2600", "solved_by": "x697"},
{"url": "https://codeforces.com//problemset/problem/7/D", "name": "Palindrome Degree", "tags": ["hashing", "strings"], "problem_rating": "2200", "solved_by": "x3592"},
{"url": "https://codeforces.com//problemset/problem/7/C", "name": "Line", "tags": ["math", "number theory"], "problem_rating": "1800", "solved_by": "x4486"},
{"url": "https://codeforces.com//problemset/problem/7/B", "name": "Memory Manager", "tags": ["implementation"], "problem_rating": "1600", "solved_by": "x2560"},
{"url": "https://codeforces.com//problemset/problem/7/A", "name": "Kalevitch and Chess", "tags": ["brute force", "constructive algorithms"], "problem_rating": "1100", "solved_by": "x7120"},
{"url": "https://codeforces.com//problemset/problem/6/E", "name": "Exposition", "tags": ["binary search", "data structures", "dsu", "trees", "two pointers"], "problem_rating": "1900", "solved_by": "x3224"},
{"url": "https://codeforces.com//problemset/problem/6/D", "name": "Lizards and Basements 2", "tags": ["brute force", "dp"], "problem_rating": "2600", "solved_by": "x1972"},
{"url": "https://codeforces.com//problemset/problem/6/C", "name": "Alice, Bob and Chocolate", "tags": ["greedy", "two pointers"], "problem_rating": "1200", "solved_by": "x13481"},
{"url": "https://codeforces.com//problemset/problem/6/B", "name": "President's Office", "tags": ["implementation"], "problem_rating": "1100", "solved_by": "x12628"},
{"url": "https://codeforces.com//problemset/problem/6/A", "name": "Triangle", "tags": ["brute force", "geometry"], "problem_rating": "900", "solved_by": "x19483"},
{"url": "https://codeforces.com//problemset/problem/5/E", "name": "Bindian Signalizing", "tags": ["data structures"], "problem_rating": "2400", "solved_by": "x2074"},
{"url": "https://codeforces.com//problemset/problem/5/D", "name": "Follow Traffic Rules", "tags": ["implementation", "math"], "problem_rating": "2100", "solved_by": "x1681"},
{"url": "https://codeforces.com//problemset/problem/5/C", "name": "Longest Regular Bracket Sequence", "tags": ["constructive algorithms", "data structures", "dp", "greedy", "sortings", "strings"], "problem_rating": "1900", "solved_by": "x13302"},
{"url": "https://codeforces.com//problemset/problem/5/B", "name": "Center Alignment", "tags": ["implementation", "strings"], "problem_rating": "1200", "solved_by": "x5780"},
{"url": "https://codeforces.com//problemset/problem/5/A", "name": "Chat Servers Outgoing Traffic", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x9558"},
{"url": "https://codeforces.com//problemset/problem/4/D", "name": "Mysterious Present", "tags": ["dp", "sortings"], "problem_rating": "1700", "solved_by": "x10080"},
{"url": "https://codeforces.com//problemset/problem/4/C", "name": "Registration System", "tags": ["data structures", "hashing", "implementation"], "problem_rating": "1300", "solved_by": "x80206"},
{"url": "https://codeforces.com//problemset/problem/4/B", "name": "Before an Exam", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1200", "solved_by": "x24283"},
{"url": "https://codeforces.com//problemset/problem/4/A", "name": "Watermelon", "tags": ["brute force", "math"], "problem_rating": "800", "solved_by": "x498633"},
{"url": "https://codeforces.com//problemset/problem/3/D", "name": "Least Cost Bracket Sequence", "tags": ["greedy"], "problem_rating": "2600", "solved_by": "x3222"},
{"url": "https://codeforces.com//problemset/problem/3/C", "name": "Tic-tac-toe", "tags": ["brute force", "games", "implementation"], "problem_rating": "1800", "solved_by": "x7188"},
{"url": "https://codeforces.com//problemset/problem/3/B", "name": "Lorry", "tags": ["greedy", "sortings"], "problem_rating": "1900", "solved_by": "x4474"},
{"url": "https://codeforces.com//problemset/problem/3/A", "name": "Shortest path of the king", "tags": ["greedy", "shortest paths"], "problem_rating": "1000", "solved_by": "x18918"},
{"url": "https://codeforces.com//problemset/problem/2/C", "name": "Commentator problem", "tags": ["geometry"], "problem_rating": "2600", "solved_by": "x1736"},
{"url": "https://codeforces.com//problemset/problem/2/B", "name": "The least round way", "tags": ["dp", "math"], "problem_rating": "2000", "solved_by": "x10644"},
{"url": "https://codeforces.com//problemset/problem/2/A", "name": "Winner", "tags": ["hashing", "implementation"], "problem_rating": "1500", "solved_by": "x25723"},
{"url": "https://codeforces.com//problemset/problem/1/C", "name": "Ancient Berland Circus", "tags": ["geometry", "math"], "problem_rating": "2100", "solved_by": "x5616"},
{"url": "https://codeforces.com//problemset/problem/1/B", "name": "Spreadsheet", "tags": ["implementation", "math"], "problem_rating": "1600", "solved_by": "x22189"},
{"url": "https://codeforces.com//problemset/problem/1/A", "name": "Theatre Square", "tags": ["math"], "problem_rating": "1000", "solved_by": "x252474"}
]